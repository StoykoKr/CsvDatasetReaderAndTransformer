Created at	Closed at	Updated at	State	Labels	Comments	Number	Title	Url	Html url	Body	User name	User email	Milestone created at	Milestone due on	Milestone descrtiption	Milestone state	Milestone title
2019-01-29 03:36:58.0	2019-01-29 22:31:34.0	2019-06-10 17:42:06.0	closed	[codebase quality]	0	1	Convert ExpressionCommand and History collector to use Rational	https://api.github.com/repos/microsoft/calculator/issues/1	https://github.com/microsoft/calculator/pull/1	- Update ExpressionCommand to use Rational instead of PRAT  - Update History collector to use Rational instead of PRAT	joshkoon	null	null	null	null	null	null	
2019-01-29 18:13:35.0	2019-01-29 19:56:06.0	2019-06-10 17:42:19.0	closed	[documentation]	0	2	Update documentation for GitHub	https://api.github.com/repos/microsoft/calculator/issues/2	https://github.com/microsoft/calculator/pull/2	Fix up links to point to GitHub URLs. Remove obsolete info from the README.    We'll probably want to add more info to the README as part of a separate change.	mcooley	null	null	null	null	null	null	
2019-01-29 19:31:43.0	2019-01-29 22:58:48.0	2019-06-10 17:42:33.0	closed	[documentation]	1	3	Update architecture doc with content for model layer	https://api.github.com/repos/microsoft/calculator/issues/3	https://github.com/microsoft/calculator/pull/3		joshkoon	null	null	null	null	null	null	
2019-01-30 00:52:15.0	2019-01-30 03:37:38.0	2019-06-11 00:08:21.0	closed	[tooling, build]	0	4	Clean up unit test projects	https://api.github.com/repos/microsoft/calculator/issues/4	https://github.com/microsoft/calculator/pull/4	During our preparation for the move to GitHub we created duplicate unit test projects. We no longer need the one in internal/, so let's delete it and remove the "_VS" suffix from the public unit test project.    Also adding a missing self-signed certificate which is needed to get the UnitTests project to build outside of visual studio, and corrected our .gitignore directives to include this file.	mcooley	null	null	null	null	null	null	
2019-01-30 00:53:16.0	2019-01-30 03:39:21.0	2019-06-10 17:44:10.0	closed	[build]	0	5	Remove unused MSBuild directives	https://api.github.com/repos/microsoft/calculator/issues/5	https://github.com/microsoft/calculator/pull/5	Remove some properties which were only used when XefOutputRoot was set in the previous internal-only build environment.	mcooley	null	null	null	null	null	null	
2019-01-31 19:08:53.0	2019-01-31 21:05:11.0	2019-06-10 17:44:18.0	closed	[build]	0	6	Fix file path in CalculatorUnitTests.vcxproj.filters	https://api.github.com/repos/microsoft/calculator/issues/6	https://github.com/microsoft/calculator/pull/6	A file was renamed in #4. The reference in the .vcsproj.filters file needs to be renamed too.	mcooley	null	null	null	null	null	null	
2019-02-01 21:46:17.0	2019-02-01 23:15:48.0	2019-06-10 17:44:30.0	closed	[codebase quality]	0	7	Remove unused PLM code	https://api.github.com/repos/microsoft/calculator/issues/7	https://github.com/microsoft/calculator/pull/7	Remove LayoutAwarePage, SuspensionManager, and other suspend-resume handling code. SuspensionManager::SaveAsync and related methods weren't actually called anywhere. I didn't attempt to remove the serialize/deserialize code at the ViewModel layer, although much of that is likely not needed either.    We may decide we want to persist more state through a suspend-terminate-resume cycle (as the app might have done a long time ago). But if we decide we want that, we should not use a persistence mechanism that's closely coupled to frame navigation.	mcooley	null	null	null	null	null	null	
2019-02-01 22:03:44.0	2019-02-04 19:52:29.0	2019-06-10 17:44:47.0	closed	[build]	0	8	Clean up project structure in Visual Studio	https://api.github.com/repos/microsoft/calculator/issues/8	https://github.com/microsoft/calculator/pull/8	A few small changes to improve the view of the code in Solution Explorer:  - Delete folders from solution explorer which don't appear on disk (Resource Files, PerfTrack)  - Delete files on disk which aren't compiled into the project (Type.xaml)  - Rename CalculatorHistory.Cpp to CalculatorHistory.cpp, for consistency with other files	mcooley	null	null	null	null	null	null	
2019-02-02 02:11:12.0	2019-02-04 19:53:02.0	2019-06-10 23:33:53.0	closed	[build]	0	9	Remove calcmanager ref	https://api.github.com/repos/microsoft/calculator/issues/9	https://github.com/microsoft/calculator/pull/9	Calculator (the main app project) depends on CalcManager, but only transitively: Calculator -> CalcViewModel -> CalcManager.    However, Calculator's project file currently has a direct dependency on CalcManager. Let's remove this to make it harder to accidentally introduce new dependencies between the layers.    Also cleaning up some commented-out directives in the CalcManager MSBuild file.	mcooley	null	null	null	null	null	null	
2019-02-02 02:27:04.0	2019-02-04 20:06:03.0	2019-06-10 23:34:07.0	closed	[codebase quality]	3	10	Don't send AppLifecycle telemetry unless SEND_TELEMETRY is defined	https://api.github.com/repos/microsoft/calculator/issues/10	https://github.com/microsoft/calculator/pull/10	The app currently logs diagnostic events to ETW in various places. If we add certain flags to those events, the data is eligible to be sent as telemetry. (Whether it actually gets sent is controlled outside of Calculator--for example, there are lots of checks at the system level to ensure privacy settings are honored.)    Currently we set the "eligible for telemetry" flags only in official builds, so no telemetry gets uploaded while the app is in development. We already have this set up for the main TraceLogging provider, but we also need to do this for the AppLifecycle performance logging.	mcooley	null	null	null	null	null	null	
2019-02-05 05:25:48.0	2019-02-06 00:13:06.0	2019-06-10 23:38:30.0	closed	[documentation]	0	11	Fixing README typo	https://api.github.com/repos/microsoft/calculator/issues/11	https://github.com/microsoft/calculator/pull/11	Technically, it's XAML Styler, not XamlStyler.	grochocki	null	null	null	null	null	null	
2019-02-07 06:17:03.0	2019-02-19 15:46:17.0	2019-06-10 23:38:39.0	closed	[codebase quality]	0	12	CalcEngine: Convert NumObj* functions to use Rationals and move under CalcEngine::RationalMath namespace	https://api.github.com/repos/microsoft/calculator/issues/12	https://github.com/microsoft/calculator/pull/12	- Converts NumObj* functions to use Rationals. Places new functions under CalcEngine::RationalMath namespace  - Moves functions that correspond to an operator to the Rational class with intent to convert to operators in the future  - Consolidates use of RatPack's NUMBER and RAT data types to Number/Rational classes and RationalMath namespace.	joshkoon	null	null	null	null	null	null	
2019-02-08 20:35:43.0	2019-02-08 23:51:29.0	2019-06-10 23:39:13.0	closed	[Bug, fixing approved issue]	0	13	Date Calculation: Updated AdjustCalendarDate() to ensure we always add 365 when adding 1 year for Japanese calendar	https://api.github.com/repos/microsoft/calculator/issues/13	https://github.com/microsoft/calculator/pull/13	In the Japanese calendar, a transition year consists of 2 partial years. So it is not always guaranteed that adding 1 year will add 365 days. In the case where the Japanese calendar is being used, we change the calendar to Gregorian before adding 1 year and then change it back. This ensures we are adding 365 days when we call m_calendar->AddYear(1).    Tested manually using both Japanese and English US calendars.	sanderl	null	null	null	null	null	null	
2019-02-11 19:21:43.0	2019-02-20 22:26:28.0	2019-06-10 23:39:37.0	closed	[documentation]	0	14	Added Bug Report and Feature Request Issue Templates	https://api.github.com/repos/microsoft/calculator/issues/14	https://github.com/microsoft/calculator/pull/14	Updated the default Bug Report template to customize the Device and Application information section. The Feature Request template is the default one with an additional link to our NewFeatureRequest.md file.	sanderl	null	null	null	null	null	null	
2019-02-11 20:01:14.0	2019-02-13 21:52:46.0	2019-06-10 23:39:43.0	closed	[documentation]	0	15	Created pull_request_template.md	https://api.github.com/repos/microsoft/calculator/issues/15	https://github.com/microsoft/calculator/pull/15	Created the template to be used for pull requests.	sanderl	null	null	null	null	null	null	
2019-02-12 22:03:18.0	2019-02-13 17:56:02.0	2019-06-10 23:39:57.0	closed	[Bug, fixing approved issue]	0	16	Resize app to appropriate dimensions on first launch	https://api.github.com/repos/microsoft/calculator/issues/16	https://github.com/microsoft/calculator/pull/16	According to [PreferredLaunchViewSize docs](https://docs.microsoft.com/en-us/uwp/api/windows.ui.viewmanagement.applicationview.preferredlaunchviewsize#remarks) the current method we use to set the default launch size of the app on first run will not be applied until the next time the app is run. This change uses TryResizeView to resize the app instead.	joseartrivera	null	null	null	null	null	null	
2019-02-12 22:43:48.0	2019-02-14 21:57:23.0	2019-06-10 23:40:11.0	closed	[documentation]	0	17	README updates	https://api.github.com/repos/microsoft/calculator/issues/17	https://github.com/microsoft/calculator/pull/17	Adding the following sections:    * Telemetry notice  * Reporting security issues  * License reference  * Team contact email address	HowardWolosky	null	null	null	null	null	null	
2019-02-13 17:35:59.0	2019-02-13 17:44:03.0	2019-06-10 23:40:30.0	closed	[build]	0	18	Update WinUI to 2.0.181018004	https://api.github.com/repos/microsoft/calculator/issues/18	https://github.com/microsoft/calculator/pull/18	Update the Microsoft.UI.Xaml NuGet package to a new version. The ARM64 framework package in 2.0.181018003.1 had entries missing from its manifest, so the classes in the package couldn't be activated.	mcooley	null	null	null	null	null	null	
2019-02-14 02:39:29.0	2019-02-15 02:20:27.0	2019-06-10 23:40:43.0	closed	[codebase quality]	0	19	Avoid referencing project headers from precompiled headers	https://api.github.com/repos/microsoft/calculator/issues/19	https://github.com/microsoft/calculator/pull/19	## Description of the changes in this pull request:  - Avoid referencing project headers from precompiled headers.      Before this change, the pchs for CalcViewModel and Calculator project referenced project headers.  If those project headers (or any of their dependencies) were to change, then the pch would be recompiled, slowing local build times.      By removing references to project headers, the pch will be compiled once and is resilient to changes in the project.  Now that project headers are explicit about their dependencies, when there is a change to a project header only the translation units referencing the modified header will need to be rebuilt.    ## How this pull request was validated:  ### Review [Contributing.md](../Contributing.md) and ensure all contributing requirements are met.  ### Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)  - Manually tested by ensuring Calculator project builds locally.    @Microsoft/calculator-team	danbelcher-MSFT	null	null	null	null	null	null	
2019-02-14 20:10:53.0	2019-02-14 20:13:02.0	2019-06-11 00:09:03.0	closed	[tooling]	1	20	Move package appxbundle step to hosted VS2017 pool	https://api.github.com/repos/microsoft/calculator/issues/20	https://github.com/microsoft/calculator/pull/20		mcooley	null	null	null	null	null	null	
2019-02-14 22:17:43.0	2019-02-20 22:27:43.0	2019-06-10 23:41:05.0	closed	[documentation]	0	21	Updated the PR template to make it more readable and fix Contributing.md link	https://api.github.com/repos/microsoft/calculator/issues/21	https://github.com/microsoft/calculator/pull/21	Per feedback I've updated the PR template.    - Shortened the headers    -  fixed the contributing link    - made placeholder description text a comment	sanderl	null	null	null	null	null	null	
2019-02-15 23:42:35.0	2019-02-19 15:40:16.0	2019-06-11 00:09:21.0	closed	[tooling]	0	22	Move build jobs to hosted pools	https://api.github.com/repos/microsoft/calculator/issues/22	https://github.com/microsoft/calculator/pull/22	- Move build jobs to the Hosted VS2017 pool instead of our internal pool  - Move the prepare-release-internalonly job from a team-specific pool to a shared pool with more capacity  - Remove symbol publishing from PR/CI builds since it's not necessary; do it only in release builds	mcooley	null	null	null	null	null	null	
2019-02-15 23:45:53.0	2019-02-19 15:10:48.0	2019-06-10 23:41:22.0	closed	[documentation]	0	23	Fix headers in README	https://api.github.com/repos/microsoft/calculator/issues/23	https://github.com/microsoft/calculator/pull/23	Most headers in README.md use level h2, but the ones added in #17 use h1. Let's make them all h2.	mcooley	null	null	null	null	null	null	
2019-02-16 04:14:06.0	null	2021-08-02 09:02:52.0	open	[help wanted, Enhancement, Pri: 2, needs spec]	19	24	Add inking support to calculator for basic calculations/conversions or other math needs	https://api.github.com/repos/microsoft/calculator/issues/24	https://github.com/microsoft/calculator/issues/24	### Problem Statement  The calculator app currently supports different input mechanisms (keyboard, mouse, touch, pen), and while the app interface has been tailored in some way for for the rest of them, pen input has received less attention: the pen is treated like a regular mouse pointer with no special consideration. This is less than ideal when trying to input long numbers in a device where pen is one of the primaty input methods (e.g. Surface Studio in canvas mode, Surface Go with no keyboard attached), where many users would find easier to just write down the numbers.  ### Evidence or User Insights  Many Windows surfaces have benefited lately from tighter ink integration, from the new inline text input canvas to the integration of ink in apps like the Mail client, the Office suite and Microsoft To-Do. Users of pen enabled devices have come to expect more intuitive ways to interact with their computer, with the pen allowing rich ink input rather than just behaving like a simple pointer. The community response to this suggestion has been very positive suggesting that at least high-confidence users would find it a welcome addition (no pun intended).  ### Proposal  The proposal is to allow user to enter calculations in handwriten form, which will be recognized, parsed and calculated as any other user input.  ### Goals   - Allow active pen (e.g. Surface Pen) users to enter handwritten calculations, recognize them and display the result   - Understand mathematical expressions that can be expressed in one line using the same limited expression format the calculator already recognizes for pasted strings. E.g.:     - VALID: 1+ 2 * 3     - NOT VALID: sin(1)  ### Non-goals   - Provide handwriten input for touch users     - Accuracy wouldn't be satisfactory and it would conflict with the current touch usage patterns   - Provide feature parity with the Math Input Panel     - It would be a nice follow-up but it would require additional work on the recognition logic   - Replace the current numeric pad. It should remain available so the user is free to use the pen as a pointer if they prefer it.  ### Low-Fidelity Concept:   I was playing around with the code and I added support for entering expressions using ink:    ![calculatorink](https://user-images.githubusercontent.com/9416356/52894371-42908d80-315d-11e9-9369-b610a47e52c5.gif)    It works by overlaying a InkCanvas on top of the calculation result, and leveraging the existing OnPaste method to process the recognized string.     Is this a feature you would be interested in adding? If you do I can polish it and send a PR 😊    >Note: A team member edited this comment for clarity based on conversation below.	arcadiogarcia	null	null	null	null	null	null	
2019-02-20 18:10:53.0	2019-02-20 19:07:33.0	2019-06-10 23:41:34.0	closed	[codebase quality]	0	25	Move RADIX_TYPE enum into its own header	https://api.github.com/repos/microsoft/calculator/issues/25	https://github.com/microsoft/calculator/pull/25	This change moves the RADIX_TYPE enum into its own header. This resolves a compilation error and reduces the dependency graph by allowing RadixToStringConverter to include just the enum header rather than the entire CalcEngine header.    Change verified by ensuring Calculator build locally.	joshkoon	null	null	null	null	null	null	
2019-02-20 23:40:16.0	2019-02-20 23:42:27.0	2019-06-10 23:56:14.0	closed	[documentation]	0	26	Move PR Template to .github folder	https://api.github.com/repos/microsoft/calculator/issues/26	https://github.com/microsoft/calculator/pull/26	Moving the pull_request_template.md to the .GitHub folder enables the template to be displayed automatically in our pull requests.	sanderl	null	null	null	null	null	null	
2019-02-21 17:19:44.0	2019-02-21 18:50:33.0	2019-06-10 23:57:07.0	closed	[Bug, fixing approved issue]	0	27	Fix Log10 function	https://api.github.com/repos/microsoft/calculator/issues/27	https://github.com/microsoft/calculator/pull/27	## Fixes unit test failure CalculatorManagerTestScientific2.      ### Description of the changes:  - Fixes Log10 function to perform ln(x) / ln(10) rather than ln(x) / 10    ### How changes were validated:  - Verified app builds locally and unit tests are passing  	joshkoon	null	null	null	null	null	null	
2019-02-21 22:02:01.0	2019-03-01 21:11:05.0	2020-12-03 12:01:45.0	closed	[help wanted, Area: Accessibility, Pri: 3, fixed]	1	28	In 'Currency' mode 'Update rates' is defined as a link instead of button	https://api.github.com/repos/microsoft/calculator/issues/28	https://github.com/microsoft/calculator/issues/28	Test Environment:  Calculator : 10.1805.1201.0  OS Build : 17685.1000.180531-1431    Repro Steps:    1. Start the narrator in scan mode  2. Launch calculator  3. Home screen will be displayed.  4. Navigate to menu bar and select 'Currency' Mode  5. Navigate to 'Update rates' link  6. Verify if narrator announces 'Updates rate' as link    Actual Result :  In 'Currency' mode 'Update rates' is defined as link    Expected Result:  In 'Currency' mode 'Update rates' should be button instead of link	MicrosoftIssueBot	null	null	null	null	null	null	
2019-02-21 23:46:45.0	2019-03-01 21:11:06.0	2019-06-10 23:57:27.0	closed	[Bug, Area: Accessibility, fixing approved issue]	1	29	update currency hyperlink changed to a hyperlink button	https://api.github.com/repos/microsoft/calculator/issues/29	https://github.com/microsoft/calculator/pull/29	## Fixes #28 .      ### Description of the changes:  - Updated the Update Currency TextBlock to use a HyperlinkButton instead.    ### How changes were validated:  - Manually verified the functionality and look of the button remained the same.  	sanderl	null	null	null	null	null	null	
2019-02-22 00:01:01.0	2019-02-22 00:47:33.0	2019-06-11 00:09:33.0	closed	[tooling]	0	30	Auto-flight daily builds	https://api.github.com/repos/microsoft/calculator/issues/30	https://github.com/microsoft/calculator/pull/30	The final step of the release pipeline is to submit the build to the Store and to our internal Aero dashboard. From there, we can flight the build to progressively larger audiences while monitoring quality data along the way.	mcooley	null	null	null	null	null	null	
2019-02-22 00:03:05.0	2019-02-22 18:00:20.0	2019-06-10 23:57:59.0	closed	[codebase quality]	0	31	CalcEngine: Remove the need to specify base/radix when working with Rational values	https://api.github.com/repos/microsoft/calculator/issues/31	https://github.com/microsoft/calculator/pull/31	## Remove the need to specify radix when working with Rational values.      ### Description of the changes:  - Separates _values_ from the _representation_ (base/radix) of those values.  - Uses a single base for all values represented as Rationals.  - Rationals are converted to/from a specific base when they are converted to/from strings.    ### How changes were validated:  - Verified app builds and runs locally  - Verified unit tests build and run locally    	joshkoon	null	null	null	null	null	null	
2019-02-22 00:04:38.0	2019-02-22 00:26:47.0	2019-06-11 00:10:02.0	closed	[tooling]	0	32	Update minor version to 1902	https://api.github.com/repos/microsoft/calculator/issues/32	https://github.com/microsoft/calculator/pull/32	Update app version to 10.1902.*.	mcooley	null	null	null	null	null	null	
2019-02-22 00:10:51.0	2019-02-22 00:36:55.0	2019-06-10 23:58:25.0	closed	[codebase quality]	0	33	Change m_nPrecNum from int to size_t and rename to m_precedenceOpCount	https://api.github.com/repos/microsoft/calculator/issues/33	https://github.com/microsoft/calculator/pull/33	## Change m_nPrecNum from int to size_t and rename to m_precedenceOpCount.      ### Description of the changes:  - Convert m_nPrecNum to size_t to resolve signed/unsigned conversion warning  - Rename to m_precedenceOpCount for clarity    ### How changes were validated:  - Verified app builds and runs locally  - Verified unit tests build and run locally    	joshkoon	null	null	null	null	null	null	
2019-02-22 23:57:12.0	2019-02-25 17:48:33.0	2019-06-10 23:58:36.0	closed	[documentation]	0	34	Minor README update	https://api.github.com/repos/microsoft/calculator/issues/34	https://github.com/microsoft/calculator/pull/34	Removing the team contact email address from the README (which has been disabled from  accepting incoming mail from external users).  We want to encourage open communication  with the community, and so would prefer to defer all communication to open channels  whenever possible.	HowardWolosky	null	null	null	null	null	null	
2019-02-22 23:58:21.0	2019-02-25 19:41:32.0	2019-06-10 23:58:50.0	closed	[codebase quality]	0	35	CalcEngine: Manage precision internally to Rational and convert functions to operator overrides	https://api.github.com/repos/microsoft/calculator/issues/35	https://github.com/microsoft/calculator/pull/35	## CalcEngine: Manage precision internally to Rational and convert functions to operator overrides.      ### Description of the changes:  - Sets a fixed global precision on engine calculations to 128 digits, allowing UI to round results as appropriate  - Converts Rational operator functions to operator overrides  - Improves logic for simplifying rational values to avoid conversion to/from strings    ### How changes were validated:  - Verified app builds and runs locally  - Verified unit tests build, run, and pass locally	joshkoon	null	null	null	null	null	null	
2019-02-25 19:50:00.0	2019-02-25 22:04:39.0	2019-06-10 23:59:10.0	closed	[codebase quality]	0	36	CalcEngine: Rename scimath.h/cpp to RationalMath.h/cpp	https://api.github.com/repos/microsoft/calculator/issues/36	https://github.com/microsoft/calculator/pull/36	## Renames scimath.h/cpp to RationalMath.h/cpp.      ### Description of the changes:  - Renames scimath.h/cpp to RationalMath.h/cpp for constistency with namespaces    ### How changes were validated:  - Verified solution builds and runs locally  - Verified UTs build and run successfully locally    	joshkoon	null	null	null	null	null	null	
2019-02-25 22:15:45.0	2019-02-25 23:56:36.0	2019-06-10 23:59:18.0	closed	[documentation]	0	37	Adding Windows Calculator Roadmap Document	https://api.github.com/repos/microsoft/calculator/issues/37	https://github.com/microsoft/calculator/pull/37	### Description of the changes:  - Adding Windows Calculator Roadmap Document	grochocki	null	null	null	null	null	null	
2019-02-25 23:22:12.0	2019-02-25 23:41:17.0	2019-06-10 23:59:26.0	closed	[codebase quality]	0	38	Fix spelling in some comments	https://api.github.com/repos/microsoft/calculator/issues/38	https://github.com/microsoft/calculator/pull/38	Fix spelling and grammar in a few comments in the calc engine.    I'm testing a change in our build system configuration and need a branch with a trivial change to test with. Note to future observers: there are a lot of low-quality comments in the calc engine code, and in general we don't want to spend time cleaning them up unless we're also fixing the code--so please don't submit more PRs like this one.	mcooley	null	null	null	null	null	null	
2019-02-27 00:16:54.0	2019-02-27 00:18:35.0	2019-06-10 23:59:42.0	closed	[documentation]	0	39	Fix license link in README.md	https://api.github.com/repos/microsoft/calculator/issues/39	https://github.com/microsoft/calculator/pull/39	The link to the MIT License in README.md was broken.	bwaldbaum	null	null	null	null	null	null	
2019-02-27 01:17:16.0	2019-02-27 16:57:40.0	2019-06-10 23:59:52.0	closed	[documentation]	0	40	Update ManualTests.md	https://api.github.com/repos/microsoft/calculator/issues/40	https://github.com/microsoft/calculator/pull/40	Fix line breaks and the Or hotkey markdown.	bwaldbaum	null	null	null	null	null	null	
2019-02-27 01:56:01.0	2019-02-27 04:41:05.0	2019-06-11 00:00:01.0	closed	[codebase quality]	0	41	Apply spell check	https://api.github.com/repos/microsoft/calculator/issues/41	https://github.com/microsoft/calculator/pull/41	Clean up more code comments, even though in #38 I said we shouldn't spend too much time cleaning up code comments. It was brought to my attention that there's a spell checker extension available in the VS marketplace which makes it easy to fix up the majority of instances in bulk.	mcooley	null	null	null	null	null	null	
2019-02-27 01:57:43.0	2019-03-26 01:02:46.0	2020-12-03 12:01:44.0	closed	[Area: Reliability, won't fix, Pri: 2]	1	42	[Watson Failure] caused by MOAPPLICATION_HANG_cfffffff_Microsoft.WindowsCalculator!HANG_ACTIVATION	https://api.github.com/repos/microsoft/calculator/issues/42	https://github.com/microsoft/calculator/issues/42	|   |symbol | offset | filename | line |  |---|-------|--------|----------|-----:|  |0|Microsoft.WindowsCalculator!HANG_ACTIVATION|0x0000000000000000||0|  |1|unknown![.ecxr]|0x0000000000000000||0|  |2|ntdll!ZwCreateSection|0x0000000000000000|usrstubs.asm|771|  |3|ntdll!LdrpMapDllNtFileName|0x0000000000000000|ldrmap.c|1238|  |4|ntdll!LdrpMapDllFullPath|0x0000000000000000|ldrmap.c|2094|  |5|ntdll!LdrpProcessWork|0x0000000000000000|ldrmap.c|1748|  |6|ntdll!LdrpLoadDllInternal|0x0000000000000000|ldrapi.c|536|  |7|ntdll!LdrpLoadDll|0x0000000000000000|ldrapi.c|743|  |8|ntdll!LdrLoadDll|0x0000000000000000|ldrapi.c|199|  |9|KERNELBASE!LoadLibraryExW|0x0000000000000000|module.c|1207|  |10|combase!LoadLibraryWithLogging|0x0000000000000000|loadfree.cxx|160|  |11|combase!CClassCache::CDllPathEntry::LoadDll|0x0000000000000000|dllcache.cxx|2394|  |12|combase!CClassCache::CDllPathEntry::Create|0x0000000000000000|dllcache.cxx|2235|  |13|combase!CClassCache::GetOrLoadWinRTInprocClass|0x0000000000000000|dllcache.cxx|4880|  |14|combase!_RoGetActivationFactory|0x0000000000000000|winrtbase.cpp|915|  |15|vccorlib140_app!__getActivationFactoryByHSTRING|0x0000000000000000|vcwinrt.cpp|70|  |16|vccorlib140_app!FactoryCache::GetFactory|0x0000000000000000|vcwinrt.cpp|341|  |17|vccorlib140_app!GetActivationFactoryByPCWSTR|0x0000000000000000|vcwinrt.cpp|419|  |18|Calculator!Windows::Globalization::Fonts::LanguageFontGroup::LanguageFontGroup|0x0000000000000000||0|  |19|Calculator!CalculatorApp::Common::LocalizationService::LocalizationService|0x0000000000000000|localizationservice.cpp|87|  |20|Calculator!CalculatorApp::Common::LocalizationService::GetInstance|0x0000000000000000|localizationservice.cpp|53|  |21|Calculator!CalculatorApp::App::CreateFrame|0x0000000000000000|app.xaml.cpp|206|  |22|Calculator!CalculatorApp::App::OnAppLaunch|0x0000000000000000|app.xaml.cpp|287|  |23|Calculator!CalculatorApp::App::[Windows::UI::Xaml::IApplicationOverrides]::OnLaunched|0x0000000000000000|app.xaml.cpp|226|  |24|Calculator!CalculatorApp::App::[Windows::UI::Xaml::IApplicationOverrides]::__abi_Windows_UI_Xaml_IApplicationOverrides____abi_OnLaunched|0x0000000000000000|vccorlib.h|16707566|  |25|Windows_UI_Xaml!DirectUI::FrameworkApplicationGenerated::OnLaunchedProtected|0x0000000000000000|frameworkapplication.g.cpp|465|  |26|Windows_UI_Xaml!DirectUI::FrameworkView::OnActivated|0x0000000000000000|frameworkview_partial.cpp|258|  |27|Windows_UI_Xaml!Microsoft::WRL::Details::DelegateArgTraits_long (__cdecl Windows::Foundation::ITypedEventHandler_impl_Windows::Foundation::Internal::AggregateType_Windows::UI::Core::CoreWindow * __ptr64,Windows::UI::Core::ICoreWindow * __ptr64_,IInspectable *|0x0000000000000000|event.h|245|  |28|twinapi_appcore!Microsoft::WRL::InvokeTraits_-2_::InvokeDelegates__lambda_17db5d4faa6f74e41d4a86845c05084f_,Windows::Foundation::ITypedEventHandler_Windows::ApplicationModel::Core::CoreApplicationView * __ptr64,Windows::ApplicationModel::Activation::IActivate|0x0000000000000000|internalevent.h|119|  |29|twinapi_appcore!Windows::ApplicationModel::Core::CoreApplicationView::Activate|0x0000000000000000|coreapplicationview.cpp|1782|  |30|rpcrt4!Invoke|0x0000000000000000|invoke.asm|172|  |31|rpcrt4!Ndr64StubWorker|0x0000000000000000|srvcall.cxx|392|  |32|rpcrt4!NdrStubCall3|0x0000000000000000|srvwrap.cxx|166|  |33|combase!CStdStubBuffer_Invoke|0x0000000000000000|stub.cxx|1446|  |34|rpcrt4!CStdStubBuffer_Invoke|0x0000000000000000|ndrfwds.cxx|182|  |35|combase!ObjectMethodExceptionHandlingAction__lambda_76d9e92c799d246a4afbe64a2bf5673d_ _|0x0000000000000000|excepn.hxx|91|  |36|combase!DefaultStubInvoke|0x0000000000000000|channelb.cxx|1974|  |37|combase!ServerCall::ContextInvoke|0x0000000000000000|ctxchnl.cxx|1542|  |38|combase!ASTAInvokeInApartment|0x0000000000000000|applicationsta.cpp|3045|  |39|combase!AppInvoke|0x0000000000000000|channelb.cxx|1688|  |40|combase!ComInvokeWithLockAndIPID|0x0000000000000000|channelb.cxx|2804|  |41|combase!ThreadDispatch|0x0000000000000000|chancont.cxx|422|  |42|combase!CComApartment::ASTAHandleMessage|0x0000000000000000|applicationsta.cpp|2786|  |43|combase!ASTAWaitContext::Wait|0x0000000000000000|applicationsta.cpp|1146|  |44|combase!CoMsgWaitInProcessEvents|0x0000000000000000|applicationsta.cpp|2246|  |45|Windows_UI!Windows::UI::Core::CDispatcher::WaitAndProcessMessagesInternal|0x0000000000000000|dispatcher.cpp|2007|  |46|Windows_UI!Windows::UI::Core::CDispatcher::WaitAndProcessMessages|0x0000000000000000|dispatcher.cpp|461|  |47|twinapi_appcore!_lambda_476a253d60a149be58fa202b506b2c7b_::operator|0x0000000000000000|coreapplicationview.cpp|1201|  |48|SHCore!_WrapperThreadProc|0x0000000000000000|thread.cpp|321|  |49|kernel32!BaseThreadInitThunk|0x0000000000000000|thread.c|64|  |50|ntdll!RtlUserThreadStart|0x0000000000000000|rtlstrt.c|998|  	MicrosoftIssueBot	null	null	null	null	null	null	
2019-02-27 02:01:32.0	2019-03-26 01:02:49.0	2020-12-03 12:01:43.0	closed	[Pri: 3, Area: Reliability, won't fix]	1	43	[Watson Failure] caused by STOWED_EXCEPTION_80070005_Calculator.exe!Windows::UI::Core::ICoreWindow::Dispatcher::get	https://api.github.com/repos/microsoft/calculator/issues/43	https://github.com/microsoft/calculator/issues/43	|   |symbol | offset | filename | line |  |---|-------|--------|----------|-----:|  |0|combase!CRestrictedError::CaptureSnapshot|0x0000000000000037|restrictederror.cpp|1123|  |1|combase!CapturePOFDumpIfRequested|0x00000000000FAF01|error.cpp|2106|  |2|combase!SendReport|0x000000000000016F|error.cpp|500|  |3|combase!RoOriginateError|0x0000000000000048|error.cpp|591|  |4|vccorlib140_app!Platform::Details::ReCreateException|0x0000000000000051|exceptions.cpp|137|  |5|vccorlib140_app!__abi_WinRTraiseAccessDeniedException|0x0000000000000017|exceptions.cpp|508|  |6|calculator!__abi_WinRTraiseException|0x00000000000000CA|vccorlib.h|1107|  |7|calculator!Windows::UI::Core::ICoreWindow::Dispatcher::get|0x000000000000006D||0|  |8|calculator!Windows::System::UserProfile::GlobalizationPreferences::Languages::get|0x00000000000000AB||0|  |9|calculator!CalculatorApp::ViewModel::CurrencyDataLoader::CurrencyDataLoader|0x00000000000001A2|currencydataloader.cpp|103|  |10|calculator!std::make_shared_CalculatorApp::ViewModel::CurrencyDataLoader,std::unique_ptr_CalculatorApp::DataLoaders::CurrencyHttpClient,std::default_delete_CalculatorApp::DataLoaders::CurrencyHttpClient_ _ _|0x0000000000000066|memory|1866|  |11|calculator!CalculatorApp::ViewModel::ApplicationViewModel::OnModeChanged|0x0000000000000251|applicationviewmodel.cpp|151|  |12|calculator!CalculatorApp::ViewModel::ApplicationViewModel::Mode::[CalculatorApp::ViewModel::__IApplicationViewModelPublicNonVirtuals::Mode]::set|0x000000000000002A|applicationviewmodel.cpp|62|  |13|calculator!CalculatorApp::MainPage::OnNavSelectionChanged|0x0000000000000133|mainpage.xaml.cpp|511|  |14|calculator!`Windows::Foundation::TypedEventHandler_Microsoft::UI::Xaml::Controls::NavigationView ^,Platform::Object ^_::TypedEventHandler_Microsoft::UI::Xaml::Controls::NavigationView ^,Platform::Object ^__CalculatorApp::MainPage,void (__cdecl CalculatorApp::|0x000000000000008E||0|  |15|calculator!?__abi_Windows_Foundation_?$TypedEventHandler@PE$AAVNavigationView@Controls@Xaml@UI@Microsoft@@PE$AAVNavigationViewSelectionChangedEventArgs@2345@___abi_IDelegate____abi_Invoke@?Q__abi_IDelegate@?$TypedEventHandler@PE$AAVNavigationView@Controls|0x0000000000000012||0|  |16|microsoft_ui_xaml!NavigationView::RaiseSelectionChangedEvent|0x00000000000001EE|navigationview.cpp|1229|  |17|microsoft_ui_xaml!NavigationView::ChangeSelection|0x00000000000002F8|navigationview.cpp|1310|  |18|microsoft_ui_xaml!NavigationView::OnSelectedItemPropertyChanged|0x0000000000000055|navigationview.cpp|2193|  |19|microsoft_ui_xaml!NavigationView::OnPropertyChanged|0x0000000000000276|navigationview.cpp|2950|  |20|microsoft_ui_xaml!NavigationView::OnPropertyChanged|0x0000000000000073|navigationviewfactory.cpp|451|  |21|microsoft_ui_xaml!winrt::impl::delegate_winrt::Windows::UI::Xaml::PropertyChangedCallback_::type__lambda_7e7a26da47dff7b0d2ec2f8ae5761249_ _::Invoke|0x000000000000003B|windows.ui.xaml.h|7956|  |22|windows_ui_xaml!DirectUI::DependencyObject::NotifyPropertyChanged|0x00000000000002BC|dependencyobject.cpp|2324|  |23|windows_ui_xaml!CDependencyObject::NotifyPropertyChanged|0x000000000000013A|depends.cpp|2698|  |24|windows_ui_xaml!CDependencyObject::SetEffectiveValue|0x00000000000001EC|propertysystem.cpp|1581|  |25|windows_ui_xaml!CDependencyObject::UpdateEffectiveValue|0x00000000000000A7|propertysystem.cpp|1851|  |26|windows_ui_xaml!CDependencyObject::SetValue|0x00000000000000A2|propertysystem.cpp|1623|  |27|windows_ui_xaml!CUIElement::SetValue|0x00000000000000B6|uielement.cpp|712|  |28|windows_ui_xaml!CFrameworkElement::SetValue|0x00000000000000BD|framework.cpp|220|  |29|windows_ui_xaml!CControl::SetValue|0x0000000000000047|control.cpp|98|  |30|windows_ui_xaml!CContentControl::SetValue|0x0000000000000071|contentcontrol.cpp|114|  |31|windows_ui_xaml!DirectUI::DependencyObject::SetValueCore|0x00000000000005FF|dependencyobject.cpp|1455|  |32|windows_ui_xaml!DirectUI::DependencyObject::UpdateEffectiveValue|0x0000000000000062|dependencyobject.cpp|1798|  |33|windows_ui_xaml!DirectUI::DependencyObject::SetValueInternal|0x00000000000000E2|dependencyobject.cpp|1647|  |34|windows_ui_xaml!DirectUI::DependencyObject::SetValue|0x000000000000000E|dependencyobject.cpp|1308|  |35|windows_ui_xaml!DirectUI::DependencyObject::SetValue|0x0000000000000046|dependencyobject.cpp|3114|  |36|microsoft_ui_xaml!winrt::impl::consume_Windows_UI_Xaml_IDependencyObject_RatingItemInfo_::SetValue|0x000000000000005D|windows.ui.xaml.h|2765|  |37|microsoft_ui_xaml!NavigationView::SelectedItem|0x0000000000000049|navigationview.cpp|1807|  |38|microsoft_ui_xaml!NavigationView::SetSelectedItemAndExpectItemInvokeWhenSelectionChangedIfNotInvokedFromAPI|0x00000000000000B6|navigationview.cpp|2252|  |39|microsoft_ui_xaml!NavigationView::OnSelectionChanged|0x0000000000000242|navigationview.cpp|1179|  |40|microsoft_ui_xaml!winrt::impl::delegate_winrt::Windows::Foundation::TypedEventHandler_winrt::Windows::UI::ViewManagement::UISettings,winrt::Windows::Foundation::IInspectable_ _::type__lambda_20228b2c537d1858756d91f224e34dca_ _::Invoke|0x0000000000000043|base.h|8715|  |41|windows_ui_xaml!DirectUI::CRoutedEventSourceBase_DirectUI::IUntypedEventSource,Windows::UI::Xaml::Controls::ISelectionChangedEventHandler,IInspectable,Windows::UI::Xaml::Controls::ISelectionChangedEventArgs_::Raise|0x00000000000000D5|joltclasses.h|1046|  |42|windows_ui_xaml!DirectUI::Selector::OnSelectionChanged|0x0000000000000044|selector_partial.cpp|972|  |43|windows_ui_xaml!DirectUI::Selector::InvokeSelectionChanged|0x00000000000000BA|selector_partial.cpp|935|  |44|windows_ui_xaml!DirectUI::Selector::EndChange|0x0000000000000341|selector_partial.cpp|1754|  |45|windows_ui_xaml!DirectUI::Selector::SelectJustThisItemInternal|0x00000000000000A0|selector_partial.cpp|4405|  |46|windows_ui_xaml!DirectUI::Selector::MakeSingleSelection|0x000000000000006A|selector_partial.cpp|1800|  |47|windows_ui_xaml!DirectUI::ListViewBase::MakeSingleSelection|0x0000000000000079|listviewbase_partial_selection.cpp|332|  |48|windows_ui_xaml!DirectUI::ListViewBase::MakeSingleSelection|0x00000000000000A3|listviewbase_partial_selection.cpp|358|  |49|windows_ui_xaml!DirectUI::ListViewBase::OnSelectItemPrimary|0x000000000000016E|listviewbase_partial_interaction.cpp|389|  |50|windows_ui_xaml!DirectUI::ListViewBase::OnItemPrimaryInteractionGesture|0x00000000000002DC|listviewbase_partial_interaction.cpp|260|  |51|windows_ui_xaml!DirectUI::ListViewBaseItem::DoTapInteraction|0x0000000000000070|listviewbaseitem_partial.cpp|1488|  |52|windows_ui_xaml!DirectUI::ListViewBaseItem::DoPendingTapInteractionForPointerId|0x0000000000000060|listviewbaseitem_partial.cpp|1138|  |53|windows_ui_xaml!DirectUI::ListViewBaseItem::OnPointerReleased|0x0000000000000439|listviewbaseitem_partial.cpp|1021|  |54|microsoft_ui_xaml!winrt::impl::produce_NavigationViewItemPresenter,winrt::Windows::UI::Xaml::Controls::IControlOverrides_::OnPointerReleased|0x0000000000000085|windows.ui.xaml.controls.h|52866|  |55|windows_ui_xaml!DirectUI::ControlGenerated::OnPointerReleasedProtected|0x000000000000004B|control.g.cpp|1532|  |56|windows_ui_xaml!DirectUI::Control::FireEvent|0x0000000000162DFF|control_partial.cpp|270|  |57|windows_ui_xaml!DirectUI::DXamlCore::FireEvent|0x0000000000000130|dxamlcore.cpp|1905|  |58|windows_ui_xaml!CCoreServices::CLR_FireEvent|0x000000000000019F|xcpcore.cpp|3435|  |59|windows_ui_xaml!CControlBase::ScriptCallback|0x0000000000000265|controlbase.cpp|267|  |60|windows_ui_xaml!CXcpDispatcher::OnScriptCallback|0x0000000000000215|xcpwindow.cpp|1348|  |61|windows_ui_xaml!CXcpDispatcher::WindowProc|0x00000000000000EC|xcpwindow.cpp|836|  |62|user32!UserCallWinProcCheckWow|0x00000000000002C1|clmsg.cxx|279|  |63|user32!DispatchClientMessage|0x000000000000009C|client.cxx|3507|  |64|user32!__fnDWORD|0x0000000000000033|ntcb.h|1340|  |65|ntdll!KiUserCallbackDispatcherContinue|0x0000000000000000|trampoln.asm|598|  |66|win32u!ZwUserMessageCall|0x0000000000000014|usrstubs.asm|222|  |67|user32!SendMessageWorker|0x000000000000028D|clmsg.cxx|662|  |68|user32!SendMessageW|0x00000000000000F8|cltxt.h|876|  |69|windows_ui_xaml!CEventManager::Raise|0x00000000000008B1|eventmgr.cpp|876|  |70|windows_ui_xaml!CEventManager::RaiseRoutedEventBubbling|0x0000000000000124|eventmgr.cpp|1305|  |71|windows_ui_xaml!CInputManager::RaiseDelayedPointerUpEvent|0x000000000000013D|inputmanager.cpp|5894|  |72|windows_ui_xaml!CInputManager::ProcessGestureInput|0x000000000000021B|inputmanager.cpp|5650|  |73|windows_ui_xaml!CInputManager::ProcessTouchInteractionCallback|0x00000000000000A9|inputmanager.cpp|5548|  |74|windows_ui_xaml!CCoreServices::ProcessTouchInteractionCallback|0x000000000000003A|xcpcore.cpp|1135|  |75|windows_ui_xaml!TIEAdapter::InteractionEngineCallback|0x0000000000000498|tieadapter.cpp|234|  |76|windows_ui_xaml!TIEAdapter::StaticInteractionEngineCallback|0x0000000000000012|tieadapter.cpp|63|  |77|ninput!COutputConverter::Process|0x0000000000000433|outputconverter.cpp|595|  |78|ninput!CInteractionContextImpl::OutputCallback|0x00000000000000E7|interactioncontextimpl.cpp|128|  |79|ninput!CInteractionGroupingFilter::_SendOutput|0x000000000000001F|interactiongroupingfilter.cpp|79|  |80|ninput!CInteractionGroupingFilter::_OnInput|0x000000000000007E|interactiongroupingfilter.cpp|69|  |81|ninput!COutputCoalescingFilter::Flush|0x00000000000000BE|outputcoalescingfilter.cpp|165|  |82|ninput!COutputCoalescingFilter::_OnInput|0x0000000000000043|outputcoalescingfilter.cpp|120|  |83|ninput!CInteractionEngineImpl::DigitizerInput|0x0000000000000254|interactionengineimpl.cpp|412|  |84|ninput!CInteractionContextImpl::ProcessFrameHistory|0x0000000000000637|interactioncontextimpl.cpp|724|  |85|ninput!ProcessPointerFramesInteractionContext|0x0000000000000180|interactioncontextapis.cpp|530|  |86|windows_ui_xaml!ElementGestureTracker::ProcessPointerInformation|0x00000000000001FB|elementgesturetracker.cpp|624|  |87|windows_ui_xaml!ElementGestureTracker::ProcessPointerMessage|0x0000000000000084|elementgesturetracker.cpp|78|  |88|windows_ui_xaml!CInputManager::ProcessPointerMessagesWithInteractionEngine|0x0000000000000233|inputmanager.cpp|5231|  |89|windows_ui_xaml!CInputManager::ProcessInteractionPointerMessages|0x0000000000000116|inputmanager.cpp|4997|  |90|windows_ui_xaml!CInputManager::ProcessPointerInput|0x0000000000000D16|inputmanager.cpp|3638|  |91|windows_ui_xaml!CInputManager::ProcessInput|0x00000000001CA2ED|inputmanager.cpp|1267|  |92|windows_ui_xaml!CCoreServices::ProcessInput|0x0000000000000043|xcpcore.cpp|1025|  |93|windows_ui_xaml!CXcpBrowserHost::HandleInputMessage|0x0000000000000131|winbrowserhost.cpp|1362|  |94|windows_ui_xaml!CJupiterControl::HandlePointerMessage|0x000000000000013C|jupitercontrol.cpp|650|  |95|windows_ui_xaml!CJupiterControl::HandleWindowMessage|0x00000000001B55E0|jupitercontrol.cpp|333|  |96|windows_ui_xaml!CJupiterWindow::CoreWindowSubclassProc|0x000000000000018A|jupiterwindow.cpp|1095|  |97|windows_ui_xaml!CJupiterWindow::StaticCoreWindowSubclassProc|0x0000000000000049|jupiterwindow.cpp|521|  |98|user32!UserCallWinProcCheckWow|0x00000000000002C1|clmsg.cxx|279|  |99|user32!DispatchMessageWorker|0x00000000000001C3|clmsg.cxx|3137|  |100|windows_ui!Windows::UI::Core::CDispatcher::ProcessMessage|0x00000000000000FE|dispatcher.cpp|327|  |101|windows_ui!Windows::UI::Core::CDispatcher::WaitAndProcessMessagesInternal|0x00000000000000AE|dispatcher.cpp|1959|  |102|windows_ui!Windows::UI::Core::CDispatcher::ProcessEvents|0x000000000000007D|dispatcher.cpp|581|  |103|windows_ui_xaml!CJupiterWindow::RunCoreWindowMessageLoop|0x000000000000004C|jupiterwindow.cpp|1244|  |104|windows_ui_xaml!DirectUI::DXamlCore::RunMessageLoop|0x0000000000000044|dxamlcore.cpp|2217|  |105|twinapi_appcore!Windows::ApplicationModel::Core::CoreApplicationView::Run|0x000000000000003A|coreapplicationview.cpp|1798|  |106|twinapi_appcore!_lambda_476a253d60a149be58fa202b506b2c7b_::operator|0x00000000000001A5|coreapplicationview.cpp|1212|  |107|shcore!_WrapperThreadProc|0x00000000000000F5|thread.cpp|321|  |108|kernel32!BaseThreadInitThunk|0x0000000000000014|thread.c|64|  |109|ntdll!RtlUserThreadStart|0x0000000000000021|rtlstrt.c|998|	MicrosoftIssueBot	null	null	null	null	null	null	
2019-02-27 02:01:36.0	2019-03-04 22:12:17.0	2020-12-03 12:01:42.0	closed	[Area: Reliability, not repro, Pri: 2]	2	44	[Watson Failure] caused by STOWED_EXCEPTION_IRestrictedErrorInfo_TEXT_Element_not_found_80070490_Calculator.exe!Windows::UI::ViewManagement::IActivationViewSwitcher::ShowAsStandaloneAsync	https://api.github.com/repos/microsoft/calculator/issues/44	https://github.com/microsoft/calculator/issues/44	A team member will update this issue with more details soon.	MicrosoftIssueBot	null	null	null	null	null	null	
2019-02-27 02:01:38.0	2019-03-26 01:02:51.0	2020-12-03 12:01:41.0	closed	[Area: Reliability, won't fix, Pri: 1]	1	45	[Watson Failure] caused by MOAPPLICATION_HANG_cfffffff_Microsoft.WindowsCalculator!HANG_QUIESCE	https://api.github.com/repos/microsoft/calculator/issues/45	https://github.com/microsoft/calculator/issues/45	|   |symbol | offset | filename | line |  |---|-------|--------|----------|-----:|  |0|Microsoft.WindowsCalculator!HANG_QUIESCE|0x0000000000000000||0|  |1|unknown![.ecxr]|0x0000000000000000||0|  |2|ntdll!ZwCreateFile|0x0000000000000000|usrstubs.asm|859|  |3|KERNELBASE!CreateFileInternal|0x0000000000000000|fileopcr.c|684|  |4|KERNELBASE!CreateFileW|0x0000000000000000|fileopcr.c|1198|  |5|DWrite!File::TryOpen|0x0000000000000000|fileio_windroid.cpp|92|  |6|DWrite!File::File|0x0000000000000000|fileio_windroid.cpp|20|  |7|DWrite!LocalFileLoader::SerializeReferenceKeyTo|0x0000000000000000|localfileloader.cpp|685|  |8|DWrite!DWriteFactory::CreateLocalFontFileReferenceInternal|0x0000000000000000|dwritefactory.cpp|783|  |9|DWrite!DWriteFactory::CreateFontFileReference|0x0000000000000000|dwritefactory.cpp|809|  |10|Windows_UI_Xaml!DXamlFontFileEnumerator::GetCurrentFontFile|0x0000000000000000|dxamlfontfileenumerator.cpp|98|  |11|DWrite!FontCollectionBuilder::AddFontFiles|0x0000000000000000|fontcollectionbuilder.cpp|41|  |12|DWrite!FontCollectionConstructionTask::AddElementData|0x0000000000000000|fontcollectionelement.cpp|139|  |13|DWrite!CacheWriter::AddElement|0x0000000000000000|cachewriter.cpp|592|  |14|DWrite!IBaseCacheContextImpl::AddElementInternal|0x0000000000000000|ibasecachecontext.cpp|32|  |15|DWrite!DWriteFactory::AddElement|0x0000000000000000|dwritefactory.cpp|358|  |16|DWrite!ElementTaskList::ExecuteTask|0x0000000000000000|elementtasklist.cpp|208|  |17|DWrite!IBaseCacheContextImpl::GetElementData|0x0000000000000000|ibasecachecontext.cpp|19|  |18|DWrite!FontCollection::FontCollection|0x0000000000000000|fontcollection.cpp|24|  |19|DWrite!ComObject_DWriteFontCollection,DeleteOnZeroReference_::ComObject_DWriteFontCollection,DeleteOnZeroReference__DWriteFactory * __ptr64,FontCollectionElementKey * __ptr64_|0x0000000000000000|comhelpers.h|277|  |20|DWrite!DWriteFactory::CreateCustomFontCollection|0x0000000000000000|dwritefactory.cpp|618|  |21|Windows_UI_Xaml!DWriteFontAndScriptServices::CreateCustomFontCollection|0x0000000000000000|dwritefontandscriptservices.cpp|293|  |22|Windows_UI_Xaml!PALFontAndScriptServices::CreateFontCollectionFromUri|0x0000000000000000|palfontandscriptservices.cpp|377|  |23|Windows_UI_Xaml!CCompositeFontFamily::CreateNew|0x0000000000000000|compositefontfamily.cpp|624|  |24|Windows_UI_Xaml!CTypefaceCollection::LookupCompositeFontFamily|0x0000000000000000|typefacecollection.cpp|106|  |25|Windows_UI_Xaml!CFontFamily::EnsureCompositeFontFamily|0x0000000000000000|fontfamily.cpp|128|  |26|Windows_UI_Xaml!CTextBlock::GetLineHeight|0x0000000000000000|textblock.cpp|1565|  |27|Windows_UI_Xaml!CTextBlock::MeasureOverride|0x0000000000000000|textblock.cpp|1640|  |28|Windows_UI_Xaml!CFrameworkElement::MeasureCore|0x0000000000000000|framework.cpp|1537|  |29|Windows_UI_Xaml!CUIElement::MeasureInternal|0x0000000000000000|uielement.cpp|3882|  |30|Windows_UI_Xaml!CUIElement::Measure|0x0000000000000000|uielement.cpp|3742|  |31|Windows_UI_Xaml!CContentPresenter::MeasureOverride|0x0000000000000000|contentpresenter.cpp|810|  |32|Windows_UI_Xaml!CFrameworkElement::MeasureCore|0x0000000000000000|framework.cpp|1537|  |33|Windows_UI_Xaml!CUIElement::MeasureInternal|0x0000000000000000|uielement.cpp|3882|  |34|Windows_UI_Xaml!CUIElement::Measure|0x0000000000000000|uielement.cpp|3742|  |35|Windows_UI_Xaml!CGrid::MeasureOverride|0x0000000000000000|grid.cpp|1049|  |36|Windows_UI_Xaml!CFrameworkElement::MeasureCore|0x0000000000000000|framework.cpp|1537|  |37|Windows_UI_Xaml!CUIElement::MeasureInternal|0x0000000000000000|uielement.cpp|3882|  |38|Windows_UI_Xaml!CUIElement::Measure|0x0000000000000000|uielement.cpp|3742|  |39|Windows_UI_Xaml!CControl::MeasureOverride|0x0000000000000000|control.cpp|387|  |40|Windows_UI_Xaml!DirectUI::FrameworkElement::MeasureOverrideImpl|0x0000000000000000|frameworkelement_partial.cpp|210|  |41|Windows_UI_Xaml!DirectUI::FrameworkElementGenerated::MeasureOverride|0x0000000000000000|frameworkelement.g.cpp|1058|  |42|Windows_UI_Xaml!DirectUI::ContentControl::MeasureOverride|0x0000000000000000|contentcontrol_partial.cpp|58|  |43|Windows_UI_Xaml!DirectUI::FrameworkElementGenerated::MeasureOverrideProtected|0x0000000000000000|frameworkelement.g.cpp|1075|  |44|Windows_UI_Xaml!DirectUI::FrameworkElement::MeasureOverrideFromCore|0x0000000000000000|frameworkelement_partial.cpp|255|  |45|Windows_UI_Xaml!CFrameworkElement::MeasureCore|0x0000000000000000|framework.cpp|1520|  |46|Windows_UI_Xaml!CUIElement::MeasureInternal|0x0000000000000000|uielement.cpp|3882|  |47|Windows_UI_Xaml!CUIElement::Measure|0x0000000000000000|uielement.cpp|3742|  |48|Windows_UI_Xaml!CGrid::MeasureCellsGroup|0x0000000000000000|grid.cpp|353|  |49|Windows_UI_Xaml!CGrid::MeasureOverride|0x0000000000000000|grid.cpp|1278|  |50|Windows_UI_Xaml!CFrameworkElement::MeasureCore|0x0000000000000000|framework.cpp|1537|  |51|Windows_UI_Xaml!CUIElement::MeasureInternal|0x0000000000000000|uielement.cpp|3882|  |52|Windows_UI_Xaml!CUIElement::Measure|0x0000000000000000|uielement.cpp|3742|  |53|Windows_UI_Xaml!CGrid::MeasureCellsGroup|0x0000000000000000|grid.cpp|353|  |54|Windows_UI_Xaml!CGrid::MeasureOverride|0x0000000000000000|grid.cpp|1278|  |55|Windows_UI_Xaml!CFrameworkElement::MeasureCore|0x0000000000000000|framework.cpp|1537|  |56|Windows_UI_Xaml!CUIElement::MeasureInternal|0x0000000000000000|uielement.cpp|3882|  |57|Windows_UI_Xaml!CUIElement::Measure|0x0000000000000000|uielement.cpp|3742|  |58|Windows_UI_Xaml!CGrid::MeasureCellsGroup|0x0000000000000000|grid.cpp|353|  |59|Windows_UI_Xaml!CGrid::MeasureOverride|0x0000000000000000|grid.cpp|1278|  |60|Windows_UI_Xaml!CFrameworkElement::MeasureCore|0x0000000000000000|framework.cpp|1537|  |61|Windows_UI_Xaml!CUIElement::MeasureInternal|0x0000000000000000|uielement.cpp|3882|  |62|Windows_UI_Xaml!CUIElement::Measure|0x0000000000000000|uielement.cpp|3742|  |63|Windows_UI_Xaml!CControl::MeasureOverride|0x0000000000000000|control.cpp|387|  |64|Windows_UI_Xaml!DirectUI::FrameworkElement::MeasureOverrideImpl|0x0000000000000000|frameworkelement_partial.cpp|210|  |65|Windows_UI_Xaml!DirectUI::FrameworkElementGenerated::MeasureOverride|0x0000000000000000|frameworkelement.g.cpp|1058|  |66|Windows_UI_Xaml!DirectUI::FrameworkElementGenerated::MeasureOverrideProtected|0x0000000000000000|frameworkelement.g.cpp|1075|  |67|Windows_UI_Xaml!DirectUI::FrameworkElement::MeasureOverrideFromCore|0x0000000000000000|frameworkelement_partial.cpp|255|  |68|Windows_UI_Xaml!CFrameworkElement::MeasureCore|0x0000000000000000|framework.cpp|1520|  |69|Windows_UI_Xaml!CUIElement::MeasureInternal|0x0000000000000000|uielement.cpp|3882|  |70|Windows_UI_Xaml!CUIElement::Measure|0x0000000000000000|uielement.cpp|3742|  |71|Windows_UI_Xaml!CGrid::MeasureOverride|0x0000000000000000|grid.cpp|1049|  |72|Windows_UI_Xaml!CFrameworkElement::MeasureCore|0x0000000000000000|framework.cpp|1537|  |73|Windows_UI_Xaml!CUIElement::MeasureInternal|0x0000000000000000|uielement.cpp|3882|  |74|Windows_UI_Xaml!CUIElement::Measure|0x0000000000000000|uielement.cpp|3742|  |75|Windows_UI_Xaml!CControl::MeasureOverride|0x0000000000000000|control.cpp|387|  |76|Windows_UI_Xaml!DirectUI::FrameworkElement::MeasureOverrideImpl|0x0000000000000000|frameworkelement_partial.cpp|210|  |77|Windows_UI_Xaml!DirectUI::FrameworkElementGenerated::MeasureOverride|0x0000000000000000|frameworkelement.g.cpp|1058|  |78|Windows_UI_Xaml!DirectUI::FrameworkElementGenerated::MeasureOverrideProtected|0x0000000000000000|frameworkelement.g.cpp|1075|  |79|Windows_UI_Xaml!DirectUI::FrameworkElement::MeasureOverrideFromCore|0x0000000000000000|frameworkelement_partial.cpp|255|  |80|Windows_UI_Xaml!CFrameworkElement::MeasureCore|0x0000000000000000|framework.cpp|1520|  |81|Windows_UI_Xaml!CUIElement::MeasureInternal|0x0000000000000000|uielement.cpp|3882|  |82|Windows_UI_Xaml!CUIElement::Measure|0x0000000000000000|uielement.cpp|3742|  |83|Windows_UI_Xaml!CGrid::MeasureOverride|0x0000000000000000|grid.cpp|1049|  |84|Windows_UI_Xaml!CFrameworkElement::MeasureCore|0x0000000000000000|framework.cpp|1537|  |85|Windows_UI_Xaml!CUIElement::MeasureInternal|0x0000000000000000|uielement.cpp|3882|  |86|Windows_UI_Xaml!CUIElement::Measure|0x0000000000000000|uielement.cpp|3742|  |87|Windows_UI_Xaml!CGrid::MeasureCellsGroup|0x0000000000000000|grid.cpp|353|  |88|Windows_UI_Xaml!CGrid::MeasureOverride|0x0000000000000000|grid.cpp|1278|  |89|Windows_UI_Xaml!CFrameworkElement::MeasureCore|0x0000000000000000|framework.cpp|1537|  |90|Windows_UI_Xaml!CUIElement::MeasureInternal|0x0000000000000000|uielement.cpp|3882|  |91|Windows_UI_Xaml!CUIElement::Measure|0x0000000000000000|uielement.cpp|3742|  |92|Windows_UI_Xaml!CGrid::MeasureCellsGroup|0x0000000000000000|grid.cpp|353|  |93|Windows_UI_Xaml!CGrid::MeasureOverride|0x0000000000000000|grid.cpp|1278|  |94|Windows_UI_Xaml!CFrameworkElement::MeasureCore|0x0000000000000000|framework.cpp|1537|  |95|Windows_UI_Xaml!CUIElement::MeasureInternal|0x0000000000000000|uielement.cpp|3882|  |96|Windows_UI_Xaml!CUIElement::Measure|0x0000000000000000|uielement.cpp|3742|  |97|Windows_UI_Xaml!CControl::MeasureOverride|0x0000000000000000|control.cpp|387|  |98|Windows_UI_Xaml!DirectUI::FrameworkElement::MeasureOverrideImpl|0x0000000000000000|frameworkelement_partial.cpp|210|  |99|Windows_UI_Xaml!DirectUI::FrameworkElementGenerated::MeasureOverride|0x0000000000000000|frameworkelement.g.cpp|1058|  |100|Windows_UI_Xaml!DirectUI::FrameworkElementGenerated::MeasureOverrideProtected|0x0000000000000000|frameworkelement.g.cpp|1075|  |101|Windows_UI_Xaml!DirectUI::FrameworkElement::MeasureOverrideFromCore|0x0000000000000000|frameworkelement_partial.cpp|255|  |102|Windows_UI_Xaml!CFrameworkElement::MeasureCore|0x0000000000000000|framework.cpp|1520|  |103|Windows_UI_Xaml!CUIElement::MeasureInternal|0x0000000000000000|uielement.cpp|3882|  |104|Windows_UI_Xaml!CUIElement::Measure|0x0000000000000000|uielement.cpp|3742|  |105|Windows_UI_Xaml!CBorder::MeasureOverride|0x0000000000000000|border.cpp|220|  |106|Windows_UI_Xaml!CFrameworkElement::MeasureCore|0x0000000000000000|framework.cpp|1537|  |107|Windows_UI_Xaml!CUIElement::MeasureInternal|0x0000000000000000|uielement.cpp|3882|  |108|Windows_UI_Xaml!CUIElement::Measure|0x0000000000000000|uielement.cpp|3742|  |109|Windows_UI_Xaml!CGrid::MeasureOverride|0x0000000000000000|grid.cpp|1049|  |110|Windows_UI_Xaml!CFrameworkElement::MeasureCore|0x0000000000000000|framework.cpp|1537|  |111|Windows_UI_Xaml!CUIElement::MeasureInternal|0x0000000000000000|uielement.cpp|3882|  |112|Windows_UI_Xaml!CUIElement::Measure|0x0000000000000000|uielement.cpp|3742|  |113|Windows_UI_Xaml!CContentPresenter::MeasureOverride|0x0000000000000000|contentpresenter.cpp|810|  |114|Windows_UI_Xaml!CFrameworkElement::MeasureCore|0x0000000000000000|framework.cpp|1537|  |115|Windows_UI_Xaml!CUIElement::MeasureInternal|0x0000000000000000|uielement.cpp|3882|  |116|Windows_UI_Xaml!CUIElement::Measure|0x0000000000000000|uielement.cpp|3742|  |117|Windows_UI_Xaml!CGrid::MeasureCellsGroup|0x0000000000000000|grid.cpp|353|  |118|Windows_UI_Xaml!CGrid::MeasureOverride|0x0000000000000000|grid.cpp|1278|  |119|Windows_UI_Xaml!CFrameworkElement::MeasureCore|0x0000000000000000|framework.cpp|1537|  |120|Windows_UI_Xaml!CUIElement::MeasureInternal|0x0000000000000000|uielement.cpp|3882|  |121|Windows_UI_Xaml!CUIElement::Measure|0x0000000000000000|uielement.cpp|3742|  |122|Windows_UI_Xaml!CBorder::MeasureOverride|0x0000000000000000|border.cpp|220|  |123|Windows_UI_Xaml!CFrameworkElement::MeasureCore|0x0000000000000000|framework.cpp|1537|  |124|Windows_UI_Xaml!CUIElement::MeasureInternal|0x0000000000000000|uielement.cpp|3882|  |125|Windows_UI_Xaml!CUIElement::Measure|0x0000000000000000|uielement.cpp|3742|  |126|Windows_UI_Xaml!CGrid::MeasureOverride|0x0000000000000000|grid.cpp|1049|  |127|Windows_UI_Xaml!CFrameworkElement::MeasureCore|0x0000000000000000|framework.cpp|1537|  |128|Windows_UI_Xaml!CUIElement::MeasureInternal|0x0000000000000000|uielement.cpp|3882|  |129|Windows_UI_Xaml!CUIElement::Measure|0x0000000000000000|uielement.cpp|3742|  |130|Windows_UI_Xaml!CGrid::MeasureCellsGroup|0x0000000000000000|grid.cpp|353|  |131|Windows_UI_Xaml!CGrid::MeasureOverride|0x0000000000000000|grid.cpp|1278|  |132|Windows_UI_Xaml!CFrameworkElement::MeasureCore|0x0000000000000000|framework.cpp|1537|  |133|Windows_UI_Xaml!CUIElement::MeasureInternal|0x0000000000000000|uielement.cpp|3882|  |134|Windows_UI_Xaml!CUIElement::Measure|0x0000000000000000|uielement.cpp|3742|  |135|Windows_UI_Xaml!CControl::MeasureOverride|0x0000000000000000|control.cpp|387|  |136|Windows_UI_Xaml!CSplitView::MeasureOverride|0x0000000000000000|splitview.cpp|158|  |137|Windows_UI_Xaml!DirectUI::FrameworkElement::MeasureOverrideImpl|0x0000000000000000|frameworkelement_partial.cpp|210|  |138|Windows_UI_Xaml!DirectUI::FrameworkElementGenerated::MeasureOverride|0x0000000000000000|frameworkelement.g.cpp|1058|  |139|Windows_UI_Xaml!DirectUI::FrameworkElementGenerated::MeasureOverrideProtected|0x0000000000000000|frameworkelement.g.cpp|1079|  |140|Windows_UI_Xaml!DirectUI::FrameworkElement::MeasureOverrideFromCore|0x0000000000000000|frameworkelement_partial.cpp|255|  |141|Windows_UI_Xaml!CFrameworkElement::MeasureCore|0x0000000000000000|framework.cpp|1520|  |142|Windows_UI_Xaml!CUIElement::MeasureInternal|0x0000000000000000|uielement.cpp|3882|  |143|Windows_UI_Xaml!CUIElement::Measure|0x0000000000000000|uielement.cpp|3742|  |144|Windows_UI_Xaml!CGrid::MeasureCellsGroup|0x0000000000000000|grid.cpp|353|  |145|Windows_UI_Xaml!CGrid::MeasureOverride|0x0000000000000000|grid.cpp|1278|  |146|Windows_UI_Xaml!CFrameworkElement::MeasureCore|0x0000000000000000|framework.cpp|1537|  |147|Windows_UI_Xaml!CUIElement::MeasureInternal|0x0000000000000000|uielement.cpp|3882|  |148|Windows_UI_Xaml!CUIElement::Measure|0x0000000000000000|uielement.cpp|3742|  |149|Windows_UI_Xaml!CGrid::MeasureOverride|0x0000000000000000|grid.cpp|1049|  |150|Windows_UI_Xaml!CFrameworkElement::MeasureCore|0x0000000000000000|framework.cpp|1537|  |151|Windows_UI_Xaml!CUIElement::MeasureInternal|0x0000000000000000|uielement.cpp|3882|  |152|Windows_UI_Xaml!CUIElement::Measure|0x0000000000000000|uielement.cpp|3742|  |153|Windows_UI_Xaml!CControl::MeasureOverride|0x0000000000000000|control.cpp|387|  |154|Windows_UI_Xaml!DirectUI::FrameworkElement::MeasureOverrideImpl|0x0000000000000000|frameworkelement_partial.cpp|210|  |155|Windows_UI_Xaml!DirectUI::FrameworkElementGenerated::MeasureOverride|0x0000000000000000|frameworkelement.g.cpp|1058|  |156|Windows_UI_Xaml!DirectUI::ContentControl::MeasureOverride|0x0000000000000000|contentcontrol_partial.cpp|58|  |157|Microsoft_UI_Xaml!winrt::impl::consume_Windows_UI_Xaml_IFrameworkElementOverrides_winrt::Windows::UI::Xaml::IFrameworkElementOverrides_::MeasureOverride|0x0000000000000000|windows.ui.xaml.h|4102|  |158|Microsoft_UI_Xaml!NavigationView::MeasureOverride|0x0000000000000000|navigationview.cpp|476|  |159|Microsoft_UI_Xaml!winrt::impl::produce_NavigationView,winrt::Windows::UI::Xaml::IFrameworkElementOverrides_::MeasureOverride|0x0000000000000000|windows.ui.xaml.h|13038|  |160|Windows_UI_Xaml!DirectUI::FrameworkElementGenerated::MeasureOverrideProtected|0x0000000000000000|frameworkelement.g.cpp|1075|  |161|Windows_UI_Xaml!DirectUI::FrameworkElement::MeasureOverrideFromCore|0x0000000000000000|frameworkelement_partial.cpp|255|  |162|Windows_UI_Xaml!CFrameworkElement::MeasureCore|0x0000000000000000|framework.cpp|1520|  |163|Windows_UI_Xaml!CUIElement::MeasureInternal|0x0000000000000000|uielement.cpp|3882|  |164|Windows_UI_Xaml!CUIElement::Measure|0x0000000000000000|uielement.cpp|3742|  |165|Windows_UI_Xaml!CGrid::MeasureCellsGroup|0x0000000000000000|grid.cpp|353|  |166|Windows_UI_Xaml!CGrid::MeasureOverride|0x0000000000000000|grid.cpp|1278|  |167|Windows_UI_Xaml!CFrameworkElement::MeasureCore|0x0000000000000000|framework.cpp|1537|  |168|Windows_UI_Xaml!CUIElement::MeasureInternal|0x0000000000000000|uielement.cpp|3882|  |169|Windows_UI_Xaml!CUIElement::Measure|0x0000000000000000|uielement.cpp|3742|  |170|Windows_UI_Xaml!DirectUI::UIElement::MeasureImpl|0x0000000000000000|uielement_partial.cpp|610|  |171|Windows_UI_Xaml!DirectUI::UIElementGenerated::Measure|0x0000000000000000|uielement.g.cpp|4264|  |172|Windows_UI_Xaml!DirectUI::Page::MeasureOverride|0x0000000000000000|page_partial.cpp|614|  |173|Windows_UI_Xaml!DirectUI::FrameworkElementGenerated::MeasureOverrideProtected|0x0000000000000000|frameworkelement.g.cpp|1075|  |174|Windows_UI_Xaml!DirectUI::FrameworkElement::MeasureOverrideFromCore|0x0000000000000000|frameworkelement_partial.cpp|255|  |175|Windows_UI_Xaml!CFrameworkElement::MeasureCore|0x0000000000000000|framework.cpp|1520|  |176|Windows_UI_Xaml!CUIElement::MeasureInternal|0x0000000000000000|uielement.cpp|3882|  |177|Windows_UI_Xaml!CUIElement::Measure|0x0000000000000000|uielement.cpp|3742|  |178|Windows_UI_Xaml!CContentPresenter::MeasureOverride|0x0000000000000000|contentpresenter.cpp|810|  |179|Windows_UI_Xaml!CFrameworkElement::MeasureCore|0x0000000000000000|framework.cpp|1537|  |180|Windows_UI_Xaml!CUIElement::MeasureInternal|0x0000000000000000|uielement.cpp|3882|  |181|Windows_UI_Xaml!CUIElement::Measure|0x0000000000000000|uielement.cpp|3742|  |182|Windows_UI_Xaml!CControl::MeasureOverride|0x0000000000000000|control.cpp|387|  |183|Windows_UI_Xaml!DirectUI::FrameworkElement::MeasureOverrideImpl|0x0000000000000000|frameworkelement_partial.cpp|210|  |184|Windows_UI_Xaml!DirectUI::FrameworkElementGenerated::MeasureOverride|0x0000000000000000|frameworkelement.g.cpp|1058|  |185|Windows_UI_Xaml!DirectUI::ContentControl::MeasureOverride|0x0000000000000000|contentcontrol_partial.cpp|58|  |186|Windows_UI_Xaml!DirectUI::FrameworkElementGenerated::MeasureOverrideProtected|0x0000000000000000|frameworkelement.g.cpp|1079|  |187|Windows_UI_Xaml!DirectUI::FrameworkElement::MeasureOverrideFromCore|0x0000000000000000|frameworkelement_partial.cpp|255|  |188|Windows_UI_Xaml!CFrameworkElement::MeasureCore|0x0000000000000000|framework.cpp|1520|  |189|Windows_UI_Xaml!CUIElement::MeasureInternal|0x0000000000000000|uielement.cpp|3882|  |190|Windows_UI_Xaml!CUIElement::Measure|0x0000000000000000|uielement.cpp|3742|  |191|Windows_UI_Xaml!CBorder::MeasureOverride|0x0000000000000000|border.cpp|220|  |192|Windows_UI_Xaml!CFrameworkElement::MeasureCore|0x0000000000000000|framework.cpp|1537|  |193|Windows_UI_Xaml!CUIElement::MeasureInternal|0x0000000000000000|uielement.cpp|3882|  |194|Windows_UI_Xaml!CUIElement::Measure|0x0000000000000000|uielement.cpp|3742|  |195|Windows_UI_Xaml!DirectUI::UIElement::MeasureImpl|0x0000000000000000|uielement_partial.cpp|610|  |196|Windows_UI_Xaml!DirectUI::UIElementGenerated::Measure|0x0000000000000000|uielement.g.cpp|4264|  |197|Windows_UI_Xaml!DirectUI::ScrollContentPresenter::MeasureOverride|0x0000000000000000|scrollcontentpresenter_partial.cpp|1884|  |198|Windows_UI_Xaml!DirectUI::FrameworkElementGenerated::MeasureOverrideProtected|0x0000000000000000|frameworkelement.g.cpp|1079|  |199|Windows_UI_Xaml!DirectUI::FrameworkElement::MeasureOverrideFromCore|0x0000000000000000|frameworkelement_partial.cpp|255|  |200|Windows_UI_Xaml!CFrameworkElement::MeasureCore|0x0000000000000000|framework.cpp|1520|  |201|Windows_UI_Xaml!CUIElement::MeasureInternal|0x0000000000000000|uielement.cpp|3882|  |202|Windows_UI_Xaml!CUIElement::Measure|0x0000000000000000|uielement.cpp|3742|  |203|Windows_UI_Xaml!DirectUI::UIElement::MeasureImpl|0x0000000000000000|uielement_partial.cpp|610|  |204|Windows_UI_Xaml!DirectUI::UIElementGenerated::Measure|0x0000000000000000|uielement.g.cpp|4264|  |205|Windows_UI_Xaml!DirectUI::ScrollViewer::MeasureOverride|0x0000000000000000|scrollviewer_partial.cpp|1940|  |206|Windows_UI_Xaml!DirectUI::FrameworkElementGenerated::MeasureOverrideProtected|0x0000000000000000|frameworkelement.g.cpp|1079|  |207|Windows_UI_Xaml!DirectUI::FrameworkElement::MeasureOverrideFromCore|0x0000000000000000|frameworkelement_partial.cpp|255|  |208|Windows_UI_Xaml!CFrameworkElement::MeasureCore|0x0000000000000000|framework.cpp|1520|  |209|Windows_UI_Xaml!CUIElement::MeasureInternal|0x0000000000000000|uielement.cpp|3882|  |210|Windows_UI_Xaml!CUIElement::Measure|0x0000000000000000|uielement.cpp|3742|  |211|Windows_UI_Xaml!CRootVisual::MeasureOverride|0x0000000000000000|rootvisual.cpp|106|  |212|Windows_UI_Xaml!CFrameworkElement::MeasureCore|0x0000000000000000|framework.cpp|1537|  |213|Windows_UI_Xaml!CUIElement::MeasureInternal|0x0000000000000000|uielement.cpp|3882|  |214|Windows_UI_Xaml!CUIElement::Measure|0x0000000000000000|uielement.cpp|3742|  |215|Windows_UI_Xaml!CLayoutManager::UpdateLayout|0x0000000000000000|layoutmanager.cpp|271|  |216|Windows_UI_Xaml!CCoreServices::NWDrawTree|0x0000000000000000|xcpcore.cpp|6922|  |217|Windows_UI_Xaml!CCoreServices::NWDrawMainTree|0x0000000000000000|xcpcore.cpp|6718|  |218|Windows_UI_Xaml!CWindowRenderTarget::Draw|0x0000000000000000|windowrendertarget.cpp|137|  |219|Windows_UI_Xaml!CXcpBrowserHost::OnTick|0x0000000000000000|winbrowserhost.cpp|538|  |220|Windows_UI_Xaml!CXcpDispatcher::Tick|0x0000000000000000|xcpwindow.cpp|1450|  |221|Windows_UI_Xaml!CXcpDispatcher::OnReentrancyProtectedWindowMessage|0x0000000000000000|xcpwindow.cpp|1048|  |222|Windows_UI_Xaml!CDeferredInvoke::DispatchQueuedMessage|0x0000000000000000|xcpwindow.cpp|293|  |223|Windows_UI_Xaml!CXcpDispatcher::MessageTimerCallbackStatic|0x0000000000000000|xcpwindow.cpp|1527|  |224|CoreMessaging!Microsoft__CoreUI__Dispatch__TimeoutHandler$CallbackThunk|0x0000000000000000|common__dllinterop.cpp|505|  |225|CoreMessaging!Microsoft::CoreUI::Dispatch::TimeoutManager::Callback_OnDispatch|0x0000000000000000|timeoutmanager.cs|431|  |226|CoreMessaging!Microsoft::CoreUI::Dispatch::EventLoop::Callback_RunCoreLoop|0x0000000000000000|eventloop.cs|871|  |227|CoreMessaging!Microsoft::CoreUI::Dispatch::UserAdapter::OnUserDispatch|0x0000000000000000|useradapter.cs|700|  |228|CoreMessaging!Microsoft::CoreUI::Dispatch::UserAdapter_DoWork|0x0000000000000000|useradaptern.cpp|505|  |229|CoreMessaging!Microsoft::CoreUI::Dispatch::UserAdapter_WindowProc|0x0000000000000000|useradaptern.cpp|751|  |230|user32!UserCallWinProcCheckWow|0x0000000000000000|clmsg.cxx|279|  |231|user32!DispatchClientMessage|0x0000000000000000|client.cxx|3507|  |232|user32!__fnDWORD|0x0000000000000000|ntcb.h|1340|  |233|ntdll!KiUserCallbackDispatcherContinue|0x0000000000000000|trampoln.asm|598|  |234|win32u!ZwUserPeekMessage|0x0000000000000000|usrstubs.asm|174|  |235|user32!_PeekMessage|0x0000000000000000|ntstubs.cxx|967|  |236|user32!PeekMessageW|0x0000000000000000|cltxt.h|733|  |237|Windows_UI!Windows::UI::Core::CDispatcher::ProcessMessage|0x0000000000000000|dispatcher.cpp|284|  |238|Windows_UI!Windows::UI::Core::CDispatcher::WaitAndProcessMessagesInternal|0x0000000000000000|dispatcher.cpp|1959|  |239|Windows_UI!Windows::UI::Core::CDispatcher::WaitAndProcessMessages|0x0000000000000000|dispatcher.cpp|461|  |240|twinapi_appcore!_lambda_476a253d60a149be58fa202b506b2c7b_::operator|0x0000000000000000|coreapplicationview.cpp|1201|  |241|SHCore!_WrapperThreadProc|0x0000000000000000|thread.cpp|321|  |242|kernel32!BaseThreadInitThunk|0x0000000000000000|thread.c|64|  |243|ntdll!RtlUserThreadStart|0x0000000000000000|rtlstrt.c|998|	MicrosoftIssueBot	null	null	null	null	null	null	
2019-02-27 02:07:59.0	2019-03-26 01:02:55.0	2020-12-03 12:01:40.0	closed	[Pri: 3, Area: Reliability, won't fix]	1	46	[Watson Failure] caused by STOWED_EXCEPTION_XAML_87b20c08_Calculator.exe!Windows::ApplicationModel::Core::ICoreApplicationView2::Dispatcher::get	https://api.github.com/repos/microsoft/calculator/issues/46	https://github.com/microsoft/calculator/issues/46	|   |symbol | offset | filename | line |  |---|-------|--------|----------|-----:|  |0|combase!RoOriginateError|0x000000000000003D|error.cpp|591|  |1|twinapi_appcore!wil::details::RaiseRoOriginateOnWilExceptions|0x0000000000000105|resultoriginate.h|76|  |2|twinapi_appcore!wil::details::LogFailure|0x000000000000011E|resultmacros.h|3637|  |3|twinapi_appcore!wil::details::ReportFailure|0x000000000000006D|resultmacros.h|3741|  |4|twinapi_appcore!wil::details::ReportFailure_Hr|0x0000000000000023|resultmacros.h|3820|  |5|twinapi_appcore!wil::details::in1diag3::Return_Hr|0x0000000000000019|resultmacros.h|3993|  |6|twinapi_appcore!_lambda_c75d25f887482f3b28a30ff304be9f35_::operator|0x0000000000042193|coreapplicationviewagilecontainer.cpp|191|  |7|twinapi_appcore!Windows::ApplicationModel::Core::CoreApplicationViewAgileContainer::CreateNewView|0x0000000000000130|coreapplicationviewagilecontainer.cpp|244|  |8|twinapi_appcore!Windows::ApplicationModel::Core::CoreApplication::CreateNewViewInternal|0x000000000000008F|coreapplication.cpp|3111|  |9|twinapi_appcore!Windows::ApplicationModel::Core::CoreApplication::CreateNewViewFromMainView|0x0000000000000019|coreapplication.cpp|3133|  |10|twinapi_appcore!Windows::ApplicationModel::Core::CoreApplicationFactory::CreateNewViewFromMainView|0x0000000000000048|coreapplicationfactory.cpp|348|  |11|Calculator!Windows::ApplicationModel::Core::ICoreApplicationView2::Dispatcher::get|0x0000000000000021||0|  |12|Calculator!Windows::ApplicationModel::Core::CoreApplication::CreateNewView|0x0000000000000072||0|  |13|Calculator!CalculatorApp::App::OnAppLaunch|0x00000000000827E8|app.xaml.cpp|307|  |14|Calculator!CalculatorApp::App::[Windows::UI::Xaml::IApplicationOverrides]::OnLaunched|0x000000000000007E|app.xaml.cpp|208|  |15|Calculator!CalculatorApp::App::[Windows::UI::Xaml::IApplicationOverrides]::__abi_Windows_UI_Xaml_IApplicationOverrides____abi_OnLaunched|0x0000000000000026||0|  |16|Windows_UI_Xaml!DirectUI::FrameworkApplicationGenerated::OnLaunchedProtected|0x0000000000000045|frameworkapplication.g.cpp|465|  |17|Windows_UI_Xaml!DirectUI::FrameworkView::OnActivated|0x00000000000000D6|frameworkview_partial.cpp|268|  |18|Windows_UI_Xaml!Microsoft::WRL::Details::DelegateArgTraits_long (__stdcall Windows::Foundation::ITypedEventHandler_impl_Windows::Foundation::Internal::AggregateType_Windows::ApplicationModel::Core::CoreApplicationView *,Windows::ApplicationModel::Core::ICoreA|0x0000000000000029|event.h|245|  |19|twinapi_appcore!Microsoft::WRL::InvokeTraits_-2_::InvokeDelegates__lambda_7749a6e0e7ae5f0f2e9a837f72796c4e_,Windows::Foundation::ITypedEventHandler_Windows::ApplicationModel::Core::CoreApplicationView *,Windows::ApplicationModel::Activation::IActivatedEventAr|0x000000000000004C|internalevent.h|119|  |20|twinapi_appcore!Microsoft::WRL::EventSource_Windows::Foundation::ITypedEventHandler_Windows::ApplicationModel::Core::CoreApplicationView *,Windows::ApplicationModel::Activation::IActivatedEventArgs *_,Microsoft::WRL::InvokeModeOptions_-2_ _::DoInvoke__lambda_|0x0000000000000044|event.h|812|  |21|twinapi_appcore!Windows::ApplicationModel::Core::CoreApplicationView::Activate|0x0000000000000233|coreapplicationview.cpp|407|  |22|rpcrt4!Invoke|0x0000000000000034|invoke.asm|98|  |23|rpcrt4!NdrStubCall2|0x000000000000040A|srvcall.cxx|1455|  |24|combase!CStdStubBuffer_Invoke|0x00000000000000D1|stub.cxx|1446|  |25|rpcrt4!CStdStubBuffer_Invoke|0x000000000000002A|ndrfwds.cxx|177|  |26|combase!ObjectMethodExceptionHandlingAction__lambda_1ba7c1521bf8e7d0ebd8f0b3c0295667_ _|0x000000000000009B|excepn.hxx|91|  |27|combase!DefaultStubInvoke|0x0000000000000277|channelb.cxx|1769|  |28|combase!ServerCall::ContextInvoke|0x0000000000000471|ctxchnl.cxx|1532|  |29|combase!ASTAInvokeInApartment|0x0000000000000143|applicationsta.cpp|468|  |30|combase!AppInvoke|0x00000000000009C8|channelb.cxx|1497|  |31|combase!ComInvokeWithLockAndIPID|0x00000000000006BD|channelb.cxx|2602|  |32|combase!ThreadDispatch|0x000000000000025B|chancont.cxx|422|  |33|combase!ModernSTAState::HandleMessage|0x0000000000000050|modernsta.cpp|479|  |34|combase!ModernSTAWaitContext::HandlePriorityEventsFromMessagePump|0x000000000000007D|modernsta.cpp|1557|  |35|Windows_UI!Windows::UI::Core::CDispatcher::ProcessInvokeItem|0x00000000000002C5|dispatcher.cpp|1295|  |36|Windows_UI!Windows::UI::Core::CDispatcher::ProcessMessage|0x0000000000000184|dispatcher.cpp|367|  |37|Windows_UI!Windows::UI::Core::CDispatcher::WaitAndProcessMessagesInternal|0x000000000000009E|dispatcher.cpp|1953|  |38|Windows_UI!Windows::UI::Core::CDispatcher::WaitAndProcessMessages|0x000000000000002D|dispatcher.cpp|461|  |39|twinapi_appcore!Event::WaitAndProcessEvents|0x000000000000006D|eventwrapper.cpp|105|  |40|twinapi_appcore!Windows::ApplicationModel::Core::CoreApplicationViewAgileContainer::WaitForViewReady|0x0000000000000039|coreapplicationviewagilecontainer.cpp|1313|  |41|twinapi_appcore!_lambda_42dace6f2e92fb4816976bb76535be76_::_lambda_invoker_stdcall_|0x000000000000004A|coreapplicationviewagilecontainer.cpp|1105|  |42|SHCore!_WrapperThreadProc|0x00000000000000C0|thread.cpp|321|  |43|kernel32!BaseThreadInitThunk|0x0000000000000019|thread.c|64|  |44|ntdll!__RtlUserThreadStart|0x000000000000002B|rtlstrt.c|1163|  |45|ntdll!_RtlUserThreadStart|0x000000000000001B|rtlstrt.c|1080|	MicrosoftIssueBot	null	null	null	null	null	null	
2019-02-27 02:08:03.0	2019-03-26 01:02:57.0	2020-12-03 12:01:39.0	closed	[Area: Reliability, won't fix, Pri: 2]	1	47	[Watson Failure] caused by MOAPPLICATION_HANG_dfffffff_Microsoft.WindowsCalculator!HANG_NAVIGATION	https://api.github.com/repos/microsoft/calculator/issues/47	https://github.com/microsoft/calculator/issues/47	|   |symbol | offset | filename | line |  |---|-------|--------|----------|-----:|  |0|Microsoft.WindowsCalculator!HANG_NAVIGATION|0x0000000000000000||0|  |1|unknown![.ecxr]|0x0000000000000000||0|  |2|win32u!ZwUserMsgWaitForMultipleObjectsEx|0x0000000000000000|usrstubs.asm|8894|  |3|user32!RealMsgWaitForMultipleObjectsEx|0x0000000000000000|client.cxx|1896|  |4|combase!ModernSTAWaitContext::KernelWait|0x0000000000000000|modernsta.cpp|1935|  |5|combase!ModernSTAWaitContext::Wait|0x0000000000000000|modernsta.cpp|1258|  |6|combase!ModernSTAWaitInExistingContext|0x0000000000000000|modernsta.cpp|2750|  |7|combase!ModernSTAThreadWaitForCall|0x0000000000000000|modernsta.cpp|2812|  |8|combase!ThreadSendReceive|0x0000000000000000|channelb.cxx|7562|  |9|combase!CSyncClientCall::SendReceive2|0x0000000000000000|channelb.cxx|5722|  |10|combase!SyncClientCallRetryContext::SendReceiveWithRetry|0x0000000000000000|callctrl.cxx|1649|  |11|combase!CSyncClientCall::SendReceiveInRetryContext|0x0000000000000000|callctrl.cxx|571|  |12|combase!ModernSTAThreadSendReceive|0x0000000000000000|modernsta.cpp|3182|  |13|combase!CSyncClientCall::SendReceive|0x0000000000000000|ctxchnl.cxx|822|  |14|combase!CClientChannel::SendReceive|0x0000000000000000|ctxchnl.cxx|696|  |15|combase!NdrExtpProxySendReceive|0x0000000000000000|proxy.cxx|1965|  |16|rpcrt4!NdrpClientCall3|0x0000000000000000|cltcall.cxx|322|  |17|combase!ObjectStublessClient|0x0000000000000000|stblsclt.cxx|369|  |18|combase!ObjectStubless|0x0000000000000000|stubless.asm|176|  |19|twinapi_appcore!_lambda_aa88a3994e892957b35265abe79573c7_::operator|0x0000000000000000|applicationviewclient.cpp|931|  |20|twinapi_appcore!DoRetryableBrokerOperation_IFullScreenBroker,_lambda_aa88a3994e892957b35265abe79573c7_ _|0x0000000000000000|applicationviewclient.cpp|179|  |21|twinapi_appcore!CApplicationView::get_IsFullScreenMode|0x0000000000000000|applicationviewclient.cpp|945|  |22|Microsoft_UI_Xaml!winrt::impl::consume_Windows_UI_ViewManagement_IApplicationView3_winrt::Windows::UI::ViewManagement::ApplicationView_::IsFullScreenMode|0x0000000000000000|windows.ui.viewmanagement.h|582|  |23|Microsoft_UI_Xaml!NavigationView::IsFullScreenOrTabletMode|0x0000000000000000|navigationview.cpp|3634|  |24|Microsoft_UI_Xaml!NavigationView::UpdateTitleBarPadding|0x0000000000000000|navigationview.cpp|3511|  |25|Microsoft_UI_Xaml!winrt::impl::delegate_winrt::Windows::Foundation::TypedEventHandler_winrt::Windows::UI::ViewManagement::UISettings,winrt::Windows::Foundation::IInspectable_ _::type__lambda_20228b2c537d1858756d91f224e34dca_ _::Invoke|0x0000000000000000|base.h|8715|  |26|twinapi_appcore!Microsoft::WRL::InvokeTraits_-2_::InvokeDelegates__lambda_8f34cdef0ffb73a9ba4459cb0fce1765_,Windows::Foundation::ITypedEventHandler_Windows::ApplicationModel::Core::CoreApplicationViewTitleBar * __ptr64,IInspectable * __ptr64_ _|0x0000000000000000|internalevent.h|119|  |27|twinapi_appcore!Microsoft::WRL::EventSource_Windows::Foundation::ITypedEventHandler_Windows::ApplicationModel::Core::CoreApplicationViewTitleBar * __ptr64,IInspectable * __ptr64_,Microsoft::WRL::InvokeModeOptions_-2_ _::DoInvoke__lambda_8f34cdef0ffb73a9ba4459|0x0000000000000000|event.h|810|  |28|twinapi_appcore!Microsoft::WRL::EventSource_Windows::Foundation::ITypedEventHandler_Windows::ApplicationModel::Core::CoreApplicationViewTitleBar * __ptr64,IInspectable * __ptr64_,Microsoft::WRL::InvokeModeOptions_-2_ _::InvokeAll_Windows::ApplicationModel::Co|0x0000000000000000|event.h|821|  |29|rpcrt4!Invoke|0x0000000000000000|invoke.asm|183|  |30|rpcrt4!Ndr64StubWorker|0x0000000000000000|srvcall.cxx|392|  |31|rpcrt4!NdrStubCall3|0x0000000000000000|srvwrap.cxx|166|  |32|combase!CStdStubBuffer_Invoke|0x0000000000000000|stub.cxx|1446|  |33|rpcrt4!CStdStubBuffer_Invoke|0x0000000000000000|ndrfwds.cxx|182|  |34|combase!ObjectMethodExceptionHandlingAction__lambda_76d9e92c799d246a4afbe64a2bf5673d_ _|0x0000000000000000|excepn.hxx|91|  |35|combase!DefaultStubInvoke|0x0000000000000000|channelb.cxx|1769|  |36|combase!SyncServerCall::StubInvoke|0x0000000000000000|servercall.hpp|825|  |37|combase!ServerCall::ContextInvoke|0x0000000000000000|ctxchnl.cxx|1532|  |38|combase!ASTAInvokeInApartment|0x0000000000000000|applicationsta.cpp|468|  |39|combase!AppInvoke|0x0000000000000000|channelb.cxx|1499|  |40|combase!ComInvokeWithLockAndIPID|0x0000000000000000|channelb.cxx|2601|  |41|combase!ThreadDispatch|0x0000000000000000|chancont.cxx|422|  |42|combase!ModernSTAState::HandleMessage|0x0000000000000000|modernsta.cpp|479|  |43|combase!ModernSTAWaitContext::Wait|0x0000000000000000|modernsta.cpp|1439|  |44|combase!CoMsgWaitInProcessEvents|0x0000000000000000|modernsta.cpp|2534|  |45|Windows_UI!Windows::UI::Core::CDispatcher::WaitAndProcessMessagesInternal|0x0000000000000000|dispatcher.cpp|2001|  |46|Windows_UI!Windows::UI::Core::CDispatcher::ProcessEvents|0x0000000000000000|dispatcher.cpp|599|  |47|Windows_UI_Xaml!CJupiterWindow::RunCoreWindowMessageLoop|0x0000000000000000|jupiterwindow.cpp|1246|  |48|Windows_UI_Xaml!DirectUI::DXamlCore::RunMessageLoop|0x0000000000000000|dxamlcore.cpp|2452|  |49|twinapi_appcore!Windows::ApplicationModel::Core::CoreApplicationView::Run|0x0000000000000000|coreapplicationview.cpp|422|  |50|twinapi_appcore!_lambda_02cef69f8ae13d771fa47a74be974b8f_::operator|0x0000000000000000|coreapplicationviewagilecontainer.cpp|1079|  |51|SHCore!_WrapperThreadProc|0x0000000000000000|thread.cpp|321|  |52|kernel32!BaseThreadInitThunk|0x0000000000000000|thread.c|64|  |53|ntdll!RtlUserThreadStart|0x0000000000000000|rtlstrt.c|1163|	MicrosoftIssueBot	null	null	null	null	null	null	
2019-02-27 02:08:06.0	2019-03-04 22:11:55.0	2020-12-03 12:01:38.0	closed	[Pri: 3, Area: Reliability, not repro]	2	48	[Watson Failure] caused by NULL_POINTER_READ_c0000005_Calculator.exe!Windows::UI::Xaml::FrameworkElement::ActualWidth::[Windows::UI::Xaml::IFrameworkElement]::get	https://api.github.com/repos/microsoft/calculator/issues/48	https://github.com/microsoft/calculator/issues/48	A team member will update this issue with more details soon.	MicrosoftIssueBot	null	null	null	null	null	null	
2019-02-27 02:08:09.0	2019-03-04 22:11:31.0	2020-12-03 12:01:37.0	closed	[Area: Reliability, not repro, Pri: 2]	2	49	[Watson Failure] caused by STOWED_EXCEPTION_IRestrictedErrorInfo_TEXT_The_parameter_is_incorrect_80070057_Calculator.exe!Windows::ApplicationModel::DataTransfer::Clipboard::SetContent	https://api.github.com/repos/microsoft/calculator/issues/49	https://github.com/microsoft/calculator/issues/49	A team member will update this issue with more details soon.	MicrosoftIssueBot	null	null	null	null	null	null	
2019-02-27 02:08:12.0	2019-03-04 22:10:49.0	2020-12-03 12:01:36.0	closed	[Area: Reliability, not repro, Pri: 2]	2	50	[Watson Failure] caused by STOWED_EXCEPTION_80070057_Calculator.exe!Windows::ApplicationModel::DataTransfer::Clipboard::SetContent	https://api.github.com/repos/microsoft/calculator/issues/50	https://github.com/microsoft/calculator/issues/50	A team member will update this issue with more details soon.	MicrosoftIssueBot	null	null	null	null	null	null	
2019-02-27 02:08:14.0	2020-01-18 04:19:18.0	2020-12-03 12:01:35.0	closed	[Area: Test Case, fixed, Pri: 2]	1	51	CalculatorManagerTestBinaryOperatorReceived_LongInput fails with C0000005 in release configuration	https://api.github.com/repos/microsoft/calculator/issues/51	https://github.com/microsoft/calculator/issues/51	This test is failing when built in the "Release" configuration, and we disabled it to unblock test automation work. We should investigate the failure and re-enable the test.	MicrosoftIssueBot	null	null	null	null	null	null	
2019-02-27 02:08:18.0	2019-03-16 00:45:50.0	2020-12-03 12:01:34.0	closed	[help wanted, Area: User Experience, fixed, Pri: 2]	7	52	Does not support paste of monetary values	https://api.github.com/repos/microsoft/calculator/issues/52	https://github.com/microsoft/calculator/issues/52	When pasting input that contains a prefix currency symbol (e.g., $5), the display shows "Invalid input". We should not treat this as invalid input, but instead trim away prefix currency symbols and treat them as numerical values.	MicrosoftIssueBot	null	null	null	null	null	null	
2019-02-27 02:08:21.0	2020-02-11 20:46:54.0	2020-12-03 12:01:33.0	closed	[by design, Area: User Experience, Pri: 1]	6	53	Date Calculation Does Not Factor In Leap Year	https://api.github.com/repos/microsoft/calculator/issues/53	https://github.com/microsoft/calculator/issues/53	**Describe the bug**  The next occurring leap year is next year 2020! The actual Leap Day is Saturday Feburary 29th, 2020. In a recent round of tests with the Date Calculation I found that when adding days past the next leap day the calculation acted as if that day never existed and didn't account for the fact there is an extra day in the year. I set up the case with Today's date February 20,2019 and added 1 year,  0 months and 6 days. The answer came to be A February 26, 2020 just 3 days before Leap Day. I then added an extra year to the equation and got February 26, 2021, which normally that is fine but with leap year it would actually be February 25th, 2021 because of the extra day.    **Steps To Reproduce**  1. Launch the Calculator app build 10.1812.10048.0.  2. Navigate to Date Calculation.  3. From the drop down field select Add or subtract days.  4. For the from date enter February 20,2019  5. Check the bubble Add  6. Enter 1 Year, 0 Months, 6 Days.  7. Take Note of the date Wednesday, February 26,2020 (3 days before Leap Day)  8. Change Years field from 1 to 2.  9. Observe new date Friday, February 26, 2021.     **Expected behavior**  Leap years are taken into account for date calculations.    **Device and Application Information (please complete the following information):**   - OS Build Number:   - Architecture: x64   - Application Version Number: 10.1812.10048.0     <!--Run the following commands in Powershell and copy/paste the output.   - OS Build: "$([Environment]::OSVersion.Version)"   - Architecture: "$((Get-AppxPackage -Name Microsoft.WindowsCalculator).Architecture)"   - Application Version: "$((Get-AppxPackage -Name Microsoft.WindowsCalculator).Version)"-->    **Additional context**  What is also interesting here is that normally the days of the week move forward one day from the previous, except in the case of leap year and then it is two for any date past Leap Day. So looking at this the days of the week has been adjusted for leap year, but the calendar date was not.	MicrosoftIssueBot	null	null	null	null	null	null	
2019-02-27 02:31:35.0	2019-03-29 06:13:54.0	2020-12-03 12:01:32.0	closed	[Pri: 3, Area: User Experience, not repro]	4	54	Overlapping UI elements in Currency Converter for large numerical input	https://api.github.com/repos/microsoft/calculator/issues/54	https://github.com/microsoft/calculator/issues/54	In an LtR language where currency symbol precedence is set to the right, or in an RtL language where currency symbol precedence is set to the right, there are overlapping UI elements in Currency Converter when the input is a large number.    **Repro Steps**  1. Open the Run dialog (WIN + R) and type 'intl.cpl' and hit Enter.  2. In the Region settings, click 'Additional settings'.  3. Navigate to the Currency tab.  4. Change Postive symbol precedence to be on the right side.  5. Open Calculator.  6. Navigate to Currency Converter.  7. Resize to wide layout.  8. Input a large number.    Observe overlapping UI elements.    ![currencyrtl](https://user-images.githubusercontent.com/1414423/53676320-5e179000-3c55-11e9-8ff8-c12149ba784e.PNG)  	MicrosoftIssueBot	null	null	null	null	null	null	
2019-02-27 07:42:40.0	2019-04-22 23:59:14.0	2020-12-03 12:01:31.0	closed	[help wanted, Pri: 2, codebase quality]	10	55	Calculator should use constexpr when defining static const strings	https://api.github.com/repos/microsoft/calculator/issues/55	https://github.com/microsoft/calculator/issues/55	Many strings in Calculator should not be modified and so we declare them 'static const'.  This is fine for ensuring compiler-enforced const-ness, but a downside to this approach is that the strings aren't created until runtime.  We can improve this by marking the strings with 'constexpr'.  This will tell the compiler to bake the strings into the binary itself, which results in less overhead.	MicrosoftIssueBot	null	null	null	null	null	null	
2019-02-27 07:42:42.0	null	2021-10-01 01:46:47.0	open	[help wanted, Pri: 3, codebase quality, approved]	4	56	Calculator should not use FrameworkElement.Tag as it can be easily overwritten by internal control logic.	https://api.github.com/repos/microsoft/calculator/issues/56	https://github.com/microsoft/calculator/issues/56	The use of the Tag property is bad practice and we should clean up the buttons that still use it. Tag is currently used for:  * Hamburger Button (fixed by move to NavigationView)  * About Button (fixed by move to NavigationView)  * OpenParenthesis buttons  * Programmer mode radix buttons (BIN/OCT/DEC/HEX)    	MicrosoftIssueBot	null	null	null	null	null	null	
2019-02-27 07:42:46.0	null	2021-08-02 09:02:15.0	open	[help wanted, Enhancement, Pri: 2, needs spec]	4	57	Length conversion should use Feet + Inches instead of Feet with decimal point	https://api.github.com/repos/microsoft/calculator/issues/57	https://github.com/microsoft/calculator/issues/57	**Problem Statement**  Today, length converter shows decimal values for feet, while in practice, feet + inches are oftentimes used.    **Evidence or User Insights**  Observation of current behavior and customary use in U.S. and U.K. Details on [foot (unit)](https://simple.wikipedia.org/wiki/Foot_(unit)).    **Proposal**  When converting to feet, in addition to showing the decimal conversion, also include "feet + inches", which is more commonly used when working in this unit. For example, when converting 230cm, Calculator shows 7.545932 feet. It would be more useful if it would _also_ show 7' 6.55" (feet with inches).    Possibly dependent on #379.    **Goals**  * Additionally show the "feet and inches" conversion when working with feet in length converter.    **Non-Goals**  * Remove decimal representation of values in feet    **Low-Fidelity Concept**  ![image](https://user-images.githubusercontent.com/1414423/63055635-329eff80-be9b-11e9-850b-a50a15eab2e9.png)    **Requested Assignment**  I'm just suggesting this idea.  I don't want to implement it.	MicrosoftIssueBot	null	null	null	null	null	null	
2019-02-27 07:42:48.0	null	2021-08-02 09:02:17.0	open	[help wanted, Enhancement, Pri: 2, approved]	11	58	Programmer Mode should support setting the radix based on pasted values	https://api.github.com/repos/microsoft/calculator/issues/58	https://github.com/microsoft/calculator/issues/58	**Problem Statement**  Calculator currently supports pasting in prefixed/suffixed values in programmer mode if the value is considered valid for the current radix (hex/dec/bin/oct).    **Evidence or User Insights**  This is a small quality-of-life improvement when using programmer mode.    **Proposal**  Upon paste in programmer mode, if invalid input is detected, attempt to detect if the value is valid in a radix other than the current one, and if so, automatically switch to that radix and accept pasted value.    _Prefixes_  * Pasted input with prefixes _always_ automatically change to specified radix (e.g., "0b" = binary; "0x" = hex, etc.)    _Suffixes_  * If pasted input is valid in currently selected radix, prefer to remain in selected radix (e.g., pasting "10b" while in hex results in remaining in hex with "10B").  * If pasted input is invalid in currently selected radix and is valid in exactly one other radix, automatically change to specified radix (e.g., pasting "10F" in decimal is invalid and is only valid as hex input, so switch to hex).  * If pasted input is invalid in currently selected radix and is valid in more than one other radix, do not change radix and display "Cannot determine radix" (e.g., pasting "10b" in decimal is invalid, but is valid input for both binary ('b' suffix) and hex ("10B" is valid hex).  * If pasted input is invalid across radices, maintain current behavior and display "Invalid input".    **Goals**  * Minimize instances we display "Invalid Input" by automatically switching radix when we can do so confidently.    **Non-Goals**  * Add support for additional radix prefixes/suffixes.    **Low-Fidelity Concept**  N/A (use existing UI; just switch radix when appropriate)    **Requested Assignment**  I'm just suggesting this idea.  I don't want to implement it.	MicrosoftIssueBot	null	null	null	null	null	null	
2019-02-27 07:42:50.0	2019-04-20 01:37:51.0	2020-12-03 12:01:30.0	closed	[help wanted, Pri: 3, Area: World-Readiness, fixed]	4	59	Currency symbol precedence is opposite of system setting in RTL languages	https://api.github.com/repos/microsoft/calculator/issues/59	https://github.com/microsoft/calculator/issues/59	In RtL languages, the currency symbol precedence is opposite of the system setting.  See attached screenshots.    To repro:  1. Go to Settings > Time & Language > Region & Language > Add a language > Hebrew  2. In the languages list, set Hebrew as default.  3. Open the Run dialog (WIN + R). Enter 'intl.cpl'.  The Region settings should open  4. Change the Format to Hebrew.  5. Click 'Additional Settings'.  6. Switch to the 'Currency' tab.  7. Open 'Calculator' in Hebrew.  8. Navigate to Currency Converter.  9. Observe that the currency symbol precedence is opposite of the system setting.    ![image](https://user-images.githubusercontent.com/1414423/54100545-2b1f7b80-437c-11e9-9081-b1febca69047.png)  	MicrosoftIssueBot	null	null	null	null	null	null	
2019-02-27 07:42:52.0	null	2021-10-01 01:46:49.0	open	[help wanted, Pri: 2, codebase quality, approved]	1	60	Cleanup the templates for custom controls in Calculator	https://api.github.com/repos/microsoft/calculator/issues/60	https://github.com/microsoft/calculator/issues/60	Calculator has a bunch of inefficiencies in its styles that hurt performance and maintainability:  * Unnecessary nested UI containers.  * Use of LyaoutUpdated events.  * Unnecessary focus visuals.	MicrosoftIssueBot	null	null	null	null	null	null	
2019-02-27 07:42:56.0	null	2021-10-01 01:46:52.0	open	[help wanted, Pri: 2, codebase quality, approved]	20	61	Update Calculator engine’s use of smart pointers	https://api.github.com/repos/microsoft/calculator/issues/61	https://github.com/microsoft/calculator/issues/61	The Calculator engine allocates and frees its own memory which leads to issues such as double-frees that are hard to investigate.  We should clean this code and switch to modern constructs such as smart_ptrs to eliminate these issues.	MicrosoftIssueBot	null	null	null	null	null	null	
2019-02-27 07:43:02.0	2019-04-18 23:01:48.0	2020-12-03 12:01:30.0	closed	[help wanted, Pri: 3, codebase quality]	16	62	Update Calc x:Name values to begin with uppercase	https://api.github.com/repos/microsoft/calculator/issues/62	https://github.com/microsoft/calculator/issues/62	Any and all occurrences of x:Name should use Pascal-case. Right now, it is inconsistent between views. The reasoning is that x:Name converts the object to be accessible as a property of the current view and properties should be Pascal-cased. I think this issue is easily fixed with a regex + replace.	MicrosoftIssueBot	null	null	null	null	null	null	
2019-02-27 07:43:04.0	null	2021-10-19 05:02:15.0	open	[help wanted, Pri: 2, codebase quality, approved]	1	63	[RS5+] Update NavigationView to use DataTemplates and a template selector to generate menu in XAML rather than in code	https://api.github.com/repos/microsoft/calculator/issues/63	https://github.com/microsoft/calculator/issues/63	Once our min version is RS5, we can update our app to use DataTemplates in the NavigationView. Downlevel, this is bugged and a DataTemplate with a NavigationViewItem/NavigationViewItemHeader as the top-level element will result in a double-nested item container.	MicrosoftIssueBot	null	null	null	null	null	null	
2019-02-27 07:43:06.0	null	2021-10-01 01:46:54.0	open	[help wanted, Pri: 2, codebase quality, approved]	3	64	Adopt C++ standard types across codebase	https://api.github.com/repos/microsoft/calculator/issues/64	https://github.com/microsoft/calculator/issues/64	Calculator currently uses windows-specific types in some places, such as UINT. We should adopt the C++ standard types in their place.	MicrosoftIssueBot	null	null	null	null	null	null	
2019-02-27 07:43:08.0	null	2021-10-01 01:46:56.0	open	[help wanted, Pri: 2, codebase quality, approved]	1	65	Centralize BiDirectional string code in the CalcViewModel	https://api.github.com/repos/microsoft/calculator/issues/65	https://github.com/microsoft/calculator/issues/65	BiDi code is spread out - Memory panel sets BiDi in the view model, while History sets it in the CalcManager. The UnitTests also do their own thing. We should centralize the code into utility functions in the VM and then have unit tests for their functionality.	MicrosoftIssueBot	null	null	null	null	null	null	
2019-02-27 07:43:09.0	null	2021-08-02 09:02:32.0	open	[help wanted, Enhancement, Pri: 2, needs spec]	6	66	Programmer mode on Calculator supports unsigned values	https://api.github.com/repos/microsoft/calculator/issues/66	https://github.com/microsoft/calculator/issues/66	**Problem Statement**  Programmers need to work with both signed and unsigned values. Calculator is currently optimized for signed values only.    **Evidence or User Insights**  For example, while calculator will works on INT64 numbers, if I try to paste in a UINT64 value, e.g. 18403114778001080163, it shows as invalid input. Also, currently, the Bit Flip pane only supports signed numbers (the most significant bit is the Sign bit). Unsigned number support is a gap in our programmer mode.    For example, "256" does not fit into a single byte (requires a word):  ![image](https://user-images.githubusercontent.com/1414423/63054688-3a5da480-be99-11e9-9485-f08e88058567.png)    **Proposal**  Add support for unsigned values in programmer mode.    **Goals**  * Support both signed and unsigned values in programmer mode.  * Support the option to switch between working with signed and unsigned values.  * All applicable operations should adapt to signed/unsigned status.  * Ensure that terminology is consistent with standards when referring to types like QWORD, DQORD, WORD, and BYTE (these terms generally refer to the unsigned versions).    **Non-Goals**  * None    **Low-Fidelity Concept**  ![image](https://user-images.githubusercontent.com/1414423/63055066-f028f300-be99-11e9-89d7-56b95e36d6e9.png)    **Requested Assignment**  I'm just suggesting this idea.  I don't want to implement it.	MicrosoftIssueBot	null	null	null	null	null	null	
2019-02-27 07:43:11.0	null	2021-10-01 01:46:58.0	open	[help wanted, Pri: 2, codebase quality, approved]	2	67	Update calc engine to remove existence of negative 0	https://api.github.com/repos/microsoft/calculator/issues/67	https://github.com/microsoft/calculator/issues/67	The current calc engine has many cases that result in a calculation of negative 0. While there are a couple spots where this is checked and resolved (2, to be exact), this should be improved to prevent cases like "not(1-1) = -1".	MicrosoftIssueBot	null	null	null	null	null	null	
2019-02-27 07:43:13.0	null	2021-08-02 09:02:36.0	open	[help wanted, Pri: 3, codebase quality, approved]	6	68	Calculator Display implements Value pattern	https://api.github.com/repos/microsoft/calculator/issues/68	https://github.com/microsoft/calculator/issues/68	There have been multiple issues opened against how Narrator handles the display in Calculator. The best approach would be to implement a value pattern on the display rather than using the automation name.    This deliverable should resolve the following behaviors:  * Double reading "Display is..." when the display has focus  * Announcing the "Display is" prefix every time a key is pressed  * Not announcing display value when a key press does not result in a new display value	MicrosoftIssueBot	null	null	null	null	null	null	
2019-02-27 07:43:16.0	null	2021-10-01 01:46:59.0	open	[help wanted, Pri: 3, codebase quality, approved]	1	69	Investigate migration of calc engine to BigInteger/BigRational	https://api.github.com/repos/microsoft/calculator/issues/69	https://github.com/microsoft/calculator/issues/69	There are existing BigInteger/BigRational libraries.  If there is one at parity with the existing Calculator engine, we can investigate replacing the older engine code.	MicrosoftIssueBot	null	null	null	null	null	null	
2019-02-27 07:58:11.0	2019-03-26 01:02:54.0	2020-12-03 12:01:28.0	closed	[Pri: 3, Area: Reliability, won't fix]	1	70	[Watson Failure] caused by CPP_EXCEPTION_e06d7363_Calculator.exe!Windows::UI::Xaml::PropertyMetadata::PropertyMetadata	https://api.github.com/repos/microsoft/calculator/issues/70	https://github.com/microsoft/calculator/issues/70	|   |symbol | offset | filename | line |  |---|-------|--------|----------|-----:|  |0|kernelbase!RaiseException|0x0000000000000068|xcpt.c|904|  |1|vcruntime140_app!_CxxThrowException|0x00000000000000AD|throw.cpp|133|  |2|vccorlib140_app!__abi_WinRTraiseCOMException|0x0000000000000035|exceptions.cpp|553|  |3|calculator!__abi_WinRTraiseException|0x00000000000000D8|vccorlib.h|1134|  |4|calculator!Windows::UI::Xaml::PropertyMetadata::PropertyMetadata|0x0000000000000107||0|  |5|calculator!Utils::RegisterDependencyPropertyAttachedWithCallback_CalculatorApp::Common::KeyboardShortcutManager,Platform::String ^,void (__cdecl*)|0x0000000000000076|utils.h|241|  |6|calculator!`dynamic initializer for 'CalculatorApp::Common::KeyboardShortcutManager::s_CharacterProperty''|0x0000000000000014|keyboardshortcutmanager.cpp|21|  |7|ucrtbase!_initterm|0x000000000000008E|initterm.cpp|21|  |8|calculator!__scrt_common_main_seh|0x000000000000007C|exe_common.inl|258|  |9|kernel32!BaseThreadInitThunk|0x0000000000000014|thread.c|64|  |10|ntdll!RtlUserThreadStart|0x0000000000000021|rtlstrt.c|997|	MicrosoftIssueBot	null	null	null	null	null	null	
2019-02-27 20:46:27.0	2019-04-26 23:16:24.0	2020-12-03 12:01:27.0	closed	[Enhancement, Swag: M (2 weeks), Pri: 1]	1	71	Investigate MathML rendering options	https://api.github.com/repos/microsoft/calculator/issues/71	https://github.com/microsoft/calculator/issues/71	Mathematical Markup Language (MathML) is a low-level specification for mathematical and scientific content on the Web and beyond ([source](https://www.w3.org/Math/)).     This issue tracks investigation of how Calculator might add support for displaying MathML expressions across display surfaces.	MicrosoftIssueBot	null	null	null	null	null	null	
2019-02-27 20:46:30.0	2019-04-26 23:16:26.0	2020-12-03 12:01:26.0	closed	[Enhancement, Swag: M (2 weeks), Pri: 1]	1	72	Investigate MathML input options	https://api.github.com/repos/microsoft/calculator/issues/72	https://github.com/microsoft/calculator/issues/72	Mathematical Markup Language (MathML) is a low-level specification for mathematical and scientific content on the Web and beyond ([source](https://www.w3.org/Math/)).     This issue tracks investigation of how Calculator might add support for MathML into its engine.	MicrosoftIssueBot	null	null	null	null	null	null	
2019-02-27 20:46:33.0	2019-03-28 14:02:43.0	2020-12-03 12:01:25.0	closed	[Area: World-Readiness, fixed, Pri: 2]	2	73	Calculator Date difference translation is not correct for croatian language	https://api.github.com/repos/microsoft/calculator/issues/73	https://github.com/microsoft/calculator/issues/73	"TargetCulture": "sr-Latn-RS",  "OldTargetText": "2 meseci; 1 sedmica; 5 dani",  "TargetText": "2 mesec/a/i; 1 sedmica/e; 5 dan/a",  "BuildId": "10.0.17134.345",  "ChosenReason": "BetterAccurancyOrClarity",  "Comments": "I believe that this is a string with multiple numbering placeholder. Hence congruence issues.",	MicrosoftIssueBot	null	null	null	null	null	null	
2019-02-27 20:46:36.0	2019-06-21 21:54:36.0	2020-12-03 12:01:24.0	closed	[Swag: XL (1+ months), Pri: 2, codebase quality]	1	74	Long term plan for testing needs	https://api.github.com/repos/microsoft/calculator/issues/74	https://github.com/microsoft/calculator/issues/74	- Identify test gaps in calculator in existing test coverage.  - Updating manual tests to provide better E2E coverage.  - Create new automated tests to fill identified gaps.  	MicrosoftIssueBot	null	null	null	null	null	null	
2019-02-27 20:46:38.0	2019-06-14 19:46:25.0	2020-12-03 12:01:23.0	closed	[Area: Geopolitical, duplicate, Pri: 1]	3	75	Currency Converter: Update country name from "Macedonia, FYRO" to "North Macedonia"	https://api.github.com/repos/microsoft/calculator/issues/75	https://github.com/microsoft/calculator/issues/75	The country name Macedonia has been changed to North Macedonia. Currency Converter retrieves the country name from the Bing currency web service, so we need to work with Bing to update what the service returns from "Macedonia, FYRO - Denar" to "North Macedonia - Denar".	MicrosoftIssueBot	null	null	null	null	null	null	
2019-02-27 21:01:31.0	2019-06-14 21:46:19.0	2020-12-03 12:01:22.0	closed	[Swag: L (3-4 weeks), Pri: 1, codebase quality]	1	76	Currency Endpoints: Come up with plan to change implementation to work better with new service endpoint	https://api.github.com/repos/microsoft/calculator/issues/76	https://github.com/microsoft/calculator/issues/76	Addressing #77 will be enough in the short term. The end points will function as they do today, however this will only be temporary, long term we should be moving to a different set of endpoints. We will need to make some additional changes once the new end points are up and running.	MicrosoftIssueBot	null	null	null	null	null	null	
2019-02-27 22:37:39.0	2019-05-31 19:55:07.0	2020-12-03 12:01:21.0	closed	[Pri: 1, codebase quality]	1	77	Currency Endpoints: Update fwlinks to point to new service	https://api.github.com/repos/microsoft/calculator/issues/77	https://github.com/microsoft/calculator/issues/77	The underlying service used for currency conversion will be changed in the coming months. Once the underlying service is updated, we will need to update our fwlinks to point to the new endpoints.	MicrosoftIssueBot	null	null	null	null	null	null	
2019-02-28 04:56:04.0	2019-07-31 00:53:39.0	2020-12-03 12:01:20.0	closed	[Enhancement, approved]	19	78	Add the ability for users to pin Calculator on top of other windows	https://api.github.com/repos/microsoft/calculator/issues/78	https://github.com/microsoft/calculator/issues/78	**Problem Statement**  When attempting to use Calculator with other application, such as a spreadsheet, Calculator will lose focus when you click on the other app (e.g. to scroll/copy). Users have requested the ability to pin Calculator on top of other windows to facilitate ongoing use with other apps.     **Evidence or User Insights**  This is our second-highest customer feedback request in Feedback Hub with some users reporting their only alternative is to pay for an app which is sticky.    **Proposal**  Add the ability for users to pin Calculator on top of other windows.     **Goals**  - Users can easily pin/unpin the Calculator window on top  - Users can easily continue with other tasks while Calculator is pinned  - Users have access to full Calculator functionality, but can always perform at least basic calculations when in the more compact view (smaller than currently allowed minimum window sizing)     **Non-Goals**  - Parity with the full version of the app​​ when in smallest of layout states    **Low-Fidelity Concept**  Here is a quick concept showing what the smallest of modes might look like. There are still several open questions to address for this layout state as well as determining the best way to enter/exit this mode:    ![image](https://user-images.githubusercontent.com/1414423/62177214-fbf0b300-b2f8-11e9-9d60-41b016d3a4cf.png)    ![calc](https://user-images.githubusercontent.com/1414423/62177190-e3809880-b2f8-11e9-9c07-1f2127d60df0.gif)	MicrosoftIssueBot	null	null	null	null	null	null	
2019-02-28 04:56:09.0	2019-03-04 21:46:59.0	2020-12-03 12:01:19.0	closed	[Area: User Experience, won't fix, Pri: 2]	3	79	Calendar in the calculator appears outside the window	https://api.github.com/repos/microsoft/calculator/issues/79	https://github.com/microsoft/calculator/issues/79	In Date Calculator, you can select the date from the calendar, but the display is bugged and the calendar will be shown outside of the window.  ![calendarunclipped](https://user-images.githubusercontent.com/23107231/53763900-bd0d1d00-3e80-11e9-8a46-21863ab226fc.png)    Found in OS build: `10.0.17763.292.amd64fre.rs5_release.180914-1434`  Original bug has no Calculator version information.	MicrosoftIssueBot	null	null	null	null	null	null	
2019-02-28 04:56:16.0	2019-03-04 20:19:28.0	2020-12-03 12:01:18.0	closed	[Pri: 1, needs more info]	1	80	Document Calculator telemetry events	https://api.github.com/repos/microsoft/calculator/issues/80	https://github.com/microsoft/calculator/issues/80	A team member will update this issue with more details soon.	MicrosoftIssueBot	null	null	null	null	null	null	
2019-02-28 22:21:07.0	2019-03-01 00:26:20.0	2019-06-11 00:00:40.0	closed	[codebase quality]	0	81	Move the CalculatorManager instance to be direct member data of the StandardCalculatorViewModel class.	https://api.github.com/repos/microsoft/calculator/issues/81	https://github.com/microsoft/calculator/pull/81	Move the CalculatorManager instance to be direct member data of the StandardCalculatorViewModel class.    Previously, the CalculatorManager was managed with a unique_ptr that was instantiated in the ViewModel's constructor and was never re-assigned.  Objects with long lifetime and larger memory footprint should live in dynamic memory, but the ViewModel itself lives in dynamic memory so that goal is still satisfied by storing the CalculatorManager directly in the class. The change allows the compiler to write a more efficient memory footprint for the same data.    - Verified by testing basic app functionality and running unit tests locally.    	danbelcher-MSFT	null	null	null	null	null	null	
2019-02-28 22:46:49.0	2019-03-05 23:24:33.0	2019-06-11 00:00:48.0	closed	[documentation]	0	82	Documentation: revise the new feature process	https://api.github.com/repos/microsoft/calculator/issues/82	https://github.com/microsoft/calculator/pull/82	Simplify the new feature process to make it easier for more people to participate.  - Drop the idea of needing a "sponsor" to write a feature pitch. We still think we'll need a Calculator team member assigned to each feature to guide it through the process, but we can probably handle this without adding an extra "step" to the process.  - Expand the feature request template so it can be used as a template for writing a feature pitch. We realized that if we want to use GitHub issues as the place to iteratively work on these, we should ensure that the document is in the right format from the beginning.  - Explain when you might want to use Feedback Hub to submit an idea instead of writing a complete pitch.  - Use the same terms here and on the [feature tracking board](https://github.com/Microsoft/calculator/projects/1)	mcooley	null	null	null	null	null	null	
2019-02-28 23:16:30.0	null	2021-08-02 09:02:54.0	open	[help wanted, Enhancement, Pri: 2, needs spec]	6	83	Multiple instances of app don't appear as separate processes in Task Manager	https://api.github.com/repos/microsoft/calculator/issues/83	https://github.com/microsoft/calculator/issues/83	**Problem Statement**  Calculator supports multiple windows today, but they are all part of a single process. This means that a crash or hang in one instance brings down all instances and that it is not possible to terminate individual instances via Task Manager.    **Evidence or User Insights**  Terminating one instance will shut down all.  ![image](https://user-images.githubusercontent.com/1414423/63053729-4ba5b180-be97-11e9-92a6-a5610ae05f16.png)    **Proposal**  Instead of handling multiple views of the app within a single process, we should use the new platform APIs to enable an app to be multi-instance.  That will allow instances to be tracked in Task Manager, and if one instance crashes the other instances will remain alive.    **Goals**  * Refactor current multi-window architecture to leverage platform APIs and enable true multi-instance Calculator  * Maintain existing reliability/performance targets    **Non-Goals**  * None    **Low-Fidelity Concept**  N/A    **Requested Assignment**  I'm just suggesting this idea.  I don't want to implement it.	MicrosoftIssueBot	null	null	null	null	null	null	
2019-03-01 00:43:29.0	2019-03-01 18:12:18.0	2019-06-11 00:00:56.0	closed	[documentation]	0	84	Making the "Device and Application" section in the Bug Template easier	https://api.github.com/repos/microsoft/calculator/issues/84	https://github.com/microsoft/calculator/pull/84	With this update, you can directly copy/paste the commented commands  directly into PowerShell and get the expected results.  	HowardWolosky	null	null	null	null	null	null	
2019-03-01 13:47:50.0	2019-03-01 19:40:03.0	2019-06-11 00:01:49.0	closed	[codebase quality]	0	85	Readability Improvements to Calculator.xaml	https://api.github.com/repos/microsoft/calculator/issues/85	https://github.com/microsoft/calculator/pull/85	## Summary    Improved human readability of the XAML in Calculator.xaml document.     _If this PR is accepted, I will work my way through the rest of the solution and apply readability improvements to other locations._    ### Description of the changes:  - Added XAML comments to describe the resource's responsibility  - Grouped resources according to responsibility  - Cleaned up newlines (removed extra ones, added one where needed)    To explain with a single screenshot, here's what the Resources section now looks like:    ![image](https://user-images.githubusercontent.com/3520532/53642014-a788c080-3bfe-11e9-8736-da8e03da90fd.png)      ### How changes were validated:    Improving the readability of code is critical to good open source. For XAML documents specifically, having clear resource sections, with understandable code comments, goes a long way to easily understanding the code.    Specifically, the changes in this PR cleans up the primary XAML document for the application. Allowing any developers browsing the code to quickly and easily understand the responsibilty of the DataTemplate, Style, Selector or Converter.    The spacing changes help visually separate the distinct compnents (e.g. having a space in between Grid.RowDefinitions and the first child element) and significantly reduces cognitive load.    ### Testing  - The changes meet all the XAML Styler guidelines (i.e. passes Settings.XamlStyler rules).  - No functional changes were made, existing tests are sufficient    	LanceMcCarthy	null	null	null	null	null	null	
2019-03-01 17:51:36.0	2019-03-01 18:10:34.0	2019-06-11 00:02:51.0	closed	[tooling]	0	86	Fix CI build versioning	https://api.github.com/repos/microsoft/calculator/issues/86	https://github.com/microsoft/calculator/pull/86	CI builds are failing with error C00CE169 when the minor version number has a leading zero, like "0.1903.0101.0". Get rid of the leading zero.	mcooley	null	null	null	null	null	null	
2019-03-01 20:33:35.0	2019-06-28 22:45:44.0	2020-12-03 12:01:18.0	closed	[Pri: 3, Area: User Experience, fixed]	4	87	Uneven NumberPad Margin in Converter Mode 	https://api.github.com/repos/microsoft/calculator/issues/87	https://github.com/microsoft/calculator/issues/87	**Describe the bug**  Margin around the number pad should be of equal value.     **Steps To Reproduce**  1. Go to any converter   2. Decrease window width until the vertical layout VisualState is triggered    ** Screenshot **  Observe the following layout    ![image](https://user-images.githubusercontent.com/3520532/53664486-9bb8f080-3c36-11e9-8d46-c19d61bf2977.png)    **Expected behavior**  Padding should be equal     **Recommended Solution**  There are two options:    1. Decrease Right and Left margin to match the bottom (this would emulate the padding used on the main calculator interface)  2. Increase the bottom margin to match the sides.      **Device and Application Information**   - OS Build: 18346   - Architecture: x64   - Application Version: 10.1812.10048.0  	LanceMcCarthy	null	null	null	null	null	null	
2019-03-03 23:46:07.0	2019-03-04 20:30:31.0	2019-06-11 00:03:35.0	closed	[Enhancement]	0	88	Updating all icons/images to "developer build" icons	https://api.github.com/repos/microsoft/calculator/issues/88	https://github.com/microsoft/calculator/pull/88	All Calculator app iconography has been updated to use the "developer version" icon from Design,  in order to help differentiate a developer build of Calculator from the official version.    Assets have been run through the image compression tools to ensure all unnecessary  metadata has been removed.    ![calculatorapplist targetsize-96_altform-fullcolor](https://user-images.githubusercontent.com/22158599/53703858-537f0700-3dcb-11e9-958a-9ffedb3d68ed.png)    ![calculatorsmalltile contrast-white_scale-125](https://user-images.githubusercontent.com/22158599/53703868-67c30400-3dcb-11e9-9a49-a64ab01fa9fc.png)  	HowardWolosky	null	null	null	null	null	null	
2019-03-04 23:32:02.0	2019-03-06 04:26:38.0	2020-12-03 12:01:16.0	closed	[Area: Accessibility, Pri: 3, won't fix]	1	89	On activating "Add/Subtract" radio buttons in “Date Calculation” window, resulting date changes but Narrator does not inform about the change	https://api.github.com/repos/microsoft/calculator/issues/89	https://github.com/microsoft/calculator/issues/89	Test Environment:  OS Version: Windows 10 Build 17083.rs_prerelease.180119-1645  App Name: Calculator  App Version: 10.1802.311.0  Repro Steps:  Launch "Calculator" app.  Launch Narrator.  Navigate to “Menu” button and activate it.  Navigate to “Date Calculation” list item in the navigation pane and activate it.  Navigate to “Calculation mode” combo box and activate it.  Navigate to “Add or subtract days” in the combo box and activate it.  Select some duration via “Years/Months/Days” combo box.  Navigate to "Add/Subtract" radio buttons and activate it.  Verify if Narrator informs about the change in resulting date on activating "Add/Subtract" radio buttons.  Actual Result:  On activating "Add/Subtract" radio buttons in “Date Calculation” window, resulting date changes but Narrator does not inform about the change.  Expected Result:  On activating "Add/Subtract" radio buttons in “Date Calculation” window, Narrator should inform about the change in resulting date.	MicrosoftIssueBot	null	null	null	null	null	null	
2019-03-04 23:32:06.0	2019-03-06 01:27:08.0	2020-12-03 12:01:15.0	closed	[Area: Accessibility, won't fix, Pri: 2]	1	90	List items of the combo box in "Currency converter" window are not adapting under 200 and 300 percent text scaling.	https://api.github.com/repos/microsoft/calculator/issues/90	https://github.com/microsoft/calculator/issues/90	Test Environment:  OS Version: Windows 10 Build 17668.rs_onecore_dep_uxp_dev.180515-1610  App Name: Calculator  Pre-Requisite:  Set recommended screen resolution, i.e., 1366 x 768.  Set text scaling to 300 percent via Ease of Access settings > "Make Everything bigger" slider.  Repro Steps:  Launch "Calculator" app.  Home screen will be displayed.  Navigate to “Currency" control in the navigation pane and activate it.  Navigate to convert combo box and activate it.  Combo box will open and Observe the issue.  Actual Result:  List items of the combo box in "Currency converter" window are not adapting under 200 and 300 percent text scaling.  Expected Result:  List items of the combo box in "Currency converter" window should adapt under 200 and 300 percent text scaling.  Note:  Same issue is repro for "HEX", "DEX", "OCT" and "BIN" radio buttons inside Programmer Calculator window Please refer the attachment "Usable_HEX_DEX_OCT_BIN".  Text inside combo boxes in Converter windows are not adapting under 200 and 300 percent text scaling. This issue is repro throughout the app.	MicrosoftIssueBot	null	null	null	null	null	null	
2019-03-04 23:46:42.0	2019-03-06 04:26:38.0	2019-06-11 00:04:09.0	closed	[Bug, Area: Accessibility, fixing approved issue]	0	91	Add Checked Event Handler to Add/Subtract Radio Buttons to enable Narrator 	https://api.github.com/repos/microsoft/calculator/issues/91	https://github.com/microsoft/calculator/pull/91	## Fixes #89 On activating "Add/Subtract" radio buttons in “Date Calculation” window, resulting date changes but Narrator does not inform about the change.      ### Description of the changes:  - Added the AddSubtract_Checked event handler to raise the narrator notification for the resulting date when the Add or Subtract radio button is selected.      ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Manual ad-hoc testing  	sanderl	null	null	null	null	null	null	
2019-03-04 23:53:25.0	2019-03-06 01:27:08.0	2019-06-11 00:04:28.0	closed	[Bug, Area: Accessibility, fixing approved issue]	0	92	Updated UnitConvert ComboBox and Programmer Mode Radio Button Styles to Enable IsTextScaleFactorEnabled	https://api.github.com/repos/microsoft/calculator/issues/92	https://github.com/microsoft/calculator/pull/92	## Fixes #90 .      ### Description of the changes:  - Updated the ComboStyle and ProgModeRadioButtonStyle to set IsTextScaleFactorEnabled to true so that the text size for these controls will scale according to the system settings.      ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Manually tested the text size changes under different scaling percentages.      	sanderl	null	null	null	null	null	null	
2019-03-05 15:04:35.0	2019-03-05 15:06:07.0	2019-06-11 00:04:46.0	closed	[tooling]	0	93	Switch CI builds to use public machine pool	https://api.github.com/repos/microsoft/calculator/issues/93	https://github.com/microsoft/calculator/pull/93	As part of our transition to publicly-visible CI builds, we have a new pool of machines to run unit tests on. Update the service connection details so the public pool is used in CI builds and the internal pool is used in release builds.	mcooley	null	null	null	null	null	null	
2019-03-05 15:12:03.0	2019-03-06 18:04:27.0	2019-06-11 00:04:56.0	closed	[documentation]	13	94	Point build status badge in README to public CI pipeline	https://api.github.com/repos/microsoft/calculator/issues/94	https://github.com/microsoft/calculator/pull/94	Update the build status badge in the README to link to the public CI pipeline.	mcooley	null	null	null	null	null	null	
2019-03-05 20:43:38.0	2019-03-06 15:10:35.0	2019-06-11 00:05:03.0	closed	[tooling]	4	95	Test PR	https://api.github.com/repos/microsoft/calculator/issues/95	https://github.com/microsoft/calculator/pull/95	Do not review. Just a test. I won't commit this  	leantk	null	null	null	null	null	null	
2019-03-05 20:45:58.0	2019-03-06 15:10:22.0	2019-06-11 00:13:07.0	closed	[tooling]	3	96	Test PR 2	https://api.github.com/repos/microsoft/calculator/issues/96	https://github.com/microsoft/calculator/pull/96	Another test. Please ignore	leantk	null	null	null	null	null	null	
2019-03-05 22:54:38.0	2019-03-06 05:42:25.0	2019-06-11 00:13:17.0	closed	[codebase quality]	0	97	Suppress conversion warning in Ratpack/conv.cpp.	https://api.github.com/repos/microsoft/calculator/issues/97	https://github.com/microsoft/calculator/pull/97	### Description of the changes:  When building for x64, the compiler complains:            warning C4267: 'argument': conversion from 'size_t' to 'ULONG', possible loss of data    In practice, the number string will not exceed a ULONG in length. Suppress the conversion warning with a `static_cast`.    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Build locally for x64 and verify no conversion warnings are generated.  - Unit tests build and pass locally.      	danbelcher-MSFT	null	null	null	null	null	null	
2019-03-06 15:02:15.0	null	2021-08-28 00:16:21.0	open	[Bug, Pri: 3, triage approved, Area: Reliability]	1	98	Calculator.exe is setting selected index to an invalid value	https://api.github.com/repos/microsoft/calculator/issues/98	https://github.com/microsoft/calculator/issues/98	We're seeing from crash dumps that Calculator is setting selected index on a selector-derived type to a value that is outside the valid range.    The actual failure occurs in the XAML code, where the call stack looks like this:  0 Windows_UI_Xaml!DirectUI::Selector::OnSelectedIndexChanged  1 Windows_UI_Xaml!DirectUI::Selector::OnPropertyChanged2  2 Windows_UI_Xaml!DirectUI::ComboBox::OnPropertyChanged2  3 Windows_UI_Xaml!DirectUI::DependencyObject::NotifyPropertyChanged  4 Windows_UI_Xaml!CDependencyObject::NotifyPropertyChanged  5 Windows_UI_Xaml!CDependencyObject::SetEffectiveValue  6 Windows_UI_Xaml!CDependencyObject::UpdateEffectiveValue  7 Windows_UI_Xaml!CDependencyObject::SetValue  8 Windows_UI_Xaml!CUIElement::SetValue  9 Windows_UI_Xaml!CFrameworkElement::SetValue  10 Windows_UI_Xaml!CControl::SetValue  11 Windows_UI_Xaml!CItemsControl::SetValue  12 Windows_UI_Xaml!DirectUI::DependencyObject::SetValueCore  13 Windows_UI_Xaml!DirectUI::DependencyObject::SetValueCore  14 Windows_UI_Xaml!DirectUI::DependencyObject::SetValueByKnownIndex_int_  15 Windows_UI_Xaml!DirectUI::ComboBox::OnClose  16 Windows_UI_Xaml!DirectUI::ComboBox::OnIsDropDownOpenChanged  17 Windows_UI_Xaml!DirectUI::ComboBox::OnPropertyChanged2  18 Windows_UI_Xaml!DirectUI::DependencyObject::NotifyPropertyChanged  19 Windows_UI_Xaml!CDependencyObject::NotifyPropertyChanged  20 Windows_UI_Xaml!CDependencyObject::SetEffectiveValue  21 Windows_UI_Xaml!CDependencyObject::UpdateEffectiveValue  22 Windows_UI_Xaml!CDependencyObject::SetValue  23 Windows_UI_Xaml!CUIElement::SetValue  24 Windows_UI_Xaml!CFrameworkElement::SetValue  25 Windows_UI_Xaml!CControl::SetValue  26 Windows_UI_Xaml!CItemsControl::SetValue  27 Windows_UI_Xaml!DirectUI::DependencyObject::SetValueCore  28 Windows_UI_Xaml!DirectUI::DependencyObject::SetValueByKnownIndex_unsigned char_  29 Windows_UI_Xaml!DirectUI::ComboBox::FocusChanged  30 Windows_UI_Xaml!DirectUI::ComboBox::OnElementPopupChildLostFocus	MicrosoftIssueBot	null	null	null	null	null	null	
2019-03-06 18:10:28.0	2019-03-06 18:45:01.0	2019-06-11 00:13:28.0	closed	[documentation]	0	99	Update pipelines badge on README to point to public CI	https://api.github.com/repos/microsoft/calculator/issues/99	https://github.com/microsoft/calculator/pull/99	Same change as #94.	mcooley	null	null	null	null	null	null	
2019-03-06 19:19:04.0	2019-03-06 19:51:54.0	2019-06-11 00:13:44.0	closed	[documentation]	0	100	windows store is now called microsoft store	https://api.github.com/repos/microsoft/calculator/issues/100	https://github.com/microsoft/calculator/pull/100	## Fixes #.  - the windows store has been renamed to the Microsoft Store. this PR updates the readme to reflect this.     ### Description of the changes:  - changes the single instance of "windows store" to "Microsoft store".      ### How changes were validated:  ![image](https://user-images.githubusercontent.com/16927294/53907200-87dc0880-4001-11e9-968a-f7d04c7388f8.png)    ![image](https://user-images.githubusercontent.com/16927294/53907250-a0e4b980-4001-11e9-99aa-f3af5aa5bcfe.png)      	barlan	null	null	null	null	null	null	
2019-03-06 19:29:39.0	2019-03-06 20:04:28.0	2019-06-11 00:17:15.0	closed	[off-topic]	3	101	Make this app immune against any exploit(fixing #61).	https://api.github.com/repos/microsoft/calculator/issues/101	https://github.com/microsoft/calculator/pull/101	## Fixes #61 and other malicious things. Furthermore we also need less maintain-resources (that could probably be spend elsewhere to certainly improve other products).    ### Description of the changes:  - Removed all source files.    ### How changes were validated:  Well, I guess it is fine that it doesn't built anymore?    [In the recent years, many Proof of Concepts in regards to exploits where presented with the calculator app launching (or being launched by) an arbitrary application](https://www.youtube.com/watch?v=iaIkc203Fd0). When we no longer have the calculator, many PoCs are broken, thus we also need to [worry less about exploits](https://twitter.com/Mythic3d/status/1103364806579372032). :woman_shrugging::man_shrugging:    ---    Please note that this Pull Request is not meant at all for merging, it is just meant to maybe draw some smiles. I find it generally awesome that you are (apparently) committed to Free Software by making core programs of an operating system open to the public, but reading about this exact repository the first time immediately brought me the idea of saving many lifes. (That is why I only removed the C++/header files, to leave the general idea behind. `rm -rf *` would have been easier.)    I think this is kind of the best way to reach out to you. I'll eventually delete my fork, as a Linux-based user I'm not able to use this project.    :Kappa:	jens1o	null	null	null	null	null	null	
2019-03-06 19:36:27.0	2019-08-14 19:58:37.0	2020-12-03 12:01:14.0	closed	[Enhancement, needs more info, pitch declined]	6	102	Support for arrows keys for +, -, *, / for compact keyboard	https://api.github.com/repos/microsoft/calculator/issues/102	https://github.com/microsoft/calculator/issues/102	Some third party calculator support the arrow Keys for typing the four principal operators in compact keyboards. Now it seems like these Keys are unused, it would be useful to use them for this  Regards,   Manuele	manuelelucchi	null	null	null	null	null	null	
2019-03-06 19:46:49.0	2019-03-06 20:01:33.0	2020-12-03 12:01:13.0	closed	[won't fix]	2	103	compact overlay for calculator in tablet mode	https://api.github.com/repos/microsoft/calculator/issues/103	https://github.com/microsoft/calculator/issues/103	if the calculator has compact over lay i can use it like an actual calculator in tablet mode. It will be just like the desktop and i can use it instead of having to go into the app separately.	FireCubeStudios	null	null	null	null	null	null	
2019-03-06 20:26:04.0	2019-03-07 01:14:52.0	2019-06-11 00:17:51.0	closed	[codebase quality]	0	104	Fix comment on IsEven	https://api.github.com/repos/microsoft/calculator/issues/104	https://github.com/microsoft/calculator/pull/104	## Fixes #.  Misleading comment in code    ### Description of the changes:  Looks like the comment on IsEven should read this way instead of "The assumption here is its numerator is 1 and we are testing the numerator is even or not"    ### How changes were validated:  N/A  	jsfuchs	null	null	null	null	null	null	
2019-03-06 20:31:26.0	2019-03-06 20:36:25.0	2020-12-03 12:01:13.0	closed	[won't fix, question]	9	105	Win32calc.exe?	https://api.github.com/repos/microsoft/calculator/issues/105	https://github.com/microsoft/calculator/issues/105	Can the old winform UI be built from this codebase?	Immortalin	null	null	null	null	null	null	
2019-03-06 20:33:00.0	2019-03-07 00:10:15.0	2019-06-11 00:17:59.0	closed	[codebase quality]	1	106	Correct spelling mistakes	https://api.github.com/repos/microsoft/calculator/issues/106	https://github.com/microsoft/calculator/pull/106		EdwardBetts	null	null	null	null	null	null	
2019-03-06 20:45:37.0	2019-03-06 22:38:50.0	2020-03-31 15:31:26.0	closed	[by design]	8	107	Can't divide by 0	https://api.github.com/repos/microsoft/calculator/issues/107	https://github.com/microsoft/calculator/issues/107	**Describe the bug**    It seems like you can't divide by 0. This needs to be fixed ASAP as possible.    **Steps To Reproduce**    1. Click on any number  2. Click on division symbol  3. Click on 0  4. ????????  5. Profit    **Expected behavior**    The result of dividing a number by 0.    **Device and Application Information (please complete the following information):**   - OS Build: Windows 10.    **Additional context**  - Please fix this fast, I need to divide by 0.  	NachoNav	null	null	null	null	null	null	
2019-03-06 20:52:41.0	2019-07-16 18:08:57.0	2020-12-03 12:01:11.0	closed	[Enhancement, pitch declined]	10	108	kW to BTU/HR	https://api.github.com/repos/microsoft/calculator/issues/108	https://github.com/microsoft/calculator/issues/108	**Problem Statement**  Gas appliances have a BTU/hr rating. Electric appliances have a kW rating. Smart meters will give you your current gas usage in BTU/hr but your current electric usage in kW. In order to compare the two power units, they will look to a converter, but Win10calc only has BTU/min. Adding this feature will help people understand their energy usage and empower them to reduce their carbon footprint.    **Evidence or User Insights**  Google search results for the following searches:  "BTU/m" 62000  "BTU/min" 70000  "BTU/h" 4760000  "BTU/hr" 3930000    **Proposal**  Add British Thermal Units per hour (BTU/h) to list of power conversions, equal to 60 BTU/min.    **Goals**  User can convert power units to and from BTU/h  Requires translation to other languages, perhaps as simple as copying the translations of "British Thermal Units" and "per hour" from "kilowatts per hour".    **Non-Goals**  We are not getting rid of BTU/min, as it seems 2% of websites use this.  We are not imposing the superior metric system on the US and Imperial measurement world.    **Low-Fidelity Concept**    **Requested Assignment**  I'm just suggesting this idea.  I don't want to implement it.    > Note: A team member edited this comment for clarity based on conversation below.	Tak-Au	null	null	null	null	null	null	
2019-03-06 20:54:34.0	2020-03-13 16:18:53.0	2021-06-02 00:00:17.0	closed	[tooling, approved]	10	109	Alternative compilers	https://api.github.com/repos/microsoft/calculator/issues/109	https://github.com/microsoft/calculator/issues/109	Support Clang and/or GCC	ghost	null	null	null	null	null	null	
2019-03-06 21:09:27.0	2019-03-06 21:37:06.0	2019-06-11 00:18:19.0	closed	[Enhancement]	3	110	Fix scientific notation for crypto currencies	https://api.github.com/repos/microsoft/calculator/issues/110	https://github.com/microsoft/calculator/pull/110	## Fixes #.  It's not helpful to calculate crypto currency values with scientific notation. All values up to 7 decimals should be in standard format.    ### Description of the changes:  - Changed maximum number of zeros after decimal to 7 (smallest unit "1 satoshi" in crypto currencies have 7 zeros).    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - manual  	uhliksk	null	null	null	null	null	null	
2019-03-06 21:13:45.0	2019-04-17 00:17:24.0	2020-12-03 12:01:10.0	closed	[Area: User Experience, fixed, Pri: 2]	9	111	Modulo operator should work like other calculators out there	https://api.github.com/repos/microsoft/calculator/issues/111	https://github.com/microsoft/calculator/issues/111	The modulo operator on this calculator gives the result that is different to the most used calculators.    This problem appears when you start using negative numbers.    For example in the Bing and Google calculator, Maxima, Wolfram Alpha and Microsoft Excel the modulo operator gives the next results:  -25 mod 4 = 3  -25 mod -4 = -1  25 mod -4 = -3    on the Windows calculator the results came in like this:  -25 mod 4 = -1  -25 mod -4 = -1  25 mod -4 = 1    As you can see the calculation is performed different. Is it wrong? Well, that's is difficult to answer. But given this [article](https://en.wikipedia.org/wiki/Modulo_operation) in the Wikipedia, a lot of the programming languages take que second approach, meanwhile the math applications use the first approach.    Given that the calculator is mainly used to do math and not programming (although it has a programmer mode) I suggest that this change is needed and make it behave like a calculator.    I also sent in the past some [feedback]() to the feedback-hub, but I did not put a lot of information.    **Expected behavior**  We should align scientific and programmatic applications of mod in their respective modes.    >Note: A team member edited this comment for clarity on expected behavior	aghus	null	null	null	null	null	null	
2019-03-06 21:17:04.0	2019-03-06 21:28:43.0	2020-12-03 12:01:09.0	closed	[won't fix]	5	112	Error operation	https://api.github.com/repos/microsoft/calculator/issues/112	https://github.com/microsoft/calculator/issues/112	The operation 8800-(3816*2) result 7632. It´s bad.  	darmfreak	null	null	null	null	null	null	
2019-03-06 21:25:51.0	2019-03-07 00:32:53.0	2020-12-03 12:01:08.0	closed	[won't fix]	26	113	Linux Build	https://api.github.com/repos/microsoft/calculator/issues/113	https://github.com/microsoft/calculator/issues/113	**Problem Statement**  To increase adoption within other operating systems and add more contributors from other developer communities, Microsoft Calculator should be able to be built for Linux.    **Goals**  This can minimally be an instruction for Linux developers to compile the code, or it can include actual builds and additions to repositories.	ajbogh	null	null	null	null	null	null	
2019-03-06 21:28:08.0	null	2021-08-02 09:02:59.0	open	[help wanted, Enhancement, Pri: 2, needs spec]	20	114	Don't clear input when switching modes	https://api.github.com/repos/microsoft/calculator/issues/114	https://github.com/microsoft/calculator/issues/114	<!--    See https://github.com/Microsoft/calculator/blob/master/docs/NewFeatureProcess.md for  suggestions on how to write a good feature pitch. Just want to submit an idea quickly? Try Feedback  Hub instead: https://insider.windows.com/en-us/fb/?contextid=130    -->    **Problem Statement**  Often I need to use functions from both programmer and scientific modes in the same calculation, but if I switch modes it loses my input. When the input is representable in both modes there is no reason to clear it.    **Evidence or User Insights**  No other calculator does this, and there's no need for the input to be cleared. There's a button to clear the input.    **Proposal**  Preserve the value when it is within the domain of the target mode, otherwise show an error in the display area.    **Goals**  Remove the annoyance of losing the value when you switch modes.    **Non-Goals**  Settle on a unified representation of values such that separate "modes" are not even necessary.  	Diggsey	null	null	null	null	null	null	
2019-03-06 22:08:48.0	2019-06-26 00:59:02.0	2020-12-03 12:01:07.0	closed	[Pri: 3, Area: User Experience, duplicate]	4	115	Right Click > Copy injecting extraneous null bytes	https://api.github.com/repos/microsoft/calculator/issues/115	https://github.com/microsoft/calculator/issues/115	**Describe the bug**  Right click Copy in Programmer mode injects bad characters    **Steps To Reproduce**  1. Go to progrmamer mode  2. Type in a hex value for the sake of it  3. Right click the "HEX" number and choose copy  ![image](https://user-images.githubusercontent.com/1838013/53916509-53cc0c00-4030-11e9-8601-1c3b99085677.png)    4. Paste into a document into a hex editor or anything you can see the underlying bytes afterwards like this hex editor  ![image](https://user-images.githubusercontent.com/1838013/53916568-6d6d5380-4030-11e9-84aa-3902557fb01e.png)      Bam it injected a leading and trailing null.  If you right click copy the big number display, it's fine.    These invisible bytes are quite a pita as text editors don't display them and GCC really doesn't like seeing them when parsing a number assignment heh.    **Expected behavior**  Pasted with no extra bytes    **Device and Application Information (please complete the following information):**   - OS Build: 17763.316   - Architecture: x64   - Application Version: 10.1812.10048.0  	marekr	null	null	null	null	null	null	
2019-03-06 22:13:44.0	null	2021-08-02 09:03:03.0	open	[help wanted, Enhancement, Pri: 2, needs spec]	7	116	Support floating point when in all radices in Programmer view (dec, octal, hex, bin)	https://api.github.com/repos/microsoft/calculator/issues/116	https://github.com/microsoft/calculator/issues/116	**Problem Statement:** Programmer mode does not support IEEE floating point data types as commonly used in programming languages. This limits the applicability of the calculator tool for anyone attempting to debug/investigate/test/perform floating point math using calculator.  **Evidence or User Insights:** Looking at the source code of this very project reveals floats are very commonly used by the target user audience of the mode (programmers).  **Proposal:** Add IEEE 754 standard binary float types (32 and 64 bit at minimum 16, 128, 256 bit and IEEE 754 decimal as a stretch) to the existing int data type list.  **Goals:** The Calculator app be able to perform the full set of operations included in the programmer mode on the proposed IEEE 754 floating point types in the same fashion the various integer types are supported.  **Non-Goals:** Non-IEEE standard floating point implementations such as float 8, float 24, or non standard variations of the primary float types are not part of the proposal.  **Low-Fidelity Concept:**  ![image](https://user-images.githubusercontent.com/343550/53926072-268f5600-4050-11e9-834b-09c04d6b4e43.png)    > A team member has edited this comment to update the pitch based on discussion below.	lwalkera	null	null	null	null	null	null	
2019-03-06 22:14:57.0	2019-03-06 22:15:34.0	2020-12-03 12:01:06.0	closed	[won't fix]	4	117	Make gathering the calculator version easier	https://api.github.com/repos/microsoft/calculator/issues/117	https://github.com/microsoft/calculator/issues/117	**Problem Statement**  The github issues ask for calculator version.  The calculator version is in the pop up side menu > About.  This About popup is attached to the side menu.  Anytime you change window focus, the side menu closes and hence popup.  Now you have to use pen and paper to write down the calculator version.    **Evidence or User Insights**  Saves trees    **Proposal**  Detach the About popup from the side menu  OR  Add the ability to right click > copy the version    **Goals**  Filling out GitHub issues.  	marekr	null	null	null	null	null	null	
2019-03-06 22:19:28.0	2019-03-06 22:51:22.0	2019-06-11 00:18:40.0	closed	[codebase quality]	0	118	Fix initialization order in CEngine	https://api.github.com/repos/microsoft/calculator/issues/118	https://github.com/microsoft/calculator/pull/118	The order of initialization of fields is required to match the one in  class member fields declaration.  	janisozaur	null	null	null	null	null	null	
2019-03-06 22:20:32.0	2019-04-23 17:30:32.0	2020-12-03 12:01:05.0	closed	[help wanted, documentation]	3	119	Mention arbitrary precision library somewhere in readme	https://api.github.com/repos/microsoft/calculator/issues/119	https://github.com/microsoft/calculator/issues/119	IMO, this is one of the most interesting parts of Windows Calculator: It contains an arbitrary-precision arithmetic library rather than using regular floating point numbers, with infinite precision for basic operations (addition, subtraction, multiplication, division), so that calculations never lose precision. https://blogs.msdn.microsoft.com/oldnewthing/20040525-00/?p=39193    This would be great to mention in the readme somewhere... I'm not sure where though.    Of course, there's other big integer libraries these days, but it's still very interesting historical code. Looks like it's this header: https://github.com/Microsoft/calculator/blob/master/src/CalcManager/Ratpack/ratpak.h plus the files in that directory.	Daniel15	null	null	null	null	null	null	
2019-03-06 22:21:21.0	2019-05-10 07:44:30.0	2020-12-03 12:01:04.0	closed	[documentation]	10	120	Define 'Whimsical' terminology	https://api.github.com/repos/microsoft/calculator/issues/120	https://github.com/microsoft/calculator/issues/120	It's hard to tell from comments or available documentation what the term 'Whimsical' means as it relates to the code base/math operations. This makes the code base hard to work with for newcomers (like myself) and honestly a bit unsettling at first glance. 	JustinKaffenberger	null	null	null	null	null	null	
2019-03-06 22:22:38.0	2019-03-07 00:44:29.0	2021-01-12 18:08:12.0	closed	[codebase quality]	2	121	Add explicit [[fallthrough]] attribute	https://api.github.com/repos/microsoft/calculator/issues/121	https://github.com/microsoft/calculator/pull/121	Instead of relying on comment, have the C++17's attribute ensure fallthrough case is recognized.	janisozaur	null	null	null	null	null	null	
2019-03-06 22:30:44.0	2019-04-09 21:12:29.0	2020-12-03 12:01:03.0	closed	[Pri: 3, fixed]	2	122	Invalid check of m_precedenceOpCount	https://api.github.com/repos/microsoft/calculator/issues/122	https://github.com/microsoft/calculator/issues/122	https://github.com/Microsoft/calculator/blob/1eb717f336bae8b35281bbb27571748d458d862e/src/CalcManager/CEngine/scicomm.cpp#L515    https://github.com/Microsoft/calculator/blob/1eb717f336bae8b35281bbb27571748d458d862e/src/CalcManager/Header%20Files/CalcEngine.h#L115    `m_precedenceOpCount` is of unsigned type `size_t`, yet it is tested for being larger than 0.	janisozaur	null	null	null	null	null	null	
2019-03-06 22:38:26.0	null	2021-08-02 09:03:07.0	open	[help wanted, Enhancement, Pri: 2, needs spec]	8	123	Tab for constant values in scientific calculator	https://api.github.com/repos/microsoft/calculator/issues/123	https://github.com/microsoft/calculator/issues/123	**Problem Statement**  Time consuming to solve mathematical/scientific calculations while being limited to numbers only.    **Proposal**  Add a constant tab where users could import constant values for their mathematical/scientific calculations.     **Goal**  - Button for each constant with the name of the constant in **bold** and the value beneath the constants name in normal text.  - A search bar for faster navigation than using only the scroll bar.	ghost	null	null	null	null	null	null	
2019-03-06 22:45:00.0	2019-03-07 00:47:04.0	2021-01-12 18:08:10.0	closed	[codebase quality]	1	124	Remove unreferenced variables from the code	https://api.github.com/repos/microsoft/calculator/issues/124	https://github.com/microsoft/calculator/pull/124	Removing unreferenced variables from the code.	janisozaur	null	null	null	null	null	null	
2019-03-06 22:49:47.0	2019-03-07 17:45:51.0	2021-01-12 18:08:07.0	closed	[codebase quality]	0	125	Catch polymorphic types by const-ref	https://api.github.com/repos/microsoft/calculator/issues/125	https://github.com/microsoft/calculator/pull/125		janisozaur	null	null	null	null	null	null	
2019-03-06 22:58:07.0	2019-03-07 17:24:35.0	2019-06-11 00:19:58.0	closed	[Enhancement]	1	126	Modify how default units are selected for conversions	https://api.github.com/repos/microsoft/calculator/issues/126	https://github.com/microsoft/calculator/pull/126	## Fixes #.  Improve how the Calculator selects the default units used for conversions.    ### Description of the changes:  - remove GetRegion() and UKSource/USSource/Source  - include all countries using US Customary units  - separate how we compute if the current country uses `US Customary units` and `Fahrenheit` (not part of the definition and used by more countries)  - update the value of `Volume_TeaspoonUS` and `Volume_TablespoonUS` with more precise values.    ### How changes were validated:  - Tested in French, US, UK and Liberian  	rudyhuyn	null	null	null	null	null	null	
2019-03-06 23:01:53.0	2019-03-06 23:08:07.0	2020-12-03 12:01:02.0	closed	[won't fix]	2	127	Fix alignment of buttons	https://api.github.com/repos/microsoft/calculator/issues/127	https://github.com/microsoft/calculator/issues/127	![image](https://user-images.githubusercontent.com/1809172/53920052-e1cde400-407c-11e9-936e-a744643b2429.png)    Steps to reproduce:   - Resize window horizontally until buttons are not aligned correctly	Trojaner	null	null	null	null	null	null	
2019-03-06 23:04:44.0	null	2021-08-02 09:03:10.0	open	[help wanted, Enhancement, Pri: 2, needs spec]	13	128	Support Reverse Polish Notation (RPN)	https://api.github.com/repos/microsoft/calculator/issues/128	https://github.com/microsoft/calculator/issues/128	<!--    See https://github.com/Microsoft/calculator/blob/master/docs/NewFeatureProcess.md for  suggestions on how to write a good feature pitch. Just want to submit an idea quickly? Try Feedback  Hub instead: https://insider.windows.com/en-us/fb/?contextid=130    -->    **Problem Statement**  <!-- What problem are we trying to solve? Who’s the target audience? Is there a customer need or  pain point we need to remedy? Is there a business goal or metric we are trying to improve? Do we  have a hypothesis we want to prove or disprove? -->    [Reverse Polish Notation / RPN / Postfix](https://en.wikipedia.org/wiki/Reverse_Polish_notation) mode is an alternate calculator entry mode that is very powerful (leveraging a stack does this!) and should be simple enough to implement.    This behaviour can be seen in physical HP scientific calculators, or the `calc` mode in Emacs.    ![image](https://user-images.githubusercontent.com/165937/53919705-ad780a80-401f-11e9-854f-a907c74b07ab.png)      **Evidence or User Insights**  <!-- Why should we do this? Potential sources of data: Feedback Hub, other GitHub issues, other  anecdotes from listening to customers in person or online, request from another team, telemetry  data, user research, market or competitive research -->    It's a simple addition with minimal overhead that would please some potential users that right now need to seek other solutions.    **Goals**  <!-- What you want to accomplish with this feature. Typical examples include  “User Can *perform some task*” -->    Users can toggle an RPN mode of entry  **Low-Fidelity Concept**  <!-- Show as much of the experience as needed to explain the idea. This can be as simple as a  napkin drawing but can also be a code prototype, a PowerPoint walkthrough, or a design  comp. -->    Simple psuedocode:    ```python  #! python3    # Or a function list, or something to check if input is "function" or "input"  functionMap = {       "+": lambda x, y: x + y,      # ....      "mod": lambda x, y: x % y  }    stack = []  while True:      userInput = getInput()      # If it's not a function, add it to the stack      if userInput not in functionMap.keys():          stack.append(userInput)      else:          # Evaluate the last two items on the stack.          # In real usage, the last stack item is often implicit, eg,           # 27 [enter] 3 /           # rather than          # 27 [enter] 3 [enter] /          b = stack.pop()          a = stack.pop()          stack.append(functionMap[userInput](a, b))  ```	tigerhawkvok	null	null	null	null	null	null	
2019-03-06 23:14:50.0	2019-03-07 15:33:23.0	2019-06-11 00:20:29.0	closed	[build]	0	129	updating nuget.org source to point to V3	https://api.github.com/repos/microsoft/calculator/issues/129	https://github.com/microsoft/calculator/pull/129	V2 is deprecated. Updating the config to use V3.  See https://docs.microsoft.com/en-us/nuget/faqs/nuget-faq#what-is-the-api-endpoint-for-nugetorg	karann-msft	null	null	null	null	null	null	
2019-03-06 23:32:48.0	2019-03-07 00:15:55.0	2021-06-02 00:00:12.0	closed	[won't fix]	18	130	Windows Calculator does not work on gnu/linux	https://api.github.com/repos/microsoft/calculator/issues/130	https://github.com/microsoft/calculator/issues/130	**Describe the bug**  When I try to run the calculator on gnu/linux it does not work.    **Steps To Reproduce**  1. open a terminal  2. compile source code somehow  3. chmod +x ./build/calculator.exe  4. ./build/calculator.exe  5. Error: bash: ./calculator.exe: cannot execute binary file: Exec format error    **Expected behavior**  ![milk](https://github.com/Microsoft/calculator/raw/master/docs/Images/CalculatorScreenshot.png)  **Screenshots**  ![screenshot from 2019-03-06 20-25-53](https://user-images.githubusercontent.com/43121549/53921127-24c49300-404e-11e9-9b33-62f615d9e692.png)    **Device and Application Information (please complete the following information):**   - OS Build: Fedora 29   - Architecture: x86_64  -  Application Version: 10.1812.10048.0    <!--Run the following commands in Powershell and copy/paste the output.  " - OS Build: $([Environment]::OSVersion.Version)"  " - Architecture: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Architecture)"  " - Application Version: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Version)"  -->    **Additional context**  i dont use arch btw	ghost	null	null	null	null	null	null	
2019-03-07 01:46:52.0	2019-03-07 02:47:28.0	2019-06-11 00:20:43.0	closed	[documentation]	1	131	Fix smart quotes	https://api.github.com/repos/microsoft/calculator/issues/131	https://github.com/microsoft/calculator/pull/131	### Description of the changes:  - Fixes smart quotes    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - No validation	jsoref	null	null	null	null	null	null	
2019-03-07 01:46:57.0	2019-03-07 17:47:43.0	2019-03-07 18:31:35.0	closed	[]	3	132	Missing periods.	https://api.github.com/repos/microsoft/calculator/issues/132	https://github.com/microsoft/calculator/pull/132	Some comment formatting inconsistency.    ## Fixes #.    Added missing periods.    	NachoNav	null	null	null	null	null	null	
2019-03-07 01:56:05.0	2019-03-07 02:05:05.0	2020-12-03 12:01:01.0	closed	[won't fix]	3	133	Can Gaussian Blur libraries provide open source for Android?	https://api.github.com/repos/microsoft/calculator/issues/133	https://github.com/microsoft/calculator/issues/133	<!--    See https://github.com/Microsoft/calculator/blob/master/docs/NewFeatureProcess.md for  suggestions on how to write a good feature pitch. Just want to submit an idea quickly? Try Feedback  Hub instead: https://insider.windows.com/en-us/fb/?contextid=130    -->    **Problem Statement**  <!-- What problem are we trying to solve? Who’s the target audience? Is there a customer need or  pain point we need to remedy? Is there a business goal or metric we are trying to improve? Do we  have a hypothesis we want to prove or disprove? -->    **Evidence or User Insights**  <!-- Why should we do this? Potential sources of data: Feedback Hub, other GitHub issues, other  anecdotes from listening to customers in person or online, request from another team, telemetry  data, user research, market or competitive research -->    **Proposal**  <!-- How will the solution/feature help us solve the problem? How will it meet the target  audience’s needs? If there are business goals or metrics, how does this improve them? -->    **Goals**  <!-- What you want to accomplish with this feature. Typical examples include  “User Can *perform some task*” -->    **Non-Goals**  <!-- Things we are explicitly not doing or supporting or that are out of scope, including reasons  why. -->    **Low-Fidelity Concept**  <!-- Show as much of the experience as needed to explain the idea. This can be as simple as a  napkin drawing but can also be a code prototype, a PowerPoint walkthrough, or a design  comp. -->	mcxinyu	null	null	null	null	null	null	
2019-03-07 02:14:14.0	2019-03-07 18:02:45.0	2019-03-08 03:15:49.0	closed	[]	0	134	HTTPS link to editorconfig.org	https://api.github.com/repos/microsoft/calculator/issues/134	https://github.com/microsoft/calculator/pull/134	### Description of the changes:  changed http://editorconfig.org to https://editorconfig.org in `.editorconfig`    ### How changes were validated:  Tested https://editorconfig.org	coliff	null	null	null	null	null	null	
2019-03-07 02:18:17.0	2019-03-07 18:27:14.0	2019-03-07 18:51:13.0	closed	[]	3	135	Spelling	https://api.github.com/repos/microsoft/calculator/issues/135	https://github.com/microsoft/calculator/pull/135	### Description of the changes:  - Fixes spelling    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - No validation	jsoref	null	null	null	null	null	null	
2019-03-07 02:22:06.0	2019-03-07 18:35:56.0	2019-03-07 18:35:56.0	closed	[]	4	136	Fixed Grammer	https://api.github.com/repos/microsoft/calculator/issues/136	https://github.com/microsoft/calculator/pull/136	## Fixes #.  Fixed some grammatical errors on README.md, ApplicationArchitecture.md, ManuelTests.md, NewFeatureProcess.md, Roadmap.md    ### Description of the changes:  - Pretty self-explanatory -- you could view the grammatical changes that make the sentence flow better for each change.    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - I proofread all the changes I made 4 times.  	logiti	null	null	null	null	null	null	
2019-03-07 02:27:38.0	2019-03-07 16:56:26.0	2019-03-07 18:07:03.0	closed	[]	1	137	https	https://api.github.com/repos/microsoft/calculator/issues/137	https://github.com/microsoft/calculator/pull/137	### Description of the changes:  - switching http: urls to https:    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - I've confirmed that the domains support https and for the non microsoft forwarder I confirmed that the pages exist	jsoref	null	null	null	null	null	null	
2019-03-07 03:00:49.0	2021-01-20 21:21:28.0	2021-03-02 00:00:06.0	closed	[Enhancement, Pri: 2]	56	138	Improve clarity of math expressions in history for Standard Calculator	https://api.github.com/repos/microsoft/calculator/issues/138	https://github.com/microsoft/calculator/issues/138	<!--Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.-->    **Describe the bug**  Operators precedence in standard mode seems wrong, but works correctly in scientific mode.    **Steps To Reproduce**  1. Use standard mode.  2. Type: <kbd>7</kbd><kbd>5</kbd><kbd>×</kbd><kbd>0</kbd><kbd>.</kbd><kbd>3</kbd><kbd>+</kbd><kbd>6</kbd><kbd>0</kbd><kbd>×</kbd><kbd>0</kbd><kbd>.</kbd><kbd>7</kbd> (which equals to `75*0.3 + 60*0.7`)  3. Press <kbd>Enter</kbd>  4. Now you will get the wrong result.  5. Switch to scientific mode.  6. Type the same expression above and submit it.  7. Now you can get the correct result.    **Expected behavior**  `75*0.3 + 60*0.7` should be `64.5`. However, the calculator will show the wrong result in standard mode.    **Screenshots**  Standard mode:  ![default](https://user-images.githubusercontent.com/17216317/53929193-e53a8d00-40c7-11e9-8c7e-cf39f76c8906.png)    Scientific mode:  ![default](https://user-images.githubusercontent.com/17216317/53929208-f1264f00-40c7-11e9-94bf-fcaf818d06ce.png)      **Device and Application Information (please complete the following information):**   - OS Build: Windows 10 1803 build 17134.590   - Architecture: x64   - Application Version: 10.1811.3241.0    <!--Run the following commands in Powershell and copy/paste the output.  " - OS Build: $([Environment]::OSVersion.Version)"  " - Architecture: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Architecture)"  " - Application Version: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Version)"  -->    **Possible solution (additional)**  According to the disscusion of this issue, the calculation is expected. The bug is of the "History Panel". Some folks advised to add parens for expressions to be not confusing.  	g-plane	null	null	null	null	null	null	
2019-03-07 03:22:30.0	2019-04-02 00:13:15.0	2020-12-03 12:01:00.0	closed	[Enhancement]	4	139	Support multiple editable operations with instant results that can be referenced to each other.	https://api.github.com/repos/microsoft/calculator/issues/139	https://github.com/microsoft/calculator/issues/139	It would be useful if there was a way to have multiple operations and their result in their own editable inputs. Also let them be referenced to each other. When one of them changes, the result is updated and any dependency.    As you can see in this image:    ![chrome_2019-03-06_21-20-30](https://user-images.githubusercontent.com/206498/53930130-c8657180-4055-11e9-8897-70a78bbbb9c8.jpg)    This calculator can be found here for testing purposes: http://calculator.merkoba.com  And the git repo: https://github.com/Merkoba/Calculator  	madprops	null	null	null	null	null	null	
2019-03-07 04:08:26.0	2019-04-03 13:45:48.0	2020-12-03 12:00:59.0	closed	[documentation]	7	140	Readme: mention date calculation capability	https://api.github.com/repos/microsoft/calculator/issues/140	https://github.com/microsoft/calculator/issues/140	Hi,    First, thank you for making Calculator UWP open source.    Problem: Calculator UWP offers date calculation feature, but this fact is not presented in the repo readme. I'm thinking this may have been an oversight.    Proposed solution: add an explanatory text about date calculation feature in Calculator (Alt+number row 4).    Environment: any Windows 10 release (including 19H1 and 20H1 WIP builds).    STR (steps to reproduce): none.    Thanks.	josephsl	null	null	null	null	null	null	
2019-03-07 04:14:14.0	2019-03-09 06:41:16.0	2020-12-03 12:00:58.0	closed	[Area: World-Readiness, external]	4	141	Multiple issues in German translation (de-DE/Resources.resw)	https://api.github.com/repos/microsoft/calculator/issues/141	https://github.com/microsoft/calculator/issues/141	There are a number of translation issues in the German resource file  https://github.com/Microsoft/calculator/blob/master/src/Calculator/Resources/de-DE/Resources.resw  as follows:    **(1)**    ```    <data name="andButton.[using:Windows.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">      <value>And</value>      <comment>Screen reader prompt for the Calculator And button</comment>    </data>    <data name="orButton.[using:Windows.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">      <value>Or</value>      <comment>Screen reader prompt for the Calculator Or button</comment>    </data>    <data name="notButton.[using:Windows.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">      <value>Not</value>      <comment>Screen reader prompt for the Calculator Not button</comment>    </data>  ```    - should use UND, ODER, NICHT    similar to:    ```    </data>    <data name="xorButton.[using:Windows.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">      <value>Exklusives ODER</value>      <comment>Screen reader prompt for the Calculator XOR button</comment>  </data>  ```      **(2)**    ```    <data name="rolButton.[using:Windows.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">      <value>Nach links drehen</value>      <comment>Screen reader prompt for the Calculator ROL button</comment>    </data>    <data name="rorButton.[using:Windows.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">      <value>Nach rechts drehen</value>      <comment>Screen reader prompt for the Calculator ROR button</comment>  </data>  ```    - should use "schieben" or "verschieben" instead of "drehen"  - see also: https://de.wikipedia.org/wiki/Maschinensprache#Kategorisierung_der_Befehle    **(3)**    ```    <data name="equalButton.[using:Windows.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">      <value>Gleich</value>      <comment>Screen reader prompt for the invert button on the scientific operator keypad</comment>  </data>  ```    - incorrect comment text; should not be "invert" but "equal" for equalButton.[]    **(4)**    ```    <data name="tanButton.[using:Windows.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">      <value>Tagens</value>      <comment>Screen reader prompt for the Calculator tan button  on the scientific operator keypad</comment>  </data>  ```    - syntax error (missing "n"); value should be "Tangens"  - see for example the correct spelling:  ```    <data name="tanhButton.[using:Windows.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">      <value>Hyperbolischer Tangens</value>      <comment>Screen reader prompt for the Calculator tanh button  on the scientific operator keypad</comment>  </data>  ```  - double space in comment text (affects other comments as well)    **(5)**    ```    <data name="xpower2Button.[using:Windows.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">      <value>Quadrat</value>      <comment>Screen reader prompt for the x squared on the scientific operator keypad. </comment>  </data>  ```    - should be "Quadrieren"  - see also: https://de.wikipedia.org/wiki/Quadrat_(Mathematik)  - see also: https://de.wiktionary.org/wiki/quadrieren     **(6)**    ```    <data name="xpower3Button.[using:Windows.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">      <value>Würfel</value>      <comment>Screen reader prompt for the x cubed on the scientific operator keypad. </comment>  </data>  ```    - should be "Hoch 3" oder "Zur 3-ten Potenz"  - see also: https://de.wikipedia.org/wiki/Potenz_(Mathematik)#Nat%C3%BCrliche_Exponenten    **(7)**    ```    <data name="invsinButton.[using:Windows.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">      <value>Arcussinus</value>      <comment>Screen reader prompt for the inverted sin on the scientific operator keypad.</comment>    </data>    <data name="invcosButton.[using:Windows.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">      <value>Arcuscosinus</value>      <comment>Screen reader prompt for the inverted cos on the scientific operator keypad.</comment>    </data>    <data name="invtanButton.[using:Windows.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">      <value>Arcustangens</value>      <comment>Screen reader prompt for the inverted tan on the scientific operator keypad.</comment>  </data>  ```    - should be "Arkussinus" and "Arkuskosinus" and "Arkustangens"  - see also: https://de.wikipedia.org/wiki/Arkussinus_und_Arkuskosinus  - see also: https://de.wikipedia.org/wiki/Arkustangens_und_Arkuskotangens    **(8)**    ```    <data name="invsinhButton.[using:Windows.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">      <value>Hyperbolischer Arcussinus</value>      <comment>Screen reader prompt for the inverted sinh on the scientific operator keypad.</comment>    </data>    <data name="invcoshButton.[using:Windows.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">      <value>Hyperbolischer Arcuscosinus</value>      <comment>Screen reader prompt for the inverted cosh on the scientific operator keypad.</comment>    </data>    <data name="invtanhButton.[using:Windows.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">      <value>Hyperbolischer Arcustangens</value>      <comment>Screen reader prompt for the inverted tanh on the scientific operator keypad.</comment>  </data>  ```    - should be "Sinus hyperbolicus", "Kosinus hyperbolicus" und "Tangens hyperbolicus"  - see also: https://de.wikipedia.org/wiki/Hyperbelfunktion    **(9)**    ```    <data name="powerButton.[using:Windows.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">      <value>X-Potenz</value>      <comment>Screen reader prompt for x power y button on the scientific operator keypad. </comment>  </data>  ```    - could be "Hoch X" oder "X-te Potenz" oder "Zur X-ten Potenz"  - see also: https://de.wikipedia.org/wiki/Potenz_(Mathematik)    **(10)**    ```    <data name="UnitAbbreviation_Carat" xml:space="preserve">      <value>cd</value>      <comment>An abbreviation for a measurement unit of weight</comment>  </data>  ```    - should use "ct" or "Kt" instead of "cd"  - in Germany the more common abbreviation for Karat is "Kt"; the abbreviation "ct" should be used only in Switzerland and Austria  - the resource file should be split into "de-DE", "de-AT" and "de-CH" to capture such details  - see also https://de.wikipedia.org/wiki/Metrisches_Karat    	ferzkopp	null	null	null	null	null	null	
2019-03-07 05:28:15.0	2019-03-09 07:15:29.0	2020-12-03 12:00:57.0	closed	[fixed, Pri: 2]	2	142	Not compiling at /W4 - multiple issues	https://api.github.com/repos/microsoft/calculator/issues/142	https://github.com/microsoft/calculator/issues/142	<!--Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.-->    **Describe the bug**  <!--A clear and concise description of what the bug is.-->  calculator compiles at warning level 3. I can understand that nobody other than me wants to compile at warning level all, but compiling at warning level 4 is a good idea.    This produces a bunch of warnings, most of which involve sketchy code that probably isn't buggy (seemingly hundreds of unreferenced parameters/local variables), but a few of which are highly questionable. One of which is an operator== comparison between a wchar_t[] and a literal string, which is an address comparison instead of a string comparison (`warning C4130: '==': logical operation on address of string constant` in `calculator\src\calcviewmodel\common\localizationsettings.h(180)`).    Of the warnings that I don't think are bugs, but that somebody should still look at:    - Unreferenced parameters/variables  - Variable shadowing  - Lots of implicit `int` to `wchar_t` conversions around the various cstdlib string handling functions  - `CalcException` derives inaccessibly from `std::exception`, which means catching [won't work](https://stackoverflow.com/a/2569819/625687) like it presumably should  - A bunch of variables that are initialized in all reasonably possible branches, but lack a `default` `switch` case, a `NOTREACHED()` kind of macro, or some other way to shut the compiler up.    **Screenshots**  ![compare_wchar_by_addr](https://user-images.githubusercontent.com/2142308/53934204-d45e2d00-406f-11e9-80ce-e02cc1a7ff30.PNG)        **Additional context**  <!--Add any other context about the problem here.-->  	ariccio	null	null	null	null	null	null	
2019-03-07 05:48:53.0	null	2021-08-02 09:03:13.0	open	[help wanted, Enhancement, Pri: 2, needs spec]	14	143	Add support for time in date calculations	https://api.github.com/repos/microsoft/calculator/issues/143	https://github.com/microsoft/calculator/issues/143	<!--    See https://github.com/Microsoft/calculator/blob/master/docs/NewFeatureProcess.md for  suggestions on how to write a good feature pitch. Just want to submit an idea quickly? Try Feedback  Hub instead: https://insider.windows.com/en-us/fb/?contextid=130    -->    **Problem Statement**  <!-- What problem are we trying to solve? Who’s the target audience? Is there a customer need or  pain point we need to remedy? Is there a business goal or metric we are trying to improve? Do we  have a hypothesis we want to prove or disprove? -->  The date calculation feature is useful but lacks the option to include the time of day. Also, it would be nice to have a deadline countdown feature.    **Evidence or User Insights**  <!-- Why should we do this? Potential sources of data: Feedback Hub, other GitHub issues, other  anecdotes from listening to customers in person or online, request from another team, telemetry  data, user research, market or competitive research -->  Instead of going online to compute event duration or deadlines online, we can do it offline with the calculator.    **Proposal**  <!-- How will the solution/feature help us solve the problem? How will it meet the target  audience’s needs? If there are business goals or metrics, how does this improve them? -->  It will enable the computation of different forms of time difference operations.    **Goals**  <!-- What you want to accomplish with this feature. Typical examples include  “User Can *perform some task*” -->  It will help users see the exact time taken for some event until another time/date. It will also help track a countdown or deadline in some other timezone.    **Non-Goals**  <!-- Things we are explicitly not doing or supporting or that are out of scope, including reasons  why. -->    **Low-Fidelity Concept**  <!-- Show as much of the experience as needed to explain the idea. This can be as simple as a  napkin drawing but can also be a code prototype, a PowerPoint walkthrough, or a design  comp. -->  A lot of functionality is at https://www.timeanddate.com	ialhashim	null	null	null	null	null	null	
2019-03-07 07:03:05.0	2019-03-11 21:45:34.0	2019-03-11 21:45:34.0	closed	[]	5	144	Improvement of CopyPasteManager.	https://api.github.com/repos/microsoft/calculator/issues/144	https://github.com/microsoft/calculator/pull/144	- Reject expressions like '4 8 15' (the app ignored spaces and read `4815`)    - Except with the Programmer mode  - Accept 16e23 and not only 16e+23  - ignore more white spaces characters  - remove `Calculator::IsValidRegularExpression` (was buggy and limited and not used)  - Simplify the prototype of `ValidatePasteExpression` (return a bool instead of a string we don't need)  - simplify regex used by `CopyPasteManager`    ### Changes  Instead of replacing all spaces, we replace all sequences of white spaces (tab, new line, etc...) by a single blank character `u+0020` so lexemes are not merged (`14 15` -> `1415`) and trim the start/end of the string.    `     14 +      16+12 ` -> `14 + 16+12`  ### Questions    - Why do we accept `"` in digits?  - I suppose we still want to accept spaces with the Programmer mode (`100 111 110`), do we want to limit this behavior to all bases or limit it to `Binary`/`Hexa`/`Octo` bases ?    ### How changes were validated:    Unit tests all passed + manual tests.    	rudyhuyn	null	null	null	null	null	null	
2019-03-07 07:38:11.0	2019-03-11 21:44:34.0	2019-03-11 21:44:57.0	closed	[]	19	145	Reject text from clipboard when it contains a dot and the local decimal separator is not one	https://api.github.com/repos/microsoft/calculator/issues/145	https://github.com/microsoft/calculator/pull/145	The calculator accepts numbers with '.' even if the local decimal separator is different (',' in French for example).    The character will then be ignored by `StandardCalculatorViewModel::OnPaste` and will display a faulty result.    - This is import for a big part of Europe, Africa and South america where ',' is used as a decimal separator, it's probably better to reject the text pasted (copied from an US website for example, etc..) rather than display a faulty result.     - A future improvement can be to inform users than the string uses the wrong format and ask them they accept the app to automatically convert it.     ![image](https://user-images.githubusercontent.com/1226538/53939585-5c403900-4068-11e9-882a-4839272f6821.png)  _Left: current version, Right: modified version._	rudyhuyn	null	null	null	null	null	null	
2019-03-07 08:29:12.0	2019-03-09 02:12:16.0	2019-03-20 21:40:11.0	closed	[]	12	146	Fix some wording translation in german (de-DE/Resources.resw) #141	https://api.github.com/repos/microsoft/calculator/issues/146	https://github.com/microsoft/calculator/pull/146	## Fixes #.    Corrects wrong translations for german (de-DE/Resources.resw) like explained in #141    ### Description of the changes:    Some corrections in the translations which were no-brainers.    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    See links @ferzkopp provided in #141 for the correct wording.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->    	michilehr	null	null	null	null	null	null	
2019-03-07 08:55:40.0	2019-03-07 13:27:04.0	2020-12-03 12:00:56.0	closed	[won't fix]	8	147	Calculation result is wrong in standard mode	https://api.github.com/repos/microsoft/calculator/issues/147	https://github.com/microsoft/calculator/issues/147	<!--Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.-->    There is a discrepancy between *scientific* mode and *standard* mode in the calculator. More precisely, *standard* mode displays wrong results.    **Steps To Reproduce**  1. Choose either *standard* or *scientific*  2. Type `100 - 5 * 2`    **Expected behavior**  The result should be `90` because multiplication has priority over subtraction. In *scientific* mode the result is correct. In *standard* mode, the result display is `190` which is consistent with the subtraction being done before the multiplication.    **Screenshots**  ![calc](https://user-images.githubusercontent.com/5877651/53943975-a8b66380-40be-11e9-9ac1-1a0ead4494eb.png)    **Application Information:**   - Application Version: `10.1804.2492.0`    **Additional context**  This behavior is known since at least 2015.  	LenaicTerrier	null	null	null	null	null	null	
2019-03-07 09:00:06.0	2019-03-07 15:44:31.0	2020-03-31 15:48:10.0	closed	[won't fix]	17	148	Telemetry	https://api.github.com/repos/microsoft/calculator/issues/148	https://github.com/microsoft/calculator/issues/148	This project collects usage data and sends it to Microsoft. Please stop collecting MY data and remove telemetry from all your f**g Windows products.	InfoLibre	null	null	null	null	null	null	
2019-03-07 09:30:27.0	2019-03-07 19:13:41.0	2020-12-03 12:00:55.0	closed	[Enhancement]	7	150	Editable expression and live result	https://api.github.com/repos/microsoft/calculator/issues/150	https://github.com/microsoft/calculator/issues/150	The app needs an ability to edit an expression, i.e. place cursor anywhere and add something in between. With live result. Just like any Android calculator out there.	regs01	null	null	null	null	null	null	
2019-03-07 10:08:15.0	2019-03-08 01:13:09.0	2019-03-08 01:13:09.0	closed	[]	1	151	Removed duplicate zeros in Margin and Paddings	https://api.github.com/repos/microsoft/calculator/issues/151	https://github.com/microsoft/calculator/pull/151	## Fixes #.      ### Description of the changes:  Removed unuseful duplicated zeros for Margin and Paddings which they're same, like `0,0,0,0` and `0`.    ### How changes were validated:    1. As said [here](https://docs.microsoft.com/en-us/dotnet/api/system.windows.frameworkelement.margin?view=netframework-4.7.2#xaml-values) in Microsoft Docs:    > For instance, Margin="20" will be interpreted to mean a Thickness with all properties set to 20.    2. Double checked all the views manually.	MoienTajik	null	null	null	null	null	null	
2019-03-07 10:24:36.0	2019-03-08 07:58:48.0	2020-12-03 12:00:54.0	closed	[by design]	6	152	Numpad 'enter' key should always be equivalent to pressing '='	https://api.github.com/repos/microsoft/calculator/issues/152	https://github.com/microsoft/calculator/issues/152	**Describe the bug**  Sometimes, the numpad 'enter' key toggles the last pressed button, instead of pressing on '='.    **Steps To Reproduce**  In scientific view, click on one of the 'mode' buttons on the top, for example switch between degrees/radians. After that, the numpad Enter key keeps pressing on that toggle button, instead of pressing on '='. A similar thing happens with the 'HYP' toggle, or the 'F-E' toggle.    **Expected behavior**  Numpad 'enter' should always be equivalent to pressing on the '=' button.    **Device and Application Information (please complete the following information):**   - OS Build: 17763.316   - Architecture: x64   - Application Version: Calculator 10.1812.10048.0    **Additional context**  n/a  	chibicitiberiu	null	null	null	null	null	null	
2019-03-07 10:25:44.0	null	2021-08-02 09:03:23.0	open	[Enhancement, Pri: 2, needs more info]	30	153	Support both `.` and `,` as decimal separator when entering numbers	https://api.github.com/repos/microsoft/calculator/issues/153	https://github.com/microsoft/calculator/issues/153	**Problem Statement**  The Windows 7 calculator allowed users to enter both `.` and `,` as the decimal separator. This is very convenient because while certain locales uses `,` (e.g. German) as the decimal separator, it's still very common on websites, applications, etc. to use the `.` separator. Supporting both allows for flexibility when entering values.    **Evidence or User Insights**  The calculator in Windows 7 supported this.    **Proposal**  The calculator should accept both `.` and `,` as a decimal separator.    **Goals**  User can enter both `.` and `,` as a decimal separator    ---    The only tricky point I see here is how pasting numbers should be handled:    - If the separator appears multiple times it's probably safe to assume that it's a thousands separator and not a decimal separator.  - If multiple separators appear, then the last one should probably be considered the decimal separator; if that one occurs multiple times as well, best to reject the paste since it's not clear what the number is supposed to be  - If exactly one separator is present, it's ambiguous what it should mean. The Win7 behavior here is to only allow the separator of the current locale when pasting, and treating the other one as a thousands separator that should be ignored.	ThiefMaster	null	null	null	null	null	null	
2019-03-07 10:34:01.0	2019-03-07 17:07:50.0	2020-12-03 12:00:53.0	closed	[Enhancement]	4	154	Synchronization across devices	https://api.github.com/repos/microsoft/calculator/issues/154	https://github.com/microsoft/calculator/issues/154	**Use case:** It's getting dark. Bob the quantum physicist types in a real long equation that will change the World as we know it by creating a mini singularity and destroying the Earth. But Jimmy the janitor wants him out or he'll smack Bob with a broom. Bob has to go home and leave his groundbreaking(earth-shattering?) work half done, to finish it tomorrow - what a sad day to the humankind.  But! if  calculator.exe had synchronization across devices. Bob the quantum physicist could've keep typing in the deadly equation of doom while driving home from his phone and had greater than zero opportunity to end up in the lethal car crush. The day would be saved yet again by our unsung hero - Jimmy the janitor.    ###### Also it's a good excuse for M$ to sniff on users data and upload it to "the cloud" - for user connivance of course :wink: 	JAremko	null	null	null	null	null	null	
2019-03-07 10:35:55.0	2019-03-07 19:15:52.0	2020-12-03 12:00:52.0	closed	[won't fix, question]	3	155	Azure Pipeline public - yml	https://api.github.com/repos/microsoft/calculator/issues/155	https://github.com/microsoft/calculator/issues/155	**Azure Pipeline**  Could you please share the Azure Pipeline ?     **Evidence or User Insights**  This will be nice to add to reproduce fully  the build    **Proposal**  Add an azure pipeline .yaml     **Goals**  Perform builds ourselves.      	ignatandrei	null	null	null	null	null	null	
2019-03-07 11:02:22.0	2019-03-07 15:08:09.0	2019-03-07 18:30:19.0	closed	[]	2	156	Troll deterrent	https://api.github.com/repos/microsoft/calculator/issues/156	https://github.com/microsoft/calculator/pull/156	Just a Friendly reminder to the green skin vandals. :thinking: 	JAremko	null	null	null	null	null	null	
2019-03-07 11:13:16.0	null	2021-08-02 09:03:19.0	open	[help wanted, Enhancement, Pri: 2, needs spec]	10	157	Update support and keyboard documentation	https://api.github.com/repos/microsoft/calculator/issues/157	https://github.com/microsoft/calculator/issues/157	**Problem Statement**  Some users are much quicker when navigating with a keyboard, instead of the mouse. While the application has many keyboard shortcuts, some improvements could be made to improve it.    **Evidence or User Insights**    **Proposal**  Here is what I'm proposing:  1. Improve the discoverability of keyboard shortcuts. Currently, pressing the 'alt' key reveals what keys will press, which is great:  ![image](https://user-images.githubusercontent.com/5184913/53952052-8af5f800-40d8-11e9-87e5-df9f1cb62793.png)    It would be better if there was a way of displaying all the keys, including the various functions, or changing modes. For example, the F1 key (which is traditionally bound to bringing the 'help' for the application) is completely unbound; it would be useful if it showed a list of the keyboard shortcuts, or perhaps some labels near the keys similar to what happens when pressing 'Alt'.    2. Assign keys to the buttons which don't have any. For example, in the "Programmer" view, there is no key to toggle between "keypad" and "bit" modes. Also, in the "bit" mode, you can't type any number using the keyboard (you could in the old win7 calculator).    3. Extensively test keyboard navigation. Recently, I found #152 which is a pretty annoying issue for people who use the keyboard extensively.    **Goals**  Users who are more comfortable with using the keyboard can use Calculator without having to touch the mouse, and can do their work much more quickly.    **Non-Goals**    **Low-Fidelity Concept**  Here is a crudely drawn concept for proposal 1:   ![image](https://user-images.githubusercontent.com/5184913/53952667-14f29080-40da-11e9-9df7-1aa974b72421.png)    Alternatively, this is another way of implementing the proposal:  ![image](https://user-images.githubusercontent.com/5184913/53952865-a95cf300-40da-11e9-8ff2-1ac0f86d7e46.png)  	chibicitiberiu	null	null	null	null	null	null	
2019-03-07 11:37:53.0	2019-03-07 16:16:10.0	2020-08-06 15:29:49.0	closed	[]	8	158	Completely disable telemetry	https://api.github.com/repos/microsoft/calculator/issues/158	https://github.com/microsoft/calculator/pull/158	## Fixes #.      ### Description of the changes:  - improved performance by undefining SEND_TELEMETRY  -  -    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Tested the application and no apparent bugs were present  -  -    	LUC18fknU7P	null	null	null	null	null	null	
2019-03-07 11:56:43.0	2019-03-07 12:26:14.0	2019-03-07 15:03:37.0	closed	[]	1	159	Add Auto-E switch and fix standard mode	https://api.github.com/repos/microsoft/calculator/issues/159	https://github.com/microsoft/calculator/pull/159	## Fixes #.  - Add Auto-E switch to disable automatic scientific notation while F-E switch is disabled  - Fix standard mode - disable automatic scientific notation for non-scientific standard mode    ### Description of the changes:  - Added Auto-E switch in scientific mode to force disable automatic scientific notation while F-E switch is disabled  - Changed default value for automatic scientific notation in standard mode to disabled    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - manual	uhliksk	null	null	null	null	null	null	
2019-03-07 12:19:51.0	2019-03-07 20:22:12.0	2019-03-07 22:25:03.0	closed	[]	1	160	Update ManualTests.md	https://api.github.com/repos/microsoft/calculator/issues/160	https://github.com/microsoft/calculator/pull/160	I only fixed a typo	0xflotus	null	null	null	null	null	null	
2019-03-07 12:28:53.0	2019-03-08 06:46:02.0	2020-12-03 12:00:51.0	closed	[won't fix, question]	7	161	Older Releases	https://api.github.com/repos/microsoft/calculator/issues/161	https://github.com/microsoft/calculator/issues/161	It would be nice to have an OSS release of Calculator at various points in its history - perhaps the last version targeting each major Windows version.    It would certainly be nice to have a pre-UWP release anyhow :)	jamierocks	null	null	null	null	null	null	
2019-03-07 12:38:03.0	null	2021-05-26 10:03:23.0	open	[help wanted, Bug, Pri: 3, triage approved, Area: User Experience]	14	162	Pasting long decimal number results in Invalid input	https://api.github.com/repos/microsoft/calculator/issues/162	https://github.com/microsoft/calculator/issues/162	**Describe the bug**  When pasting a decimal number with more than 16 decimal digits, the calculator outputs `Invalid input`.    **Steps To Reproduce**  Paste `0.00012345678987654` into the calculator.    **Expected behavior**  The input to be accepted. If it is too long, trim it, like the Windows 7 calculator does.    **Screenshots**  ![image](https://user-images.githubusercontent.com/10546952/53957321-571dd100-40de-11e9-8ac7-248b74ef7a05.png)      **Device and Application Information (please complete the following information):**   - OS Build: 18334.1.amd64fre.19h1_release.190205-1505   - Architecture: x64   - Application Version: 10.1812.10048.0	miloush	null	null	null	null	null	null	
2019-03-07 12:56:40.0	null	2021-08-02 09:03:17.0	open	[help wanted, Enhancement, Pri: 2, needs spec]	7	163	Bring back history editing	https://api.github.com/repos/microsoft/calculator/issues/163	https://github.com/microsoft/calculator/issues/163	**Problem Statement**  Expressions in the history cannot be edited.    **Evidence or User Insights**  This is a regression from the Win32 app. Requested by #150 and part of #139. I am pretty sure it used to be in Feedback Hub too, but that seems to have been deleted now.  ![image](https://user-images.githubusercontent.com/10546952/53958250-d01e2800-40e0-11e9-90dd-3d01bf237053.png)    **Proposal**  When adding a larger number of numbers (e.g. several invoices) and a mistake is discovered, the user now has to re-enter everything again. This proposal allows them to correct the isolated error within longer expression.    **Goals**  User can fix errors and/or typos in past computations.    **Non-Goals**  This is not a symbolic evaluation proposal, surrounding history entries are not affected by edits in the current one.    **Low-Fidelity Concept**  While Win32 calculator allowed expressions in-place, adding `Edit` item to the current `Delete` item in the history context menu would do. The expression would then turn into a text box.    (An alternative yet still enabling solution would be to introduce `Copy` to clipboard on the history items. The user could then fix the expressions out of the app and paste back as new ones.)	miloush	null	null	null	null	null	null	
2019-03-07 13:01:37.0	2019-03-07 19:12:38.0	2020-12-03 12:00:50.0	closed	[won't fix]	13	164	This is not the classic desktop version of calc.exe	https://api.github.com/repos/microsoft/calculator/issues/164	https://github.com/microsoft/calculator/issues/164	This is not the classic Desktop version of **calc.exe**, but the UWP/Metro/Modern UI version from the Windows Store as provided since the availability of that store with Windows 8.0.   More specifically, this is not the fast, performant, and quickly starting version of the Windows Calculator, like it was present up until Windows 8.1/Server 2012 R2. Appropriate code commit history that would include it is missing.    The UWP version has comparatively long startup times (often longer than that of a web browser, even), and, depending on system security configuration (hint: Exploit Mitigation settings in the Windows Security Center), fails to start entirely. The old classic desktop version has no such limitations, is generally faster at all operations, and consumes less memory. It also has more interesting code to look at, because efficient use of memory and CPU cycles still mattered when it was around.    Related: #105, #161	dori4n	null	null	null	null	null	null	
2019-03-07 13:57:46.0	2019-03-09 05:40:11.0	2019-03-20 21:40:02.0	closed	[]	4	165	Fix small Dutch translation error	https://api.github.com/repos/microsoft/calculator/issues/165	https://github.com/microsoft/calculator/pull/165	## Fixes #.  Everywhere _overflow_ was neatly translated to _overloop_, except on one  oversight. This small commit fixes that.    ### Description of the changes:   * A single string    ### How changes were validated:  Not applicable  	alex3305	null	null	null	null	null	null	
2019-03-07 15:01:42.0	2019-04-07 16:54:25.0	2019-04-07 18:09:50.0	closed	[Bug, fixing approved issue]	10	166	Fix automatic scientific notation	https://api.github.com/repos/microsoft/calculator/issues/166	https://github.com/microsoft/calculator/pull/166	## Fixes #226.  - Fix automatic scientific notation while F-E switch is disabled    ### Description of the changes:  - Added Auto-E switch in scientific mode to force disable automatic scientific notation while F-E switch is disabled  - Added new hotkey "B" for Auto-E switch. Hotkey "B" was selected because is near existing "V" for F-E switch.    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - manual	uhliksk	null	null	null	null	null	null	
2019-03-07 15:03:49.0	2019-07-13 00:44:20.0	2020-12-03 12:00:49.0	closed	[Pri: 2, question]	15	167	Justify why we prefer watts over kilowatts in the UK	https://api.github.com/repos/microsoft/calculator/issues/167	https://github.com/microsoft/calculator/issues/167	See [this discussion](https://github.com/Microsoft/calculator/pull/126#discussion_r263203164) in UnitConverterDataLoader.cpp. We currently prefer to use "Watts" instead of "Kilowatts" on devices in the UK region. We don't have any remaining documentation on why this choice was made (it's been around since 2013).    We should understand why watts might be preferred over kilowatts in this region and add a comment to the code, or make the logic work like the rest of the world if we don't have a good justification.	mcooley	null	null	null	null	null	null	
2019-03-07 15:57:16.0	2019-03-07 16:24:45.0	2020-12-03 12:00:49.0	closed	[won't fix]	5	168	Telemetry	https://api.github.com/repos/microsoft/calculator/issues/168	https://github.com/microsoft/calculator/issues/168	Could you please remove the telemetry from your software and stop collecting our private data ?  Could you add in your [Code of Conduct](https://github.com/Microsoft/calculator/blob/master/CODE_OF_CONDUCT.md) not to collect private data of users ?	InfoLibre	null	null	null	null	null	null	
2019-03-07 16:24:01.0	2019-03-07 17:21:22.0	2020-03-31 15:48:18.0	closed	[won't fix]	7	169	Make the repository even more inclusive by removing 'master' as a branch name and default	https://api.github.com/repos/microsoft/calculator/issues/169	https://github.com/microsoft/calculator/issues/169	Note: This can only be done by someone with administrative rights in the repository.    **Problem Statement**    The term 'master' has negative connotations for many members of society and makes repositories less inclusive.    **Evidence or User Insights**    See https://motherboard.vice.com/en_us/article/8x7akv/masterslave-terminology-was-removed-from-python-programming-language.    **Proposal**    See https://github.com/retrosight/learning/blob/primary/a-more-inclusive-repository.md for instructions on how to change the default repository to another name - `primary` seems to be a good choice.    There are 11 references the the term `master` in the repo source itself: in Markdown (documentation) files, `/.gitignore` and `/build/pipelines/azure-pipelines.ci.yaml`.    **Goals**    Make the repository more inclusive, like has been done with the Code of Conduct.    **Non-Goals**    Not Applicable    **Low-Fidelity Concept**    Not applicable	retrosight	null	null	null	null	null	null	
2019-03-07 17:34:52.0	null	2021-08-02 09:03:25.0	open	[help wanted, Enhancement, Pri: 2, needs spec]	14	170	Implement a user-friendly view for fractions and powers	https://api.github.com/repos/microsoft/calculator/issues/170	https://github.com/microsoft/calculator/issues/170	**Problem Statement**  Making more intuitive for the user to deal with complex calculation    **Evidence or User Insights**  Because scientific calculator isn't meant for simple calculations.    **Proposal**  Photo talks better than words  ![image](https://user-images.githubusercontent.com/43090263/53976573-9b719700-4107-11e9-9f26-af6088eaf88d.png)    **Goals**  Making more intuitive for the user to deal with complex calculation    **Non-Goals**  None    **Low-Fidelity Concept**  I have no idea  	MarcAnt01	null	null	null	null	null	null	
2019-03-07 17:47:07.0	2019-03-08 21:46:36.0	2019-03-08 21:46:37.0	closed	[]	2	171	fixed typo	https://api.github.com/repos/microsoft/calculator/issues/171	https://github.com/microsoft/calculator/pull/171	## Fixes #.      ### Description of the changes:  -  -  -    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  -  -  -    	marcellogianola	null	null	null	null	null	null	
2019-03-07 17:55:08.0	2019-04-10 00:48:31.0	2020-12-03 12:00:47.0	closed	[Enhancement]	3	172	Fast unit switch in converter	https://api.github.com/repos/microsoft/calculator/issues/172	https://github.com/microsoft/calculator/issues/172	**Problem Statement**  When using converter mode to convert from unit A to unit B, it is quite complicated to switch to the inverse conversion, i.e. from B to A.    **Proposal**  Add a quick switch button to flip the from- and to-units, including the current numerical values.  	dlichtistw	null	null	null	null	null	null	
2019-03-07 18:01:11.0	2019-03-08 06:10:21.0	2020-12-03 12:00:46.0	closed	[fixed]	2	173	Mismatched operator new[] and delete	https://api.github.com/repos/microsoft/calculator/issues/173	https://github.com/microsoft/calculator/issues/173	**Describe the bug**  <!--A clear and concise description of what the bug is.-->  [`wchar_t* temp`](https://github.com/Microsoft/calculator/blob/057401f5f2b4bb1ea143da02c773ac18d1bb9a2e/src/CalcViewModel/StandardCalculatorViewModel.cpp#L480) is [initialized with `new[]`, but deleted with `delete`](https://docs.microsoft.com/en-us/visualstudio/code-quality/c6283?view=vs-2017).    **Steps To Reproduce**  I just enabled code analysis. C'mon, Microsoft, it's your own tool!    **Additional context**  	ariccio	null	null	null	null	null	null	
2019-03-07 18:07:33.0	2019-03-20 21:27:04.0	2020-12-03 12:00:45.0	closed	[Pri: 3, won't fix]	3	174	ModeBasic is compared against twice	https://api.github.com/repos/microsoft/calculator/issues/174	https://github.com/microsoft/calculator/issues/174	<!--Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.-->  [`cmdenum`](https://github.com/Microsoft/calculator/blob/057401f5f2b4bb1ea143da02c773ac18d1bb9a2e/src/CalcViewModel/StandardCalculatorViewModel.cpp#L556) is [compared against `Command::ModeBasic` twice](https://docs.microsoft.com/en-us/visualstudio/code-quality/c6287?view=vs-2017). Probably low priority.    **Describe the bug**  I can't tell what you want to be an operator, so I'm not sure if something was missed where `ModeBasic` was used twice.    **Steps To Reproduce**  I just enabled code analysis. C'mon, Microsoft, it's your own tool!    	ariccio	null	null	null	null	null	null	
2019-03-07 18:17:25.0	2019-04-19 00:05:45.0	2020-12-03 12:00:44.0	closed	[help wanted, Pri: 3, fixed]	1	175	Test code never executes - ill defined loop	https://api.github.com/repos/microsoft/calculator/issues/175	https://github.com/microsoft/calculator/issues/175	<!--Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.-->    [`NumbersAndOperatorsEnum::Add` is never `<= NumbersAndOperatorsEnum::None`](https://github.com/Microsoft/calculator/blob/057401f5f2b4bb1ea143da02c773ac18d1bb9a2e/src/CalculatorUnitTests/UnitConverterViewModelUnitTests.cpp#L500), [so the test never executes](https://docs.microsoft.com/en-us/visualstudio/code-quality/c6294).    **Describe the bug**  Someone wanted to write some unit tests, and idk, maybe they thought that `CM::Command::CommandNULL` was `>=NumbersAndOperatorsEnum::Add` because it was [lower on the screen](https://github.com/Microsoft/calculator/blob/057401f5f2b4bb1ea143da02c773ac18d1bb9a2e/src/CalcViewModel/Common/CalculatorButtonUser.h#L63)... but, alas, it's not:  ![enum_add](https://user-images.githubusercontent.com/2142308/53979231-3bfd9200-40db-11e9-862a-14587b09ea9d.PNG)  ![enum_none](https://user-images.githubusercontent.com/2142308/53979236-3e5fec00-40db-11e9-9e2a-d560f9b28b17.PNG)      **Steps To Reproduce**  <!--Steps to reproduce the behavior:  1. Go to '...'  2. Click on '....'  3. Scroll down to '....'  4. See error-->    I just enabled code analysis. C'mon, Microsoft, it's your own tool!  	ariccio	null	null	null	null	null	null	
2019-03-07 18:33:53.0	2019-03-16 00:45:50.0	2019-03-16 00:45:50.0	closed	[fixing approved issue]	1	176	Added support for pasting of monetary values	https://api.github.com/repos/microsoft/calculator/issues/176	https://github.com/microsoft/calculator/pull/176	## Fixes #52.  Fixes #52     ### Description of the changes:  Added support for pasting of prefix currency symbols supported by the Windows keyboard.        yen or yuan (¥)      unspecified currency sign (¤)      Ghanaian cedi (₵)      dollar or peso ($)      colón (₡)      won (₩)      shekel (₪)      naira (₦)      Indian rupee (₹)      pound (£)      euro (€)    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Manually tested each prefix currency symbol supported by the Windows keyboard and ran unit tests.    	willibrandon	null	null	null	null	null	null	
2019-03-07 19:24:25.0	2020-02-06 18:32:07.0	2020-12-03 12:00:43.0	closed	[help wanted, Area: User Experience, not repro, Pri: 2]	4	177	Precision is lost when switching conversions	https://api.github.com/repos/microsoft/calculator/issues/177	https://github.com/microsoft/calculator/issues/177	<!--Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.-->    **Describe the bug**  <!--A clear and concise description of what the bug is.-->  While general math does not lose precision (see #119), unit conversions do.    From my perspective, this is a bug, but I suspect fixing this would make it a feature request. I'm filing it as a bug because the information required here and the information I have available more closely fit the bug filing form.    **Steps To Reproduce**  1. Open Calculator  1. Tap ≡  1. Tap Power  1. Tap Kilowatts (top unit -- this computer is en-US not en-GB where the default is Watts)  1. <!--Recorded Steps-->Step 1: (‎3/‎7/‎2019 11:10:37 AM) User left click on "Six (button)" in "Cal"  1. Step 2: (‎3/‎7/‎2019 11:10:38 AM) User left click on "Zero (button)" in "Cal"  1. Step 3: (‎3/‎7/‎2019 11:10:41 AM) User left click on "Converts into ‪3.412141‬ BTUs/minute (text)" in "Cal"  1. Step 4: (‎3/‎7/‎2019 11:10:42 AM) User left click on "Input unit (combo box)" in "Cal"  1. Step 5: (‎3/‎7/‎2019 11:10:43 AM) User left click on "Foot-pounds/minute (text)" in "Cal"  1. Step 6: (‎3/‎7/‎2019 11:10:46 AM) User left click on "Input unit (combo box)" in "Cal"  1. Step 7: (‎3/‎7/‎2019 11:10:47 AM) User left click on "BTUs/minute (text)" in "Cal"  1. Step 8: (‎3/‎7/‎2019 11:10:49 AM) User left click on "Converts into ‪59.9999972482667‬ Watts (text)" in "Cal"  1. Step 9: (‎3/‎7/‎2019 11:10:50 AM) User left click on "Steps Recorder - 1 running window (button)"    <!--  Recording Session: ‎3/‎7/‎2019 11:10:33 AM - 11:10:51 AM  Recorded Steps: 9, Missed Steps: 0, Other Errors: 0  Operating System: 17134.1.amd64fre.rs4_release.180410-1804 10.0.0.0.2.72  Step 1: User left click on "Six (button)" in "Cal"  Program: CALCULATOR.EXE -SERVERNAME:APP.APPXSM3PG4N7ER43KDH1QP4E79F1J7AM68R8.MCA, CALCULATOR.EXE  UI Elements: Six, Button, Number pad, NamedContainerAutomationPeer, LandmarkTarget, Calculator, Windows.UI.Core.CoreWindow, Calculator, ApplicationFrameWindow  -->      **Expected behavior**  <!--A clear and concise description of what you expected to happen.-->  Ideally it would still show 60 Watts in the top field.  This would require unit conversions to cooperate with the ratpack    **Screenshots**  ![image](https://user-images.githubusercontent.com/2119212/53982764-b92d0500-40e3-11e9-9d00-8420ddd53d2f.png)  ![image](https://user-images.githubusercontent.com/2119212/53982794-cc3fd500-40e3-11e9-832f-50aa78f67314.png)    Note: this was recorded w/ `psr.exe`, so I have screen shots for all of the recorded steps (and I could trivially re-record w/ the missing initial setup steps.    **Device and Application Information (please complete the following information):**   - OS Build: 10.0.17134.0   - Architecture: X64   - Application Version: 10.1811.3241.0    **Additional context**  <!--Add any other context about the problem here.-->  	jsoref	null	null	null	null	null	null	
2019-03-07 19:50:51.0	2019-03-18 18:22:33.0	2020-12-03 12:00:42.0	closed	[Area: User Experience, fixed, Pri: 1]	3	178	Wrong Date Calculation on last Saturday to Sunday in March	https://api.github.com/repos/microsoft/calculator/issues/178	https://github.com/microsoft/calculator/issues/178	**Describe the bug**  The Date Calculator does not factor in the last Saturday to Sunday every March (ex. 2017/03/25 - 2017/03/26).  Because of that the Calculation of the whole month is also wrong.    **Steps To Reproduce**  1. Go to the Date Calculator  2. Select 30. March 2019 and 31. March 2019  3. The Calculator says its the same Date.      **Expected behavior**  If you do the steps above it should show a 1Day difference.  If you select the whole Month of March it says its 29 Days. The right answer would be 30 Days.    **Screenshots**  ![image](https://user-images.githubusercontent.com/40724422/53984570-e2688800-4119-11e9-907c-0693c2de2e3e.png)  ![image](https://user-images.githubusercontent.com/40724422/53984599-f0b6a400-4119-11e9-985d-df89a587d412.png)      **Device and Application Information:**   - OS Build: 10.0.17763.0   - Architecture: X64   - Application Version: 10.1812.10048.0	lmick	null	null	null	null	null	null	
2019-03-07 19:53:39.0	2019-03-20 20:32:57.0	2020-12-03 12:00:41.0	closed	[Area: Reliability, won't fix]	2	179	Win32Calc Crash on LTSC 2019 and Srv 2019	https://api.github.com/repos/microsoft/calculator/issues/179	https://github.com/microsoft/calculator/issues/179	Calculator will crash on both LTSC 2019 or Server 2019 if "Unit Conversion" or any of the "worksheets" are selected from the view Menu.    **Expected behavior**  Does not crash    **Device and Application Information (please complete the following information):**   - OS Build:  Gold release copy of Server 2019 Datacenter (UI) or Gold release copy of LTSC 2019   - Architecture: x64   - Application Version:    **Additional context**  If you upgrade from a prior build  (LTSB 2016) and the last state of calc was to have the Unit Conversion panel open, Calc will crash on launch and is un-useable.   	MicroSquish	null	null	null	null	null	null	
2019-03-07 19:55:30.0	2019-03-12 00:01:42.0	2020-12-03 12:00:40.0	closed	[won't fix]	2	180	copilation to windows x64	https://api.github.com/repos/microsoft/calculator/issues/180	https://github.com/microsoft/calculator/issues/180	some one can convert to exe file for i can use it for win10 x64 because im cut windows store 👯‍♂️  ))  	Leenkss	null	null	null	null	null	null	
2019-03-07 20:14:23.0	2019-03-08 03:01:23.0	2020-12-03 12:00:39.0	closed	[won't fix]	4	181	Investigate potentially more efficient calculation methods	https://api.github.com/repos/microsoft/calculator/issues/181	https://github.com/microsoft/calculator/issues/181	**Problem Statement**  ~~You should look into ways to approximate mathematical functions that are more efficient than Taylor series.~~ (I did a bit and found only a micro-optimization that doesn't work on ARMv7.)    **Evidence or User Insights**  Faster apps are better.    **Proposal**  The use of ~~[CORDICs](https://en.m.wikipedia.org/wiki/CORDIC) or~~ built-in mathematical functions (depending on what our supported CPU architectures have) ~~or [Chebyshev polynomials](https://en.m.wikipedia.org/wiki/Approximation_theory#Chebyshev_approximation)~~ is more efficient for approximating functions over an interval than Taylor series, particularly far from the point at which the Taylor series is generated.    **Goals**  Calculate mathematical functions more quickly.    **Non-Goals**  Support the same CPU architectures as in Windows 3, with their limited built-in mathematical functions.    **Low-Fidelity Concept**  Look up the set of mathematical functions supported as CPU instructions by all supported architectures and replace the corresponding mathematical functions with them~~, and depending on whether they are faster, use Chebyshev polynomials or CORDICs instead of Taylor series for the rest~~.    ---  **EDIT**: On briefly trying it out for myself, I have concluded that Chebyshev polynomials might not be such a good idea, considering as an example that the first coefficient in the expansion of sinh over [-1,1] [is irrational](https://www.wolframalpha.com/input/?i=2%2FPi+Integrate%5BSinh%5Bx%5DChebyshevT%5B1,+x%5D%2FSqrt%5B1-x%5E2%5D,%7Bx,-1,1%7D%5D), and the expansion definitely does not have the sort of pattern that the Maclaurin series does, which allows each term to be quickly calculated from the previous term.    Also, the ARMv7 architecture (the minimum for Windows 10 on ARM) has no built-in mathematical functions, and the only useful ones in [SSE2](https://en.m.wikipedia.org/wiki/X86_instruction_listings#SSE2_packed_arithmetic_instructions) (the minimum for Windows 10 on x86) are square root and reciprocal of square root, which *might* be a faster conditional branch from the code path that interprets x^y as exp(y\*ln(x)), but only if y is a positive-integer power of 2 or its negative.    Finally, CORDICs are best used for CPUs without multiply instructions, while both ARMv7 and SSE2 have multiply instructions.	lewisje	null	null	null	null	null	null	
2019-03-07 20:39:25.0	2019-03-13 20:33:28.0	2019-03-13 20:33:29.0	closed	[fixing approved issue]	5	182	Fix #178: Wrong Date Calculation on last Saturday to Sunday in March	https://api.github.com/repos/microsoft/calculator/issues/182	https://github.com/microsoft/calculator/pull/182	## Fixes #178.    Solve issue [#178](https://github.com/Microsoft/calculator/issues/178)    ### Description of the changes:  - Include daylight time support in date difference calculation (when switching from winter to summer)    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->    Manual testing    **Before change :**     ![image](https://user-images.githubusercontent.com/2892643/53987432-45a9e880-4121-11e9-9c2e-244939694a64.png)    ![image](https://user-images.githubusercontent.com/2892643/53987455-59ede580-4121-11e9-921e-2123e0e55de1.png)    **After Change:**    ![image](https://user-images.githubusercontent.com/2892643/53987240-bb618480-4120-11e9-8114-fc3ef66937d4.png)    ![image](https://user-images.githubusercontent.com/2892643/53987311-ed72e680-4120-11e9-84c4-d31537d8f93d.png)  	patrick-wassmer	null	null	null	null	null	null	
2019-03-07 20:58:09.0	2019-03-08 21:45:40.0	2019-03-25 19:14:10.0	closed	[]	2	183	Compare locale strings, not their pointers	https://api.github.com/repos/microsoft/calculator/issues/183	https://github.com/microsoft/calculator/pull/183	I counted number of characters in `en-US` manually and came up with magic value  `5`.	janisozaur	null	null	null	null	null	null	
2019-03-07 21:07:16.0	2019-03-08 05:38:41.0	2021-01-12 18:08:03.0	closed	[]	0	184	Remove unused variable	https://api.github.com/repos/microsoft/calculator/issues/184	https://github.com/microsoft/calculator/pull/184		janisozaur	null	null	null	null	null	null	
2019-03-07 21:09:52.0	2019-03-08 06:10:21.0	2019-03-08 20:22:08.0	closed	[]	3	185	Fix usage of temporary string	https://api.github.com/repos/microsoft/calculator/issues/185	https://github.com/microsoft/calculator/pull/185	Fixes #173 	janisozaur	null	null	null	null	null	null	
2019-03-07 21:16:29.0	2019-03-13 20:15:09.0	2019-03-13 20:15:21.0	closed	[]	4	186	Fix declarations of functions	https://api.github.com/repos/microsoft/calculator/issues/186	https://github.com/microsoft/calculator/pull/186	* Add `static` where needed  * Explicitly name inheritance type  * Add missing include  * Drop `#pragma once` from .cpp files	janisozaur	null	null	null	null	null	null	
2019-03-07 21:26:01.0	2019-03-08 06:09:38.0	2021-01-12 18:07:56.0	closed	[]	1	187	Remove duplicated condition checks	https://api.github.com/repos/microsoft/calculator/issues/187	https://github.com/microsoft/calculator/pull/187		janisozaur	null	null	null	null	null	null	
2019-03-07 22:11:37.0	2019-03-08 19:18:02.0	2021-01-12 18:07:53.0	closed	[]	1	188	Add `override` keyword where applicable	https://api.github.com/repos/microsoft/calculator/issues/188	https://github.com/microsoft/calculator/pull/188		janisozaur	null	null	null	null	null	null	
2019-03-07 22:17:47.0	2019-03-08 03:46:54.0	2021-01-12 18:07:51.0	closed	[]	1	189	Mark classes as `final` where applicable	https://api.github.com/repos/microsoft/calculator/issues/189	https://github.com/microsoft/calculator/pull/189	I checked and there should be no conflict with https://github.com/Microsoft/calculator/pull/188	janisozaur	null	null	null	null	null	null	
2019-03-07 22:35:33.0	2019-03-07 23:51:01.0	2021-01-12 18:07:19.0	closed	[]	3	190	Use consistent path separators in include paths	https://api.github.com/repos/microsoft/calculator/issues/190	https://github.com/microsoft/calculator/pull/190		janisozaur	null	null	null	null	null	null	
2019-03-08 00:01:04.0	2019-11-14 19:58:51.0	2020-12-03 12:00:38.0	closed	[question, tooling, needs attention]	5	191	BootstrapForDugging returned null instead of IPAdress & PortNumber of the remote msvsmon process	https://api.github.com/repos/microsoft/calculator/issues/191	https://github.com/microsoft/calculator/issues/191	<!--Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.-->    **Describe the bug**  <!--A clear and concise description of what the bug is.-->    I get an error message that pops up when I try to run the project on my computer.  I made sure had the following requirements:  -Your computer must be running Windows 10, version 1803 or newer  -Install the latest version of Visual Studio (the free community edition is sufficient)  -Install the "Universal Windows Platform Development" workload  -Install the optional "C++ Universal Windows Platform tools" component  -Install the latest Windows 10 SDK    I open the /src/Calcaultor.sin, ran the project, and got the error.    **Steps To Reproduce**  <!--Steps to reproduce the behavior:  1. Go to '...'  2. Click on '....'  3. Scroll down to '....'  4. See error-->    **Expected behavior**  <!--A clear and concise description of what you expected to happen.-->    **Screenshots**  <!--If applicable, add screenshots to help explain your problem.-->    **Device and Application Information (please complete the following information):**   - OS Build:   - Architecture:   - Application Version:    <!--Run the following commands in Powershell and copy/paste the output.  " - OS Build: $([Environment]::OSVersion.Version)"  " - Architecture: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Architecture)"  " - Application Version: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Version)"  -->    Severity Code Description Project File Line Suppression State  Error  DEP6701: Bootstrapping failed with unexpected error: ArgumentException - The ID value is not specified.  Parameter name: id [0x80070057] Calculator         **Additional context**  <!--Add any other context about the problem here.-->  I'm using a Microsoft Surface Book 2 computer.	chriiisss	null	null	null	null	null	null	
2019-03-08 01:14:24.0	2019-03-13 20:56:39.0	2019-03-14 08:53:32.0	closed	[fixing approved issue]	5	192	Fixes Issue #162 Pasting long decimal number results in Invalid input	https://api.github.com/repos/microsoft/calculator/issues/192	https://github.com/microsoft/calculator/pull/192	## Fixes #162.  Change has been made to retrieve a substring of the given string by considering its maximum length.    ### Summary of the issue   When pasting a long decimal number, the calculator display shows "Invalid Input".    ### Description of the changes:  Added the following in a function to trim.  `operand = operand.substr(0, operand.length() - exceededBy);`    ### How changes were validated:  - Tested with long operands, whose values will be trimmed when the length exceeds the maximum value.   - Also tested by giving long invalid numbers (like 0.23459288484823nj) to make sure they are still treated as "Invalid Inputs".    Note: Further modifications to the UnitTests will be made once this change is agreed.	naveenspace7	null	null	null	null	null	null	
2019-03-08 02:27:36.0	2019-03-18 18:22:33.0	2019-06-16 21:45:59.0	closed	[fixing approved issue]	6	193	Fix issue with Date diff when it includes a Daylight Saving Time	https://api.github.com/repos/microsoft/calculator/issues/193	https://github.com/microsoft/calculator/pull/193	## Fixes #178     The application uses local time to calculate the number of days between 2 dates. If a Daylight Saving Time takes place during this period of time (only Clocks Forward 2am->3am), the application will miss 1 day and fail to calculate the number of days/weeks/months between the 2 dates.  ![image](https://user-images.githubusercontent.com/1226538/54002668-4b450580-4104-11e9-964a-30a2dd43c4b2.png)  ### Description of the changes:    `DateCalculationEngine` uses local time to modify dates, however, `AddDays`, `AddWeeks`,... won't add 24 hours or 7 days if DST happens between the 2 dates, but instead add ~23.9/24.1 hours or ~6.9/7.1 days (depends if it's the DST clock backward or clock forward). When the DST is clock forward, `DateCalculationEngine` will miss one day.    ### Solution  - use UTC dates to calculate date difference.  Extra Fix:  - use `calendar->FirstPeriodInThisDay` and `calendar->FirstHourInThisPeriod` in ClipTime (else it will set the time to 12PM (noon) in some regions.  - replace `OBSERVABLE_PROPERTY_RW` by `OBSERVABLE_PROPERTY_R` when possible.  - remove  the definition of `CheckClipTimeSameDay` (implementation missing)    ### How changes were validated:    Tested manually with different regions (FR, US, ES, JP).  	rudyhuyn	null	null	null	null	null	null	
2019-03-08 03:03:42.0	2019-03-15 06:30:07.0	2019-03-15 06:30:08.0	closed	[]	4	194	Updating comments per the C++ core guidelines and removing trailing whitespace	https://api.github.com/repos/microsoft/calculator/issues/194	https://github.com/microsoft/calculator/pull/194	## Fixes  Fixed comments that were inconsistent with the style guidelines described in [C++ core guidelines](https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines) and the [modern C++/WinRT language projections](https://docs.microsoft.com/en-us/windows/uwp/cpp-and-winrt-apis/) and removed trailing whitespace.    ### Description of the changes:  - Inserted a space after the beginning of the comment so the text wasn't touching the `//` on all occurrences.  - Removed all occurrences of trailing whitespace  -    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Manual  -  -    	WilliamWelsh	null	null	null	null	null	null	
2019-03-08 03:27:21.0	2019-03-16 00:20:34.0	2019-03-16 00:20:35.0	closed	[]	6	195	DateDiff: Optimize how we build the string used when we calculate the difference between 2 dates	https://api.github.com/repos/microsoft/calculator/issues/195	https://github.com/microsoft/calculator/pull/195	Optimize how we build the result of `GetDateDiffString` and `GetDateDiffStringInDays`, using `std::wstring` (mutuable) instead of `Platform::String` (immutable)    ### Removed from the initial diff  - minus sign	rudyhuyn	null	null	null	null	null	null	
2019-03-08 03:35:14.0	2019-03-08 03:54:24.0	2019-03-08 03:54:24.0	closed	[]	1	196	Fixed Mismatched operator new[] and delete #173	https://api.github.com/repos/microsoft/calculator/issues/196	https://github.com/microsoft/calculator/pull/196	Added [] to delete statement to fix Issue # 173.    ## Fixes #173       ### Description of the changes:  - Just added [] to the delete statement.    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Ran and passed all unit tests.  - Built the solution, made sure there was no build errors.  - Did a few manual tests for sanity.    	elipwns	null	null	null	null	null	null	
2019-03-08 05:56:58.0	2019-03-09 07:15:29.0	2019-03-09 07:15:41.0	closed	[]	0	197	Build with /W4	https://api.github.com/repos/microsoft/calculator/issues/197	https://github.com/microsoft/calculator/pull/197	Fixes #142 - Not compiling at /W4      ### Description of the changes:  - All projects are built with warning level 4 (/W4) and treat warnings as errors (/WX)  - Fixed build errors resulting from enabling these compiler flags    ### How changes were validated:  - Manual smoke tests of the app  - CI build    	bwaldbaum	null	null	null	null	null	null	
2019-03-08 07:37:36.0	2019-03-09 07:47:40.0	2019-03-09 10:52:35.0	closed	[]	0	198	Fix indentation and extra newline	https://api.github.com/repos/microsoft/calculator/issues/198	https://github.com/microsoft/calculator/pull/198	### Description of the changes:  - Fix incorrect indentation in "ExpressionCommand.cpp"  - Remove extra newline at the end of the file    ### How changes were validated:  - Manual check    	petrspelos	null	null	null	null	null	null	
2019-03-08 10:58:10.0	2019-03-08 14:30:18.0	2019-03-08 14:47:38.0	closed	[]	1	199	Added comment on README	https://api.github.com/repos/microsoft/calculator/issues/199	https://github.com/microsoft/calculator/pull/199	## Fixes #.      ### Description of the changes:  -  -  -    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  -  -  -    	morethanyell	null	null	null	null	null	null	
2019-03-08 11:32:59.0	2019-03-18 19:31:05.0	2019-03-18 19:31:05.0	closed	[]	6	200	Improving code style : verbosity, indentation levels	https://api.github.com/repos/microsoft/calculator/issues/200	https://github.com/microsoft/calculator/pull/200	Fixing some nested if() statements and reducing indentation levels.    Making some sections less verbose, e.g:  ```cpp  if (a == 1)  {      b = true;  }  else  {      b = false;  }  ```  ↓  ```cpp  b = (a == 1)  ```    Changes are best viewed ignoring whitespaces:  <img src="https://user-images.githubusercontent.com/3667366/54026601-bb07ce80-419e-11e9-9926-131f7341a21c.png" width="200">  	garsaud	null	null	null	null	null	null	
2019-03-08 11:36:04.0	2019-03-08 18:28:36.0	2019-03-08 18:28:36.0	closed	[]	0	201	Remove invalid links from comments	https://api.github.com/repos/microsoft/calculator/issues/201	https://github.com/microsoft/calculator/pull/201	Both removed links show a "Oops! That page can’t be found."-page.    Only comments affected.  	LorenzNickel	null	null	null	null	null	null	
2019-03-08 12:00:24.0	2019-05-02 18:59:19.0	2020-12-03 12:00:37.0	closed	[codebase quality]	15	202	clang-format spec	https://api.github.com/repos/microsoft/calculator/issues/202	https://github.com/microsoft/calculator/issues/202	Is there a chance to have a `.clang-format` file added to the repository so that code can be automatically formatted?	janisozaur	null	null	null	null	null	null	
2019-03-08 12:44:40.0	2019-03-09 11:20:26.0	2019-03-09 11:20:45.0	closed	[]	5	203	The application displays faulty results with unary operations and numbers when a binary action was previously used	https://api.github.com/repos/microsoft/calculator/issues/203	https://github.com/microsoft/calculator/pull/203	2 major issues due to `CCalcEngine::ProcessCommandWorker` not managing its states correctly.    ### Unary actions display faulty results when a binary operation was previously used  ![a2019-03-08_4-36-01](https://user-images.githubusercontent.com/1226538/54029006-e5846800-415b-11e9-8ef1-4911983c11c5.gif)    - Type a random binary operation: `3 + 5` (for example)  - press Enter  - Use an unary action (Power or square root for example)  - press Enter    or    - Type a random binary operation: `3 x 5` (for example)  - press Enter  - Type a new number   - Use an unary action (Power or square root for example)  - press Enter    ### Bug when users enter a number when a binary operation was previously used  ![a2019-03-08_4-39-13](https://user-images.githubusercontent.com/1226538/54029156-50ce3a00-415c-11e9-8431-7e0e80a770c7.gif)    ### Description of the changes:  - Type a random binary operation: `3 x 5` (for example)  - press Enter  - Type a new number   - press Enter    ### Reason:  - `m_bNoPrevEqu`, `m_nOpCode` and `m_nOpCode` aren't correctly reset when necessary  - the code assuming that the last operation was a binary one when users click on Enter more than 1 time.  	rudyhuyn	null	null	null	null	null	null	
2019-03-08 15:05:01.0	null	2021-08-02 09:03:29.0	open	[help wanted, Enhancement, Pri: 2, needs spec]	14	204	science mode should support an easy button to change result format from decimal mode to fractional mode	https://api.github.com/repos/microsoft/calculator/issues/204	https://github.com/microsoft/calculator/issues/204	<!--    See https://github.com/Microsoft/calculator/blob/master/docs/NewFeatureProcess.md for  suggestions on how to write a good feature pitch. Just want to submit an idea quickly? Try Feedback  Hub instead: https://insider.windows.com/en-us/fb/?contextid=130    -->    **Problem Statement**  <!-- What problem are we trying to solve? Who’s the target audience? Is there a customer need or  pain point we need to remedy? Is there a business goal or metric we are trying to improve? Do we  have a hypothesis we want to prove or disprove? -->  science mode should support an easy button to change result format from decimal mode to fractional mode.    **Evidence or User Insights**  <!-- Why should we do this? Potential sources of data: Feedback Hub, other GitHub issues, other  anecdotes from listening to customers in person or online, request from another team, telemetry  data, user research, market or competitive research -->  In most of scientific calculator, a single button is added to support this funciton to satify different requirement. Can you add this in it?    **Proposal**  <!-- How will the solution/feature help us solve the problem? How will it meet the target  audience’s needs? If there are business goals or metrics, how does this improve them? -->  An easy button to switch mode    **Goals**  <!-- What you want to accomplish with this feature. Typical examples include  “User Can *perform some task*” -->    when I calculate 3 divide 9, the result 0.333333333... will be given out.  But sometimes I need a more accurate result ![TIM截图20190309144526](https://user-images.githubusercontent.com/20044360/54067403-81a49100-427a-11e9-8b9b-6ee9f4fe89b3.png)   in  fractional format. Because my works need my result to show in fractional.  May be a little button is needed to switch result.             **Non-Goals**  <!-- Things we are explicitly not doing or supporting or that are out of scope, including reasons  why. -->    **Low-Fidelity Concept**  <!-- Show as much of the experience as needed to explain the idea. This can be as simple as a  napkin drawing but can also be a code prototype, a PowerPoint walkthrough, or a design  comp. -->    	whutddk	null	null	null	null	null	null	
2019-03-08 15:20:21.0	2019-03-09 07:18:42.0	2019-03-09 07:18:42.0	closed	[]	2	205	Fix punctuation in README.md	https://api.github.com/repos/microsoft/calculator/issues/205	https://github.com/microsoft/calculator/pull/205	## Fixes #.      ### Description of the changes:  - some punctuation in wrong place, and some of them missing      ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  -  -  -    	whutddk	null	null	null	null	null	null	
2019-03-08 16:20:50.0	2019-03-08 16:44:32.0	2020-12-03 12:00:36.0	closed	[won't fix]	7	206	Mathematically incorrect statement is shown in Calc - 2 + 3 x 2 = 10	https://api.github.com/repos/microsoft/calculator/issues/206	https://github.com/microsoft/calculator/issues/206	I'm assuming I'm using the latest version of Calc, since Windows 10 auto updates.    **Describe the bug**  A very big issue I have with Calc is that it evaluates as you type. For instance    1. Open Calc  2. Set to Standard  3. Type "2 + 3 *", the answer is now 5  4. Type "2=", the answer is now 10  5. Microsoft Calc thinks the formula `2 + 3 * 2 = 10`    I expected, as I was once taught in grade school, that "2 + 3 * 2 = 8". I believe there is also an old adage about a certain "Dear Aunt Sally" which can shed light onto this bug.    ![image](https://user-images.githubusercontent.com/5393207/54040084-84c45200-4192-11e9-85d0-0dae0da7ed57.png)    **Device and Application Information (please complete the following information):**   - OS Build: 10.0.16299.0   - Architecture: X64   - Application Version: 10.1804.2492.0    Entering the same formula into many other software packages and hardware, including Wolfram Alpha, a Python interpreter, and (I assume, since I've never owned one) the average calculator wristwatch produces the correct result.	tngreene	null	null	null	null	null	null	
2019-03-08 16:52:36.0	2019-03-21 00:46:16.0	2020-12-03 12:00:35.0	closed	[by design, Pri: 2]	3	207	possible issue 	https://api.github.com/repos/microsoft/calculator/issues/207	https://github.com/microsoft/calculator/issues/207	```  IIterable<String^>^ LocalizationService::GetLanguageIdentifiers()  {      WCHAR currentLocale[LOCALE_NAME_MAX_LENGTH] = {};      int result = GetUserDefaultLocaleName(currentLocale, LOCALE_NAME_MAX_LENGTH);      if (result != 0)      {          // GetUserDefaultLocaleName may return an invalid bcp47 language tag with trailing non-BCP47 friendly characters,           // which if present would start with an underscore, for example sort order          // (see https://msdn.microsoft.com/en-us/library/windows/desktop/dd373814(v=vs.85).aspx).          // Therefore, if there is an underscore in the locale name, trim all characters from the underscore onwards.          WCHAR* underscore = wcschr(currentLocale, L'_');          if (underscore != nullptr)          {              *underscore = L'\0';          }            String^ localeString = ref new String(currentLocale);          // validate if the locale we have is valid          // otherwise we fallback to the default.          if (Language::IsWellFormed(localeString))          {              auto languageList = ref new Vector<String^>();              languageList->Append(localeString);              return languageList;          }      }        return nullptr;  }  ```        this function is located on "LocalizationService.cpp", which in its own accord is located in "src/CalcViewModel/Common"      As the comments point out, some languages have weird tags, so the writter goes ahead and uses this   **wcshr** which is some kind of a Substring operation aimed on fixing the aforementioned issue,  but obviously the output of the result of the said operation is never used, and instead the execution goes on without it.    This is either a bug or redundant code.	XeorgeXeorge	null	null	null	null	null	null	
2019-03-08 20:20:27.0	2019-03-15 04:06:13.0	2021-01-12 18:07:17.0	closed	[]	2	208	Replace custom ARRAYSIZE macro with std::size	https://api.github.com/repos/microsoft/calculator/issues/208	https://github.com/microsoft/calculator/pull/208		janisozaur	null	null	null	null	null	null	
2019-03-08 22:28:33.0	null	2021-08-15 11:02:09.0	open	[help wanted, Pri: 2, codebase quality, approved]	24	209	Investigate launch performance issues	https://api.github.com/repos/microsoft/calculator/issues/209	https://github.com/microsoft/calculator/issues/209	Launch the app. It takes about _a second_ to start. This means you almost certainly lose input if you start typing right away (especially if you have a "calculator" button).    **Steps To Reproduce**  1. Press calculator button on keyboard.  2. Immediately start typing 2+2 on numpad (as an example.. whatever it is you're trying to calculate).  3. A second later calculator launches  4. You will probably have lost at least the first 2, and maybe also the + and second 2, because the app didn't launch fast enough.  5. Result: you have to press the button and consciously wait (feels like an eternity) for the app to start before you can do what you wanted to do.     **Expected behavior**  Calculator should launch fast enough that you can just start typing the thing you're trying to calculate after pressing the calculator button (maybe around 100ms or so).     **Device and Application Information (please complete the following information):**   - OS Build: 10     0      16299  0   - Architecture: X64   - Application Version: latest master    UPDATE: This issue is now being used to track recommendations, observations, and investigations into how we can improve the actual and/or perceived launch performance of the app. Any actionable ideas that are identified should be broken out into their own issue for tracking purposes.	ssylvan	null	null	null	null	null	null	
2019-03-08 22:44:13.0	2019-03-09 05:43:19.0	2019-03-20 21:39:50.0	closed	[]	2	210	fix: minor Azerbaijani translation error	https://api.github.com/repos/microsoft/calculator/issues/210	https://github.com/microsoft/calculator/pull/210	## Fixes #.      ### Description of the changes:  - Single word    ### How changes were validated:  - Unsuitable for testing    	Maharramoff	null	null	null	null	null	null	
2019-03-08 22:58:01.0	2020-03-13 16:19:20.0	2020-03-13 16:19:22.0	closed	[fixing approved issue, tooling, needs author feedback]	45	211	Add CMake/Clang support for the Calculator Engine	https://api.github.com/repos/microsoft/calculator/issues/211	https://github.com/microsoft/calculator/pull/211	## Fixes #109 .      ### Description of the changes:  - Added CMake with a library target for the engine  - Added cross-platform headers for common Win32 error codes  - Added typealiases for Win32 data types    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Manual testing using `Apple LLVM version 10.0.0 (clang-1000.11.45.5)` on macOS 10.13.6 High Sierra  	fwcd	null	null	null	null	null	null	
2019-03-08 23:08:27.0	2019-03-26 21:30:47.0	2019-03-27 23:53:19.0	closed	[codebase quality]	21	212	Replace custom types with standard ones	https://api.github.com/repos/microsoft/calculator/issues/212	https://github.com/microsoft/calculator/pull/212	I was halfway through changing the types, when https://github.com/Microsoft/calculator/pull/211 was submitted. As I have ran out of time today to finish it up, I submit it as-is for discussion and would like to hear from Microsoft team on which approach is preferred.	janisozaur	null	null	null	null	null	null	
2019-03-09 02:52:01.0	2019-03-15 05:35:56.0	2019-03-15 05:35:56.0	closed	[fixing approved issue]	2	213	Activate TextSelection on all interesting values/results	https://api.github.com/repos/microsoft/calculator/issues/213	https://github.com/microsoft/calculator/pull/213	Fixes #223     Ctrl+C is already supported in the app, but:  - not Tablet/Device without keyboard-friendly  - It's not really easy to guess that you can Ctrl+C without selecting the result.  - You can't copy an operation in the history  - You can't copy a part of a result (to ignore the fractional part of a number for example)    If we allow users to select texts, the application will feel more like a "Desktop app", will be easier to use on a tablet and users will be more prompt to use Ctrl+C to use the result in another app.     ![2702B760-4B01-4F28-B444-05728DA30F76](https://user-images.githubusercontent.com/1226538/54065190-025b8280-41d2-11e9-8869-4029cf4532ea.GIF)    ## Note:  I didn't enabled TextSelection on `CalculationResult` when the control isn't "active" (text in bold), if we do,  the textblock can't catch the `Tap` events on the textblock, needed to allow users to activate the control.	rudyhuyn	null	null	null	null	null	null	
2019-03-09 04:57:44.0	null	2021-08-02 09:03:38.0	open	[help wanted, Enhancement, Pri: 2, needs spec]	7	214	Epoch timestamp to Datetime converter	https://api.github.com/repos/microsoft/calculator/issues/214	https://github.com/microsoft/calculator/issues/214	**Problem Statement**  The calculator provides plenty of tools to help developers: a Programmer mode, conversion from a base to another, a binary number editor, Data converter, ... but one tool is missing to complete the ideal toolbox: a converter to convert "human" date/time to system time (and vice-versa).    **Evidence or User Insights**  While it's easy to convert kilobytes to gigabytes, it's not easy to convert Epoch time or FILETIME struct to "human" time without using a tool. Such a tool, even if basic, doesn't exist in Visual Studio or in Visual Studio Code, and only a few developers will install an app only for this purpose, so we mainly rely on web to verify system times when we debug an application.    A simple chrome extension converting dates to epoch time (only) has more than 16K downloads for example.    **Proposal**  We should add an extra option in Date Calculation, allowing developers to not only convert dates from/to epoch time, but also from/to FILETIME, Mac time, LDAP time, Chromium time, etc...    **Goals**  - Users can convert a "human" date to a system time.  - Users can convert a system time to "human" date.  - Users can easily copy the system time to the Programmer calculator    **Non-Goals**  - Users can't directly convert a system time to another, but they can select a system time format in the combobox, type a system time, then select another system time format in the combobox, the Calculator will then display the same date/time in the new format.    **Low-Fidelity Concept**    ![Capture](https://user-images.githubusercontent.com/1226538/54971212-9b182f00-4f42-11e9-8078-60ff37729867.PNG)    ![image](https://user-images.githubusercontent.com/1226538/54971176-7b810680-4f42-11e9-9828-5bae102e6390.png)  (we will need to customize the timePicker to manage seconds/milliseconds or use another way to select a time)    ![image](https://user-images.githubusercontent.com/1226538/54971284-ed595000-4f42-11e9-8bbc-78fe7acc63fb.png)    We can also:   - display the date selected using the ISO-8601 format at the bottom of the window in local and UTC.  - add Datetime.Tick (https://docs.microsoft.com/en-us/dotnet/api/system.datetime.ticks?view=netframework-4.7.2)	rudyhuyn	null	null	null	null	null	null	
2019-03-09 07:11:03.0	null	2021-08-17 10:04:37.0	open	[help wanted, Enhancement, Pri: 2, needs spec]	33	215	Single calc instance and window vs. Multiple calc windows	https://api.github.com/repos/microsoft/calculator/issues/215	https://github.com/microsoft/calculator/issues/215	**Problem Statement**  Entering calculations into the calculator can be tedious when working across multiple program windows. Compounding the problem is when multiple calculator instances are running. Selecting the wrong instance can cause calculation errors, and wastes time.  This can be detrimental when calculating prices and margins, precise dimensions, etc.  Some tasks are better left to spreadsheets, but for quick calculations, a calculator is optimal.    Many keyboards have a calculator button for quick access to the calculator. This makes calling up a calculator instance quick and easy the first time, but for subsequent recall of the same instance, the button is useless if you want to recall/reuse a single instance.    Create a calculator instance that can launched by hotkey or calculator button, that can be easily recalled without ALT-TABBING or WIN-TABBING through 20 or so windows. The target audience is anyone who requires a single instance and speed. It's common to have a single handheld calculator, rather than a desk full of calculators - as it simplifies working at the desk - apply that to the Windows desktop.    A multi-instance-only calculator, or a single-instance-only calculator is not universally appealing.    My own uses are mixed business/financial, machining and optical calculations, and home/school.  The goal is to improve speed and accuracy, reduce error and frustration.      **Evidence or User Insights**  I don't have so much any evidence or user insight, other than my own use-cases.  I have google searched and found  many people complaining about multiple calculator instances, and trying to figure out ways to force single instance behaviour.    Single-instance is the way the calculator used to operate. It's no different than having a single handheld calculator.  There will be people that want single-instance, and other people that will want multiple-instance, and even some that will want to switch between the two on-demand.  It's reasonable to believe that not everyone likes things the same cookie-cutter way.  That is one of the things that made Windows go from a horrible user experience to a great one - has lead to Windows 10's success over Windows 8.       **Proposal**  - State-savable toggle button  (1st choice - most visible, most easy)  - State-savable menu option (2nd choice - less visible, awkward)  - Command-line parameter (worst choice - invisible to less-technically-inclined users)    Being able to change the single/multi instance state in an easy manner should meet everyone's needs.    If a button is used (my strong preference):    The wording or glyph representing the option should impart the meaning - such as:   - Single Window / Multi Window   - Dynamic glyph using the existing calculator icon:    ---> Single icon = single instance    ---> Two overlapping icons = multiple instance    When single-instance state is enabled in one instance, and there are other instances running, the user should be asked if they are sure they want to close the other instances. The default should be NO, in order to prevent the loss of data in other instances.    The question should be answerable using the user's input method of choice:   - the mouse to click on relatively-positioned YES / NO buttons that don't require extreme mouse movements to reach (suitable for ultra-wide display users)   - TAB to change between NO / YES, ENTER to select the choice        **Goals**  - Adapt the calculator so that it functions the way some people expect or need it to.  - Provide greater customization based on the sometimes dynamic needs of the user.  - Reduce the time it takes to activate the one specific calculator instance needed.  - Reduce error caused by entering calculations into wrong instances.        **Non-Goals**  Cater only to advanced users familiar with command-line parameters.      **Low-Fidelity Concept**  It's a toggle button for single instance/multi instance, that also saves the state to the registry, and can close multiple instances. A picture can be supplied if it's really necessary.    > A team member edited this comment to capture details from discussion below.	TristanYoung	null	null	null	null	null	null	
2019-03-09 08:24:28.0	2019-03-09 08:37:16.0	2020-08-10 19:42:57.0	closed	[]	1	216	Bach	https://api.github.com/repos/microsoft/calculator/issues/216	https://github.com/microsoft/calculator/pull/216	## Fixes #.    Dir docs add file Test  ### Description of the changes:  -  -  -    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  -  -  -    	lisntwork	null	null	null	null	null	null	
2019-03-09 08:42:35.0	2019-04-05 20:04:40.0	2019-04-05 20:04:40.0	closed	[codebase quality]	3	217	Optimize and simplify CalculationResult to be able to update the FontSize and the DisplayMargin without fully updating the Style.	https://api.github.com/repos/microsoft/calculator/issues/217	https://github.com/microsoft/calculator/pull/217	- merge the 3 CalculationResultStyle(S|M|L) in App.xaml  - Only modify CalculationResult::*FontSize in Calculator.xaml instead of fully updating the style of the control.  - Create a new property `MaxFontSize` in order to be able to update it without being forced to fully update the Style (because `m_startingFontSize` was set in `OnApplyTemplate`)  - Modify how `DisplayMargin` is managed to prevent the textblock Margin to shift when we update its value (without fully updating the Style).	rudyhuyn	null	null	null	null	null	null	
2019-03-09 08:52:21.0	2019-03-09 09:41:47.0	2019-03-09 09:41:47.0	closed	[]	3	218	Bach	https://api.github.com/repos/microsoft/calculator/issues/218	https://github.com/microsoft/calculator/pull/218	## Fixes #.      ### Description of the changes:  -  -  -    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  -  -  -    	lisntwork	null	null	null	null	null	null	
2019-03-09 09:05:05.0	2019-03-09 09:07:35.0	2019-03-09 09:07:35.0	closed	[]	2	219	Pruc	https://api.github.com/repos/microsoft/calculator/issues/219	https://github.com/microsoft/calculator/pull/219	## Fixes #.    Docs Add File  ### Description of the changes:  -  -  -    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  -  -  -    	lisntwork	null	null	null	null	null	null	
2019-03-09 09:14:23.0	2019-03-09 09:41:56.0	2019-03-11 03:54:04.0	closed	[]	2	220	Pruc	https://api.github.com/repos/microsoft/calculator/issues/220	https://github.com/microsoft/calculator/pull/220	## Fixes #.  ADD pruc    ### Description of the changes:  -  -  -    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  -  -  -    	lisntwork	null	null	null	null	null	null	
2019-03-09 09:28:57.0	2019-03-09 15:52:01.0	2020-12-03 12:00:34.0	closed	[won't fix]	8	221	 Windows Calculator does not work on gnu/linux	https://api.github.com/repos/microsoft/calculator/issues/221	https://github.com/microsoft/calculator/issues/221	do not close this (#130), it's not fixed	luntik2012	null	null	null	null	null	null	
2019-03-09 10:23:35.0	null	2021-05-26 10:03:43.0	open	[Bug, triage approved, Area: User Experience, Pri: 2]	27	222	Wrong result for e.g. √(2.25) - 1.5	https://api.github.com/repos/microsoft/calculator/issues/222	https://github.com/microsoft/calculator/issues/222	<!--Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.-->    **Describe the bug**  <!--A clear and concise description of what the bug is.-->  √(2.25) is 1.5 and the result shown is correct. However, subtracting 1.5 from that shows an incorrect result such as -2.1115953280960553738983525708397e-38.    This bug happens in all equivalent cases, e.g. with √(0.81) or any other square root that is a terminating decimal.    **Steps To Reproduce**  1. Use standard or scientific mode  2. Enter 2.25  3. Press √  4. Subtract 1.5  5. Result is wrong    <!--Steps to reproduce the behavior:  1. Go to '...'  2. Click on '....'  3. Scroll down to '....'  4. See error-->    **Expected behavior**  <!--A clear and concise description of what you expected to happen.-->  Result is 0    **Device and Application Information (please complete the following information):**   - OS Build: 10     0      17763  0   - Architecture: X64   - Application Version: 10.1812.10048.0    **Additional info**  Until recently, it also used to be that "√(4) - 2" didn't result in 0. It was fixed in the UWP app, but is a bug in calc.exe in older versions of Windows.	imchau	null	null	null	null	null	null	
2019-03-09 11:40:03.0	2019-03-15 05:35:56.0	2020-12-03 12:00:33.0	closed	[Area: User Experience, fixed, Pri: 2]	2	223	The application should allow text selections on calculation results.	https://api.github.com/repos/microsoft/calculator/issues/223	https://github.com/microsoft/calculator/issues/223	Ctrl+C is already supported in the app, but:  - not available on tablets/devices without keyboard.  - It's not really easy to guess that you can Ctrl+C without selecting the result.  - You can't copy an operation in the history  - You can't copy a part of a result (to ignore the fractional part of a number for example)  - If we allow users to select texts, the application will feel more like a "Desktop app", will be easier to use on a tablet and users will be more prompt to use Ctrl+C to use the result in another app.    Here is a prototype:  ![54065190-025b8280-41d2-11e9-8869-4029cf4532ea](https://user-images.githubusercontent.com/1226538/54071091-ed581100-421c-11e9-9725-24ba772c7a82.GIF)  	rudyhuyn	null	null	null	null	null	null	
2019-03-09 12:31:59.0	2019-03-09 20:34:04.0	2020-12-03 12:00:32.0	closed	[won't fix]	11	224	rewrite ui using material design, it has ugly windows style now	https://api.github.com/repos/microsoft/calculator/issues/224	https://github.com/microsoft/calculator/issues/224		luntik2012	null	null	null	null	null	null	
2019-03-09 12:42:36.0	2019-03-09 16:09:52.0	2019-03-09 23:27:28.0	closed	[tooling]	6	225	add .editorconfig to set some basic coding styles 	https://api.github.com/repos/microsoft/calculator/issues/225	https://github.com/microsoft/calculator/pull/225	To maintain consistent code style between contributors and simplify merging, the solution should provide a .editorconfig to set some basic rules (already used by the current code source).    - use `UTF-8` with BOM (some files are without)  - use CR-LF  - use <kbd>Space</kbd> to indent (sorry #teamTab)  - trim trailing whitespace   - be sure to add a new line at the end of files.    [Documentation](https://docs.microsoft.com/en-us/visualstudio/ide/create-portable-custom-editor-options?view=vs-2017)	rudyhuyn	null	null	null	null	null	null	
2019-03-09 13:00:25.0	null	2021-10-31 15:03:20.0	open	[Bug, triage approved, Area: User Experience, Pri: 2]	26	226	Automatic scientific notation can't be disabled	https://api.github.com/repos/microsoft/calculator/issues/226	https://github.com/microsoft/calculator/issues/226	**Describe the bug**  In scientific mode scientific notation can be enabled by F-E button but can't be disabled if number have more than 2 zeros after decimal point. This automatic scientific notation is also enabled even on standard mode. Sometimes it's more useful and more readable if number stay in common decimal format instead of scientific notation. For example while calculating crypto currencies it is more useful to see 0.000005142857 where I can easily see 514 satoshi price than 5.142857e-6.    **Steps To Reproduce**  1. Switch to standard or scientific mode  2. Type 0.000036  3. Press divide symbol  4. Type 7  5. Press Enter  6. Pressing F-E is not changing output format    **Expected behavior**  * In Standard Mode, we should disable scientific notation. That is, if you input 0.000036/7, you should see 0.000005142857 as the result.  * In Scientific Mode, we should preserve the "auto-scientfic" behavior, though the F-E switch _should_ be toggled on when we do so. You should be able to untoggle the F-E button to force a decimal result. If a user manually disables F-E, we should preserve that until the user clears all input or switches modes.    Other behaviors considered:  >- Stay in normal decimal format until I press F-E to switch to scientific notation  OR  >- Show scientific notation but also enable F-E switch to indicate scientific notation mode with ability to disable F-E to show number in common decimal format  OR  >- Add another switch to enable/disable automatic scientific notation if number conains more than defined number of zeros after decimal point  OR  >- Disable automatic scientific notation in standard mode calculator at all and add another switch to enable/disable automatic scientific notation in scientific mode if numbers contains more than defined number of zeros after decimal point  OR  >- Add settings for automatic result rounding or display precision to any number of digits to prevent automatic scientific notation to trigger just because result contain lot of digits after decimal point which are not important for user    **Device and Application Information (please complete the following information):**   - OS Build: 10.0.17763.0   - Architecture: X64   - Application Version: 10.1812.10048.0    >Note: A team member edited this comment for clarity on expected behavior	uhliksk	null	null	null	null	null	null	
2019-03-09 13:21:56.0	2019-03-09 20:51:14.0	2020-12-03 12:00:31.0	closed	[won't fix]	3	227	Calculator should keep the result when the user changes the mode	https://api.github.com/repos/microsoft/calculator/issues/227	https://github.com/microsoft/calculator/issues/227	If the user has calculated a result in one mode, e.g. Standard, and wants to apply some functionality form a different mode, e.g. convert the current result into HEX representation in Programmer mode, they have no way to do so by just changing the mode because Calculator clears the result. Not clearing the result when the user changes the mode would improve users experience.    Calculator should keep the result when the user changes the mode. It will allow users to use functionality available only in a different mode without a need to save an intermediate result somewhere else.	kosta-arnorsky	null	null	null	null	null	null	
2019-03-09 13:50:25.0	2019-03-09 16:02:27.0	2019-03-09 16:02:49.0	closed	[]	1	228	added a comma	https://api.github.com/repos/microsoft/calculator/issues/228	https://github.com/microsoft/calculator/pull/228	## Fixes #.      ### Description of the changes:  -  -  -    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  -  -  -    	richursa	null	null	null	null	null	null	
2019-03-09 14:39:06.0	2019-03-13 23:37:51.0	2020-03-21 00:07:50.0	closed	[]	11	229	Optimised images losslessly. 	https://api.github.com/repos/microsoft/calculator/issues/229	https://github.com/microsoft/calculator/pull/229	Saved 301 KB out of 9.2 MB. 15.8% per file on average (up to 82.2%)    ## Fixes #.    Saves 301 KB (although not all files are included in the build)    ### Description of the changes:  - For PNG files: used a combination of Pngcrush, OxiPNG, AdvPNG, PNGOUT and Zopfli  - For GIF files: used Gifsicle      ### How changes were validated:    - No changes to behaviour or source code.  - Previewed the changed files to make sure they still work    	grischard	null	null	null	null	null	null	
2019-03-09 14:48:31.0	2019-03-09 16:16:06.0	2019-03-25 02:00:51.0	closed	[]	1	230	fix: redundant semicolons	https://api.github.com/repos/microsoft/calculator/issues/230	https://github.com/microsoft/calculator/pull/230	### Description of the changes:  - Remove redundant semicolons in:    - [x] UnitConverter.cpp    - [x] DateCalculator.xaml.cpp    - [x] CopyPasteManagerTest.cpp    ### How changes were validated:  -  Manual  	Maharramoff	null	null	null	null	null	null	
2019-03-09 15:58:53.0	2019-03-14 03:31:38.0	2019-03-14 03:31:38.0	closed	[]	7	231	Fix wrong results after sqrt	https://api.github.com/repos/microsoft/calculator/issues/231	https://github.com/microsoft/calculator/pull/231	## Fixes #222.      ### Description of the changes:  - Partial result rounding changed from integer to 32 digits after decimal point    ### How changes were validated:  - manual	uhliksk	null	null	null	null	null	null	
2019-03-09 16:49:22.0	2020-02-06 18:32:11.0	2020-12-03 12:00:30.0	closed	[Pri: 3, Area: World-Readiness, fixed]	8	232	Wrong thousands separation in currency converter	https://api.github.com/repos/microsoft/calculator/issues/232	https://github.com/microsoft/calculator/issues/232	**Describe the bug**  Big numbers like 100000000000000 are using thousands separator as 100000 000 000 000 instead of 100 000 000 000 000.    **Steps To Reproduce**  1. Go to Currency Converter  2. Type 100000000000000    **Expected behavior**  Thousands separator should be applied on all thousands.    **Screenshots**  ![image](https://user-images.githubusercontent.com/37454226/54074472-16b38400-4293-11e9-8583-af7ab48a12da.png)    **Device and Application Information (please complete the following information):**   - OS Build: 10.0.17763.0   - Architecture: X64   - Application Version: 10.1812.10048.0    **Additional context**  Other convesion types are not affected.  	uhliksk	null	null	null	null	null	null	
2019-03-09 17:06:00.0	2019-03-10 10:35:28.0	2019-03-10 10:35:28.0	closed	[]	1	233	Propose spelling fix	https://api.github.com/repos/microsoft/calculator/issues/233	https://github.com/microsoft/calculator/pull/233	### Description of the changes:  - Fix misspelled/doubled words in:     - Comments (15)     - Resources (3)        ### How changes were validated:  - Manual    	Maharramoff	null	null	null	null	null	null	
2019-03-09 20:05:48.0	2019-03-13 20:10:15.0	2019-03-13 20:34:11.0	closed	[]	7	234	Make 73 numeric constants actually const, moving them into the .rdata section	https://api.github.com/repos/microsoft/calculator/issues/234	https://github.com/microsoft/calculator/pull/234	### Description of the changes:  This change makes the 73 variables in `ratconst.h` actually const, which allows them to  move from the mutable `.data` section of the executable, and into the read-only `.rdata` section of the executable.    Moving data to the `.rdata` section has a number of benefits, such as preventing possible corruption  due to stray writes, or other memory corruption.    Additionally, the initialization at run-time start-up is no longer needed, so there is also a   reduction in the `.text` (code) section as well.    As a result the overall size of the `Calculator.exe` binary (on x64 Release) decreases by 1,536 bytes (or ~1.5 KB) with no change in behavior other than a small performance benefit.    ### How changes were validated:  - Manually verified by testing.	jefgen	null	null	null	null	null	null	
2019-03-09 22:18:48.0	2019-03-13 02:24:38.0	2019-03-13 21:42:17.0	closed	[]	8	235	Eliminate redundant copies of EMPTY_UNIT object, saving 2.5 KB.	https://api.github.com/repos/microsoft/calculator/issues/235	https://github.com/microsoft/calculator/pull/235	### Description of the changes:    There are currently 11 copies of the `EMPTY_UNIT` object in the  `Calculator.exe` binary, which not only wastes space/footprint in the  binary itself, but also means that each copy must be separately  initialized, which effects performance.    The reason for this is that the object is defined in a shared header  file, which then is included by multiple .cpp files, causing each  translation unit (.obj) to get a full complete copy of the object.    By marking the object as `inline` we can  instruct the linker to define the object once, as we do  not need to have 11 unique versions of the EMPTY_UNIT object,  we only need 1.    The net result is that the `Calculator.exe` binary size is reduced by  2,560 bytes (or 2.5 KB) with no change in behavior, other than  the small performance benefit of not initializing 10 redundant copies  of the object.    ### How changes were validated:  - Manually tested.  	jefgen	null	null	null	null	null	null	
2019-03-09 22:30:12.0	2019-05-02 18:59:19.0	2019-07-15 01:39:59.0	closed	[codebase quality]	18	236	Fix the project code style, as it is not consistent.	https://api.github.com/repos/microsoft/calculator/issues/236	https://github.com/microsoft/calculator/pull/236	## Fixes #202  This PR fixes code style for the project files.    ### The Problem  Different files in the project use different code style. That is not consistent and leads to harder maintenance of the project.    ### Description of the changes:  - Have investigated and determined the most used code style across the given codebase  - ~~Have configured IDE and applied code style to all project files.~~  - Have crafted clang-formatter config.  see https://clang.llvm.org/docs/ClangFormat.html  https://clang.llvm.org/docs/ClangFormatStyleOptions.html  - Some cases were fixed manually    ### How changes were validated:  manual/ad-hoc testing, automated testing  - All tests pass as before because these are only code style changes.    ### Additional ###  Please review, and let me know if I have any mistake in the code style. In case of any mistake, I will change the configuration and re-apply it to the project.    ~~This resource can be used for better rules understanding  https://clangformat.com/~~  btw: outdated  	seyfer	null	null	null	null	null	null	
2019-03-09 22:31:24.0	2019-03-09 23:46:56.0	2020-12-03 12:00:30.0	closed	[won't fix]	5	237	Default line ending for files in the project	https://api.github.com/repos/microsoft/calculator/issues/237	https://github.com/microsoft/calculator/issues/237	#225 introduced a change that made `crlf` the default line ending when Visual Studio saves `cpp` and `c` files in this project.    After that change was merged in, [@janisozaur brought up counter-arguments](https://github.com/Microsoft/calculator/pull/225#issuecomment-471222773) for that specific part of the PR.    I'm creating this issue to hear feedback from others in the community on the impact that specifying `crlf` (or any line ending for that matter) has for them.    I'm not tied to keeping the `crlf` change, but if a change is going to be made, I'd like to not have it keep changing because not enough discussion occurred first.	HowardWolosky	null	null	null	null	null	null	
2019-03-09 23:38:04.0	2019-03-09 23:39:38.0	2020-12-03 12:00:28.0	closed	[won't fix]	1	238	test	https://api.github.com/repos/microsoft/calculator/issues/238	https://github.com/microsoft/calculator/issues/238	contents	throughtele	null	null	null	null	null	null	
2019-03-09 23:39:18.0	2019-03-09 23:46:33.0	2019-03-13 06:18:25.0	closed	[]	5	239	Remove end-of-line from .editorconfig	https://api.github.com/repos/microsoft/calculator/issues/239	https://github.com/microsoft/calculator/pull/239	## Fixes #.  As mentioned here, https://github.com/Microsoft/calculator/issues/237#issuecomment-471230876, `crlf` is already automatically modified by `.gitattribute`, by removing this file we will:  - not change the behavior on Windows (git will replace CR and LF by CRLF)  - prevent issues on Mac/Linux.    There is no rational reasons to keep it, sometimes, less is more. (the only reason I think about is if a file is modified by 2 file editors on the same computer, but the odds are high that they already uses the same EOL).    ### Description of the changes:  - remove the `end_of_line = crlf` from .editorconfig.	rudyhuyn	null	null	null	null	null	null	
2019-03-10 00:08:13.0	2019-03-18 21:09:14.0	2020-12-03 12:00:27.0	closed	[Pri: 3, Area: User Experience, fixed]	2	240	Currency converter displays an extra space with some locales	https://api.github.com/repos/microsoft/calculator/issues/240	https://github.com/microsoft/calculator/issues/240	**Describe the bug**  <!--A clear and concise description of what the bug is.-->    An extra space is added at the end of the number with some locales and numbers:    ![image](https://user-images.githubusercontent.com/1226538/54079153-ace3ac00-428b-11e9-8479-ac5262814772.png)      **Steps To Reproduce**  - Change your OS language to French or Spanish  - Open the currency converter  - Type 1111111  - See that the 2 currencies display 2 spaces instead of one     **Expected behavior**  - Display only one space    **Device and Application Information (please complete the following information):**   - OS Build: 10.0.18348.0   - Architecture: X64   - Application Version: 10.1812.10048.0	rudyhuyn	null	null	null	null	null	null	
2019-03-10 00:13:50.0	2019-03-18 20:38:05.0	2019-03-18 20:38:05.0	closed	[]	0	241	Propose minor code-cleanups	https://api.github.com/repos/microsoft/calculator/issues/241	https://github.com/microsoft/calculator/pull/241	### Description of the changes:  - Remove unnecessary 'else', 'continue' statements    ### How changes were validated:  - Manual.    	Maharramoff	null	null	null	null	null	null	
2019-03-10 01:22:15.0	2019-03-18 21:09:14.0	2019-03-18 21:09:15.0	closed	[fixing approved issue]	3	242	Fix formatting issues with CurrencyConverter and some locales	https://api.github.com/repos/microsoft/calculator/issues/242	https://github.com/microsoft/calculator/pull/242	## Fixes #240 and #232     The ViewModel wrongly assumed that non-breaking spaces were only used between the value and the symbol. It's not the case of all locales using non-breaking spaces as a thousand delimiter (French for example).    When it was the case, the function only replaced the first thousand delimiter found and kept the extra space at the end of the string, generating 2 issues:    - Extra space at the end: https://github.com/Microsoft/calculator/issues/240   - Bad formatting of the number: https://github.com/Microsoft/calculator/issues/232    ### Description of the changes:    Replace `currencyResult.find(L'\u00a0')` by a regex only removing spaces at the end of the string.    ### Screenshots  Before:    ![image](https://user-images.githubusercontent.com/1226538/54079359-d4d50e80-428f-11e9-8780-53dfbc82599e.png)    After:    ![image](https://user-images.githubusercontent.com/1226538/54079342-9f302580-428f-11e9-8856-2e7564a59eb7.png)  	rudyhuyn	null	null	null	null	null	null	
2019-03-10 02:55:55.0	null	2021-08-02 09:03:43.0	open	[help wanted, Enhancement, Pri: 2, needs spec]	5	243	Update Angle Converter to Support Degrees, Minutes, Seconds Format For Conversions	https://api.github.com/repos/microsoft/calculator/issues/243	https://github.com/microsoft/calculator/issues/243	<!--    See https://github.com/Microsoft/calculator/blob/master/docs/NewFeatureProcess.md for  suggestions on how to write a good feature pitch. Just want to submit an idea quickly? Try Feedback  Hub instead: https://insider.windows.com/en-us/fb/?contextid=130    -->    **Problem Statement**  <!-- What problem are we trying to solve? Who’s the target audience? Is there a customer need or  pain point we need to remedy? Is there a business goal or metric we are trying to improve? Do we  have a hypothesis we want to prove or disprove? -->    The problem is the Angle Converter does not support conversion of an angle represented in the Degree, Minute, Seconds (DMS) format to the other 3 currently supported formats (degrees, gradians, radians).    This is a pain point because DMS is a very commonly used angle format traditionally used by the fields of geography, cartography, and GIS, and not having this conversion in the Windows Calculator forces the user to perform the mathematical calculations themselves or use another converter online.    **Evidence or User Insights**  <!-- Why should we do this? Potential sources of data: Feedback Hub, other GitHub issues, other  anecdotes from listening to customers in person or online, request from another team, telemetry  data, user research, market or competitive research -->    Searching online provides hundreds of thousands of search results where users are asking about how to perform this conversion, and many different online calculators that attempt to offer this service. From a more philosophical perspective, the converter is incomplete in supporting a major type of angle representation and we should strive to complete it.    **Proposal**  <!-- How will the solution/feature help us solve the problem? How will it meet the target  audience’s needs? If there are business goals or metrics, how does this improve them? -->    The proposal is a new feature that will allow a conversion from any of the other existing supported Angle types.    **Goals**  <!-- What you want to accomplish with this feature. Typical examples include  “User Can *perform some task*” -->    The goal is to add a DMS option to the two drop down menus in the Angle Converter page which would allow the user to convert TO the DMS representation as well as FROM the DMS representation. Two additional text boxes would also need to be added for the user to input the minutes and seconds, or there would need to be a way to parse the representation:    30° 15' 50"    This will allow a conversion from any of the other existing supported Angle types.    **Non-Goals**  <!-- Things we are explicitly not doing or supporting or that are out of scope, including reasons  why. -->    **Low-Fidelity Concept**  <!-- Show as much of the experience as needed to explain the idea. This can be as simple as a  napkin drawing but can also be a code prototype, a PowerPoint walkthrough, or a design  comp. -->    ![After](https://user-images.githubusercontent.com/3419924/54080961-b5021280-42b0-11e9-91ce-cae969044fc4.PNG)  	resolutedreamer	null	null	null	null	null	null	
2019-03-10 04:53:54.0	2019-03-24 22:48:05.0	2019-03-25 22:49:23.0	closed	[fixing approved issue]	12	244	Fixed x:Name instances	https://api.github.com/repos/microsoft/calculator/issues/244	https://github.com/microsoft/calculator/pull/244	## Fixes #62    Fixed camel cased x:Name, x:Uid names that were using camel-case with Pascal-case.    This also repairs the associated resource files and automation properties.    ### Description of the changes:  - Renamed camel-case x:Name with Pascal case names  - Renamed camel-case x:Uid names with Pascal-case names and updated the linked resx resources and AutomationName items.    ### How changes were validated:  This task was requested internally, added by the issue bot and directly assigned to me.    ### Unit Tests  Ran the existing Unit Tests, All Tests Pass    ![image](https://user-images.githubusercontent.com/3520532/54080939-48dfd880-42c9-11e9-97dd-7e95106cb261.png)    	LanceMcCarthy	null	null	null	null	null	null	
2019-03-10 07:22:57.0	2019-03-20 16:54:02.0	2020-12-03 12:00:26.0	closed	[Area: User Experience, won't fix, Pri: 2]	3	245	The FontSize of CalculationResult doesn't auto-scale with some locales.	https://api.github.com/repos/microsoft/calculator/issues/245	https://github.com/microsoft/calculator/issues/245	The `CalculationResult` control has a built-in feature to automatically modify the FontSize of the control to make sure the content is always fully visible.    This behavior works perfectly in English (US):  ![image](https://user-images.githubusercontent.com/1226538/54081864-3366b080-42c1-11e9-9dbf-32d418fab815.png)    But not with some other languages (example with French):  ![75602968-ACE9-48C0-8CDB-5756EAA6AB18](https://user-images.githubusercontent.com/1226538/54081877-6dd04d80-42c1-11e9-9ea0-74dfbb00b212.GIF)    **Steps To Reproduce**  - Change the system language  - Select one of the converter (bug visible with all of them)  - Type a long number.    **Expected behavior**    The control should modify the FontSize when the number is too large    **Device and Application Information (please complete the following information):**   - OS Build: 10.0.18348.0   - Architecture: X64   - Application Version: 10.1812.10048.0	rudyhuyn	null	null	null	null	null	null	
2019-03-10 08:20:04.0	2019-03-20 16:54:03.0	2019-03-20 21:02:50.0	closed	[fixing approved issue]	4	246	Fix auto-scaling of CalculationResult when the current locale displays currency symbols on the right	https://api.github.com/repos/microsoft/calculator/issues/246	https://github.com/microsoft/calculator/pull/246	## Fixes #245    ### Description of the changes:  In order to move the currency symbol to the right, the property `Grid.Column` of the textblock and CalculationResult were switched. The issue is that one of the column width in `Auto` while the other is `*`. CalculationResult were then no more able to correctly calculate the space available and modify the font-size to fit correctly.    Instead of switching columns **and** modifying the columns width, I simply added a third column and used it for the currency symbol without moving the `CalculationResult`.    ### How changes were validated:  Manually tested in english (symbol on the left), spanish (symbols on the right) and french (symbols on the right)   	rudyhuyn	null	null	null	null	null	null	
2019-03-10 08:32:39.0	2019-03-13 22:08:52.0	2019-03-14 06:03:30.0	closed	[]	3	247	Remove rendertransform never used	https://api.github.com/repos/microsoft/calculator/issues/247	https://github.com/microsoft/calculator/pull/247	NIT: remove RenderTransform never used in `UnitConverter.xaml`	rudyhuyn	null	null	null	null	null	null	
2019-03-10 08:53:40.0	2019-03-26 18:24:37.0	2020-12-03 12:00:25.0	closed	[Area: User Experience, fixed, Pri: 2]	2	248	"Update rates" button cropped/hidden in some languages when the windows is too small.	https://api.github.com/repos/microsoft/calculator/issues/248	https://github.com/microsoft/calculator/issues/248	**Describe the bug**  The "Update rates" button is cropped/hidden when the textblock "Updated <Datetime>" is wrapped.    ![image](https://user-images.githubusercontent.com/1226538/54082674-40d66780-42ce-11e9-8e46-56262a99e6b5.png)      **Steps To Reproduce**  1. Launch the calculator in french  2. Open the currency converter  3. Resize the window    **Device and Application Information (please complete the following information):**   - OS Build: 10.0.18348.0   - Architecture: X64   - Application Version: 10.1812.10048.0  	rudyhuyn	null	null	null	null	null	null	
2019-03-10 09:36:05.0	2019-03-26 18:24:37.0	2019-03-26 18:24:37.0	closed	[Bug, fixing approved issue]	14	249	Improve performance of SupplementaryResult + Modify the height of RowDltrUnits when UnitConverter is in Landscape	https://api.github.com/repos/microsoft/calculator/issues/249	https://github.com/microsoft/calculator/pull/249	## Fixes #248   Before:  ![image](https://user-images.githubusercontent.com/1226538/54083139-c0ffcb80-42d4-11e9-819f-18186ff2eba4.png)    After:  ![image](https://user-images.githubusercontent.com/1226538/54083087-15ef1200-42d4-11e9-9595-36b79aa9f72e.png)      ### Description of the changes:  - Use `GridLength::Star` on this control (when all other Grid's children are also `GridLength::Star`) will in fact limit the size available to display the content. With `GridLength::Auto`, the grid will give enough space to display the content (without using too much space when the content is small)    ### How changes were validated:  Tested manually with all converters and with different window sizes.	rudyhuyn	null	null	null	null	null	null	
2019-03-10 10:04:44.0	2019-03-11 03:52:39.0	2020-12-03 12:00:24.0	closed	[Pri: 3, Area: User Experience, not repro]	2	250	Currency failed to load after off-line	https://api.github.com/repos/microsoft/calculator/issues/250	https://github.com/microsoft/calculator/issues/250	**Describe the bug**  The first time you use the app, if you are offline, currencies can't be loaded. It's normal cause currencies are loaded from internet. But If you are becoming online, currencies are not loaded if you press the button "Update" and you must restart the app (online) to start to use this mode.    **Steps To Reproduce**  1. Launch the app (for the very first time) and be offline  2. Choose Currency mode  3. Currencies are not loaded  4. be online  5. Press the button Update  6. Currencies are not loaded and the currency mode can't be used.    **Expected behavior**  After press buton "Update", Currencies must be loaded    **Device and Application Information (please complete the following information):**   - OS Build: 10.0.17763.0   - Architecture: X64   - Application Version: 10.1812.10048.0  	samoteph	null	null	null	null	null	null	
2019-03-10 16:34:17.0	2019-03-10 16:35:13.0	2020-12-03 12:00:23.0	closed	[won't fix]	1	251	test	https://api.github.com/repos/microsoft/calculator/issues/251	https://github.com/microsoft/calculator/issues/251	contents	throughtele	null	null	null	null	null	null	
2019-03-10 18:49:35.0	2019-08-01 22:07:28.0	2020-12-03 12:00:22.0	closed	[Area: User Experience, fixed, Pri: 2]	8	252	Incorrect currency ratio equality when low valued unit converted to high valued	https://api.github.com/repos/microsoft/calculator/issues/252	https://github.com/microsoft/calculator/issues/252	<!--Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.-->    **Describe the bug**  Converter rounds/truncates rate to 4 decimal places, therefore currency ratio of low valued units such iranian rial or indonesian rupiah compared to highly valued units like US dollars displayed incorrectly.    **Steps To Reproduce**  1. Launch the calculator  2. Open the currency converter  3. Select Iranian rial as first unit and US dollar as second.  4. See today's exchange rate.    **Expected behavior**  Ideally ratio should be rounded appropriately, not too much and not too little. Basically converters round it to 6 decimals. E.g **1** IRR = 0.000024 USD    **Screenshots**  ![Снимок экрана (7)_LI](https://user-images.githubusercontent.com/9804406/54089372-b0f1f580-4381-11e9-9d4d-bf6eda3e0856.jpg)    <!--If applicable, add screenshots to help explain your problem.-->    **Device and Application Information (please complete the following information):**   - OS Build: 17763   - Architecture: X64   - Application Version: 10.1812.10048.0    <!--Run the following commands in Powershell and copy/paste the output.  " - OS Build: $([Environment]::OSVersion.Version)"  " - Architecture: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Architecture)"  " - Application Version: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Version)"  -->    **Additional context**  Possible solution in:  - https://github.com/Microsoft/calculator/blob/0f615faff93dc11101f6b730ce46c69f5390b94c/src/CalcViewModel/DataLoaders/CurrencyDataLoader.cpp#L42  - https://github.com/Microsoft/calculator/blob/0f615faff93dc11101f6b730ce46c69f5390b94c/src/CalcViewModel/DataLoaders/CurrencyDataLoader.cpp#L281    	Maharramoff	null	null	null	null	null	null	
2019-03-10 20:59:01.0	2019-03-20 21:28:31.0	2019-03-20 21:28:32.0	closed	[]	1	253	Propose code-cleanups#2	https://api.github.com/repos/microsoft/calculator/issues/253	https://github.com/microsoft/calculator/pull/253	### Description of the changes:  - Remove redundancy   - Simplify if statements    ### How changes were validated:  - Manual    	Maharramoff	null	null	null	null	null	null	
2019-03-10 22:04:26.0	2020-05-06 22:14:55.0	2020-12-03 12:00:21.0	closed	[Bug, Area: User Experience, fixed, Pri: 2]	3	254	Switching from Difference between dates to Add or subtract dates ignores the first date field	https://api.github.com/repos/microsoft/calculator/issues/254	https://github.com/microsoft/calculator/issues/254	**Describe the bug**  The date fields for the two date manipulation systems are treated independently (both apparently seeded w/ "today")    **Steps To Reproduce**  Step 1: (‎3/‎10/‎2019 5:53:03 PM) User left click on "Calculator (window)" in "Cal"  Step 2: (‎3/‎10/‎2019 5:53:04 PM) User left click on "Open Navigation (button)" in "Cal"  Step 3: (‎3/‎10/‎2019 5:53:05 PM) User left click on "Date Calculation Calculator (list item)" in "Cal"  Step 4: (‎3/‎10/‎2019 5:53:07 PM) User left click on "From (calendar date picker)" in "Cal"  Step 5: (‎3/‎10/‎2019 5:53:09 PM) User left click on "14 (data item)" in "Cal"  Step 6: (‎3/‎10/‎2019 5:53:11 PM) User left click on "To (calendar date picker)" in "Cal"  Step 7: (‎3/‎10/‎2019 5:53:12 PM) User left click on "20 (data item)" in "Cal"  Step 8: (‎3/‎10/‎2019 5:53:15 PM) User left click on "Difference 6 days (text)" in "Cal"  Step 9: (‎3/‎10/‎2019 5:53:17 PM) User left click on "Calculation mode (combo box)" in "Cal"  Step 10: (‎3/‎10/‎2019 5:53:19 PM) User left click on "Add or subtract days (text)" in "Cal"  Step 11: (‎3/‎10/‎2019 5:53:21 PM) User left click on "‎March‎ ‎10‎, ‎2019 (text)" in "Cal"    **Expected behavior**  The date in the first field of `Difference between dates` / `Add or subtract dates` should be carried over when switching between the two.    **Screenshots**  <!--If applicable, add screenshots to help explain your problem.-->  Step 8:  ![image](https://user-images.githubusercontent.com/2119212/54092110-965a5500-435e-11e9-8beb-28fc38ca5fe1.png)  Step 11:  ![image](https://user-images.githubusercontent.com/2119212/54092114-a6723480-435e-11e9-995a-1bf3a3300061.png)    **Device and Application Information (please complete the following information):**   - OS Build: 10.0.18351.0   - Architecture: X64   - Application Version: 10.1812.10048.0    **Additional context**  <!--Add any other context about the problem here.-->  I understand that this is just the way it is, but when using Converter and changing the first drop down, it doesn't forget the user's selected value.	jsoref	null	null	null	null	null	null	
2019-03-11 01:56:30.0	2019-03-11 02:42:28.0	2020-12-03 12:00:20.0	closed	[won't fix, question]	2	255	When is open source minesweeping?	https://api.github.com/repos/microsoft/calculator/issues/255	https://github.com/microsoft/calculator/issues/255	When is open source minesweeping?	chengstone	null	null	null	null	null	null	
2019-03-11 02:58:54.0	2019-08-01 22:07:28.0	2019-08-01 22:07:28.0	closed	[fixing approved issue]	18	256	Currency rate: always display minimum 4 significant decimals or 2 trailing zeros if the number is integer	https://api.github.com/repos/microsoft/calculator/issues/256	https://github.com/microsoft/calculator/pull/256	## Fixes #252    _Converter rounds rate to 4 decimal places, therefore currency ratio of low valued units such iranian rial or indonesian rupiah compared to highly valued units like US dollars displayed incorrectly._    ![image](https://user-images.githubusercontent.com/1226538/54097727-a5e19a00-436e-11e9-926f-86f50d8e8841.png)  Left: before, Right: after.    ### Description of the changes:  Modify how we round the currency rate. Instead of always cropping the number after 4 decimals, we compute how many decimals are needed to display the currency rate with minimum 2 meaningful decimals.    Number of decimals to display:  ` Max(4, (int)-Log10(currencyRate) + 2)`     Replace also `static_cast<int>(ratio * static_cast<int>(scale)) / scale;` to support bigger scales.     ### How changes were validated:  - Unit tests added  - Manual tests in English and French    	rudyhuyn	null	null	null	null	null	null	
2019-03-11 05:36:22.0	2019-03-12 00:04:18.0	2019-03-12 00:04:18.0	closed	[]	0	257	Remove duplicate .editorconfig.	https://api.github.com/repos/microsoft/calculator/issues/257	https://github.com/microsoft/calculator/pull/257	This PR removes the duplicate .editorconfig file added by #237 and removes the end_of_line entry per #225.     Source files should always be UTF-8 without BOM as not all tools handle the BOM correctly. Regarding issues with special characters in string constants, Windows is based on unicode strings. This is unrelated to how the source file is encoded. See also: https://docs.microsoft.com/en-us/cpp/cpp/string-and-character-literals-cpp?view=vs-2017    You can tell the compiler that source is UTF-8 using https://docs.microsoft.com/en-us/cpp/build/reference/utf-8-set-source-and-executable-character-sets-to-utf-8?view=vs-2017	jlaanstra	null	null	null	null	null	null	
2019-03-11 07:25:53.0	2019-07-16 18:44:13.0	2020-12-03 12:00:19.0	closed	[Area: User Experience, fixed, Pri: 2]	2	258	Countries in the currency converter aren't correctly sorted (because of accents and diacritics)	https://api.github.com/repos/microsoft/calculator/issues/258	https://github.com/microsoft/calculator/issues/258	**Describe the bug**    Countries with an accent in their names aren't correctly sorted. (For example "États-Unis" (USA in French) is at the end of the list, making it harder to find.    ![97E3BE94-3DF2-4ADC-AE15-25D520430F4D](https://user-images.githubusercontent.com/1226538/54106505-b3f5e180-4393-11e9-94c7-0a38f7288abc.GIF)    **Steps To Reproduce**  - Change the language of the OS to French  - Open the currency converter  - Try to find "États-Unis" in the list    **Expected behavior**  The application must take into account accents and diacritics when sorting countries      **Device and Application Information (please complete the following information):**   - OS Build: 10.0.18348.0   - Architecture: X64   - Application Version: 10.1812.10048.0	rudyhuyn	null	null	null	null	null	null	
2019-03-11 07:47:01.0	2019-07-16 18:44:14.0	2019-07-16 18:44:14.0	closed	[fixing approved issue]	2	259	Use the current locale to sort country names	https://api.github.com/repos/microsoft/calculator/issues/259	https://github.com/microsoft/calculator/pull/259	## Fixes #258    > Countries with an accent in their names aren't correctly sorted. (For example "États-Unis" (USA in French) is at the end of the list, making it harder to find.    (see also the gif available here: #258)      ### Screenshot of the fix  ![image](https://user-images.githubusercontent.com/1226538/54107604-e1905a00-4396-11e9-98f2-c1d4fe0533da.png)      ### Description of the changes:  `std::wstring::operator<` does a very basic comparison of strings based on the value (int) of the characters without taking into account accents, diacritics, etc...    To fix this issue, we will use std::collate with the current locale, it will not only ignore accents and diacritics but use locale rules to sort the string (for example `ch` in Czech is between ` h`  and `i`)      ### How changes were validated:  - tested in french, spanish and english.	rudyhuyn	null	null	null	null	null	null	
2019-03-11 08:33:05.0	2019-04-16 18:29:44.0	2020-12-03 12:00:18.0	closed	[Area: User Experience, fixed, Pri: 2]	2	260	Inputs are lost after clicking the "Update rates" button.	https://api.github.com/repos/microsoft/calculator/issues/260	https://github.com/microsoft/calculator/issues/260	**Describe the bug**  Converter doesn't keep inputs after clicking the "Update rates" button.    **Steps To Reproduce**  1. Launch the calculator  2. Open the currency converter  3. Select currency pair and enter any value for base unit.  4. Click on "Update rates"    **Expected behavior**  It would be nice if the converter keeps the inputs when you click the "Update rates" button or recalculate result automatically (based on from unit) if ratio have changed. This will prevent re-entering the same amount again.    **Screenshots**  ![kLkmVLrInx](https://user-images.githubusercontent.com/9804406/54109368-e89b8480-43f7-11e9-8e68-7f712916d09d.gif)    **Device and Application Information:**   - OS Build: 17763   - Architecture: X64   - Application Version: 10.1812.10048.0  	Maharramoff	null	null	null	null	null	null	
2019-03-11 10:18:54.0	2019-06-17 21:26:31.0	2020-12-03 12:00:17.0	closed	[Enhancement, pitch declined]	7	261	Abacus mode	https://api.github.com/repos/microsoft/calculator/issues/261	https://github.com/microsoft/calculator/issues/261	I think everyone would agree that what calc really needs is an abacus mode.	jonathanbyrne	null	null	null	null	null	null	
2019-03-11 15:05:21.0	2019-03-12 21:20:09.0	2020-12-03 12:00:16.0	closed	[by design]	5	262	History button focus oddity	https://api.github.com/repos/microsoft/calculator/issues/262	https://github.com/microsoft/calculator/issues/262	<!--Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.-->    Focus remains on the History button after opening and closing it. This is odd since typing numbers or operators works as intended, but pressing enter re-opens the history instead of showing a result.  <!--A clear and concise description of what the bug is.-->    **Steps To Reproduce**  <!--Steps to reproduce the behavior:-->  1. Enter at least two calculations using keypad ( 1 0 + 1 0 Enter ) ( 2 0 + 2 0 Enter )  2. Click on history button to show history  3. Click on history button to close history  4. Enter a new calculation ( 3 0 + 3 0 Enter )  5. Instead of showing the result of the calculation the history window re-opens    **Expected behavior**  <!--A clear and concise description of what you expected to happen.-->  I expect that the calculator removes focus from the history button at step 4, maybe not when entering the first number but definitely after pressing an operator.    **Screenshots**  <!--If applicable, add screenshots to help explain your problem.-->  Showing history (step 3)  ![image](https://user-images.githubusercontent.com/5238531/54133222-111d8180-43ec-11e9-862f-9a56b604fd1a.png)    Pressing enter after clicking history button to close, and typing in new operation.  ![image](https://user-images.githubusercontent.com/5238531/54133271-272b4200-43ec-11e9-8227-2a8535fe7c71.png)    As a bonus, pressing enter again at this point selects the top history item.  ![image](https://user-images.githubusercontent.com/5238531/54133962-6f972f80-43ed-11e9-934b-a3cc6fe9e417.png)        **Device and Application Information (please complete the following information):**   - OS Build: 10.0.18353.0   - Architecture: X64   - Application Version: 10.1812.10048.0    <!--Run the following commands in Powershell and copy/paste the output.  " - OS Build: $([Environment]::OSVersion.Version)"  " - Architecture: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Architecture)"  " - Application Version: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Version)"  -->    **Additional context**  <!--Add any other context about the problem here.-->  Clicking in the display of the calculator removes focus from the history button.    This has been a minor annoyance for a while now. I don't remember if I saw it prior to Windows 10, but I've also failed to bring this up in feedback hub until now.	schnabel45	null	null	null	null	null	null	
2019-03-11 17:32:54.0	2019-03-11 21:21:55.0	2019-03-12 06:11:59.0	closed	[]	5	263	Added two missing spaces	https://api.github.com/repos/microsoft/calculator/issues/263	https://github.com/microsoft/calculator/pull/263	## Fixes #.  Missing spaces    ### Description of the changes:  - Added missing spaces that weren't visible due to manual line breaks.	mikeshatch	null	null	null	null	null	null	
2019-03-11 22:08:39.0	null	2021-05-26 10:03:50.0	open	[Bug, triage approved, Area: User Experience, Pri: 2]	9	264	Repeated enter key presses only applies previous binary operator (ignores unary operators)	https://api.github.com/repos/microsoft/calculator/issues/264	https://github.com/microsoft/calculator/issues/264	**Describe the bug**  Mysterious "+ 1" appears in the history panel after reproducing following steps which leads to an incorrect result.    **Click on buttons in a following order to reproduce**  a. 1  b. +  c. 1  d. n!  e. = (at this point the calculator shows correct result which is 2)  f.  √  g. x<sup>2</sup> (at this point the calculator still shows correct result which is 2)  h. = (at this point the calculator shows incorrect result 3 insted of 2 and "+ 1" appears at the end of the expression in the history panel)    **Screenshots**  ![obraz](https://user-images.githubusercontent.com/32700039/54159869-5d011280-444e-11e9-91db-656b994403ee.png)    **Device and Application Information (please complete the following information):**   - OS Build: 10 0 17134 0   - Architecture: X64   - Application Version: 10.1812.10048.0    **Additional context**  Ones can be replaced with any other natural numbers and issue will still occur.  In that case mysterious "+ 1" after expression will be replaced with "+ whatever the result of previously counted factorial was".  	baktrius	null	null	null	null	null	null	
2019-03-11 22:11:04.0	2019-03-15 09:06:11.0	2020-12-03 12:00:15.0	closed	[fixed]	1	265	NumberPad.xaml assigns undefined Grid.Row value	https://api.github.com/repos/microsoft/calculator/issues/265	https://github.com/microsoft/calculator/issues/265	https://github.com/Microsoft/calculator/blob/057401f5f2b4bb1ea143da02c773ac18d1bb9a2e/src/Calculator/Views/NumberPad.xaml#L112    The `CalculatorButton` is assigned to `Grid.Row="4"` but there aren't that many rows defined.  "Grid.Row" is zero indexed so this is actually the fifth row, but only four rows are defined in the containing grid.    This button should be assigned to Row 3.	mrlacey	null	null	null	null	null	null	
2019-03-11 22:55:16.0	null	2021-08-02 09:03:45.0	open	[Enhancement, Pri: 2, approved]	6	266	Converter doesn't automatically flip from & to fields during conversion	https://api.github.com/repos/microsoft/calculator/issues/266	https://github.com/microsoft/calculator/issues/266	**Describe the bug**  Converter doesn't easily flip the from & to fields during conversions (Temperature, Volume, Speed etc.)    **Steps To Reproduce**  Steps to reproduce the behavior:  1. Launch Calculator  2. Click on Menu and open the Temperature Converter  3. It loads Celsius to Fahrenheit  4. Try to flip the conversion  5. Change first field from Celsius to Fahrenheit  6. Change second field from Fahrenheit to Celsius    **Expected behavior**  It would be nice if the converter could automatically flip the from & to values during conversion. If a Celsius-> Fahrenheit conversion is changed to Fahrenheit -> Fahrenheit conversion then it should be modify it to Fahrenheit -> Celsius similar to how most of these converters work online. In the above steps if the user shouldn't have to perform step #6.    **Screenshots**  <img src="https://user-images.githubusercontent.com/6065982/54163204-7fc30500-4415-11e9-8292-8d31e15e7872.gif" width="300">  <!--![calculator](https://user-images.githubusercontent.com/6065982/54163204-7fc30500-4415-11e9-8292-8d31e15e7872.gif | width=100)-->    **Device and Application Information (please complete the following information):**   - OS Build: 10.0.17763.0   - Architecture: X64   - Application Version: 10.1812.10048.0    **Additional context**  Might also be good to add a flip or exchange button to directly flip the to & from fields.	degant	null	null	null	null	null	null	
2019-03-11 23:00:28.0	2019-05-09 17:10:18.0	2020-12-03 12:00:14.0	closed	[Pri: 3, Area: User Experience, fixed]	3	267	The calculator should accept exponential numbers without sign in scientific mode 	https://api.github.com/repos/microsoft/calculator/issues/267	https://github.com/microsoft/calculator/issues/267	**Describe the bug**  The calculator currently only accepts exponential numbers like `2323e+12` and `23241e-12`. The calculator should also accept `2323e12` or `334.232e12` in the Scientific mode.    A comment line 94 of `CopyPasteManager.cs` also indicates this need:  ```  //-- add support to allow pasting for expressions like 1.3e12(as of now we allow 1.3e+12)  ```  ![image](https://user-images.githubusercontent.com/1226538/54163456-5b1b5d00-4416-11e9-817f-caca3e9448ff.png)      **Steps To Reproduce**  - copy "2323e12" in your clipboard  - paste in the calculator (Scientific mode)  - The calculator will display "Invalid input".    **Expected behavior**  - The calculator should display `2,323.e+12`      **Device and Application Information (please complete the following information):**   - OS Build: 10.0.18348.0   - Architecture: X64   - Application Version: 10.1812.10048.0	rudyhuyn	null	null	null	null	null	null	
2019-03-11 23:11:29.0	2019-03-11 23:30:15.0	2020-12-03 12:00:13.0	closed	[won't fix]	2	268	Date Calculation not working currently	https://api.github.com/repos/microsoft/calculator/issues/268	https://github.com/microsoft/calculator/issues/268	**Describe the bug**  Date Calculation produces different results for dates in the past vs dates in the future    **Steps To Reproduce**  Steps to reproduce the behavior:  1. Go to Date Calculation  2. Select current date as From  3. Select current date as To     - Difference says 'Same dates'  4. Now change from date to one day after current date     - Difference says '1 day'  5. Now change from date to one day before current date     - Difference says 'Same dates'    **Expected behavior**  It should say 1 day for one day before    **Screenshots**  <img src="https://user-images.githubusercontent.com/6065982/54163952-0547b480-4418-11e9-96d3-b0dd20ef4a95.gif" width="300">    <img src="https://user-images.githubusercontent.com/6065982/54164016-48a22300-4418-11e9-804b-c66a3358d359.gif" width="300">    **Device and Application Information (please complete the following information):**   - OS Build: 10.0.17763.0   - Architecture: X64   - Application Version: 10.1812.10048.0  	degant	null	null	null	null	null	null	
2019-03-12 03:23:38.0	2019-03-12 21:58:48.0	2019-03-12 21:58:48.0	closed	[]	3	269	CopyPasteManagerTest fails to test all values	https://api.github.com/repos/microsoft/calculator/issues/269	https://github.com/microsoft/calculator/pull/269	CopyPasteManager unit tests were not fully run, the first item of arrays were never tested. (Luckily, the not-tested values were ok).    ### Description of the changes:    `while(--size)`  the following code won't run the code in the loop with `size==0`.    Instead we should use:  `while(--size >= 0)`    **Before** (first value not tested):  ![image](https://user-images.githubusercontent.com/1226538/54172460-646af080-443b-11e9-930f-2e245cd31c7c.png)      **After** (the test fails as expected):  ![image](https://user-images.githubusercontent.com/1226538/54172389-15bd5680-443b-11e9-90f8-3e6972a07362.png)  	rudyhuyn	null	null	null	null	null	null	
2019-03-12 03:58:18.0	2019-05-09 17:10:19.0	2019-05-09 17:10:19.0	closed	[Bug, fixing approved issue]	1	270	Accept exponential numbers without -/+ sign.	https://api.github.com/repos/microsoft/calculator/issues/270	https://github.com/microsoft/calculator/pull/270	## Fixes #267    > The calculator currently only accepts exponential numbers like 2323e+12 and 23241e-12. The calculator should also accept 2323e12 or 334.232e12 in the Scientific mode.      ### Description of the changes:  - modify the regex used to check exponentials  - modify `OnPaste(String^ pastedString, ViewMode mode)` to accept exponentials without signs.  - add unit tests    ### How changes were validated:  - Unit tests + manual testing in English, French and Spanish.    Before/After  ![image](https://user-images.githubusercontent.com/1226538/54173726-4fdd2700-4440-11e9-89ff-8f2752f6b793.png)  	rudyhuyn	null	null	null	null	null	null	
2019-03-12 04:21:32.0	2019-03-12 08:32:28.0	2020-12-03 12:00:13.0	closed	[won't fix]	2	271	Add Feet+Inches support to the length converter.	https://api.github.com/repos/microsoft/calculator/issues/271	https://github.com/microsoft/calculator/issues/271	The calculator manages Feet and Inches but only separately, however, human sizes in the US use Feet+Inches combined for example and the app currently provides no way to convert this very common pair of units to centimeters (and vice versa)    Example:  174 cm = 5 feet 7 inch  6'11" = 211 cm    If this idea is validated, we will also need to decide where we should provide this feature:  - as a new unit in the Length converter (but does it make sense to convert miles to feet+inches?)  - as a new converter named: "Human size".	rudyhuyn	null	null	null	null	null	null	
2019-03-12 05:37:44.0	2019-05-14 16:57:59.0	2020-12-03 12:00:10.0	closed	[Area: Test Case, fixed, Pri: 2]	1	272	45 unit tests don't pass with some locales	https://api.github.com/repos/microsoft/calculator/issues/272	https://github.com/microsoft/calculator/issues/272	**Describe the bug**  <!--A clear and concise description of what the bug is.-->    45 unit tests fail when the computer is in French for example:  ![image](https://user-images.githubusercontent.com/1226538/54176881-b1f05900-444d-11e9-99db-beedbdb61a6e.png)    (Probably more with other languages)    **Steps To Reproduce**  - Change system language to French  - Run unit tests    **Expected behavior**  - All unit tests should pass whatever the language used on the computer running them. Non-english developers should not be forced to modify the language of their computers.    **Device and Application Information (please complete the following information):**   - OS Build: 10.0.18348.0   - Architecture: X64   - Application Version: 10.1812.10048.0  	rudyhuyn	null	null	null	null	null	null	
2019-03-12 06:31:02.0	2019-03-19 09:30:49.0	2019-03-19 09:56:58.0	closed	[]	11	273	Lossless optimization of images	https://api.github.com/repos/microsoft/calculator/issues/273	https://github.com/microsoft/calculator/pull/273	### Description of the changes:  - The images were optimised using ImgBot a bot that optimizes images losslessly.	kolappannathan	null	null	null	null	null	null	
2019-03-12 07:51:35.0	2019-03-12 20:34:52.0	2020-12-03 12:00:09.0	closed	[Bug, Area: User Experience, external, investigate]	2	274	Resizing the windows larger results in blank background	https://api.github.com/repos/microsoft/calculator/issues/274	https://github.com/microsoft/calculator/issues/274	**Steps**   1. Resize the window larger    **Description**  I just see a thin border and the background shows through where the new area should be painted. The original area continues to repaint and clips. After restarting calc, it repaints correctly at the new size, but resizing it larger _again_ fails. A reboot of Windows may help for some time until it starts happening again.    **Screenshots**  ![calc](https://user-images.githubusercontent.com/2722420/54182378-a7f84580-44a1-11e9-85d0-e70c06924f70.png)    **Device and Application Information:**   - OS Build: 10.0.17134.0   - Architecture: X64   - Application Version: 10.1812.10048.0   - Graphics card: GTX 660 nVidia driver version: 399.24 (2x 2K monitors, DPI scaling 115%)    I've also observed the issue an a Dell XPS 15 laptop, running on only its Intel embedded graphics. (DPI scaling 250%) so it doesn't seem device specific.  Has been happening for over a year, across I think 3x (?) major Windows 10 updates.	lukeu	null	null	null	null	null	null	
2019-03-12 07:53:41.0	2019-06-17 21:26:52.0	2020-12-03 12:00:08.0	closed	[Enhancement, pitch declined]	8	275	Include Month & Nanoseconds as units of time	https://api.github.com/repos/microsoft/calculator/issues/275	https://github.com/microsoft/calculator/issues/275	Include 'Months' and 'Nanoseconds' as units in the Time converter.  Could also consider adding Decade, Score, Century, Millenium    ![image](https://user-images.githubusercontent.com/6065982/54183085-71e6a180-4460-11e9-85a1-036ad027b7e7.png)  	degant	null	null	null	null	null	null	
2019-03-12 11:33:43.0	null	2021-08-02 09:03:47.0	open	[help wanted, Enhancement, Pri: 2, approved]	5	277	Bring back insert-from-history	https://api.github.com/repos/microsoft/calculator/issues/277	https://github.com/microsoft/calculator/issues/277	**Problem Statement**  Easily insert result(s) from the history **into** an expression being composed, by simply clicking them.    Compared to typing out one single big expression using parenthesis, this proposal lets the user:   * verify that results of sub-expressions look correct (in the history)   * avoid duplication, for example in a ratio `A / (A + B)` , where `A` and `B` are the results of non-trivial expressions    **Evidence or User Insights**  Currently it is awkward and error-prone to reuse a results from history, and impossible(?) to combine results.  This is a regression from the Win32 calculator, and differs from other software calculators with history (e.g. Android).    To illustrate, people familiar with other apps are likely to first wipe what they've written by clicking the history item. Being familiar with physical calculators they might next try something like:     1. Click history item   2. M+   3. Start retyping the wiped expression    Huh, step 3 partially modified the _history_ expression, weird.  So before step 3 we needed to press ESC, fine. Start over. Oh no! There was now a value in memory and M+ doubled it. Right I should have used MS (but then, I have never owned a physical calculator with a MS button.) OK then: click MC (did I need to do that?) Press ESC. Start over again...     Even once the confusion is resolved, the process still takes a minimum of 3 steps, using 3 UI elements (the history item, MS, MR) where a single click could suffice. And it only works for one value.    Note that _some_ scenarios are possible via Ctrl+C, but:    * to Ctrl+C something from history wipes what you've typed - you still cannot combine history items   * the UWP look does not make it obvious that Copy & Paste is available    **Proposal**  If an item is in the history (`10*20 = 200`) and a new expression is being typed...   * ending in an operator (`1 / `): clicking a history item should **append** the result (yielding: `1 / 200`)   * ending in an value (`1 / 5`): the final value should be replaced (`1 / 200`). This is for consistency with other buttons (like MR).    To **overwrite** the current expression, it should still be obvious and intuitive that you can click `C` or press ESC before clicking a history item - making both operations easily accessible.    **Goals**  To make the history pane more useful, via easy reuse of prior results.    **Non-Goals**  Inserting the __entire expression__ from history into the current expression. (That would require a movable text cursor in the main expression editor, which is probably quite a UI departure.)    **Low-Fidelity Concept**  Constructing a 3rd expression from 2 prior expressions (by clicking them) in the Windows 7 Calculator:     ![win7_calc](https://user-images.githubusercontent.com/2722420/54205667-0e4b8b00-44d7-11e9-9052-1fa1e1988777.png)    **Related**   * Editing expressions in the history list: #163    	lukeu	null	null	null	null	null	null	
2019-03-12 11:36:36.0	2019-04-26 17:37:49.0	2020-12-03 06:01:53.0	closed	[won't fix, Pri: 2]	5	278	[Question] GetTraceLoggingProviderEnabled default value? 	https://api.github.com/repos/microsoft/calculator/issues/278	https://github.com/microsoft/calculator/issues/278	There has been a thread opened up on reddit with a lot of noise and confusion:     https://www.reddit.com/r/privacy/comments/aztj3m/windows_10_even_the_calculator_has_build_in/?sort=new    People of reddit came to conclusion the telemetry sent (including invalid pasted data to Calc) depends on the result of GetTraceLoggingProviderEnabled() method - that is, if the data incl. clipboard content is sent to asimov, or not. What is the default value returned by that method on production builds? I could not find any reference to my pasted strings in Diagnostic Data Viewer tool, so I'm confused now.     Could you help clarify that matter? I believe it would help clear up all doubts.     Alex Pawlak	AlexJPawlak	null	null	null	null	null	null	
2019-03-12 12:23:45.0	2019-03-15 09:06:11.0	2019-03-15 09:09:37.0	closed	[]	1	279	Fix Grid.Row value	https://api.github.com/repos/microsoft/calculator/issues/279	https://github.com/microsoft/calculator/pull/279	Fixes #265    ### Description of the changes:  - Update invalid Grid.Row value	Potapy4	null	null	null	null	null	null	
2019-03-12 14:34:34.0	2019-03-12 15:28:39.0	2020-12-03 06:01:52.0	closed	[triage needed]	12	280	Might this be malware?	https://api.github.com/repos/microsoft/calculator/issues/280	https://github.com/microsoft/calculator/issues/280	https://www.gnu.org/proprietary/malware-microsoft.en.html    According to GitHub's TOS (https://help.github.com/en/articles/github-terms-of-service) any software containing malware is non-compliant with those terms and needs to be removed. Also, since Calculator as far as I can tell depends on the proprietary WinRT, it is neither fully-free nor auditable after compile-time.	brettgilio	null	null	null	null	null	null	
2019-03-12 15:46:06.0	2019-05-14 00:01:29.0	2020-12-03 06:01:51.0	closed	[help wanted, Pri: 3, Area: User Experience, fixed]	3	281	Taskbar and start menu jumplist items should not be pinnable/unpinnable or removable	https://api.github.com/repos/microsoft/calculator/issues/281	https://github.com/microsoft/calculator/issues/281	**Describe the bug**  A few months ago, the calculator added items to the jumplist you can show in the taskbar or start menu. There are items for the default, scientific, programmer, and date conversion modes. It's a great addition but the items on this list can be pinned, unpinned or even removed from the list, which I feel should not be possible. E.g., what happens when you remove an entry? Can you bring it back then? I think it would be more appropriate to do it like e.g. Edge or Your Phone, where there are static items that you can neither pin nor unpin or remove.    **Steps To Reproduce**  Right-click on the calculator on either the taskbar or start menu, then right-click on any of the jumplist's items. All items display options for pinning or unpinning/removing.    **Expected behavior**  Right-clicking any jumplist items should only show an "open" option.    **Screenshots**  This is how it looks like:    ![image](https://user-images.githubusercontent.com/11506007/54214193-0e9f5280-44e6-11e9-8f4f-86fb2911435d.png)  ![image](https://user-images.githubusercontent.com/11506007/54214220-1b23ab00-44e6-11e9-8a43-70131fadd71e.png)    This is how I feel it should be like:    ![image](https://user-images.githubusercontent.com/11506007/54214264-368eb600-44e6-11e9-9db8-4020d992fe84.png)    **Device and Application Information (please complete the following information):**   - OS Build: 17134.590   - Architecture: x64   - Application Version: 10.1812.10048.0  	adrianghc	null	null	null	null	null	null	
2019-03-12 18:32:19.0	2019-03-14 23:20:06.0	2020-12-03 06:01:50.0	closed	[Area: Accessibility, Pri: 3, fixed, needs more info]	3	282	Narrator does not convey error information when no more Right Parenthesis can be added in expression.	https://api.github.com/repos/microsoft/calculator/issues/282	https://github.com/microsoft/calculator/issues/282	Test Environment:  OS Version: Windows 10 Build 17133.1  App Name: Calculator  App Version: 10.1804.911.0    Repro Steps:     Launch "Calculator" app.  Launch Narrator.  Navigate to “Programmer/Scientific" control in the navigation pane and activate it.  Enter a number in the display.  Navigate to "Left Parenthesis" button in “Programmer/Scientific Calculator" window and activate it five times.  Now, navigate to "Right Parenthesis" button and activate it five times.  Try to activate "Right Parenthesis" button for the sixth time. No more Right Parenthesis can be added in expression now since the count of Left Parenthesis and Right Parenthesis is equal.  Verify if Narrator conveys error information when no more Right Parenthesis can be added in expression.  Actual Result:    Narrator does not convey error information when no more Right Parenthesis can be added in expression once the count of Left Parenthesis and Right Parenthesis is equal.           Expected Result:    Narrator should convey error information when no more Right Parenthesis can be added in expression.	MicrosoftIssueBot	null	null	null	null	null	null	
2019-03-12 22:04:27.0	null	2021-08-02 09:03:52.0	open	[help wanted, Enhancement, Pri: 2, needs spec]	5	283	Include formula for all conversions	https://api.github.com/repos/microsoft/calculator/issues/283	https://github.com/microsoft/calculator/issues/283	**Problem Statement**  <!-- What problem are we trying to solve? Who’s the target audience? Is there a customer need or  pain point we need to remedy? Is there a business goal or metric we are trying to improve? Do we  have a hypothesis we want to prove or disprove? -->  The problem statement is that I'm performing conversion between 2 units, for example **8 ml to ounces**. I open up the volume converter, select the desired units and enter 8. I get the output in ounces but now I look at the two numbers and find myself wondering what is the formula to get oz from ml. So I need to edit my input to 1 and try and figure out a relation between these two. May check inputs and outputs for 1, 10, 100 and notice that they are related by a certain factor.    While most conversions might have a relationship based on multiplying or dividing a certain factor, this may not be true for all conversions. For example Celsius to Fahrenhiet or similar. Thus making it hard for a user to figure out the conversion & relationship.    The idea is to allow users to use converters even as a lookup in-case they don't how 2 units are inter-related.      **Evidence or User Insights**  <!-- Why should we do this? Potential sources of data: Feedback Hub, other GitHub issues, other  anecdotes from listening to customers in person or online, request from another team, telemetry  data, user research, market or competitive research -->  On searching the web, we can find thousands of results, website with tables, conversions, formulas, discussions on converting various units from one to another. The idea is to make it more informational to use conversions.    **Proposal**  <!-- How will the solution/feature help us solve the problem? How will it meet the target  audience’s needs? If there are business goals or metrics, how does this improve them? -->  The proposal is to include the formula for every conversion, similar to how it is done for currency conversions so that the user is aware of the conversion being performed and doesn't need to look it up or try and deduce it.    **Goals**  <!-- What you want to accomplish with this feature. Typical examples include  “User Can *perform some task*” -->  Users should be able to look at conversions without the need for opening up the web and searching for the conversion formula for any two units, similar to how users can directly check currency conversion rates live within the Calculator app.    **Low-Fidelity Concept**  <!-- Show as much of the experience as needed to explain the idea. This can be as simple as a  napkin drawing but can also be a code prototype, a PowerPoint walkthrough, or a design  comp. -->    <img src="https://user-images.githubusercontent.com/6065982/54238880-de03ec80-44d6-11e9-9069-324d0873494a.png" width="500" />    <img src="https://user-images.githubusercontent.com/6065982/54239062-5cf92500-44d7-11e9-9166-c5172eb67c92.png" width="500" />    **Google**  ![image](https://user-images.githubusercontent.com/6065982/54239272-f294b480-44d7-11e9-8c31-2311753597b7.png)    **Bing**  ![image](https://user-images.githubusercontent.com/6065982/54239283-fd4f4980-44d7-11e9-80a3-a6967957455c.png)  	degant	null	null	null	null	null	null	
2019-03-12 22:18:38.0	2019-03-14 23:20:06.0	2019-06-27 18:07:20.0	closed	[fixing approved issue]	0	284	Fixes #282 Narrator does not convey error information when no more Right Parenthesis can be added in expression.	https://api.github.com/repos/microsoft/calculator/issues/284	https://github.com/microsoft/calculator/pull/284	## Fixes #282 Narrator does not convey error information when no more Right Parenthesis can be added in expression.      ### Description of the changes:  - Removes left parenthesis only narrator announcment.  - Updates open parentheses count narrator announcement to be triggered when both right and left parenthesis buttons are clicked.  - Adds a narrator announcement for the case when there are no open parentheses and the right parenthesis button is clicked.    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Manually tested the open parenthesis count narrator announcement occurred for left and right parenthesis clicks in Scientific and Programmer calculator modes.  - Manually tested the no open parenthesis narrator announcement occurred when the right parenthesis button was clicked and there were no open parentheses in Scientific and Programmer calculator modes.  - Tested the announcements were not triggered by clear in Scientific and Programmer calculator modes.  - Ran automated unit tests.    	sanderl	null	null	null	null	null	null	
2019-03-12 23:26:13.0	2019-05-17 18:10:29.0	2020-12-03 06:01:49.0	closed	[help wanted, Pri: 3, Area: User Experience, fixed]	8	285	Main menu has multiple open animations	https://api.github.com/repos/microsoft/calculator/issues/285	https://github.com/microsoft/calculator/issues/285	<!--Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.-->    **Describe the bug**  <!--A clear and concise description of what the bug is.-->  Immediately after opening the app, upon clicking the upper left menu button, the menu expands with an animation that visually appears to move diagonally from the lower left corner of the app. After closing the menu, subsequent clicks to open the menu use a different animation that visually appears to move horizontally from the left edge of the app.    While it's very subtle, having different animations is visually confusing to me, when there is not an apparent reason (i.e. starting from two different states). Perhaps there is a reason that I missed; however, if the reason is not obvious, maybe it is not a good reason.    **Steps To Reproduce**  <!--Steps to reproduce the behavior:-->  1. Open the Calculator app  2. Click the hamburger menu at top left  3. Observe the animation of the menu opening  4. Click menu again to close  5. Click menu again to open  6. Observe the different animation    **Expected behavior**  <!--A clear and concise description of what you expected to happen.-->  Every time the menu is opened from the normal state, it performs the same animation.    **Device and Application Information (please complete the following information):**   - OS Build: 10.0.17134.0   - Architecture: X64   - Application Version: 10.1812.10048.0    <!--Run the following commands in Powershell and copy/paste the output.  " - OS Build: $([Environment]::OSVersion.Version)"  " - Architecture: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Architecture)"  " - Application Version: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Version)"  -->    **Additional context**  <!--Add any other context about the problem here.-->  None	abcasada	null	null	null	null	null	null	
2019-03-12 23:41:47.0	2019-03-13 10:34:07.0	2019-03-13 10:34:10.0	closed	[]	0	286	Remove logging of invalid pasted text	https://api.github.com/repos/microsoft/calculator/issues/286	https://github.com/microsoft/calculator/pull/286	Addressing community feedback for removal of diagnostic data.	HowardWolosky	null	null	null	null	null	null	
2019-03-13 02:23:46.0	2019-03-15 04:01:25.0	2019-03-15 04:01:34.0	closed	[]	6	287	Fix separators for unit tests	https://api.github.com/repos/microsoft/calculator/issues/287	https://github.com/microsoft/calculator/pull/287	## Fixes #272.      ### Description of the changes:  - Hardcoded separators for unit tests    ### How changes were validated:  - manual	uhliksk	null	null	null	null	null	null	
2019-03-13 05:42:51.0	null	2021-08-02 09:03:55.0	open	[help wanted, Enhancement, Pri: 2, needs spec]	10	288	Use voice input in calculator	https://api.github.com/repos/microsoft/calculator/issues/288	https://github.com/microsoft/calculator/issues/288	There are many keyboards which don't have Numpad. So add voice assistant to use in the calculator. the result can be in text or in voice.     <!--    See https://github.com/Microsoft/calculator/blob/master/docs/NewFeatureProcess.md for  suggestions on how to write a good feature pitch. Just want to submit an idea quickly? Try Feedback  Hub instead: https://insider.windows.com/en-us/fb/?contextid=130    -->    **Problem Statement**  <!-- What problem are we trying to solve? Who’s the target audience? Is there a customer need or  pain point we need to remedy? Is there a business goal or metric we are trying to improve? Do we  have a hypothesis we want to prove or disprove? -->    it is very difficult for many users to use a calculator without numpad. In addition, there are many users wants to use calculator using voice assistant. In the future, even a blind person can use a calculator without any hesitation.    **Evidence or User Insights**  <!-- Why should we do this? Potential sources of data: Feedback Hub, other GitHub issues, other  anecdotes from listening to customers in person or online request from another team, telemetry  data, user research, market or competitive research -->    **Proposal**  <!-- How will the solution/feature help us solve the problem? How will it meet the target  audience’s needs? If there are business goals or metrics, how does this improve them? -->    Cortona is already enabled in the windows. in use case scenario, a user can say "hey Cortona open basic calculator.  add five and seven and then multiply with nine." the voice assistant can tell the answer in voice and text. Furthermore, the result can be upload to other applications.     In the best scenario, you should make an API that can be used in the calculator instead of implemented from scratch.    **Goals**  <!-- What you want to accomplish with this feature. Typical examples include  “User Can *perform some task*” -->    - Input using the voice assistant  - The result should be based on text and voice   - Share/upload the results in other application like excel/word    **Non-Goals**  <!-- Things we are explicitly not doing or supporting or that are out of scope, including reasons  why. -->    **Low-Fidelity Concept**  <!-- Show as much of the experience as needed to explain the idea. This can be as simple as a  napkin drawing but can also be a code prototype, a PowerPoint walkthrough, or a design  comp. -->	iamgmujtaba	null	null	null	null	null	null	
2019-03-13 06:24:26.0	2019-05-14 16:57:59.0	2019-05-14 16:58:00.0	closed	[fixing approved issue, tooling]	11	289	Fix unit tests to run on non-english devices	https://api.github.com/repos/microsoft/calculator/issues/289	https://github.com/microsoft/calculator/pull/289	## Fixes #272    ![image](https://user-images.githubusercontent.com/1226538/54255338-e844db80-4514-11e9-9c93-3b105f5a6864.png)      ### Description of the changes:  - add a parameter to the `CurrencyDataLoader` constructor to override the locale  - add a method `LocalizationService::OverrideWithLanguage` to force `LocalizationService` to override the current locale (some static methods were converted to const instance methods in order to take into account the new locale)  - Use them to force unit tests to run with `en-US`    ### How changes were validated:  	rudyhuyn	null	null	null	null	null	null	
2019-03-13 06:35:01.0	2019-03-13 19:50:24.0	2019-03-13 19:50:24.0	closed	[]	1	290	Remove .editorconfig from sln	https://api.github.com/repos/microsoft/calculator/issues/290	https://github.com/microsoft/calculator/pull/290	## Fixes #257    Clean the `.sln` to remove the reference to the extra `.editorconfig` already removed by another diff.  	rudyhuyn	null	null	null	null	null	null	
2019-03-13 07:27:59.0	2019-03-13 07:34:43.0	2020-12-03 06:01:48.0	closed	[won't fix]	4	291	Counting Bugs in Windows Calculator, article from habr.com	https://api.github.com/repos/microsoft/calculator/issues/291	https://github.com/microsoft/calculator/issues/291	<!--Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.-->    **Describe the bug**  PVS team has analyzed the Calculator's code and here is the review.   https://habr.com/en/company/pvs-studio/blog/443400/  You probably should at least take a look.    **Additional context**  I'm stating the article here with several bugs revealed by static analizator. Just ignore the issue in case you don't think its important or my report is not properly prepared.  	0x49D1	null	null	null	null	null	null	
2019-03-13 13:40:32.0	2019-03-14 03:56:57.0	2020-12-03 06:01:47.0	closed	[won't fix]	3	292	History is missing	https://api.github.com/repos/microsoft/calculator/issues/292	https://github.com/microsoft/calculator/issues/292	Since the 'history' of the development of the calculator program is missing, how or where can I find the source code of the Windows XP calculator (now Windows Power Toy Calculator)?	MarkJeronimus	null	null	null	null	null	null	
2019-03-13 17:41:30.0	2019-09-09 17:07:26.0	2020-12-03 06:01:45.0	closed	[Enhancement]	7	293	Significant Digits	https://api.github.com/repos/microsoft/calculator/issues/293	https://github.com/microsoft/calculator/issues/293	Could add a feature that rounds the final answer to the correct number of significant digits based on inputted values.    This is useful for Chemistry and Physics.    For example, 5.0x4.99 = 25  and,  5.0+4.99=1.0x10^1	nicholas-tao	null	null	null	null	null	null	
2019-03-13 19:27:24.0	2019-04-26 23:07:14.0	2020-12-03 06:01:44.0	closed	[Area: User Experience, fixed, Pri: 2]	2	294	minus a negative number isn't interpreted correctly in scientific mode	https://api.github.com/repos/microsoft/calculator/issues/294	https://github.com/microsoft/calculator/issues/294	<!--Before filing a bug  - Ensure the bug reproduces on the latest version of the app. **how?**  - Search existing issues and make sure this issue is not already filed.-->    **Describe the bug**  Calculator computes sums such as (4 - -4) incorrectly in scientific mode [where I expect it to understand complex sums properly]    <!--A clear and concise description of what the bug is.-->    **Steps To Reproduce**  1. Set scientific mode  1. Type `(4 - -4)` into notepad copy-paste it into calculator.    **Expected behavior**  Calculator shows that it parsed `(4 - -4)` as `(4 + 4) or other equivalent e.g.  `(4 - (-4))`, `(4 - (0 - 4))` etc.    **Actual behavior**  Calculator shows that it parsed `(4 - -4)` as `(4 - 4)` which we all know is not mathematically the same!    **Device and Application Information (please complete the following information):**   - OS Build: 18342.8   - Architecture: x64   - Application Version: 10.1812.10048.0	TimLovellSmith	null	null	null	null	null	null	
2019-03-13 20:58:35.0	null	2021-10-19 05:02:18.0	open	[help wanted, Pri: 3, codebase quality]	5	295	Update project setting to tell compiler source code is UTF-8	https://api.github.com/repos/microsoft/calculator/issues/295	https://github.com/microsoft/calculator/issues/295	Mentioned by @jlaanstra in #257:    > You can tell the compiler that source is UTF-8 using https://docs.microsoft.com/en-us/cpp/build/reference/utf-8-set-source-and-executable-character-sets-to-utf-8?view=vs-2017	HowardWolosky	null	null	null	null	null	null	
2019-03-14 03:17:25.0	2019-03-14 03:21:41.0	2019-03-14 03:30:44.0	closed	[]	1	296	Fix wrong results after pow and sqrt	https://api.github.com/repos/microsoft/calculator/issues/296	https://github.com/microsoft/calculator/pull/296	## Fixes #222.      ### Description of the changes:  - Pow is calculated for Numerator and Denominator separately to avoid rounding difference  - gcdrat fixed to not accept result if optimization caused change in numeric value    ### How changes were validated:  - new automated tests added	uhliksk	null	null	null	null	null	null	
2019-03-14 03:28:43.0	2021-07-01 04:56:55.0	2021-07-01 04:56:55.0	closed	[fixing approved issue]	14	297	Fix wrong results after pow and sqrt	https://api.github.com/repos/microsoft/calculator/issues/297	https://github.com/microsoft/calculator/pull/297	## Fixes #222.      ### Description of the changes:  - Pow is calculated for Numerator and Denominator separately to avoid rounding difference  - gcdrat fixed to not accept result if optimization caused change in numeric value    ### How changes were validated:  - new automated tests added	uhliksk	null	null	null	null	null	null	
2019-03-14 05:14:19.0	2019-04-09 21:12:29.0	2019-04-09 21:12:45.0	closed	[Bug, fixing approved issue]	2	298	Fix invalid check of m_precedenceOpCount	https://api.github.com/repos/microsoft/calculator/issues/298	https://github.com/microsoft/calculator/pull/298	## Fixes #122.      ### Description of the changes:  - The conditional `m_precedenceOpCount >= 0` was always true because `m_precendenceOpCount` is an unsigned type. Update the conditional to simply be true and rely on a break statement in the loop. Although this member variable used to be a signed type, in practice, the value was never less than 0.      ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Manual.  Unit tests pass locally.    	danbelcher-MSFT	null	null	null	null	null	null	
2019-03-14 08:18:45.0	2019-10-18 18:07:52.0	2020-12-03 06:01:43.0	closed	[Area: User Experience, fixed, Pri: 2]	9	299	Support caret when pasting math formula strings. Pasting "2*2" works but pasting "2^32" fails.	https://api.github.com/repos/microsoft/calculator/issues/299	https://github.com/microsoft/calculator/issues/299	Calc has long supported the useful ability to paste math expressions.    Success  1. Copy **(2 + 2) * 4** to the clipboard  2. Paste into Calculator in Scientific Mode  3. Calculator displays "16"    Success  1. Manually type **2 ^ 8**  2. Calculator displays "256"    Fail  1. Copy **2 ^ 8** to the clipboard  2. Calculator says Invalid Input    Expected behaviour of pastes should be same as manually typing the numbers.	blurbusters	null	null	null	null	null	null	
2019-03-14 10:59:50.0	2019-03-15 04:21:18.0	2019-03-15 04:21:34.0	closed	[Bug]	0	300	Fix memory leak	https://api.github.com/repos/microsoft/calculator/issues/300	https://github.com/microsoft/calculator/pull/300	Function was returning before attempting to free the memory allocated to `temp`.  This PR fixes it: frees the memory and then returns.	PawanKartikS	null	null	null	null	null	null	
2019-03-14 14:03:28.0	2020-02-06 19:31:54.0	2020-12-03 06:01:42.0	closed	[Pri: 3, Area: World-Readiness, not repro]	2	302	[Date Converter] The Month Output Is Displaying in English When Set To a Different Language.	https://api.github.com/repos/microsoft/calculator/issues/302	https://github.com/microsoft/calculator/issues/302	**Pre-Conditions**  Set PC to a RtL language such as Hebrew for the primary display language.    **Repro Steps**  * Launch the Calculator build 10.1902.20.0.  * Confirm the app is being displayed in a RtL language such as Hebrew.  * Use the app menu to navigate to Date Converter.  * Select difference between dates, or the top field.  * Observe while most of the app while display in a different language the output for the two container fields will show the month being displayed in English, such as March 13, 2019.  * Select any of the two containers.  * Observe in the drop down menu for the containers the month is displayed in the primary language.  * Navigate to Add and Subtract dates or the bottom field at the top of the app.   * Observe the output for the answer field at the bottom is displaying the day and month in * English while the rest of the app is in a different language.     ![image](https://user-images.githubusercontent.com/1414423/54409222-e1e46a00-46a2-11e9-833b-39135417db65.png)  	MicrosoftIssueBot	null	null	null	null	null	null	
2019-03-14 16:55:58.0	2019-03-14 17:28:50.0	2020-12-03 06:01:41.0	closed	[won't fix]	2	303	can haz windows xp version?	https://api.github.com/repos/microsoft/calculator/issues/303	https://github.com/microsoft/calculator/issues/303	the windows XP version would be way more interesting, as an example program for raw win32 api programming, imo.	rofl0r	null	null	null	null	null	null	
2019-03-14 18:56:52.0	2019-03-18 11:16:07.0	2019-03-18 11:47:40.0	closed	[codebase quality]	7	304	Code analysis	https://api.github.com/repos/microsoft/calculator/issues/304	https://github.com/microsoft/calculator/pull/304	## Fixes:  - Inconsistent annotations causing warnings  - Missing annotations causing warnings about uninitialized _Out_ parameters  - Incorrect annotations in `_destroynum` and `_destroyrat` causing spurious warnings.  - Analyzer crashes on `CalcViewModel` with 32 bit toolchain.    ### Description of the changes:  - I had to fix the annotations on a number of functions so that code analysis would build with a reasonable number of warnings. Most of them were just lacking the annotations on the definition, so I could've used `_Use_decl_annotations_`, but it looks more consistent this way.  - Also, analyzer on CalcViewModel uses a ton of memory, and so it won't complete without crashing when run as a 32 bit process. So I enabled the x64 build for it.    Code analysis reveals a couple codepaths where there could be nullptr dereferences. For example, this looks like a legitimate warning:  ![pnumret](https://user-images.githubusercontent.com/2142308/54383584-c52b4080-4668-11e9-9fee-a10852a093ef.PNG)  ...where `stripzeroesnum` immediately dereferences the pointer.    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - No actual functional changes to code. None needed?    There are a whole bunch of other warnings, like uninitialized member variables and also some arithmetic overflow warnings, but it's less obvious if they're legit.  	ariccio	null	null	null	null	null	null	
2019-03-14 19:57:49.0	2019-03-20 16:57:00.0	2020-12-03 06:01:40.0	closed	[fixed, codebase quality]	1	305	Expose ViewModel property names as static class members	https://api.github.com/repos/microsoft/calculator/issues/305	https://github.com/microsoft/calculator/issues/305	The CalcViewModels currently follow a paradigm of declaring a namespace to store strings that are property names of the matching class, for example:  https://github.com/Microsoft/calculator/blob/ac5292cf88e958c15c34c6a6236766fe3e820126/src/CalcViewModel/StandardCalculatorViewModel.h#L34-L39    These strings are then used by the View layer in PropertyChanged event handlers, to identify if a specific property changed, e.g.  https://github.com/Microsoft/calculator/blob/ac5292cf88e958c15c34c6a6236766fe3e820126/src/Calculator/Views/CalculatorProgrammerBitFlipPanel.xaml.cpp#L69-L75    ## Problem  The problem with this approach is that the namespaces storing these strings are only related to the ViewModel class by the namespace name.  The strings within otherwise have no relation to the ViewModel they are supposed to be associated with.  Furthermore, namespaces can be reopened and added to at-will, meaning the ViewModel has no guarantee about what content goes in the namespace.  Correctness is left for the programmer to manually verify.    ## Solution  CX classes with DependencyProperties follow a common convention for implementation of the properties.  Per property, there will be a `static property DependencyProperty^ *PropertyName*Property` and a non-static `property *Type* *PropertyName*`.  Similarly, for properties that need to be referenced by name, we should define `static property Platform::String^ *PropertyName*PropertyName` and `property *Type* *PropertyName*`.    The benefit of this change is that the property name is now a static member of the ViewModel class it is associated with.  This makes sense because the property name _is_ a part of the ViewModel as much as the property itself is also a member.  Additionally, the ViewModel has full control over what properties it names and no other parts of the program can add to the ViewModels interface.	danbelcher-MSFT	null	null	null	null	null	null	
2019-03-14 20:04:49.0	2019-03-20 16:57:00.0	2019-03-23 23:44:39.0	closed	[]	1	306	ViewModelProperties namespaces converted to static class properties.	https://api.github.com/repos/microsoft/calculator/issues/306	https://github.com/microsoft/calculator/pull/306	## Fixes #305.      ### Description of the changes:  - Implement the `OBSERVABLE_NAMED_PROPERTY` class of macros. This macro will define the requested property as a member property and will additionally define a static class property that provides the name of the property as a string.  - Remove unused propertynames that were never used.  - For places where the source file still need the property name, e.g. to raise a property changed event or when internally checking for property change events, moved the property names to an anonymous namespace for the file.    ### How changes were validated:  - Manual. Unit tests pass locally.  - Smoke tests.  Verify properties that were checked via code-behind, e.g. IsMemoryEmpty, still correctly functioned after the change.    	danbelcher-MSFT	null	null	null	null	null	null	
2019-03-14 21:16:32.0	2020-08-17 21:37:37.0	2020-12-03 06:01:39.0	closed	[Bug, Pri: 3, triage approved, Area: Performance]	2	307	Images shipped with the product can be further optimized	https://api.github.com/repos/microsoft/calculator/issues/307	https://github.com/microsoft/calculator/issues/307	The public Calculator repo replaces the product assets with 'dev' versions.  As of #229, the dev assets were optimized, resulting in some amount of space savings.  As these assets are not shipped to the Store, the PR had no impact on the final product.  This issue is to track the work involved in applying the same optimizations to the product assets as part of our internal process.	danbelcher-MSFT	null	null	null	null	null	null	
2019-03-14 22:09:20.0	2019-03-15 11:44:55.0	2020-12-03 06:01:38.0	closed	[Area: World-Readiness, won't fix, Pri: 2]	7	308	Wrong Spanish translation for “Exclusive or”	https://api.github.com/repos/microsoft/calculator/issues/308	https://github.com/microsoft/calculator/issues/308	In both  https://github.com/Microsoft/calculator/blob/ac5292cf88e958c15c34c6a6236766fe3e820126/src/Calculator/Resources/es-ES/Resources.resw#L801  and  https://github.com/Microsoft/calculator/blob/ac5292cf88e958c15c34c6a6236766fe3e820126/src/Calculator/Resources/es-MX/Resources.resw#L801  The translation for “Exclusive or” is wrong. It should be “O exclusivo”.	fitojb	null	null	null	null	null	null	
2019-03-14 22:09:37.0	null	2021-05-26 10:04:10.0	open	[help wanted, Bug, triage approved, Area: User Experience, Pri: 2]	3	309	Inaccurate results for trigonometric functions with exact results	https://api.github.com/repos/microsoft/calculator/issues/309	https://github.com/microsoft/calculator/issues/309	<!--Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.-->    **Describe the bug**  The below examples of the trigonometric functions show a correct result at first. However, subtracting that result from itself results in a non-zero value, which shows that the results are represented as incorrect approximations internally, when it should be an exact result.    In DEG mode:  arcsin(1) - 90 != 0  sin(30) - 0.5 != 0  In RAD mode:  sin(π/2) - 1 != 0  but interestingly: cos(±π) + 1 == 0    This is a new issue spawned from the similar issue #222.     **Steps To Reproduce**  1. Try the above calculations in scientific mode    **Expected behavior**  Exact internal representation and result 0 for above calculations.    **Device and Application Information (please complete the following information):**  * OS Build: 10 0 17763 0  * Architecture: X64  * Application Version: 10.1812.10048.0    	imchau	null	null	null	null	null	null	
2019-03-15 04:38:58.0	2019-04-19 01:17:15.0	2020-12-03 06:01:37.0	closed	[Area: Accessibility, Pri: 3, external]	3	310	Narrator stays silent on activating "Open navigation" button for the first time.	https://api.github.com/repos/microsoft/calculator/issues/310	https://github.com/microsoft/calculator/issues/310	**Repro Steps**  * Turn on narrator.  * Launch Calculator app.  * Navigate to "Open Navigation" button and activate it.​  * Verify that narrator stays silent.    **Actual Result**  Narrator stays silent on activating "Open navigation" button for the first time.    **Expected Result**  Narrator should not stay silent on activating "Open navigation" button for the first time.  Narrator should read about the first list item same as it reads it for the second time.    App Version: 10.1902.16.0	MicrosoftIssueBot	null	null	null	null	null	null	
2019-03-15 04:39:01.0	2019-07-16 21:24:28.0	2020-12-03 06:01:36.0	closed	[Area: Accessibility, Pri: 3, fixed]	4	311	"History" list item context menu is not accessible using keyboard	https://api.github.com/repos/microsoft/calculator/issues/311	https://github.com/microsoft/calculator/issues/311	**Repro Steps:**  * Launch Calculator app.  * Navigate to History list item and try to open the context menu  * Observe the issue.    **Actual Result**  History list item context menu is not accessible using keyboard. It is accessible using mouse.    **Expected Result**  History list item context menu should be accessible using keyboard.    App Version: 10.1902.16.0	MicrosoftIssueBot	null	null	null	null	null	null	
2019-03-15 04:39:06.0	null	2021-07-22 09:02:58.0	open	[help wanted, Bug, Area: Accessibility, Pri: 3, triage approved, Area: User Experience]	3	312	Focus moves to "Clear all memory" button after activating "Clear memory item" from the context menu of "Memory" list item.	https://api.github.com/repos/microsoft/calculator/issues/312	https://github.com/microsoft/calculator/issues/312	**Repro Steps**  * Launch Calculator app.  * Navigate to Memory list item and open the context menu using Shift + F10 keys or application key.  * Navigate to Clear memory item and press enter.  * Observe the issue.    **Actual Result**  Focus moves to "Clear all memory" button after activating "Clear memory item" in first list item.    **Expected Result**  Focus should move to the next memory item after activating "Clear memory item". For e.g., if first memory item is cleared using "Clear memory item" then focus should move to the second memory item.    App Version: 10.1902.16.0	MicrosoftIssueBot	null	null	null	null	null	null	
2019-03-15 04:39:08.0	2019-04-26 22:01:37.0	2020-12-03 06:01:35.0	closed	[Area: Accessibility, Pri: 3, fixed]	1	313	In Scan/Item mode, Narrator focus navigates to hidden element “No next item” after “Update rates” link in "Currency Converter" window	https://api.github.com/repos/microsoft/calculator/issues/313	https://github.com/microsoft/calculator/issues/313	**Repro Steps**  * Launch narrator.  * Launch Calculator app.  * Navigate to "Open navigation" button and activate it.  * Navigate to "Currency Converter" list item and activate it.  * Currency Converter window will open.  * Further navigate in "Currency Converter" window in scan mode.  * Verify that narrator focus navigates to hidden element “No next item” after “Update rates” link.    **Actual Result**  In Scan/Item mode, Narrator focus navigates to hidden element “No next item” after “Update rates” link.    **Expected Result**  In Scan/Item mode, Narrator focus should not navigate to hidden element “No next item” after “Update rates” link.    App Version: 10.1902.16.0	MicrosoftIssueBot	null	null	null	null	null	null	
2019-03-15 10:17:54.0	2019-03-15 10:21:44.0	2019-03-15 10:21:58.0	closed	[]	1	314	Remove redundant if condition.	https://api.github.com/repos/microsoft/calculator/issues/314	https://github.com/microsoft/calculator/pull/314	NumbersAndOperatorsEnum::None != op check was already done in the parent "if" (line 972). Hence this redundant check can be dropped safely.	PawanKartikS	null	null	null	null	null	null	
2019-03-15 19:17:32.0	2019-03-27 23:36:36.0	2019-03-27 23:36:36.0	closed	[codebase quality]	3	315	Code analysis	https://api.github.com/repos/microsoft/calculator/issues/315	https://github.com/microsoft/calculator/pull/315	(this is a redo of #304)    ## Fixes:  - Inconsistent annotations causing warnings  - Missing annotations causing warnings about uninitialized _Out_ parameters  - Incorrect annotations in `_destroynum` and `_destroyrat` causing spurious warnings.  - Analyzer crashes on `CalcViewModel` with 32 bit toolchain.    ### Description of the changes:  - I had to fix the annotations on a number of functions so that code analysis would build with a reasonable number of warnings. Most of them were just lacking the annotations on the definition, so I could've used `_Use_decl_annotations_`, but it looks more consistent this way.  - Also, analyzer on CalcViewModel uses a ton of memory, and so it won't complete without crashing when run as a 32 bit process. So I enabled the x64 build for it.    Code analysis reveals a couple codepaths where there could be nullptr dereferences. For example, this looks like a legitimate warning:  ![pnumret](https://user-images.githubusercontent.com/2142308/54383584-c52b4080-4668-11e9-9fee-a10852a093ef.PNG)  ...where `stripzeroesnum` immediately dereferences the pointer.    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - No actual functional changes to code. None needed?    There are a whole bunch of other warnings, like uninitialized member variables and also some arithmetic overflow warnings, but it's less obvious if they're legit.  	ariccio	null	null	null	null	null	null	
2019-03-16 01:13:36.0	2019-03-16 04:21:31.0	2020-12-03 06:01:34.0	closed	[fixed, Pri: 0]	2	316	Project not compiling because of #208	https://api.github.com/repos/microsoft/calculator/issues/316	https://github.com/microsoft/calculator/issues/316	**Describe the bug**    It looks like the code on Master can't be compiled right now due to #208 and because of the new warning level (4) (#197).    ```  1>calculator\src\calcmanager\cengine\scicomm.cpp(42): error C2220: warning treated as error - no 'object' file generated  1>calculator\src\calcmanager\cengine\scicomm.cpp(42): warning C4018: '<': signed/unsigned mismatch  1>calculator\src\calcmanager\cengine\scicomm.cpp(46): warning C4018: '>=': signed/unsigned mismatch  1>calculator\src\calcmanager\cengine\sciset.cpp(59): error C2220: warning treated as error - no 'object' file generated  1>calculator\src\calcmanager\cengine\sciset.cpp(59): warning C4018: '<': signed/unsigned mismatch  1>calculator\src\calcmanager\cengine\sciset.cpp(72): warning C4018: '<': signed/unsigned mismatch  1>calculator\src\calcmanager\cengine\scicomm.cpp(950): warning C4018: '<': signed/unsigned mismatch  ```    **Steps To Reproduce**  - compile the code with VS2017 15.9.7 in Debug mode/x86    **Expected behavior**  - the project should compile 😆    **Device and Application Information (please complete the following information):**   - OS Build: 10.0.18348.0   - Architecture: X64   - Application Version: 10.1812.10048.0  	rudyhuyn	null	null	null	null	null	null	
2019-03-16 01:52:23.0	2019-03-16 04:21:31.0	2019-03-16 04:21:31.0	closed	[]	0	317	Fix compilation issues due to unsigned/signed warnings treated as errors in x86	https://api.github.com/repos/microsoft/calculator/issues/317	https://github.com/microsoft/calculator/pull/317	## Fixes #316    It was no more possible to compile the project in x86 due to unsigned/signed warnings.     ### Description of the changes:  - make sure comparisons with size(...) are made with unsigned numbers.    ### How changes were validated:  - Project compiled with all architectures.	rudyhuyn	null	null	null	null	null	null	
2019-03-16 04:27:33.0	2019-03-20 16:42:55.0	2020-12-03 06:01:33.0	closed	[won't fix, tooling]	3	318	Add x86 and ARM builds as part of the CI pipeline	https://api.github.com/repos/microsoft/calculator/issues/318	https://github.com/microsoft/calculator/issues/318	After #316, we can't trust x64 as the only architecture we build in our CI pipeline.  We need to add x86 and ARM builds so we know any given PR won't break master branch for any of the three architectures.	danbelcher-MSFT	null	null	null	null	null	null	
2019-03-16 06:42:03.0	2019-03-25 18:11:25.0	2020-12-03 06:01:32.0	closed	[fixed, Pri: 1]	6	319	The About page still displays Copyright 2018 even if the last public build were made in 2019	https://api.github.com/repos/microsoft/calculator/issues/319	https://github.com/microsoft/calculator/issues/319	**Describe the bug**    Even if the last public build were created in February, the About page still displays 2018 in the About dialog.    ![image](https://user-images.githubusercontent.com/1226538/54471718-c8165600-477a-11e9-8073-507f0dc5dd89.png)    In order to simplify the process and not having to localize new strings every year (or manually update resw files), a better solution would be to automatize the process:  - templatize the copyright string  - use the date of the compilation to retrieve the year (using preprocessor directive)    **Steps To Reproduce**  - Open the app  - Click on About  - The dialog displays "Copyright 2018"    **Expected behavior**  - The dialog should display "Copyright 2019"    **Device and Application Information (please complete the following information):**   - OS Build: 10.0.18348.0   - Architecture: X64   - Application Version: 10.1812.10048.0  	rudyhuyn	null	null	null	null	null	null	
2019-03-16 07:06:21.0	2019-03-25 18:11:25.0	2019-03-25 18:11:26.0	closed	[fixing approved issue, codebase quality]	3	320	Update the year in the Copyright string	https://api.github.com/repos/microsoft/calculator/issues/320	https://github.com/microsoft/calculator/pull/320	## Fixes #319    Templatize the copyright string and use a preprocessor definition to set the year, so the build server will be able to update it.    ### How changes were validated:  - tested with English and French and with different dates.	rudyhuyn	null	null	null	null	null	null	
2019-03-16 11:25:33.0	2019-03-16 12:26:17.0	2019-03-27 20:14:53.0	closed	[]	1	321	Use operator""sv to ensure string_view are initialized correctly	https://api.github.com/repos/microsoft/calculator/issues/321	https://github.com/microsoft/calculator/pull/321	Addresses following warning raised by clang:  ```  src/CalcManager/CEngine/scidisp.cpp:23:24: error: constexpr variable 'c_decPreSepStr' must be initialized by a constant expression  constexpr wstring_view c_decPreSepStr = L"[+-]?(\\d*)[";                         ^                ~~~~~~~~~~~~~~~  /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/8.2.1/../../../../include/c++/8.2.1/bits/char_traits.h:431:11: note: non-constexpr function 'wcslen' cannot be used in a constant expression            return wcslen(__s);                   ^  /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/8.2.1/../../../../include/c++/8.2.1/string_view:100:39: note: in call to 'length(&L"[+-]?(\\d*)["[0])'        : _M_len{__str == nullptr ? 0 : traits_type::length(__str)},                                        ^  ```    ### Description of the changes:  - Addresses a warning raised by clang. I'm not 100% positive it's not a bug in the STL implementation used by my compiler, but doesn't cause other issues.	janisozaur	null	null	null	null	null	null	
2019-03-17 16:07:03.0	null	2021-08-02 09:04:01.0	open	[Enhancement, Pri: 2, needs spec]	18	322	Support more numeral systems	https://api.github.com/repos/microsoft/calculator/issues/322	https://github.com/microsoft/calculator/issues/322	**Problem Statement**  Calculator only supports English (Western) numeral. If I change my keyboard layout and **enter** (or **paste**) Persian numeral, it simply does nothing!    **Proposal**  Support more numeral systems as input, but **show** them as English (Western) numeral.  Examples: [Hindu–Arabic numeral system](https://en.wikipedia.org/wiki/Hindu–Arabic_numeral_system#Glyph_comparison)  `0 = ۰` `1 = ۱` `2 = ۲` `3 = ۳` `4 = ۴` `5 = ۵` `6 = ۶` `7 = ۷` `8 = ۸` `9 = ۹`    **Goals**  I can enter digits with any keyboard layout, pretty fast, no worries.	ivadham	null	null	null	null	null	null	
2019-03-17 20:38:38.0	2019-03-18 21:02:02.0	2019-03-18 21:11:14.0	closed	[codebase quality]	4	323	Add explicit [[fallthrough]] attribute in Ratpack	https://api.github.com/repos/microsoft/calculator/issues/323	https://github.com/microsoft/calculator/pull/323	This is the only one I found in Ratpack.	janisozaur	null	null	null	null	null	null	
2019-03-17 21:46:02.0	2019-04-18 00:28:46.0	2020-12-03 06:01:31.0	closed	[codebase quality]	3	324	Consider reworking how PCHs are used	https://api.github.com/repos/microsoft/calculator/issues/324	https://github.com/microsoft/calculator/issues/324	As discussed in https://github.com/Microsoft/calculator/pull/208#discussion_r263955391:    PCHs in current form are problematic to use due to varying support of build systems. While the most common setup I imagine would be with the MSVS project files included in the repository, #211 adds CMake support and when preparing #212 I manually invoked the compiler, which causes inclusion of many unnecessary header files, which leads to prolonged compilation times.    I can suggest a simple solution to that issue: make the leaf `.cpp` files `#include` the minimal set of what they truly need, leave `pch.{h,cpp}` files intact, then upon building:  1. Compile the PCH, e.g.   ```  g++ -std=c++17 -x c++-header src/CalcManager/pch.cpp -c -o src/CalcManager/pch.h.gch  ```  2. When compiling each of leaf `.cpp` files, inject the header via compiler, e.g.   ```  g++ -std=c++17 -I src/CalcManager -I src/CalcManager/Header\ Files -c  src/CalcManager/CEngine/calc.cpp -include pch.h  ```    This way you can have regular PCHs without forcing half of STL into each translation unit even when they don't need it.    I'm sure there are other ways of solving that issue as well.	janisozaur	null	null	null	null	null	null	
2019-03-17 23:30:29.0	2019-05-22 06:54:48.0	2020-12-03 06:01:30.0	closed	[Enhancement]	11	325	Please add light-years as a unit of measurement	https://api.github.com/repos/microsoft/calculator/issues/325	https://github.com/microsoft/calculator/issues/325	<!--    See https://github.com/Microsoft/calculator/blob/master/docs/NewFeatureProcess.md for  suggestions on how to write a good feature pitch. Just want to submit an idea quickly? Try Feedback  Hub instead: https://insider.windows.com/en-us/fb/?contextid=130    -->    **Problem Statement**  please add light years as a unit of measurement     **Evidence or User Insights**  light-years are important    **Proposal**  just please add them>    **Goals**  users should be able to convert other units of distance to and from light-years    **Non-Goals**    **Low-Fidelity Concept**  one light-year is 5868696000000 miles	atticus112	null	null	null	null	null	null	
2019-03-18 03:26:42.0	2019-03-18 21:22:45.0	2020-12-03 06:01:29.0	closed	[Area: User Experience, fixed, Pri: 2]	4	326	No calculate history is logged while in "Programmer" Mode	https://api.github.com/repos/microsoft/calculator/issues/326	https://github.com/microsoft/calculator/issues/326	Repros    1. Switch the calculator mode to "Programmer"  2. calculate something and press "="  3. click "History"  4. the calculate history  in step 2 is no logged in the history"  5. repeat step 2 to 4 in "Standard" and "Scientific" mode, the calculate history is logged.  	fadingflower	null	null	null	null	null	null	
2019-03-18 16:23:38.0	2019-03-18 21:22:45.0	2019-03-18 21:22:45.0	closed	[fixing approved issue]	0	327	Hide the history button when in Programmer mode	https://api.github.com/repos/microsoft/calculator/issues/327	https://github.com/microsoft/calculator/pull/327	## Fixes #326      ### Description of the changes:  - Hide the History button when in Programmer mode via VisualState    ### How changes were validated:  - Open Standard mode  - Switch to Programmer mode  - Verify that the History button isn't visible    **Bug:**  ![image](https://user-images.githubusercontent.com/1226538/54543247-89d78d00-495a-11e9-8ab3-430df741caa6.png)	rudyhuyn	null	null	null	null	null	null	
2019-03-18 16:49:44.0	2019-07-13 01:11:53.0	2020-12-03 06:01:28.0	closed	[Area: Accessibility, not repro, Pri: 2]	4	328	alt key does not work at start up	https://api.github.com/repos/microsoft/calculator/issues/328	https://github.com/microsoft/calculator/issues/328	**Describe the bug**  When I start calc the alt-key and all keyboard shortcut combinations based off of it wont work.    **Steps To Reproduce**  1. Start calc, I do via Win+R and type calc  2a. Press alt (view accessible shortcuts)  2b. Press alt+1 (switch to standard mode)  2c. Press alt+2 (switch to scientific mode)  2d. Press alt+3 (switch to programmer mode)    **Expected behavior**  Functionality according to the specified hotkey in 2a-d above.    **Actual behavior**  The steps 2a-d above does not do anything.    **Device and Application Information (please complete the following information):**   - OS Build: Windows 10 Enterprise 15063.1689 (version 1703)   - Architecture: x64   - Application Version: 10.1702.312.0    **Note:**  The described fault mode disappears if I select one of the modes using the mouse instead. After doing it with the mouse at least once since calc starts, the shortcuts described above starts to work. Opening and closing the hamburger menu also seems to do the trick.  	Tubbles	null	null	null	null	null	null	
2019-03-18 21:48:54.0	2019-03-20 21:22:32.0	2021-01-12 18:05:41.0	closed	[codebase quality]	1	329	Remove redundant type qualifiers on function return type	https://api.github.com/repos/microsoft/calculator/issues/329	https://github.com/microsoft/calculator/pull/329	Remove a redundant CV-qualifier on function return type	janisozaur	null	null	null	null	null	null	
2019-03-18 21:51:37.0	2019-03-20 17:58:32.0	2021-01-12 18:05:39.0	closed	[codebase quality]	0	330	Remove unused member field from CalculatorHistory	https://api.github.com/repos/microsoft/calculator/issues/330	https://github.com/microsoft/calculator/pull/330	`m_mode` field was assigned to, but never read from.	janisozaur	null	null	null	null	null	null	
2019-03-18 21:53:12.0	2019-03-21 00:23:09.0	2021-01-12 18:05:35.0	closed	[]	2	331	Make CalculatorManager final rather than sealed	https://api.github.com/repos/microsoft/calculator/issues/331	https://github.com/microsoft/calculator/pull/331	I have no idea if it is required to be `sealed`, I have seen no `^`  operator which makes me think it could be a regular C++ code, barring  the concurrency stuff.	janisozaur	null	null	null	null	null	null	
2019-03-18 22:20:59.0	2019-03-20 23:45:31.0	2021-01-12 18:05:32.0	closed	[codebase quality]	2	332	Fix order of initialization list in CalculatorManager ctor	https://api.github.com/repos/microsoft/calculator/issues/332	https://github.com/microsoft/calculator/pull/332	This ensures the initialization order matches the layout of member  fields in class declaration    This will conflict with https://github.com/Microsoft/calculator/pull/330, but I will rebase the loser	janisozaur	null	null	null	null	null	null	
2019-03-18 22:30:18.0	2019-06-12 21:38:14.0	2020-12-03 06:01:27.0	closed	[Enhancement, pitch declined]	2	333	There is no Belarus Currency BYN	https://api.github.com/repos/microsoft/calculator/issues/333	https://github.com/microsoft/calculator/issues/333	It is expected to currency exchange from and to BYN (Belarus)    **Steps To Reproduce**  1. Go to calc  2. Click on hamburger menu -> Currency  3. Try to choose Belarus  4. I can see Belize and Bermuda, but no Belarus    **Expected behavior**  I would like to have an ability to see my country (Belarus) in from and to options    **Device and Application Information (please complete the following information):**  - Calculator 10.1812.10048.0    - OS Build: 17763.379 / 10.0.17763.0   - Architecture: X64   - Application Version: 10.1812.10048.0  - Windows 10 Enterprise N	alexsuslin	null	null	null	null	null	null	
2019-03-18 22:31:44.0	2019-03-20 21:19:30.0	2021-01-12 18:05:29.0	closed	[codebase quality]	1	334	Replace fallthrough comment with C++17's attribute	https://api.github.com/repos/microsoft/calculator/issues/334	https://github.com/microsoft/calculator/pull/334	Sorry for making 3 PRs for the same kind of issue, I was not able to verify this file earlier.    This time, however, I grepped the whole project for similar comments and this is the final one.	janisozaur	null	null	null	null	null	null	
2019-03-19 13:34:49.0	2019-05-10 07:43:14.0	2020-12-03 06:01:26.0	closed	[Enhancement]	9	335	Remove arbitrary unit conversions	https://api.github.com/repos/microsoft/calculator/issues/335	https://github.com/microsoft/calculator/issues/335	I don't know if this is a bug or a discussion? Please reclassify if I misplaced this as a bug.    **Describe the bug**  Microsoft officially stopped including easter eggs with the Trustworthy Computing Initiative in 2002. There are many (but random) arbitrary conversion units like the following:    - Banana (for energy)  - Castle (for area)  - Whale (for weight)  - ... (they can all be found e.g. [here](https://github.com/Microsoft/calculator/blob/d37c75fec23aa7648c6b90ae2643161864a35a1e/src/Calculator/Resources/en-US/Resources.resw) searching for `UnitName_`)    With "random" I mean that they appear without any user discernible logic, take this example:    1. conversion from thermal calories to electron volts  2. 20 --> yields 0,01 batteries (what is "one battery"?)  3. 20.000 --> yields 0,19 bananas  4. 200.000 --> yields 0,8 slices of cakes    Whereas I personally think this is humorous there is no added value besides the "little smile" these conversions yield. The user does not know what "1 banana" equals since it cannot be chosen as a conversion unit, equally for all the other "funny" units. I can't work with the units at all since they seemingly randomly switch to the next unit (compare above banana to slice of cake switch - why can't I see how many bananas are 200.000 thermal calories?).    For me either remove these funny units, or make them real units so that I can convert e.g. 20 thermal calories to banana directly (by using the dropdown). Right now this very much feels like an easter egg which shouldn't exist as far as I know.    **Steps To Reproduce**  1. start the calculator  2. conversion from **thermal calories** to **electron volts**  3. enter `20` --> observe result and the last unit which is 0,01 batteries (what is "one battery"?)  4. enter `20.000` --> observe result and the last unit which is 0,19 bananas  5. enter `200.000` --> observe result and the last unit which is 0,8 slices of cakes    **Expected behavior**  Either not have "funny" units of conversions or make them first-class-units to be selectable from the conversion dropdowns.    **Device and Application Information (please complete the following information):**   - OS Build: 10.0.18351.0   - Architecture: X64   - Application Version: 10.1812.10048.0  	DennisGaida	null	null	null	null	null	null	
2019-03-19 14:46:36.0	2019-03-19 22:35:55.0	2020-12-03 06:01:25.0	closed	[won't fix]	2	336	Suppout Cortana command to lanach calculator and  calculat	https://api.github.com/repos/microsoft/calculator/issues/336	https://github.com/microsoft/calculator/issues/336	<!--    See https://github.com/Microsoft/calculator/blob/master/docs/NewFeatureProcess.md for  suggestions on how to write a good feature pitch. Just want to submit an idea quickly? Try Feedback  Hub instead: https://insider.windows.com/en-us/fb/?contextid=130    -->    **Problem Statement**  <!-- What problem are we trying to solve? Who’s the target audience? Is there a customer need or  pain point we need to remedy? Is there a business goal or metric we are trying to improve? Do we  have a hypothesis we want to prove or disprove? -->    **Evidence or User Insights**  <!-- Why should we do this? Potential sources of data: Feedback Hub, other GitHub issues, other  anecdotes from listening to customers in person or online, request from another team, telemetry  data, user research, market or competitive research -->    **Proposal**  <!-- How will the solution/feature help us solve the problem? How will it meet the target  audience’s needs? If there are business goals or metrics, how does this improve them? -->    **Goals**  <!-- What you want to accomplish with this feature. Typical examples include  “User Can *perform some task*” -->    **Non-Goals**  <!-- Things we are explicitly not doing or supporting or that are out of scope, including reasons  why. -->    **Low-Fidelity Concept**  <!-- Show as much of the experience as needed to explain the idea. This can be as simple as a  napkin drawing but can also be a code prototype, a PowerPoint walkthrough, or a design  comp. -->	Nomeleel	null	null	null	null	null	null	
2019-03-19 19:52:54.0	2019-03-20 23:43:52.0	2021-01-12 18:05:27.0	closed	[]	3	337	Remove expression with no effects from CalculatorManager	https://api.github.com/repos/microsoft/calculator/issues/337	https://github.com/microsoft/calculator/pull/337		janisozaur	null	null	null	null	null	null	
2019-03-19 20:01:11.0	2020-01-07 22:56:31.0	2020-12-03 06:01:24.0	closed	[Enhancement, Swag: XL (1+ months), Pri: 1]	18	338	Add Graphing Mode	https://api.github.com/repos/microsoft/calculator/issues/338	https://github.com/microsoft/calculator/issues/338	> This feature is in pre-production. Contribute to the in-progress spec **[here](https://github.com/Microsoft/calculator-specs/tree/graphingmode/active/GraphingMode)**.    **Problem Statement**  High school algebra is the gateway to mathematics and all other disciplines of STEM. However, algebra is the single most failed course in high school, as well as the most failed course in community college ([Washington Post](https://www.washingtonpost.com/news/answer-sheet/wp/2017/09/15/of-course-algebra-is-important-its-also-a-huge-problem/)). Graphing capabilities in their daily tools are essential for students who are beginning to explore linear algebra as early as 8th grade. Physical graphing calculators can be expensive, software solutions require licenses and configuration by school IT departments, and online solutions are not always an option. At present, Windows Calculator does not currently have the needed functionality to meet the demands of students.    **Evidence or User Insights**  Graphing calculator provides an accessible and engaging method for students and teachers to learn and teach. Research has shown that graphing calculators foster conceptual understanding of developmental math students (Hopkins & Amelia, 1998; Laughbaum, 2002, 2003; Shore & Shore, 2003) by:  * Increased speed   * Opportunity to study rich mathematics through technology  * Make connections through different data representations  * Deeper understanding on “why”    Graphing Calculator is also the top requested feature in [Feedback Hub](https://aka.ms/AA43wie).    **Proposal**  Empower students to learn mathematics by improving conceptual understanding and attitudes towards math by adding graphing support to Windows Calculator targeting grades 8-12 students and teachers (math/physics). With graphing calculator, we can improve learning outcomes of students by increasing engagement and visualization of math equations.    **Goals**  * Provide a great baseline graphing calculator experience in Windows Calculator  * Support all [US common core math curriculum](http://www.corestandards.org/Math/), including:    * Ability to build and interpret functions    * Understand linear, quadratic, and exponential models    * Trigonometric functions    * Reason with equations and inequalities    **Non-Goals**  * Support advanced calculus or statistics functionality  * Parity with more advanced graphing solutions     **User Cans**  * Users can enter an equation so that it can be viewed on the graph.  * Users can enter multiple equations so that they can compare plots against each other and see the interactions between the lines.  * Users can edit equations so that they can see how changes affect the plot and correct mistakes.  * Users can change the graph viewing window so that they can see different parts of the plot at different levels of detail.  * Users can change line visual options so that they can clearly differentiate between multiple plots.  * Users can export graphs so that they can share it with others or incorporate into Office/Teams.  * Users can easily manipulate secondary variables in equations so that they can quickly understand how changes to equations affect the graph.   * Users can see traceable key graph features (KGF) as nodes/dots on the equations, and summon other KGFs in a list so that they can better understand the important features of a given function.  * Users can trace plots so that they can better understand the relationship between variables in the equation on the graph.    **Low-Fidelity Concept**    ![image](https://user-images.githubusercontent.com/1414423/54637871-e3b58100-4a46-11e9-9a2b-2c46b4972cb8.png)	grochocki	null	null	null	null	null	null	
2019-03-19 20:13:14.0	2019-03-20 21:13:57.0	2019-03-20 21:13:57.0	closed	[]	0	339	Update Roadmap.md	https://api.github.com/repos/microsoft/calculator/issues/339	https://github.com/microsoft/calculator/pull/339	### Description of the changes:  Updating roadmap document.	grochocki	null	null	null	null	null	null	
2019-03-19 20:49:48.0	2020-03-13 16:20:19.0	2020-12-03 06:01:23.0	closed	[question, needs attention]	2	340	Move away from CppUnitTest.h to a more standard unit testing framework	https://api.github.com/repos/microsoft/calculator/issues/340	https://github.com/microsoft/calculator/issues/340	With calculator ~~now~~soon being [halfway](https://github.com/Microsoft/calculator/issues/212) [cross-platform](https://github.com/Microsoft/calculator/issues/211) would you consider moving away from CppUnitTest.h to something more standard, at least for the `CalcManager` part?    Three frameworks come to my mind:  * Google Test  * Catch2  * Boost Test    I'm sure there are many others as well.	janisozaur	null	null	null	null	null	null	
2019-03-20 11:27:56.0	2019-03-21 17:44:00.0	2019-03-21 17:44:21.0	closed	[codebase quality]	0	341	Suggestion to simplify multiple "or" operators	https://api.github.com/repos/microsoft/calculator/issues/341	https://github.com/microsoft/calculator/pull/341	### Description of the changes:  - Simplify multiple logical **OR** operators in if statement     ### How changes were validated:  - Manual inspection  	Maharramoff	null	null	null	null	null	null	
2019-03-20 17:41:30.0	2019-03-20 21:38:46.0	2019-03-20 21:40:50.0	closed	[]	2	342	Minor corrections to the german locale.	https://api.github.com/repos/microsoft/calculator/issues/342	https://github.com/microsoft/calculator/pull/342	## Fixes #.  Minor corrections to the german locale.    ### Description of the changes:  Strings in Resources.resw for de-DE edited. Despriction of the changes: 'Arbeitsspeicher' --> 'Speicher', there is just the memory. A split in memory and random access memory (Arbeitsspeicher) is confusing. 'Gespeicherten Wert speichern' --> 'Angezeigten Wert speichern', there is no memory saved till i hit the set (MS) button. 'Tagens' in line 918 --> 'Tangens', just a spelling mistake. 'Modus-Dropdownfeld' and 'Kategorie-Dropdownfeld' --> '-Auswahlfeld', 'Auswahl' is more common than Dropdown. 'L' --> 'l', cause the official abbreviation for liter (ISO, IEC) is l. Also edited this for milliliter. 'wo' --> 'w', with respect to ISO8601. Line 1597 changed to 'Acre' insted of 'Morgen'. 'cd' --> 'Kt' as common abbreviation for Carat. 'Hand' --> 'Hände', because there are just the plural forms used.    ### How changes were validated:  Official reference work like Duden and my native language experience.	vonunwerth	null	null	null	null	null	null	
2019-03-20 18:45:58.0	2019-03-26 02:09:06.0	2020-12-03 06:01:22.0	closed	[Area: User Experience, fixed, Pri: 2]	3	343	The calculator doesn't support pasted texts with a minus sign before a parenthesis	https://api.github.com/repos/microsoft/calculator/issues/343	https://github.com/microsoft/calculator/issues/343	**Describe the bug**  The calculator doesn't accept the following pasted text:  `-(121)` `(-(1+3)/2)`, ...    **Steps To Reproduce**  - Open the calculator in Scientific mode  - Paste `-(122)`  - _Invalid input_ is displayed    **Expected behavior**  The calculator should display the correct result    **Screenshots**  ![image](https://user-images.githubusercontent.com/1226538/54710753-9cda9080-4b05-11e9-81cf-d0b710ec0f8e.png)        **Device and Application Information (please complete the following information):**   - OS Build: 10.0.18358.0   - Architecture: X64   - Application Version: 10.1812.10048.0  	rudyhuyn	null	null	null	null	null	null	
2019-03-20 19:35:23.0	2019-09-04 22:49:15.0	2020-12-03 06:01:21.0	closed	[codebase quality, needs attention]	7	344	Use LR parser to parse expressions coming from the Clipboard and generate commands	https://api.github.com/repos/microsoft/calculator/issues/344	https://github.com/microsoft/calculator/issues/344	The current code to manage the clipboard only supports a subset of functions managed by the calculator, has some issues to parse them (many false positives or issues with locales due to the conversion to en-us format but ignoring that '.' and ',' can be used for other purposes in the original locale) and very complicated to maintain/add new features (sin, pin, square, etc..).    In order to simplify and make this function more robust, we should instead use a language parser, more suited to our needs.    My proposal would be to use a custom Lexer to support all the different number formats (hex, bin, dec, bin, dec with exponent, ...) and modes (standard, programmer, etc...) we support and use a LR parser to verify and generate the list of commands. This solution would have many advantages:  - very easy to add new operator whatever their types (binary, pre-unitary or post-unitary)  - the parser will generate the sequence of commands while verifying the text, easier to maintain  - no false positive possible    In my proto-PR, I used [Bison](https://www.gnu.org/software/bison/), a GPL v3 tool but providing an explicit exception to allow the use of the generated code without license.    It already manages a variety of features not currently available:    **sinus/cos/tan**  ![complex operations](https://user-images.githubusercontent.com/1226538/54712833-8b47b780-4b0a-11e9-9733-14c812278f17.PNG)    ** Power, square, cube ** (#299)  ![Power](https://user-images.githubusercontent.com/1226538/54712906-ab777680-4b0a-11e9-9860-c990de0ff935.PNG)    **more sign operators**  ![moresigns](https://user-images.githubusercontent.com/1226538/54712859-97337980-4b0a-11e9-92db-65777cd2bfd2.PNG)    **Binary operations: OR, NOT, AND, XOR**  ![binaryOp](https://user-images.githubusercontent.com/1226538/54712791-6c492580-4b0a-11e9-8b89-39dea6584d99.PNG)  ![binary](https://user-images.githubusercontent.com/1226538/54712778-63f0ea80-4b0a-11e9-953a-4a0fd116cf8b.PNG)    and fix some reported bugs:  - minus sign not correctly supported: #294   - minus sign + parenthesis #343     ## Proto-PR available here  https://github.com/rudyhuyn/calculator/tree/AddExpressionParser    remaining:   - add unit tests  - it only supports 0;0 and 0;3 grouping for the moment      	rudyhuyn	null	null	null	null	null	null	
2019-03-20 23:38:11.0	2019-04-26 23:07:15.0	2019-04-26 23:07:15.0	closed	[Bug, fixing approved issue]	1	345	Fix bug when the negate sign is before a space 	https://api.github.com/repos/microsoft/calculator/issues/345	https://github.com/microsoft/calculator/pull/345	## Fixes #294      ### Description of the changes:  Ignore `None` characters while parsing the clipboard, so '4-<space>-6' would be correctly interpreted.    The issue was that `isPreviousOperator` was set to `False`because of the space character, ignore it solve the issue.     ### How changes were validated:  - tested with different values  	rudyhuyn	null	null	null	null	null	null	
2019-03-21 00:05:05.0	2019-03-26 02:09:06.0	2019-03-26 02:09:06.0	closed	[Bug, fixing approved issue]	0	346	Accept plus/minus sign before a parenthesis in ClipboardManager	https://api.github.com/repos/microsoft/calculator/issues/346	https://github.com/microsoft/calculator/pull/346	## Fixes #343       ### Description of the changes:  - Modify scientificModePatterns regexes to support minus sign before parenthesis.    ### How changes were validated:  - Manually	rudyhuyn	null	null	null	null	null	null	
2019-03-21 00:24:54.0	null	2021-08-02 09:04:06.0	open	[help wanted, Enhancement, Pri: 2, needs spec]	6	347	Temperature unit conversion does not work for temperature intervals	https://api.github.com/repos/microsoft/calculator/issues/347	https://github.com/microsoft/calculator/issues/347	**Problem Statement**  "We wish to limit global temperature rise to 4 degrees Celsius."  The above cannot be converted in calculator to  "We wish to limit global temperature rise to 7.2 degrees Fahrenheit."    **Evidence or User Insights**  It is acceptable usage to talk about temperature intervals in degrees Celsius and degrees Fahrenheit, and it should be possible to use temperature intervals rather than a specific temperature on the Celsius or Fahrenheit scales.  Failure to make this available will have our poor American colleagues misunderstanding that we are not talking about limiting global temperature rise to 39.2 degrees Fahrenheit!    **Proposal**  Either:  a) Where there is currently a single option for "Temperature" in the hamburger, have two: Temperature (Interval) or Temperature (Scale).  b) Keep the single option for "Temperature" in the hamburger, then have a separate radio button along the lines of "Interval (referring to the difference between two temperatures)" and "Scale (referring to what temperature an object is)"    My preference would be b).    **Goals**  Stop people incorrectly converting units when they are talking about a temperature interval.    **Non-Goals**  We are not submitting a bug to upstream governments to ban the use of Celsius and Fahrenheit.  While we would all eventually get used to saying "it's 270 Kelvin out!", it is more common to know when you are talking about a scale and when you are talking about an interval.  	I-Campbell	null	null	null	null	null	null	
2019-03-21 07:58:35.0	2020-10-05 20:51:52.0	2020-12-03 06:01:19.0	closed	[Bug, Area: Accessibility, Pri: 3, triage approved]	5	348	Border outline of "Icons" in the Menu list items are not following the High Contrast standards on mouse hovering	https://api.github.com/repos/microsoft/calculator/issues/348	https://github.com/microsoft/calculator/issues/348	**Repro Steps**  * Set theme to High Contrast Black or White.  * Launch Calculator app.  * Navigate to "Open navigation" button and activate it.  * Hover the mouse on the menu list items in High Contrast Black/White theme.  * Observe the issue.    **Actual Result**  Border outline of "Icons" in the Menu list items are not following the High Contrast standards on mouse hovering.    **Expected Result**  Border outline of "Icons" in the Menu list items should follow the High Contrast standards on mouse hovering.    ![image](https://user-images.githubusercontent.com/1414423/54739401-34c39300-4b75-11e9-8650-f2cf774c8be1.png)    **Test Environment**  OS Version: Windows 10 Build 18351.1  App Name: Calculator   App Version: 10.1902.16.0	MicrosoftIssueBot	null	null	null	null	null	null	
2019-03-21 07:58:38.0	2020-02-20 23:37:47.0	2020-12-03 06:01:17.0	closed	[Bug, Area: Accessibility, Pri: 3, not repro, hacktoberfest]	5	349	Focus moves to random place by pressing "Tab" key after selecting particular month using "Next" and "Previous" buttons	https://api.github.com/repos/microsoft/calculator/issues/349	https://github.com/microsoft/calculator/issues/349	**Repro Steps**  * Launch Calculator app and Launch narrator.  * Navigate to Menu and Select Date calculation.  * Select Difference between dates from the combo box.  * Navigate to From field and press enter.  * Date calendar picker will open.  * Navigate to Previous button and press enter multiple times to select different month.  * Now press Tab key and observe the issue.    The same issue is repro for "To" calendar picker and "From" calendar picker in "Add or subtract days".    **Actual Result**  Focus moves to random places after selecting particular month using Next and previous buttons.    **Expected Result**  Focus should land on the First date of the selected month.     **Test Environment**  OS Version: Windows 10 Build 18351.1  App Name: Calculator   App Version: 10.1902.16.0	MicrosoftIssueBot	null	null	null	null	null	null	
2019-03-21 07:58:41.0	2020-05-11 20:46:30.0	2020-12-03 06:01:16.0	closed	[help wanted, Bug, Area: Accessibility, Pri: 3, not repro]	1	350	Narrator is not reading changed date confirmation once "Add/Subtract" radio button is selected	https://api.github.com/repos/microsoft/calculator/issues/350	https://github.com/microsoft/calculator/issues/350	**Repro Steps**  * Launch Calculator app and Launch narrator.  * Navigate to Menu and Select Date calculation.  * Select Add or Subtract days from the combo box.  * Navigate to From field and select some value.  * Select Add radio button and navigate to Year, date and month combo box and select some values and observe narrator reading the changed date information.  * Now navigate to Subtract radio button and select.  * Date will change and observe the narrator announcement.    **Actual Result**  Narrator is not reading changed date confirmation once Add/Subtract radio button is selected.    **Expected Result**  Narrator should read changed date confirmation once Add/Subtract radio button is selected.    **Test Environment**  OS Version: Windows 10 Build 18351.1  App Name: Calculator   App Version: 10.1902.16.0	MicrosoftIssueBot	null	null	null	null	null	null	
2019-03-21 07:58:43.0	null	2021-05-26 10:03:56.0	open	[help wanted, Bug, Area: Accessibility, Pri: 3, triage approved]	1	351	In scan mode, Narrator is not reading proper information when focus lands on the whole calendar picker control	https://api.github.com/repos/microsoft/calculator/issues/351	https://github.com/microsoft/calculator/issues/351	**Repro Steps**  * Launch Calculator app and Launch narrator  * Navigate to Menu and Select Date calculation.  * Select Difference between dates from the combo box.  * Navigate to From field and press enter.  * Date calendar picker will open and select any month by next or previous button.  * Now navigate to calendar picker using scan mode (Up arrow key).  * Observe the issue.    The same issue repro for To calendar picker and From calendar picker in Add or subtract days.    **Actual Result**  In scan mode, Narrator is reading "April 10 2019" even though February 2019 is selected when focus lands on the whole control and also reads "Table exit" on another up arrow navigation.    **Expected Result**  In scan mode, Narrator should read proper information when focus lands on whole calendar picker control such as Calendar picker popup. We should match behavior of standard CalendarDatePicker Control.    **Test Environment**  OS Version: Windows 10 Build 18351.1  App Name: Calculator   App Version: 10.1902.16.0	MicrosoftIssueBot	null	null	null	null	null	null	
2019-03-21 07:58:46.0	2019-09-27 17:36:14.0	2020-12-03 06:01:15.0	closed	[Area: Accessibility, Pri: 3, won't fix]	1	352	Focus unexpectedly shifts to “Clear Entry” button on activating “Update rates” link	https://api.github.com/repos/microsoft/calculator/issues/352	https://github.com/microsoft/calculator/issues/352	**Repro Steps**  * Launch Calculator app.  * Navigate to "Open navigation" button and activate it.  * Navigate to list items and select Currency Converter.  * Navigate to update rates link and activate it.  * Observe the issue.    **Actual Result**  Focus unexpectedly shifts to “Clear Entry” button on activating “Update rates” link.    **Expected Result**  Focus should remain on “Update rate” link itself on activating “Update rates” link.    **Test Environment**  OS Version: Windows 10 Build 18351.1  App Name: Calculator   App Version: 10.1902.16.0	MicrosoftIssueBot	null	null	null	null	null	null	
2019-03-21 18:47:44.0	2019-03-21 19:27:05.0	2019-03-21 19:27:06.0	closed	[]	0	353	Build: disable component governance task in internal localization build	https://api.github.com/repos/microsoft/calculator/issues/353	https://github.com/microsoft/calculator/pull/353	Internally, a "component detection" task is automatically injected into builds to make sure we're not using any components with known security vulnerabilities. Because this task runs during the main app builds, it doesn't also need to run in the pipeline which hands off strings to the localization system.	mcooley	null	null	null	null	null	null	
2019-03-21 23:10:32.0	2019-03-22 00:03:43.0	2019-03-22 22:30:24.0	closed	[]	0	354	Add TemporaryKey.pfx	https://api.github.com/repos/microsoft/calculator/issues/354	https://github.com/microsoft/calculator/pull/354	Currently, we don't build appxbundles in our public CI builds because the VS tooling can only build _signed_ bundles, and we didn't have a signing certificate checked into the repo. This change adds a self-signed certificate to the repo for this purpose.    We also had some directives in the project file to conditionally use TemporaryKey.pfx in internal builds, which I'm removing. The internal-only TemporaryKey.pfx chained up to an internal test root certificate, but we've updated all the systems which were relying on that behavior so this self-signed cert is sufficient now.    The certificate was generated like this:  ```  New-SelfSignedCertificate -Type Custom -Subject "CN=Microsoft Corporation, O=Microsoft Corporation, L=Redmond, S=Washington, C=US" -KeyUsage DigitalSignature -FriendlyName "Calculator (Dev)" -CertStoreLocation "Cert:\LocalMachine\My" -TextExtension @("2.5.29.37={text}1.3.6.1.5.5.7.3.3", "2.5.29.19={text}")  Export-PfxCertificate -cert "Cert:\LocalMachine\My\<thumbprint>" -FilePath C:\TemporaryKey.pfx -Password (new-object System.Security.SecureString)  ```	mcooley	null	null	null	null	null	null	
2019-03-22 09:28:38.0	2019-03-22 15:28:26.0	2019-03-22 15:28:26.0	closed	[]	0	355	Update pch.cpp	https://api.github.com/repos/microsoft/calculator/issues/355	https://github.com/microsoft/calculator/pull/355	## Fixes #.      ### Description of the changes:  -  -  -    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  -  -  -    	SundaramDubey	null	null	null	null	null	null	
2019-03-22 15:47:38.0	2019-03-22 15:48:14.0	2019-03-22 15:49:28.0	closed	[]	2	356	Experiment	https://api.github.com/repos/microsoft/calculator/issues/356	https://github.com/microsoft/calculator/pull/356	## Fixes #.      ### Description of the changes:  -  -  -    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  -  -  -    	zevel0	null	null	null	null	null	null	
2019-03-22 19:08:33.0	2019-03-22 19:29:19.0	2019-03-22 19:29:19.0	closed	[]	0	357	Update localized strings	https://api.github.com/repos/microsoft/calculator/issues/357	https://github.com/microsoft/calculator/pull/357	Importing new translations from our internal localization system.	mcooley	null	null	null	null	null	null	
2019-03-22 19:20:29.0	2019-03-23 05:09:20.0	2020-12-03 06:01:14.0	closed	[Enhancement]	6	358	calculate time between to time	https://api.github.com/repos/microsoft/calculator/issues/358	https://github.com/microsoft/calculator/issues/358	Please add this feature, you can calculate the time between 2 times for example 15:00 ~ 13:00 is a 2 hours     <!--  See https://github.com/Microsoft/calculator/blob/master/docs/NewFeatureProcess.md for  suggestions on how to write a good feature pitch. Just want to submit an idea quickly? Try Feedback  Hub instead: https://insider.windows.com/en-us/fb/?contextid=130    -->    **Problem Statement**  <!-- What problem are we trying to solve? Who’s the target audience? Is there a customer need or  pain point we need to remedy? Is there a business goal or metric we are trying to improve? Do we  have a hypothesis we want to prove or disprove? -->    **Evidence or User Insights**  <!-- Why should we do this? Potential sources of data: Feedback Hub, other GitHub issues, other  anecdotes from listening to customers in person or online, request from another team, telemetry  data, user research, market or competitive research -->    **Proposal**  <!-- How will the solution/feature help us solve the problem? How will it meet the target  audience’s needs? If there are business goals or metrics, how does this improve them? -->    **Goals**  <!-- What you want to accomplish with this feature. Typical examples include  “User Can *perform some task*” -->    **Non-Goals**  <!-- Things we are explicitly not doing or supporting or that are out of scope, including reasons  why. -->    **Low-Fidelity Concept**  <!-- Show as much of the experience as needed to explain the idea. This can be as simple as a  napkin drawing but can also be a code prototype, a PowerPoint walkthrough, or a design  comp. -->	farshadasadpour	null	null	null	null	null	null	
2019-03-22 19:57:47.0	2019-03-22 20:59:07.0	2019-03-22 22:30:20.0	closed	[]	0	359	[Build] Update localization handoff pipeline	https://api.github.com/repos/microsoft/calculator/issues/359	https://github.com/microsoft/calculator/pull/359	Update the localization build so that it sends strings to our internal localization system on a nightly basis and produces a patch file which we can use to check translations back into the repo.	mcooley	null	null	null	null	null	null	
2019-03-22 20:49:48.0	2019-03-25 18:16:16.0	2019-03-25 18:16:16.0	closed	[build]	0	360	[Build] Remove conditional inclusion of resw files	https://api.github.com/repos/microsoft/calculator/issues/360	https://github.com/microsoft/calculator/pull/360	The .resw files for all languages are expected to be checked into the repo (this used to not the the case). Let's remove the conditions in the project file which ignore them if they don't exist.	mcooley	null	null	null	null	null	null	
2019-03-22 22:19:35.0	2019-03-22 22:46:11.0	2019-03-22 22:46:11.0	closed	[]	0	361	Updating version of release builds to 1903	https://api.github.com/repos/microsoft/calculator/issues/361	https://github.com/microsoft/calculator/pull/361		mcooley	null	null	null	null	null	null	
2019-03-23 00:15:13.0	2019-03-25 18:28:29.0	2020-12-03 06:01:13.0	closed	[fixed, codebase quality]	1	362	Disable Windows-provided min/max macros	https://api.github.com/repos/microsoft/calculator/issues/362	https://github.com/microsoft/calculator/issues/362	`minwindef.h` defines macros for min/max functionality.  For places of the codebase where min/max is required, the code defaults to using these macros instead of the `std::min`/`std::max`.  The macros can be disabled with the `NOMINMAX` flag.  We should disable the macros in-order to improve the portability of our code.  Related to #212.	danbelcher-MSFT	null	null	null	null	null	null	
2019-03-23 00:21:16.0	2019-03-25 18:28:30.0	2019-04-04 16:36:44.0	closed	[codebase quality]	2	363	Disable use of min/max macros defined by Windows headers.	https://api.github.com/repos/microsoft/calculator/issues/363	https://github.com/microsoft/calculator/pull/363	## Fixes #362.      ### Description of the changes:  - Disable Windows-provided min/max macros using the `NOMINMAX` flag.  Add the flag to each project's pch to disable the macros across the solution.    ### How changes were validated:  - Project builds.  - Unit tests pass.  - Smoke tests.    	danbelcher-MSFT	null	null	null	null	null	null	
2019-03-23 01:47:47.0	2019-04-04 23:55:13.0	2020-12-03 06:01:12.0	closed	[Pri: 3, Area: User Experience, fixed]	8	364	When pressed or when the pointer is hovered over, the background colors of buttons are not consistent.	https://api.github.com/repos/microsoft/calculator/issues/364	https://github.com/microsoft/calculator/issues/364	I'm not sure if it's a design choice or not, but buttons for basic operations  ('+', '-', '/', '*', '=') don't have the same background color as all other buttons when you hover the pointer over them (or press them)    ![image](https://user-images.githubusercontent.com/1226538/54860107-761d8500-4cd2-11e9-910b-24fb6d0d8c33.png)    ![image](https://user-images.githubusercontent.com/1226538/54860112-803f8380-4cd2-11e9-84b2-82631bc2282e.png)    **Steps To Reproduce**  - Launch the calculator in Standard/Scientific/Programmer mode  - Move your mouse over the calculator buttons    **Expected behavior**  - The style of these buttons should be consistent (?)    **Device and Application Information (please complete the following information):**   - OS Build: 10.0.18361.0   - Architecture: X64   - Application Version: 10.1812.10048.0	rudyhuyn	null	null	null	null	null	null	
2019-03-23 07:15:17.0	2019-04-03 13:45:48.0	2019-04-03 13:45:48.0	closed	[documentation]	2	365	Update README to add description of "date calculation" functionality 	https://api.github.com/repos/microsoft/calculator/issues/365	https://github.com/microsoft/calculator/pull/365	## Fixes #140.  Added a one-liner description about the date calculation functionality    ### Description of the changes:  - This change maintains consistency by writing it after the description of the programmer calculator so that it matches the order of the positions of these functionalities in the hamburger menu of the calculator.  - Just like the other descriptions, this is also a one-liner  - This description covers both the functionality under "date calculation" i.e. the difference between the dates and adding/subtracting a date from another.    ### How changes were validated:  I proof-read the changes multiple times to ensure that the sentence is correct.    <!--Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  -Manual  	sonali9696	null	null	null	null	null	null	
2019-03-24 02:56:02.0	2019-03-26 21:53:44.0	2019-03-29 17:58:50.0	closed	[codebase quality]	2	366	Smart pointers	https://api.github.com/repos/microsoft/calculator/issues/366	https://github.com/microsoft/calculator/pull/366	## Fixes #61       ### Description of the changes:  -moved the Rational class over to smart pointers(spawned in `ToSmartRat()`)      ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  -passed manual tests  -lots of watching memory allocate and de-allocate     	vlogozzo	null	null	null	null	null	null	
2019-03-24 05:22:08.0	2019-04-15 16:31:02.0	2020-12-03 06:01:11.0	closed	[Area: Accessibility, Pri: 3, fixed]	2	367	The narrator doesn't convey the number of open parenthesis when the user uses a keyboard	https://api.github.com/repos/microsoft/calculator/issues/367	https://github.com/microsoft/calculator/issues/367	**Describe the bug**  - The narrator only conveys the number of open parenthesis when the button is pressed (via tab+space or using mouse/touch screen) but not when users type '('  or ')' via a keyboard.  - Minor issue: Each time the button is pressed, the narrator will say again the name of the button (and grammatically incorrectly): "Left parenthesis - open parenthesis count 5 - button"    **Steps To Reproduce**  - Activate the Narrator  - Launch the Calculator in Scientific or Programmer mode  - Type '('  --> the number of parenthesis won't be convey by the narrator.    **Expected behavior**  - The narrator should communicate the number of parenthesis when the button is pressed  - The Narrator should say _"Left parenthesis button - open parenthesis count 5"_ instead of _"Left parenthesis - open parenthesis count 5 - button"_ when the focus is set on the button  - The Narrator should not say the name of the button again when pressed, but only "open parenthesis count 5"       **Device and Application Information**   - OS Build: 10.0.18361.0   - Architecture: X64   - Application Version: 10.1812.10048.0  	rudyhuyn	null	null	null	null	null	null	
2019-03-24 07:32:24.0	2019-04-15 16:31:03.0	2019-04-15 16:31:03.0	closed	[Bug, fixing approved issue]	2	368	Improve the support of Narrator with parenthesis	https://api.github.com/repos/microsoft/calculator/issues/368	https://github.com/microsoft/calculator/pull/368	## Fixes #367      ### Description of the changes:  - Modify how the opening parenthesis button manages the Narrator to only convey the name of the `(` or `)` button when they get the focus  - Narrator will now say how many parenthesis are still open when users type '(' or ')'  - Modify and simplify how the right parenthesis button supports Narrator, we should limit registrations to `ViewModel::PropertyChanged` when possible, ideally, for performance reasons, we should only use bindings or specialized events.   - Remove `Format_OpenParenthesisAutomationNamePrefix` to unify the behavior with the right parenthesis button and not repeat the name of the button each time the user clicks on it.    ### How changes were validated:  - tested manually    	rudyhuyn	null	null	null	null	null	null	
2019-03-24 21:28:42.0	2019-04-16 18:29:44.0	2019-04-16 18:29:44.0	closed	[Bug, fixing approved issue]	1	369	Keep input when users refresh currency rates	https://api.github.com/repos/microsoft/calculator/issues/369	https://github.com/microsoft/calculator/pull/369	## Fixes #260       ### Description of the changes:  - prevent `UnitConverterViewModel` to reset values when users click on `update rates`.  - recompute UnitConverter's caches (`m_ratioMap` and `m_categoryToUnits`) once rates are updated (but check first if the user did/didn't change the category)    ### How changes were validated:  - Manually tested with fake currency rates (HTTP responses modified on the fly via FiddlerCore)  - Verified that it works no matter the selected field (`From` or `To`)  - Verified that the currencies selected are kept after a refresh  	rudyhuyn	null	null	null	null	null	null	
2019-03-24 22:39:45.0	2019-05-09 18:01:44.0	2020-12-03 06:01:10.0	closed	[Pri: 3, fixed, codebase quality]	1	370	Remove Serialize/Deserialize functions never used in StandardCalculatorViewModel, UnitConverter and UnitConverterViewModel	https://api.github.com/repos/microsoft/calculator/issues/370	https://github.com/microsoft/calculator/issues/370	**Describe the change requested**    `StandardCalculatorViewModel` as well as `UnitConverterViewModel` and `UnitConverter` contain custom binary serializers and deserializers never used by the application. I suspect they were used a long time ago when the app lifecycle model was more restricted (Windows Phone 8/8.1?).     These unused functions make it harder to add features or refactor these 3 classes, especially due to the format used (custom binary serialization).     A big part of the information saved by `UnitConverter` for example is not relevant or is redundant:  - `CurrentCategory` is already saved in `LocalSettings` by `MainPage`  - `FromType` and `ToType` are already saved by the function `UnitConverter::SaveUserPreferences` (in file) as well as by `UnitConverterViewModel::SaveUserPreferences()` (in LocalSettings)  - `ratioMapTokens` is based on static data (for unit conversion) or data already backed up by `CurrencyDataLoader`    **Prerequisite**  Be sure Microsoft doesn't use these functions in tools or code not in the git repository (integration tests, tools used by QA, etc..)    **Functions no longer used we can remove**  - CalculatorManager::SerializeCommands  - CalculatorManager::DeSerializeCommands  - UnitConverter::StringToCategory  - UnitConverter::StringToConversionData  - UnitConverter::ConversionDataToString  - UnitConverter::Serialize  - UnitConverter::DeSerialize  - StandardCalculatorViewModel::Serialize  - StandardCalculatorViewModel::Deserialize  - UnitConverterViewModel::Serialize  - UnitConverterViewModel::Deserialize	rudyhuyn	null	null	null	null	null	null	
2019-03-25 02:21:14.0	2019-04-04 21:23:03.0	2019-04-04 21:25:51.0	closed	[codebase quality]	5	371	Fixed x:Names in UWP Views and Custom Controls	https://api.github.com/repos/microsoft/calculator/issues/371	https://github.com/microsoft/calculator/pull/371	## Fixes #62     This completes the request in Issue 62, by replacing camel-cased x:Names with pascal-cased names.     NOTES:     * This PR replaces the closed PR #244.   * I recommend squashing into a single when merging.     ### Description of the changes:  - Renamed all camel-cased x:Name values in the UWP project's XAML Views and custom controls  - Applied changes to associated VisualState setters  - Applied changes to UIElement and VisualState references in code    ### How changes were validated:  Ran all tests:    ![image](https://user-images.githubusercontent.com/3520532/54890946-03eba280-4e82-11e9-9969-685e1f522173.png)    Manual testing of changed views and visual state changes    ![image](https://user-images.githubusercontent.com/3520532/54890972-1fef4400-4e82-11e9-973d-59cde9583dc5.png)    	LanceMcCarthy	null	null	null	null	null	null	
2019-03-25 02:28:40.0	2019-03-26 17:54:15.0	2020-12-03 06:01:09.0	closed	[Area: User Experience, fixed, Pri: 2]	2	372	CalculationResult controls in UnitConverter aren't correctly aligned in some cases	https://api.github.com/repos/microsoft/calculator/issues/372	https://github.com/microsoft/calculator/issues/372	**Describe the bug**  The recent change in `UnitConverter` to decrease the distance between the currency symbol and the CalculationResult control (#246) had an impact on how `UnitConverter` displays `CalculationResult` when not in currency mode and when the local region displays currency symbols on the left.    ![image](https://user-images.githubusercontent.com/1226538/54891244-017d4e80-4e6a-11e9-8fb7-1532942892bb.png)    **Steps To Reproduce**  - Be sure the current region displays currency symbols on the left (en_US for example)  - Open one of the unit converter (not the currency one)    **Expected behavior**  CalculationResult controls should be align with the 2 ComboBox    **Device and Application Information**   - OS Build: 10.0.18361.0   - Architecture: X64   - Application Version: 10.1812.10048.0	rudyhuyn	null	null	null	null	null	null	
2019-03-25 02:43:51.0	2019-03-26 17:54:15.0	2019-03-26 17:54:15.0	closed	[Bug, fixing approved issue]	0	373	Fix padding of unit converter when the locale displays currency symbols on the left	https://api.github.com/repos/microsoft/calculator/issues/373	https://github.com/microsoft/calculator/pull/373	## Fixes #372    UnitConverter.xaml didn't align controls correctly when the PC was set with a locale displaying currency symbols on the left. The bug was only visible with unit conversion, not with currency conversion.    ### Change  - Modify how we manage the padding of Value1Container and Value2Container    ### How changes were validated:  - manually, in FR (currency symbols displayed on the right), in EN (currency symbols displayed on the left)   - in currency converter mode and in unit converter mode  - portrait and landscape.  	rudyhuyn	null	null	null	null	null	null	
2019-03-25 03:13:03.0	2019-04-04 23:55:13.0	2019-04-04 23:55:13.0	closed	[Bug]	4	374	Add Reveal Highlight on AccentCalcButtonStyle + fix accessibility iss…	https://api.github.com/repos/microsoft/calculator/issues/374	https://github.com/microsoft/calculator/pull/374	…ue with high contrasts    ## Fixes #364    ### Description of the changes:  - Add Reveal Highlight effect on the 4 basic operator buttons + Equal button (effect more visible with purple and all grey-ish accent colors)    After (reveal highlight):  ![6CAE55A2-2C53-457F-9B1A-ECD4EEC915C3](https://user-images.githubusercontent.com/1226538/54898885-1d451c80-4e8b-11e9-9c29-d4ece95df062.GIF)    Before (solid color):  ![779204C4-8308-4EC3-A24B-630ECAF21CBB](https://user-images.githubusercontent.com/1226538/54898951-6006f480-4e8b-11e9-96da-1d12c3a1818b.GIF)      - In High contrasts (accessibility), it wasn't possible to see the symbol of these buttons when pressed (white symbol on white background).    ![image](https://user-images.githubusercontent.com/1226538/54892963-e19d5900-4e70-11e9-9e53-17c706502cd4.png)        ### How changes were validated:  - tested in light, dark and high contrast mode.    	rudyhuyn	null	null	null	null	null	null	
2019-03-25 06:06:22.0	2021-07-01 04:56:12.0	2021-07-01 04:56:12.0	closed	[fixing approved issue]	5	375	UnitConverter: Automatically flip units when users set one to the same type than the other	https://api.github.com/repos/microsoft/calculator/issues/375	https://github.com/microsoft/calculator/pull/375	## Fixes #266      ### Description of the changes:  - replace `OBSERVABLE_PROPERTY_RW` for Unit1 and Unit2 by custom code.  - verify if the new value of `Unit1` is equals to the current value of `Unit2`, if it's the case, set `Unit2` to the former value of `Unit1`.   - add unit tests (and adapt existing ones)  - [NIT optimization] replace `Unit1` and `Unit2` by `m_Unit1` and `m_Unit2` when possible    ### How changes were validated:  - Manually tested + unit tests	rudyhuyn	null	null	null	null	null	null	
2019-03-25 10:51:13.0	2019-03-25 13:21:49.0	2019-03-25 13:21:49.0	closed	[]	0	376	Create 1.txt	https://api.github.com/repos/microsoft/calculator/issues/376	https://github.com/microsoft/calculator/pull/376	## Fixes #.      ### Description of the changes:  -  -  -  sorry,I want to have a test  ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  -  -  -    	xiaoyinXu	null	null	null	null	null	null	
2019-03-25 17:44:32.0	2019-03-26 02:07:08.0	2020-12-03 06:01:08.0	closed	[Area: Accessibility, Pri: 3, duplicate]	2	377	Can't use Windows standard key sequence on main menu	https://api.github.com/repos/microsoft/calculator/issues/377	https://github.com/microsoft/calculator/issues/377	The main menu doesn't allow the standard windows sequence of Alt+letter followed by another letter. As an example of what you should be able to do, you can exit Notepad this way: press Alt+F, then release both keys, and press X. This is written Alt+F, X.    In calculator, if you press Alt+H, 2, it doesn't work. The 2 get entered into the calculator window. If you keep the Alt key held down, spanning the press of the H and the 2, then it works, but this requires an awkward finger stretch.    Calculator's menus should support standard Windows key sequences.    **Device and Application Information:**   - OS Build: 10.0.17763.0   - Architecture: X64   - Application Version: 10.1812.10048.0	breyed	null	null	null	null	null	null	
2019-03-25 17:53:50.0	null	2021-05-27 00:32:01.0	open	[Bug, Area: Accessibility, triage approved, Pri: 2]	2	378	Show next set of access key shortcuts immediately	https://api.github.com/repos/microsoft/calculator/issues/378	https://github.com/microsoft/calculator/issues/378	When a menu is opened with the keyboard, the choices for the next menu keys should be shown immediately. For example, when you press Alt+H, you should see the choices for next keys you can press. Currently, you don't see anything.    There is a workaround. If you press Alt+H and then press Alt again, you see the next key choices. The extra key press shouldn't be necessary. If the user presses Alt+H, he's going to want to press another key to do something next. Immediately showing the next menu choices goes way back. It's in the Office Ribbon, It's in the standard Windows pull-down menu. It was in pull-down menus in DOS apps like Quick Basic in the 1980s. I image if you dug out a old copy of Lotus 1-2-3, and pressed "/" (it's menu key), it would show you what you could type next there, too. :-)    **Device and Application Information:**   - OS Build: 10.0.17763.0   - Architecture: X64   - Application Version: 10.1812.10048.0	breyed	null	null	null	null	null	null	
2019-03-25 18:12:58.0	null	2021-08-02 09:04:09.0	open	[Pri: 2, codebase quality, approved]	12	379	Proposal to modernize the architecture of Unit Conversions	https://api.github.com/repos/microsoft/calculator/issues/379	https://github.com/microsoft/calculator/issues/379	# Problem Statement    There are two flaws with the way the calculator currently manages unit conversions:   - it doesn't allow us to support some new scenarios (including some already identified by the community), restricting the possibilities and innovations.  - It's obvious, the current code has a long history and some technical choices from the past don’t make sense anymore, making the code inefficient and challenging to understand/modify.    Here is a proposal to improve how the calculator manages unit conversions, and for clearing the path for new features going forward.    This proposal is a work-in-progress, some of the changes will lead to a big refactoring of a part of the application. Before even starting to modify how unit conversion works, let's list all the future needs we will have, to be sure to suit all of them and let's debate about the different actions in comments. Don't hesitate to share your ideas and feedback, this document will be regularly updated to take into account your suggestions.    # Goal    This proposal is a work-in-progress, some of the changes will lead to a big refactoring of a part of the application. Before even starting to modify how unit conversion works, let's debate and list all the future needs we will have to be sure to suit all of them and let's debate about the different actions in comments. Don't hesitate to share your ideas and feedback, this document will be regularly updated to take into account your suggestions.    # Proposal    ## Step 1: Simplify Data Loader + merge Unit and UnitData.    When the user opens one of the converters, `UnitConverterViewModel` creates a `UnitConverter` object, hosting 2 Data loaders: `UnitConverterDataLoader` and `CurrencyConverterDataLoader`. To simplify our analysis, we can ignore the second data loader, but there are still many issues from the first data loader.    The `UnitConverterDataLoader` hosts 2 main objects:     - A `map<CategoryId, vector<Unit>>`:    - `Unit` objects containing:      - Unit Id      - Name (string)      - Abbreviation (string)      - (+ an order via `OrderedUnit`)  - A list of `UnitData`:    - `UnitData` objects containing:      - Category Id      - Unit Id      - A Factor (double) representing the value of the unit measured in an unspecified base unit used by all UnitData from the same category.    Even if these 2 collections are static and hosted by the same class, they have data redundancy, with the association Category↔Unit being defined by the `map<CategoryId, Unit>` but also by the `UnitData`.    The only valuable information hosted by `UnitData` is `Factor` and we have no reason not to merge `Unit` and `UnitData` and create a single object containing all the necessary information to fully describe a unit:    | Unit                  |  |-----------------------|  | Unit Id               |  | Name (string)         |  | Abbreviation (string) |  | Factor  (double) |  | Offset (double) |  | AddOffsetFirst (bool) |    ## Step 2a: Get rid of the ratio matrix    When the users open one of the unit converters, `UnitConverterDataLoader` will, for each category, create a 2D table of all unit combinations from the same category (including pairs of the same unit but also ratio per pairs A->B, B->A) and will calculate the ratio between the 2 units.    For unit conversations, 2996 ratios will be calculated (including 1369 for the category Data) and stored.     When the currency converter is opened or when the user refreshes the currency rates, the application calculates and stores 16,384 ratios, while the user will probably use only 1 or 2 of them.     A ratio is stored by a struct `ConversionData`, containing 2 doubles and boolean, so a total of 17 bytes for 1 ratio (without counting the overhead of the vector and the map), or 23KB for units and 278KB for currencies!    Now that the calculator is open-sourced, new units will be added, increasing the number of ratios in a category by (Number of units+1)*2 -1).    _(very simplified (and not UML compliant) diagram of the current architecture)_  ![image_preview](https://user-images.githubusercontent.com/1226538/54942873-426a7700-4eed-11e9-8424-591085cd9969.png)    Contrary to `UnitConverterDataLoader`, values of `CurrencyConverterDataLoader` can be refreshed by the users, again creating a full matrices of 16K objects each time the user clicks on the *update rate* button.    Based on the high number of calculations (and memory) necessary to build this matrix, this “optimization” doesn't seem to be one, especially when the conversion from one unit to another is a simple multiplication followed by a division (+ 2 additions if Offset is used), so all these efforts don’t seem to necessary.     Getting rid of these caches will have a direct impact on performance and memory usage.    ## Step 2b: UnitConverter shouldn’t clone data from the 2 data loaders.    Even if `UnitConverter` has access to data from `UnitConverterDataLoader` and `CurrencyConverterDataLoader`, `UnitConverter` will create and host a full copy of the ratio matrix, categories, and list of units in a category from the 2 data loaders, multiplying the space used by 2.    Instead, `UnitConverter` should directly use the data from the data loaders and act as a Facade between the ViewModel and the DataLoaders, saving a lot of space and not forcing a useless sync of caches when users refresh currency rates.      ## Step 3: Units conversions should manage non-linear unit conversions    The application currently only supports linear conversions (ax + b), making it difficult to support some new units.    Some examples of non-linear units:    - Sound power: https://en.wikipedia.org/wiki/Sound_power#Sound_power_level  - Sound pressure: https://en.wikipedia.org/wiki/Sound_pressure    We already face this issue with Temperature (Celsius, Fahrenheit, …) forcing us to make some exceptions in the application with custom codes.     The following ticket https://github.com/Microsoft/calculator/issues/347 asks for the support of interval of temperatures, instead of adding more exceptions, we should redesign how the unit conversation between units work.    Instead of using 2 doubles: factor and offset, we should use a pivot unit for each category (already the case, but we must explicitly name the unit used) and add 2 functions to `Unit` to convert values from and to this pivot unit.    | Unit                                          |  |-----------------------------------------------|  | int Id                                        |  | string Name                                   |  | string Abbreviation                           |  | double FromPivotUnit(double valueInPivotUnit) |  | double ToPivotUnit(double value)              |    The conversion from one unit to another will be possible via the following code:     `ToUnit→FromPivotUnit(FromUnit→ToPivotUnit(fromValue))`    Some examples:   ### Length (pivot unit: millimeter) - linear conversion    **Centimeter**  - double FromPivotUnit(double valueInPivotUnit){ return valueInPivotUnit / 10;}   - double ToPivotUnit(double value){return valueInPivotUnit * 10;}    **Meter**  - double FromPivotUnit(double valueInPivotUnit){ return valueInPivotUnit / 1000;}   - double ToPivotUnit(double value){return value* 1000;}    ### Temperature (pivot unit: Celsius) - non-linear conversion    **Celsius**  - double FromPivotUnit(double valueInPivotUnit){ return valueInPivotUnit;}   - double ToPivotUnit(double value){return value;}    **Fahrenheit**  - double FromPivotUnit(double valueInPivotUnit){ return valueInPivotUnit × 9/5 + 32;}   - double ToPivotUnit(double value){return (value - 32) * 5 / 9;}    To simplify the code (and because 99% of units will simply use a factor), we can provide a class `UnitUsingFactor`, inheriting from Unit and implementing `FromPivotUnit` and `ToPivotUnit`.    This solution will allow us to support all types of units without excessive effort and restrictions.    ## Step 4: Add support of multi-part units    The application currently only supports units with a single number. The 2 tickets #243 and #57  require the application to support units with sub-parts. While the pivot unit can still be a double, values should be represented with a double[]:    | Unit                                             |  |--------------------------------------------------|  | int Id                                           |  | string UnitName                                  |  | int NumberOfParts                                |  | string[] PartNames                               |  | string[] PartAbbreviations                       |  | double[] FromPivotUnit(double valueInPivotUnit); |  | double ToPivotUnit(double[]);                    |    Example for Feet+Inches in the category Length (pivot unit: millimeters)    | Unit                                             |                                                                     |  |--------------------------------------------------|---------------------------------------------------------------------|  | int Id                                           |                                                                     |  | string UnitName                                  | “Feet+Inches”                                                       |  | int NumberOfParts                                | 2                                                                   |  | string[] PartNames                               | [“Feet”, “Inches”]                                                  |  | string[] PartAbbreviations                       | [“′”, “\””]                                                         |  | double[] FromPivotUnit(double valueInPivotUnit); | return [(int)valueInPivotUnit/304.8, (valueInPivotUnit%304.8)/25.4] |  | double ToPivotUnit(double[]);                    | return value[0]*304.8 + value[1]*25.4                               |    The UI will also need to be modified in order to support the display (and the editing) of units with subparts.    ## Conclusion  Once these changes are complete, the application will be more efficient and will allow opportunities for new scenarios that are currently not possible, but first, let's work all together on the new architecture.    Don't hesitate to give your feedback and debate, this post will be regularly updated to take feedback into account.    	rudyhuyn	null	null	null	null	null	null	
2019-03-25 18:21:22.0	null	2021-05-26 10:04:20.0	open	[Bug, triage approved, Area: Test Case, Pri: 2, build]	2	380	Re-enable pseudo-loc in localization builds	https://api.github.com/repos/microsoft/calculator/issues/380	https://github.com/microsoft/calculator/issues/380	**Describe the bug**  #360 removed the conditional inclusion of resw files in the project file, but also completely removed the references to pseudo-loc ressw files as they haven't been getting supplied by the localization task.    Pseudo-loc has proven helpful in the past with early identification of localization issues, so we should be fixing the Localization task to generate those resw files, and then adding their references back to the project file.	HowardWolosky	null	null	null	null	null	null	
2019-03-25 23:21:21.0	2019-03-26 17:03:43.0	2019-03-26 17:03:43.0	closed	[tooling]	2	381	[Build] Don't run component governance detection in postbuild steps	https://api.github.com/repos/microsoft/calculator/issues/381	https://github.com/microsoft/calculator/pull/381	See also #353.    In the internal build environment, there's an auto-injected component governance task which needs to run once during the build. This task doesn't need to run during the unit test, package, and internal release jobs.	mcooley	null	null	null	null	null	null	
2019-03-25 23:31:57.0	2019-04-17 00:53:09.0	2020-12-03 06:01:07.0	closed	[Pri: 3, Enhancement, Swag: XS (1-2 days)]	8	382	Adding support for Pyeong, a floorspace unit specific to Korea	https://api.github.com/repos/microsoft/calculator/issues/382	https://github.com/microsoft/calculator/issues/382	**Problem Statement**    Pyeong (abbreviation py) is a Korean unit of area and floorspace ([wikipedia](https://en.wikipedia.org/wiki/Pyeong)). The unit is the standard traditional measure for real estate floorspace - we use it whenever we talk about living space, office space, or even a city size.    Microsoft Calculator currently doesn't support it, and it would be great if it supports the unit.  Our target audience are Koreans, people living in Korea, and people looking at Korean real estates.      **Proposal**  Let's display Pyeong under **Converter -> Length**  when a user's current locale is Korean.    **Goals**  User can convert Pyeong to other area units.    **Non-Goals**  Supporting other units specific to Korea. I would like to keep the PR for this issue simple.    **Low-Fidelity Concept**  Code change should be fairly simple.  An approach I have in mind is to modify [UnitConverterDataLoader.cpp  ](https://github.com/Microsoft/calculator/blob/1113ff4b8673b1dc59d8da91ae3189905b9199d9/src/CalcViewModel/DataLoaders/UnitConverterDataLoader.cpp) Specifically, I would modify `GetUnits` method as below    ```  void UnitConverterDataLoader::GetUnits(_In_ unordered_map<ViewMode, vector<OrderedUnit>>& unitMap)  {     ...     bool useKoreanCustomary = m_currentRegionCode == L"KP" || m_currentRegionCode == L"KR";     ...     areaUnits.push_back(OrderedUnit{ UnitConverterUnits::Area_Pyung, GetLocalizedStringName(L"UnitName_Pyeong"), GetLocalizedStringName(L"UnitAbbreviation_Pyeong"), ...});     ...  }  ```      _Note: Once this feature request gets approved, I would like to follow up with a PR._  	TurtleShip	null	null	null	null	null	null	
2019-03-26 00:46:28.0	2020-05-13 17:16:28.0	2020-12-03 06:01:06.0	closed	[help wanted, Bug, Area: Accessibility, Pri: 3, won't fix]	1	383	On activating "About" button, Narrator conveys the whole information in one go which is present in "About" pop up window	https://api.github.com/repos/microsoft/calculator/issues/383	https://github.com/microsoft/calculator/issues/383	**Repro Steps**  * Launch Narrator.  * Launch Calculator app.  * Navigate to "Open navigation" button and activate it.  * Navigate to "About" control and activate it.  * Observe the issue.    **Actual Result**  On activating "About" button, narrator conveys the whole information in one go which is present in "About" pop up window.    **Expected Result**  On activating "About" button, narrator should not convey the whole information in one go which is present in "About" pop up window.    **Test Environment**  OS Version: Windows 10 Build 18351.1  App Name: Calculator   App Version: 10.1902.16.0	MicrosoftIssueBot	null	null	null	null	null	null	
2019-03-26 00:46:33.0	null	2021-07-22 09:03:00.0	open	[Bug, Area: Accessibility, Pri: 3, triage approved]	1	384	Luminosity ratio of keypad toggle buttons in “Programmer” window is less than 4.5:1	https://api.github.com/repos/microsoft/calculator/issues/384	https://github.com/microsoft/calculator/issues/384	**Repro Steps**  * Launch "Calculator" app.  * Navigate to "Programmer" window.  * Navigate to Selected "Full keypad" and “Bit toggling keypad” radio buttons.  * By using color contrast analyzer, verify the luminosity ratio of "Full keypad" and “Bit toggling keypad” buttons.    Note: The same issue is repro for Selected Bit buttons in Bit toggling keyboard window. Please refer attachment.    ![image](https://user-images.githubusercontent.com/1414423/54964389-82e7e600-4f29-11e9-99b5-6a82bcfa423c.png)    **Actual Result**  Luminosity ratio of Selected "Full keypad" and “Bit toggling keypad” radio buttons is 3.6:1.    **Expected Result**  Luminosity ratio of “Selected "Full keypad" and “Bit toggling keypad” radio buttons should be minimum 4.5:1. We should be using the right AccentColor variant on top of acrylic to ensure legibility.    For example, using the same tool, we can capture the lighter variant the Maps app uses (top is Maps foreground, while bottom is Calculator)    ![image](https://user-images.githubusercontent.com/1414423/54964585-44066000-4f2a-11e9-8aab-9aae80246e8c.png)    **Test Environment**  OS Version: Windows 10 Build 18351.1  App Name: Calculator   App Version: 10.1902.16.0	MicrosoftIssueBot	null	null	null	null	null	null	
2019-03-26 00:46:36.0	2019-09-27 17:39:51.0	2020-12-03 06:01:05.0	closed	[Bug, Area: Accessibility, Pri: 3, triage approved]	12	385	Narrator reads information of "0th" bit button incorrectly	https://api.github.com/repos/microsoft/calculator/issues/385	https://github.com/microsoft/calculator/issues/385	**Repro Steps**  * Launch "Calculator" app. Launch narrator.  * Navigate to Menu and select "Programmer".  * Navigate to “Bit toggling keypad” radio button and select it.  * Navigate to "0th" bit button and observe the narrator announcement.     **Actual Result**  Narrator reads "0 and th" separately for 0th bit button.     **Expected Result**  Narrator should read "0th" bit button on/off.    **Test Environment**  OS Version: Windows 10 Build 18351.1  App Name: Calculator   App Version: 10.1902.16.0	MicrosoftIssueBot	null	null	null	null	null	null	
2019-03-26 00:46:39.0	null	2021-08-26 10:02:43.0	open	[help wanted, Bug, Area: Accessibility, Pri: 3, triage approved, Area: User Experience]	1	386	Narrator reads information of "Bit" button twice after activating it	https://api.github.com/repos/microsoft/calculator/issues/386	https://github.com/microsoft/calculator/issues/386	**Repro Steps**  * Launch "Calculator" app and Turn on narrator.  * Navigate to Menu and select "Programmer"  * Navigate to “Bit toggling keypad” radio button and select it.  * Navigate to  bit buttons and activate it.  * Observe the issue.    **Actual Result**  Narrator reads Display value and then "1st bit value 1 button on" twice.    **Expected Result**  Narrator should read Display value and then "1st bit value 1 button on" only once.    **Test Environment**  OS Version: Windows 10 Build 18351.1  App Name: Calculator   App Version: 10.1902.16.0	MicrosoftIssueBot	null	null	null	null	null	null	
2019-03-26 00:46:42.0	2019-06-15 01:41:03.0	2020-12-03 06:01:04.0	closed	[help wanted, Area: Accessibility, fixed, Pri: 2]	3	387	Name property of a focusable element must not be null (Calendar date picker)	https://api.github.com/repos/microsoft/calculator/issues/387	https://github.com/microsoft/calculator/issues/387	**Repro Steps**  * Launch Calculator app  * Navigate to Menu and Select Date calculation  * Select Add or subtract days from the combo box  * Observe the issue using inspect.exe (available in C:\Program Files (x86)\Windows Kits\10\bin\<SDK Version>\x64)    **Actual Result**  Name Property is not defined for "From" Calendar picker.    **Expected Result**  Name Property should be defined for "From" Calendar picker. We should be leveraging the control header property instead of drawing our own label.    **Test Environment**  OS Version: Windows 10 Build 18351.1  App Name: Calculator   App Version: 10.1902.16.0	MicrosoftIssueBot	null	null	null	null	null	null	
2019-03-26 00:46:45.0	null	2021-05-26 10:04:05.0	open	[help wanted, Bug, Area: Accessibility, triage approved, Pri: 2]	7	388	"Previous", "Next" and "Year" buttons are not adopting High contrast black and white themes properly	https://api.github.com/repos/microsoft/calculator/issues/388	https://github.com/microsoft/calculator/issues/388	**Pre-Requisite**  Turn on High contrast using Settings -> Ease of Access -> High contrast -> High contrast black and white.    **Repro Steps**  * Launch Calculator app.  * Navigate to Menu and Select Date calculation.  * Select Difference between dates from the combo box.  * Navigate to From field and press enter.  * Date calendar picker will open  * Navigate to Previous, Next and Year buttons.  * Observe the issue.    ![image](https://user-images.githubusercontent.com/1414423/54963800-4f0bc100-4f27-11e9-9746-2f546b6dbffd.png)    **Actual Result**  Previous, Next and Year buttons are of blue color in High contrast white theme and of Yellow color in high contrast black theme.    **Expected Result**  We should be consistent with the default contorl. Previous, Next and Year buttons should be of black color in High contrast white theme and of white color in high contrast black theme. Buttons should have an outline.    **Test Environment**  OS Version: Windows 10 Build 18351.1  App Name: Calculator   App Version: 10.1902.16.0	MicrosoftIssueBot	null	null	null	null	null	null	
2019-03-26 06:07:08.0	2019-04-15 16:51:07.0	2020-12-03 06:01:03.0	closed	[Area: Reliability, fixed, Pri: 2]	3	389	The application crashes when users press ctrl+V while displaying the Date Calculation page.	https://api.github.com/repos/microsoft/calculator/issues/389	https://github.com/microsoft/calculator/issues/389	**Describe the bug**  The application (including the public version) crashes when users press ctrl+V if the application only displayed the Date Calculation page during its lifecycle (application started with Date Calculation and no navigation happened).     This bug only happens with Date Calculation, the only page not managing the clipboard.    **Steps To Reproduce**  - Copy a random text in your clipboard  - launch the app  - Select Date Calculation  - Close the app  - Launch the application again  - Press Ctrl+V (    **Expected behavior**  The application shouldn't crash    **Screenshots**  <!--If applicable, add screenshots to help explain your problem.-->    **Device and Application Information:**   - OS Build: 10.0.18361.0   - Architecture: X64   - Application Version: 10.1812.10048.0  	rudyhuyn	null	null	null	null	null	null	
2019-03-26 06:16:00.0	2019-04-22 23:59:14.0	2019-04-22 23:59:14.0	closed	[fixing approved issue, codebase quality]	2	390	Updates to copypastemanager	https://api.github.com/repos/microsoft/calculator/issues/390	https://github.com/microsoft/calculator/pull/390	## Fixes #55 and #64     ### Description of the changes:  - Added `constexpr` to formerly `static const` or `#define` variables  - Applied C++ Core Guideline NR.2   - Added `auto` and `const` in appropriate places    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Used the provided unit tests      	Nicholas-Baron	null	null	null	null	null	null	
2019-03-26 06:21:37.0	2019-04-15 16:51:07.0	2019-04-15 16:51:07.0	closed	[Bug, fixing approved issue, needs author feedback]	1	391	Prevent the application to crash when the current page is Date Calculation and users paste a text	https://api.github.com/repos/microsoft/calculator/issues/391	https://github.com/microsoft/calculator/pull/391	## Fixes #389     ### Description of the changes:  - Fix the else condition in ApplicationViewModel::OnPaste    ### How changes were validated:  Manually	rudyhuyn	null	null	null	null	null	null	
2019-03-26 08:00:10.0	2019-05-09 18:01:44.0	2019-05-09 18:01:44.0	closed	[fixing approved issue, codebase quality]	1	392	Remove Serialize/Deserialize functions never used in StandardCalculatorViewModel, UnitConverter, UnitConverterViewModel and CalculatorManager	https://api.github.com/repos/microsoft/calculator/issues/392	https://github.com/microsoft/calculator/pull/392	## Fixes #370    `StandardCalculatorViewModel`, `UnitConverterViewModel` and `UnitConverter` contain custom binary serializers and deserializers never used by the application.    This diff removes these functions + all the unnecessary serializations done by `CalculatorManager` (the app never deserializes these info).    ### Description of the changes:  - Remove a ton of never-called code  🧹🧹🧹🧹    ⚠ Before accepting this PR, make sure not of your tools or code not in the git repository (integration tests, tools used by QA, etc..) need these functions	rudyhuyn	null	null	null	null	null	null	
2019-03-26 11:05:41.0	null	2021-08-02 09:04:14.0	open	[Enhancement, Pri: 2, needs pitch review]	2	393	Add a "Locale" button.	https://api.github.com/repos/microsoft/calculator/issues/393	https://github.com/microsoft/calculator/issues/393	**Problem Statement**  There are many issues been reported relating to    - commas   - dots   - spaces   - ...    This is related to the fact that the calculator is used in many international environments. Many users even use data from more than 1 locale in there daily work on 1 system.    **Proposal**  On the bar above the number display (right above the default value 0) make a language/locale display like it is on the standard widnows language bar. Left clicking on this setting would allow the user to change the locale.    This locale setting would be in effect for the whole application.    **Goals**  Application can startup in the default locale of the system.  User can change locale, to allow copying, inputing and displaying data in the selected locale.    	robert-andrzejuk	null	null	null	null	null	null	
2019-03-26 20:57:51.0	2019-03-26 20:58:04.0	2019-03-26 20:58:04.0	closed	[]	0	394	changed title	https://api.github.com/repos/microsoft/calculator/issues/394	https://github.com/microsoft/calculator/pull/394	## Fixes #.      ### Description of the changes:  -  -  -    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  -  -  -    	iammeatchunky	null	null	null	null	null	null	
2019-03-26 22:48:24.0	2020-03-13 16:20:56.0	2020-12-03 06:01:02.0	closed	[tooling, build, needs attention]	10	395	Investigation of Linux builds	https://api.github.com/repos/microsoft/calculator/issues/395	https://github.com/microsoft/calculator/issues/395	With #212 now merged and #211 in the works, it should be possible to build parts of calculator on Linux/macOS with GCC and Clang. To avoid losing that ability, a CI job should verify PRs with those compilers, just like it's already being done with MSVC on Windows.    I have spent some time looking into that and would like to discuss how should this be addressed.    The project is using C++17 and will need GCC at least version 7. Looking at what Azure offers, I can see either a hosted Ubuntu 16.04 or the same, but with containers. Ubuntu 16.04 ships with GCC 5, which won't be enough and while it's possible to install updated compiler, it's more maintenance than anyone wants and if I recall correctly, it's a rather long process (I have only done so on Travis-CI, not on Azure, YMMV). This leaves the containers option, but most official vanilla containers (https://hub.docker.com/_/ubuntu, https://hub.docker.com/_/gcc) ship without `sudo` and Azure runs them as non-root, making installing packages impossible, see https://github.com/Microsoft/azure-pipelines-agent/issues/2043. That leaves an option of using community-built images, such as https://hub.docker.com/r/rikorose/gcc-cmake.    Is using such community-built images a viable option for this repository? Perhaps you would like to clone the images and use your own version? Is Azure the way to go? In other project using C++17 we prepare our own Docker images via Docker Hub and execute them on Travis-CI.    Ubuntu 18.04 would suffice, but it is not available through Azure, see https://github.com/Microsoft/azure-pipelines-image-generation/issues/506.  https://hub.docker.com/search/?q=&type=image&image_filter=official&operating_system=linux&category=os has images for other distros, but they all run into the same problems as outlined above.    While this mostly discussed GCC, Clang would face similar issues using Linux images.	janisozaur	null	null	null	null	null	null	
2019-03-26 23:07:58.0	2019-04-12 20:40:03.0	2021-01-12 18:05:24.0	closed	[]	0	396	Drop unneeded const-qualifier on return type	https://api.github.com/repos/microsoft/calculator/issues/396	https://github.com/microsoft/calculator/pull/396		janisozaur	null	null	null	null	null	null	
2019-03-27 06:44:51.0	2019-03-27 07:00:07.0	2020-12-03 06:01:01.0	closed	[by design]	3	397	Calculator should lose translucency when no longer in the foreground.	https://api.github.com/repos/microsoft/calculator/issues/397	https://github.com/microsoft/calculator/issues/397	**Problem Statement**  When using the calculator on a second monitor the calculator is losing transparency when using the main monitor.   **Evidence or User Insights**  I personly keep this on my second monitor, tabbing to calculator and back to visual studio will cause the calculator to gain then lose transparency.    **Proposal**  Transparency should be lost when the calculator is no longer in the foreground, instead of focus loss.    **Goals**  The calculator should not be a visual distraction. Losing and regaining transparency when the application is visible to the user is a visual distraction.	mike0891	null	null	null	null	null	null	
2019-03-27 19:56:02.0	2019-03-27 20:35:16.0	2021-01-12 18:14:12.0	closed	[]	0	398	Test removal of intsafe.h include	https://api.github.com/repos/microsoft/calculator/issues/398	https://github.com/microsoft/calculator/pull/398	#212 should remove the need for this header, but I only realised it was still present when looking at #211. This PR is to test if it is still needed or can be dropped.	janisozaur	null	null	null	null	null	null	
2019-03-27 20:47:03.0	2019-03-28 18:17:07.0	2021-01-12 18:05:22.0	closed	[]	2	399	Fix MSVC ARM builds	https://api.github.com/repos/microsoft/calculator/issues/399	https://github.com/microsoft/calculator/pull/399	A regression introduced in #212.	janisozaur	null	null	null	null	null	null	
2019-03-27 23:37:13.0	2019-10-01 14:16:37.0	2019-10-01 14:16:39.0	closed	[codebase quality, needs author feedback]	6	400	Code analysis 3	https://api.github.com/repos/microsoft/calculator/issues/400	https://github.com/microsoft/calculator/pull/400	Retry of #315	ariccio	null	null	null	null	null	null	
2019-03-28 00:18:22.0	2019-04-09 18:22:44.0	2020-12-03 06:01:00.0	closed	[won't fix]	5	401	Port to Xamarin and release on android and ios	https://api.github.com/repos/microsoft/calculator/issues/401	https://github.com/microsoft/calculator/issues/401	This calculator is prob the best and most useable iv seen. I miss having it on windows phone. How easily can we port this to Xamarin forms and release on ios and android? 	danwalmsley	null	null	null	null	null	null	
2019-03-28 01:37:34.0	2019-04-18 22:21:34.0	2020-12-03 06:00:59.0	closed	[Area: Performance, fixed, Pri: 2]	7	402	Clicking negate more than ten times progressively slows UI responsiveness	https://api.github.com/repos/microsoft/calculator/issues/402	https://github.com/microsoft/calculator/issues/402	I am using Calculator version 10.1812.10048.0, the latest version at the time of this writing.    **Describe the bug**  When I click on the negate button (on the bottom left hand corner) more than 10 times, the UI of the calculator becomes slower and slower to use. The more I click on it, the slower and slower the Calculator gets, until it gets so slow it is unusable.    **Steps To Reproduce**  1. Open Calculator  2. Switch to Standard mode  3. Click the negate icon (the +-) thirty or more times  4. Hover over another digit on the calculator and click it. The digit will not appear in the calculator window until a few seconds later    **Expected behavior**  Clicking another digit should be almost instantaneous after clicking negate thirty or more times.    **Screenshots**  <!--If applicable, add screenshots to help explain your problem.-->    **Device and Application Information (please complete the following information):**    <!--Run the following commands in Powershell and copy/paste the output.  " - OS Build: $([Environment]::OSVersion.Version)"  " - Architecture: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Architecture)"  " - Application Version: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Version)"  -->   - OS Build: 10.0.17134.0   - Architecture: X64   - Application Version: 10.1812.10048.0    **Additional context**  <!--Add any other context about the problem here.-->  	alexyorke	null	null	null	null	null	null	
2019-03-28 09:41:43.0	2019-04-18 22:21:34.0	2019-04-18 22:21:34.0	closed	[Bug, fixing approved issue]	0	403	Decrease CPU usage of OverflowTextBlock + optimization	https://api.github.com/repos/microsoft/calculator/issues/403	https://github.com/microsoft/calculator/pull/403	## Fixes #402 and #414     Divide by 4 the CPU usage of `OverflowTextBlock` when buttons are pressed very quickly.    ![Snag_e26b41](https://user-images.githubusercontent.com/1226538/55146164-4969d300-5101-11e9-8b33-205143865122.png)    ### Description of the changes:    **Xaml-side:**  - `OverflowTextBlock` has some performance issues:       - double scrollviewer: the listview was in a scrollviewer, while the control already containing one -> it breaks the virtualization of the listview and impacts on UI performance.      - The listview used a `StackPanel`, this panel doesn't support virtualization of ListViewItems contrary to  `ItemsStackPanel`      - No ListView-specific features were used, an `ItemsControl` is more efficient and lighter.  - refactor how we manage the visibility of the left/right buttons in OverflowTextBlock, the new version is more reactive and will not display the right arrow when not necessary (see GIF below).  - remove the ItemContainerSelector `ExpressionItemContainerStyle`, not really used by `OverflowTextBlock`  - remove UI glitches generated by ChangeView when users type fast (control partially hidden and scrolling issues, see the GIF below).   - only modify the accessibility view when it's necessary    **ViewModel-side:**  - stop fully refreshing `ExpressionTokens` in `StandardCalculatorViewModel` when a new command were sent, instead, use a IObservableVector to only send new tokens to the UI (in average only 1 or 2 UI items are refreshed while the full expression was refreshed before)    Demo:  ![A0D05EB6-A342-4AD9-BE6C-D4FD51E97733](https://user-images.githubusercontent.com/1226538/55146006-060f6480-5101-11e9-891d-d55db38b4daa.GIF)        ### How changes were validated:  Manually  	rudyhuyn	null	null	null	null	null	null	
2019-03-28 19:08:41.0	2019-03-29 00:56:52.0	2020-12-03 06:00:58.0	closed	[duplicate]	3	404	History and Close buttons overlapping	https://api.github.com/repos/microsoft/calculator/issues/404	https://github.com/microsoft/calculator/issues/404	**Screenshots**  [Picture](https://i.imgur.com/OD1dHIr.png)    **Device and Application Information (please complete the following information):**   - OS Build: 1809   - Architecture: x64   - Application Version: 10.1812.10048.0	KaeLL	null	null	null	null	null	null	
2019-03-28 22:41:56.0	2020-02-13 19:05:42.0	2021-01-12 18:13:12.0	closed	[codebase quality]	11	405	Perform clang-format on Azure	https://api.github.com/repos/microsoft/calculator/issues/405	https://github.com/microsoft/calculator/pull/405	## Fixes (part of) #202.    #236 discusses the contents of `.clang-format`, this PR makes CI capable of enforcing it.    A problem I ran into was `clang-format` mistaking some of the sources for Objective-C, due to non-C++ constructs like https://github.com/Microsoft/calculator/blob/f6a6aae6e6ce1c485b4b4b02413259649cf2b58f/src/Calculator/Converters/BitFlipAutomationNameConverter.h#L13  I have no idea what that is, so I took the easy way out and only apply formatting files which name ends with `.cpp`.    I provided comments in the script itself, but the gist of it is:  * Using Hosted Ubuntu 16.04  * Downloads static build of `clang-format` from https://github.com/angular/clang-format/blob/master/bin/linux_x64/clang-format, a long standing repo with occasional updates to the tool  * Performs `clang-format` on the sources (files ending with `.cpp`)  * Reports the diff, if any, and    - Fails the build, if diff present    - Reports success otherwise.    You can see a failing build here: https://dev.azure.com/ms/calculator/_build/results?buildId=8367    And a passing one (with sources formatted) here: https://dev.azure.com/ms/calculator/_build/results?buildId=8372, as per #406     This PR does not include `.clang-format`, I hope @seyfer will update https://github.com/Microsoft/calculator/pull/236 and it will get merged.	janisozaur	null	null	null	null	null	null	
2019-03-28 22:51:53.0	2020-02-13 19:05:57.0	2021-01-12 18:13:19.0	closed	[codebase quality]	4	406	Clang format ci with format	https://api.github.com/repos/microsoft/calculator/issues/406	https://github.com/microsoft/calculator/pull/406	This is a duplicate of #405, this time with sources formatted (with `clang-format`s default settings) to prove the Azure Pipelines check works.	janisozaur	null	null	null	null	null	null	
2019-03-29 02:21:34.0	2019-04-17 00:46:13.0	2020-12-03 06:00:57.0	closed	[fixed, codebase quality]	10	407	Code Cleaning: AppBar, OperatorTextBox and OperandTextBox, TitleBar never used	https://api.github.com/repos/microsoft/calculator/issues/407	https://github.com/microsoft/calculator/issues/407	**Cleaning**  The 3 following controls in Calculator/Controls are never used in the application.  - AppBar: https://github.com/Microsoft/calculator/search?q=AppBar&unscoped_q=AppBar  - OperatorTextBox: https://github.com/Microsoft/calculator/search?q=OperatorTextBox  - OperandTextBox: https://github.com/Microsoft/calculator/search?q=OperandTextBox    TitleBar and TitleBarHelper are used in different parts of the application (Memory, HistoryList, ...), but it seems like these controls have no effects on the app (old code from Windows 8/Windows Phone 8.1?)    	rudyhuyn	null	null	null	null	null	null	
2019-03-29 03:38:55.0	2019-09-27 20:08:13.0	2020-12-03 06:00:56.0	closed	[Area: User Experience, fixed]	3	408	The programmer tab's byte view flickers when switching between byte, dword, and qword only when standard view has not been used	https://api.github.com/repos/microsoft/calculator/issues/408	https://github.com/microsoft/calculator/issues/408	<!--Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.-->    **Describe the bug**  <!--A clear and concise description of what the bug is.-->    When switching between byte, qword, and dword on the programmers view, the zeros (that are normally dimmed) will flicker (going to grey, then to white, then to grey within a few milliseconds after the button was clicked once) and then go back to grey when the modes are switched. This issue does not occur after other calculations are performed on the standard view (e.g. adding `1+1` on the standard view), then going back to the programmers view.    **Steps To Reproduce**  <!--Steps to reproduce the behavior:  1. Go to '...'  2. Click on '....'  3. Scroll down to '....'  4. See error-->    1. Open Calculator, maximize window to fill entire screen  2. Click on hamburger menu, then click on Programmer  3. Click on the icon on the left-hand side that has four dots arranged in a number pad to go to byte view  4. Click on "MS", then set value to 128 by clicking on the appropriate binary numbers. Perform steps 5-8 quickly in a loop.  5. Click on "Qword"  6. Click "Dword"  7. Click "Word"  8. Click "Byte". The numbers will flicker.  9. Click on "MS"  10. Click Qword, Dword, Word again quickly, and notice that the number do not flicker just this once.  11. Click on Qword, Dword, Word again quickly and notice that the numbers do flicker now  12. Switch to standard mode. Type in 56 then add 111 to it. Hold down enter for five seconds.  13. Click on MS  14. Switch back to Programmer mode  15. Go back into the byte view  16. When clicking on Word, Dword, Word again (after entering 128), the numbers will not flicker no matter how many times it was clicked    **Expected behavior**  <!--A clear and concise description of what you expected to happen.-->  The numbers should switch between white to grey, with no other in-between transitions.    **Screenshots**  <!--If applicable, add screenshots to help explain your problem.-->    This is what I call the byte view:    ![image](https://user-images.githubusercontent.com/7844441/55207707-16374a80-51ba-11e9-87cc-7d83ff538044.png)      This is the standard view after performing a long sample calculation then clicking MS (but going back to it from programmers view)    ![image](https://user-images.githubusercontent.com/7844441/55207727-2b13de00-51ba-11e9-85cf-cc0c70f5c8b8.png)      **Device and Application Information (please complete the following information):**   - OS Build: 10.0.17134.0   - Architecture: X64   - Application Version: 10.1812.10048.0 (latest version after re-installing it and checking Windows Store for updates)    <!--Run the following commands in Powershell and copy/paste the output.  " - OS Build: $([Environment]::OSVersion.Version)"  " - Architecture: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Architecture)"  " - Application Version: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Version)"  -->    **Additional context**  <!--Add any other context about the problem here.-->    	alexyorke	null	null	null	null	null	null	
2019-03-29 06:13:02.0	2019-04-20 01:37:51.0	2020-12-03 06:00:55.0	closed	[Pri: 3, Area: World-Readiness, fixed]	2	409	Some content in Currency Converter not right-aligned properly in RtL	https://api.github.com/repos/microsoft/calculator/issues/409	https://github.com/microsoft/calculator/issues/409	<!--Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.-->    **Describe the bug**  While in an RtL language, Currency Converter refresh content is not right-aligned.    **Steps To Reproduce**  1. Switch to RtL language  2. Navigate to Currency Converter page  3. Observe that the refresh rates content is not right-aligned with currencies.    **Expected behavior**  All content should be right-aligned along the same vertical.    **Screenshots**  ![image](https://user-images.githubusercontent.com/1414423/55212889-bf784380-51ae-11e9-9704-802d9f9329a4.png)      **Device and Application Information (please complete the following information):**   - OS Build: 10.0.17763.0   - Architecture: X64   - Application Version: 10.1903.3.0	grochocki	null	null	null	null	null	null	
2019-03-29 07:37:09.0	2019-04-20 01:37:51.0	2019-04-20 01:37:51.0	closed	[Bug, fixing approved issue]	0	410	Fix #409 and #59 - UI issues with UnitConverter in RtL	https://api.github.com/repos/microsoft/calculator/issues/410	https://github.com/microsoft/calculator/pull/410	Fix #409 - Some content in Currency Converter not right-aligned properly in RtL  Fix #59 Currency symbol precedence is opposite of system setting in RTL languages    ### Description of the changes:  - Add a property `FlowDirectionHorizontalAlignment` in UnitConverter to align some controls to the right (without modifying the `FlowDirection` of their parent items)  - Force FlowDirection of Value1Container and Value2Container to LeftToRight (but align panels to the right)    ### How changes were validated:  - Tested with LtR and RtL languages and with currency symbols on the left and on the right.      ### Screenshots:    LtR with currency symbol on the left  ![image](https://user-images.githubusercontent.com/1226538/55216927-5d720b00-51bb-11e9-80c9-ae8faba8ab4e.png)    LtR with currency symbol on the right  ![image](https://user-images.githubusercontent.com/1226538/55216998-8db9a980-51bb-11e9-843b-5bbe1f1af35c.png)    RtL with currency symbol on the left  ![image](https://user-images.githubusercontent.com/1226538/55217144-ff91f300-51bb-11e9-9f8d-478ffccee875.png)    RtL with currency symbol on the right  ![image](https://user-images.githubusercontent.com/1226538/55217122-e38e5180-51bb-11e9-9c9c-a8bb4761ac32.png)  	rudyhuyn	null	null	null	null	null	null	
2019-03-29 23:57:00.0	2019-04-25 23:54:37.0	2019-04-25 23:54:37.0	closed	[]	1	411	Added WinAppDriver UI Tests to the Calculator Project.	https://api.github.com/repos/microsoft/calculator/issues/411	https://github.com/microsoft/calculator/pull/411	### Summary  This pull requests adds WinAppDriver UI tests onto the Calculator project. Nothing in the Calculator source itself was modified outside of introducing the **\src\CalculatorWADTests\** directory with the added WinAppDriver solution.    ### How changes were validated:    - The tests were validated on my local machine & on the hosted VS2019 agent.     Fixes #461 	hassanuz	null	null	null	null	null	null	
2019-03-30 10:41:09.0	2019-04-17 00:17:25.0	2019-04-17 00:17:25.0	closed	[Bug, fixing approved issue]	5	412	Modify how modulo is calculated in Normal and Scientific mode.	https://api.github.com/repos/microsoft/calculator/issues/412	https://github.com/microsoft/calculator/pull/412	## Fixes #111    > The modulo operator on this calculator gives the result that is different to the most used calculators.    The current `modrate` function is the equivalent of rem(...)/remainder(...), not mod(...)/modulo(...) available in some popular Math apps.     ### Description of the changes:  - rename `modrate` in `remrate` to be more accurate.  - add `modrate`, calculating modulo similarly to Matlab, Bing, Google calculator, Maxima, Wolfram Alpha and Microsoft Excel   - Add `RationalMath::Mod` using `modrate` as an alternative to `Rational::operator%` using `remrate`  - Add a helper `SIGN` to retrieve the sign of a `Rational`.  - modify `CalcEngine` to use `modrate` in Normal and Scientific mode and `remrate` in Programmer mode.    ### How changes were validated:  - manually and unit tests added	rudyhuyn	null	null	null	null	null	null	
2019-03-30 16:55:59.0	2019-03-31 04:00:34.0	2020-12-03 06:00:54.0	closed	[won't fix]	2	413	Full keypad icon in programmer mode is almost invisible (contrast ratio 1:1.6)	https://api.github.com/repos/microsoft/calculator/issues/413	https://github.com/microsoft/calculator/issues/413	<!--Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.-->    **Describe the bug**  <!--A clear and concise description of what the bug is.-->  The view full keypad icon is almost invisible in programmer mode.    **Steps To Reproduce**  <!--Steps to reproduce the behavior: -->  1. Open Calculator  2. Switch to programmer mode  3. Maximize the Calculator window  4. The full keypad button should be left to the regular keypad icon. Hovering over the left side of the full keypad icon shows a lit up square with a tooltip that says "Full Keypad", but the icon is almost not visible.    **Expected behavior**  <!--A clear and concise description of what you expected to happen.-->  The keypad icon should be visible with brighter colors.    **Screenshots**  <!--If applicable, add screenshots to help explain your problem.-->    ![image](https://user-images.githubusercontent.com/7844441/55279097-53532800-52f3-11e9-8553-e3d8546ab873.png)    **Device and Application Information (please complete the following information):**  - OS Build: 10.0.17134.0  - Architecture: X64  - Application Version: 10.1812.10048.0    <!--Run the following commands in Powershell and copy/paste the output.  " - OS Build: $([Environment]::OSVersion.Version)"  " - Architecture: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Architecture)"  " - Application Version: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Version)"  -->    **Additional context**  <!--Add any other context about the problem here.-->	alexyorke	null	null	null	null	null	null	
2019-03-30 22:26:50.0	2019-04-30 01:06:22.0	2020-12-03 06:00:53.0	closed	[Area: Performance, fixed, Pri: 2]	4	414	Performance: takes three seconds to evaluate 4-4-4-...-4 repeated 27 times; expressions with more terms cause several second delay	https://api.github.com/repos/microsoft/calculator/issues/414	https://github.com/microsoft/calculator/issues/414	<!--Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.-->    **Describe the bug**  <!--A clear and concise description of what the bug is.-->    Expression evaluation is extemely slow for long expressions. This expression `4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-1` takes three seconds to evaluate when pasted into the calculator.    **Steps To Reproduce**  1. Open Calculator  2. Paste in the above expression  3. Wait three seconds  4. The result will be displayed    **Expected behavior**  <!--A clear and concise description of what you expected to happen.-->  The result should be almost instantaneous    **Screenshots**  <!--If applicable, add screenshots to help explain your problem.-->    **Device and Application Information (please complete the following information):**  - OS Build: 10.0.17134.0  - Architecture: X64  - Application Version: 10.1812.10048.0 (latest version after re-installing it and checking Windows Store for updates)    <!--Run the following commands in Powershell and copy/paste the output.  " - OS Build: $([Environment]::OSVersion.Version)"  " - Architecture: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Architecture)"  " - Application Version: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Version)"  -->    **Additional context**  <!--Add any other context about the problem here.-->    An expression such as `4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-1-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-1-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-1-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4` causes an Invalid Input error, and the expression `4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-1-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4` causes the calculator to become unresponsive for several seconds.  	alexyorke	null	null	null	null	null	null	
2019-03-30 22:53:02.0	2019-03-31 13:33:49.0	2020-12-03 06:00:50.0	closed	[won't fix]	3	415	Error message is clipped when disconnecting from the internet while on currency view	https://api.github.com/repos/microsoft/calculator/issues/415	https://github.com/microsoft/calculator/issues/415	<!--Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.-->    **Describe the bug**  <!--A clear and concise description of what the bug is.-->  Saving a number that almost causes an overflow to the memory twice   When disconnecting from the internet while on currency view, the error message is clipped.    **Steps To Reproduce**  1. Open Calculator  2. Go to Currency  3. Wait for the rates to update  4. Disconnect from wifi  5. The error message is clipped    **Expected behavior**  <!--A clear and concise description of what you expected to happen.-->  The error message should not be clipped, and should show a link to your network settings.    **Screenshots**  <!--If applicable, add screenshots to help explain your problem.-->  ![image](https://user-images.githubusercontent.com/7844441/55282582-58c96600-5325-11e9-91b4-c66bdfc16dac.png)    **Device and Application Information (please complete the following information):**  - OS Build: 10.0.17134.0  - Architecture: X64  - Application Version: 10.1812.10048.0    <!--Run the following commands in Powershell and copy/paste the output.  " - OS Build: $([Environment]::OSVersion.Version)"  " - Architecture: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Architecture)"  " - Application Version: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Version)"  -->    **Additional context**  <!--Add any other context about the problem here.-->  The error message is also clipped when the calculator is maximized	alexyorke	null	null	null	null	null	null	
2019-03-30 23:49:58.0	2020-02-06 22:02:07.0	2020-12-03 06:00:49.0	closed	[Pri: 3, Area: User Experience, fixed]	4	416	Temperature/Angle/Power conversion outputs change if there are more than three zeros after the input value, even though the value are mathematically equivalent	https://api.github.com/repos/microsoft/calculator/issues/416	https://github.com/microsoft/calculator/issues/416	**Describe the bug**  When appending zeros to a number when converting a temperature, the output suddenly becomes incorrect, even though the value is the same.    **Steps To Reproduce**  1. Open Calculator  2. Switch to temperature view  3. Switch the first temperature type to Celculus  4. Switch the second temperature type to Kelvin  5. Type in `273.00000000000`  6. The output will change from `0.15` to `0.149999999998` when adding additional zeros beyond three.    Note: Also happens with angle and power conversions.    **Expected behavior**  The temperature should remain at `0.15`, irregardless of how many zeros are in the input.    **Device and Application Information (please complete the following information):**  - OS Build: 10.0.17134.0  - Architecture: X64  - Application Version: 10.1812.10048.0    **Screenshots**  ![image](https://user-images.githubusercontent.com/7844441/55282883-62a29780-532c-11e9-8215-42e1a71140ac.png)    ![image](https://user-images.githubusercontent.com/7844441/55282904-d3e24a80-532c-11e9-9ae8-7a9df146c4c6.png)    **Additional information**    I had a look at IEEE 754 (https://en.wikipedia.org/wiki/Floating-point_arithmetic#IEEE_754:_floating_point_in_modern_computers), and it seems to cover situations where adding very small numbers together causes rounding errors, and not ones which end with just zeros.    > A team member has edited this comment to update repro steps for clarity.	alexyorke	null	null	null	null	null	null	
2019-03-31 02:24:58.0	2019-03-31 13:33:08.0	2020-12-03 06:00:48.0	closed	[won't fix]	3	417	Programmer mode decimal underflows when number is larger than an unsigned 64bit int	https://api.github.com/repos/microsoft/calculator/issues/417	https://github.com/microsoft/calculator/issues/417	<!--Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.-->    **Describe the bug**  <!--A clear and concise description of what the bug is.-->    When entering in a large binary number (9,223,372,036,854,775,807 in decimal), and then adding one, the Calculator reports that the value is -1, when it should be 9,223,372,036,854,775,808. It appears that only the decimal value is affected; the others (such as hex or octal) do not underflow.    **Steps To Reproduce**  <!--Steps to reproduce the behavior:  1. Go to '...'  2. Click on '....'  3. Scroll down to '....'  4. See error-->    1. Open Calculator  2. Switch to Programmer's mode  3. Type in the digit one 64 times (or hold down 1 until input is no longer accepted)  4. The calculator will display -1. Now, subtract 1, and the decimal value will be -2, but should be 9,223,372,036,854,775,807. Adding one when it says -1 will make everything change to zero, with no overflow warning.    **Expected behavior**  <!--A clear and concise description of what you expected to happen.-->    **Screenshots**  <!--If applicable, add screenshots to help explain your problem.-->    ![image](https://user-images.githubusercontent.com/7844441/55283796-eb2b3300-5340-11e9-9b4b-39f63978d74e.png)    **Device and Application Information (please complete the following information):**   - OS Build:   - Architecture:   - Application Version:    <!--Run the following commands in Powershell and copy/paste the output.  " - OS Build: $([Environment]::OSVersion.Version)"  " - Architecture: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Architecture)"  " - Application Version: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Version)"  -->    - OS Build: 10.0.17134.0  - Architecture: X64  - Application Version: 10.1812.10048.0    **Additional context**  <!--Add any other context about the problem here.-->    Pressing the delete key when 64 ones are entered will make the result ‭9223372036854775807‬, which is correct. Pressing "lsh" and then entering one followed by pressing equals many times results in a large underflow:    ![image](https://user-images.githubusercontent.com/7844441/55283834-c97e7b80-5341-11e9-818c-fdea3b9f620a.png)    One followed by 63 zeros immediately results in an underflow, with no operations or operands applied (just entering in the number):    ![image](https://user-images.githubusercontent.com/7844441/55283842-f9c61a00-5341-11e9-9cf1-8d2e94a1d125.png)    The numbers are also truncated on the display, but is probably a separate issue.	alexyorke	null	null	null	null	null	null	
2019-04-02 09:34:39.0	2019-04-02 21:20:41.0	2020-12-03 06:00:47.0	closed	[by design]	5	418	zero to the power of zero gives one	https://api.github.com/repos/microsoft/calculator/issues/418	https://github.com/microsoft/calculator/issues/418	0^0  result = 1  expected = undefiend  	eyaler	null	null	null	null	null	null	
2019-04-03 12:25:38.0	null	2021-08-02 09:04:16.0	open	[help wanted, Enhancement, Pri: 2, needs spec]	6	419	Add "Running" conversions category	https://api.github.com/repos/microsoft/calculator/issues/419	https://github.com/microsoft/calculator/issues/419	**Problem Statement**  Distance running is a constant interplay between space, time, and pain. Eavesdrop into any discussion between runners, and you’ll be constantly hearing about paces, race times, interval splits, and hitting the wall. Athletes and coaches need to convert between different speed, pace, and race time measures when they are planning their training or races. These conversions are mentally difficult to perform, and even to think of an algorithm for, if the runner is not mathematically inclined.    **Evidence or User Insights**  A [web search](https://www.bing.com/search?q=running+pace+conversion) can get us a lot of charts and online calculators that try to address this problem, but they usually provide conversions for a small set of data points, and only for a few measurements (usually between minutes per mile and minutes per kilometer paces).    Yet, distance running is an extremely popular sport, and very available to everyone. In 2018, more than 18 million people registered for road races just in the USA ([reference](https://runningusa.org/RUSA/News/2019/Running_USA_Releases_2019_U.S._Running_Trends_Report.aspx)). Helping this broad user base around the world easily solve their conversion problems would bring them one step closer to achieving their goals.    **Proposal**  We propose to introduce a new conversion mode into Windows Calculator that would make these conversions easy for everyone interested in or practicing running.    A typical list of measures would include:  * Speed: Miles per hour  * Speed: Kilometers per hour  * Pace: Minutes per mile  * Pace: Minutes per kilometer  * Race time: 5K  * Race time: 10K  * Race time: Half marathon  * Race time: Marathon  * Intervals: 200m time  * Intervals: 400m time  * Intervals: 600m time  * Intervals: 800m time    **Goals**  With this mode, a user would be able to solve real world problems such as:  * What pace do I need to run to achieve my goal 42:00 time in a 10K race?  * My training plan shows paces in minutes per kilometer, but I am using minutes per mile, how can I change them using Windows Calculator?  * What speed do I set the treadmill to for my interval workout? The plan specifies paces.  * What’s the target pace for 1’15” 400m intervals?  * If I could run as fast as Eliud Kipchoge when he achieved his latest Marathon world record, what would my 5K time be? (The right answer is “you probably can’t” but the calculator would show 14:24. Wow. I can't *think* that fast, let alone run.)    **Non-Goals**  Calculating race times and paces for non-standard race distances, including ultras.    **Low-Fidelity Concept**  ![image](https://user-images.githubusercontent.com/29615544/55478410-5a947180-5624-11e9-87cc-3113a460bf5f.png)	CodeRunRepeat	null	null	null	null	null	null	
2019-04-03 16:17:18.0	2019-05-11 02:55:16.0	2020-12-03 06:00:46.0	closed	[Pri: 3, Area: User Experience, fixed]	3	420	Copying "Result is undefined" to the clipboard pastes as "Resultisundefined'	https://api.github.com/repos/microsoft/calculator/issues/420	https://github.com/microsoft/calculator/issues/420	<!--Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.-->    **Describe the bug**  <!--A clear and concise description of what the bug is.-->  When dividing `0/0` and the "Result is undefined" text appears, copying the result to the clipboard and pasting it results in a string without spaces.    **Steps To Reproduce**  <!--Steps to reproduce the behavior:  1. Go to '...'  2. Click on '....'  3. Scroll down to '....'  4. See error-->  1. Open Calculator  2. Type `0/0`  3. Right-click on `Result is undefined` and select Copy  4. Open a text edit and paste  5. The pasted text will be `Resultisundefined`    **Expected behavior**  <!--A clear and concise description of what you expected to happen.-->  The pasted text should be `Result is undefined`    **Screenshots**  <!--If applicable, add screenshots to help explain your problem.-->    **Device and Application Information (please complete the following information):**   - OS Build: 10.0.17763.0   - Architecture: X64   - Application Version: 10.1902.42.0    **Additional context**  <!--Add any other context about the problem here.-->  This also occurs when copying the `Invalid input` text (it pastes as `Invalidinput`).	alexyorke	null	null	null	null	null	null	
2019-04-03 16:48:45.0	null	2021-05-26 10:04:26.0	open	[help wanted, Bug, Pri: 3, triage approved, Area: User Experience]	2	421	Using the up-arrow to select items in the conversion list only works when down-arrow not used and list is scrolled	https://api.github.com/repos/microsoft/calculator/issues/421	https://github.com/microsoft/calculator/issues/421	<!--Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.-->    **Describe the bug**  <!--A clear and concise description of what the bug is.-->  This is a complicated visual bug. When the Conversions hamburger menu is open, scrolling to the bottom and using the up arrow, the list will scroll but will not select items. When it gets to the stop, "Standard" will be cut off and the hamburger icon will be selected. Using the down arrow and up arrows will allow any item in the list to be selected. When closing the menu and going back into it, the items select as normal most of the time.    **Steps To Reproduce**  <!--Steps to reproduce the behavior:  1. Go to '...'  2. Click on '....'  3. Scroll down to '....'  4. See error-->  1. Open Calculator  2. Open the hamburger menu, don't click on any items, and scroll to the bottom  4. Close the hamburger menu  5. Re-open the hamburger menu  6. Click on "Standard"  7. Re-open the hamburger menu, scroll to the bottom  8. Place your cursor over the last menu item (sometimes this works)  9. Press the up arrow key many times. Sometimes, it will do nothing, sometimes it will scroll the list but will not select any items.  10. I have attached a screenshot of what happens when you get to the top.  11. When the hamburger item is selected, pressing the down arrow will select Standard. This appears to be the only way to select standard when in this state (Standard will not be automatically selected on first-try).    **Expected behavior**  <!--A clear and concise description of what you expected to happen.-->  The arrow keys always select an item, and will not scroll the list without selecting an item. Also, the "Standard" text at the top will not be clipped. The standard item will be selected rather than being clipped, as the hamburger menu is selected.    **Screenshots**  <!--If applicable, add screenshots to help explain your problem.-->    ![image](https://user-images.githubusercontent.com/7844441/55496894-71cc6280-5616-11e9-9346-2c6315de76f6.png)      **Device and Application Information (please complete the following information):**  - OS Build: 10.0.17763.0  - Architecture: X64  - Application Version: 10.1902.42.0    <!--Run the following commands in Powershell and copy/paste the output.  " - OS Build: $([Environment]::OSVersion.Version)"  " - Architecture: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Architecture)"  " - Application Version: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Version)"  -->    **Additional context**  <!--Add any other context about the problem here.-->  Hovering over the scroll bar while the hamburger menu item is selected, then hover over standard, then pressing down causes the about button to be selected. When pressing up, the hamburger menu item is selected, skipping the other items. It is not possible to select anything else until the mouse is moved.    However, when the last item is selected with the white box (Angle), hovering over the scroll bar and then over to angle, then using the arrow keys selects the next item. I'm not sure if this is intended or not.	alexyorke	null	null	null	null	null	null	
2019-04-03 18:45:07.0	2019-04-04 16:20:00.0	2019-04-04 16:21:08.0	closed	[]	2	422	Updating version of release builds to 1904	https://api.github.com/repos/microsoft/calculator/issues/422	https://github.com/microsoft/calculator/pull/422		mcooley	null	null	null	null	null	null	
2019-04-03 19:11:08.0	2019-04-03 19:11:56.0	2019-04-03 19:11:56.0	closed	[]	0	423	Contributing	https://api.github.com/repos/microsoft/calculator/issues/423	https://github.com/microsoft/calculator/pull/423	## Fixes #.      ### Description of the changes:  -  -  -    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  -  -  -    	grochocki	null	null	null	null	null	null	
2019-04-03 19:17:36.0	2020-12-02 19:04:23.0	2021-01-02 00:00:07.0	closed	[Bug, triage approved, Pri: 2]	7	424	Application fails to take float value for Currency converter when Japanese Calendar is enabled	https://api.github.com/repos/microsoft/calculator/issues/424	https://github.com/microsoft/calculator/issues/424	A team member will update this issue with more details soon.	MicrosoftIssueBot	null	null	null	null	null	null	
2019-04-03 21:08:43.0	2019-06-17 21:24:49.0	2020-12-03 06:00:45.0	closed	[Enhancement, pitch declined]	11	425	Feature: typing the letter c clears the display	https://api.github.com/repos/microsoft/calculator/issues/425	https://github.com/microsoft/calculator/issues/425	<!--    See https://github.com/Microsoft/calculator/blob/master/docs/NewFeatureProcess.md for  suggestions on how to write a good feature pitch. Just want to submit an idea quickly? Try Feedback  Hub instead: https://insider.windows.com/en-us/fb/?contextid=130    -->    **Problem Statement**  <!-- What problem are we trying to solve? Who’s the target audience? Is there a customer need or  pain point we need to remedy? Is there a business goal or metric we are trying to improve? Do we  have a hypothesis we want to prove or disprove? -->    Typing the letter c should invoke calculator's clear function (denoted by the c on the interface.) This would allow more keyboard-only functionality, as pressing delete key on the keyboard activates the delete key on the calculator.    **Evidence or User Insights**  <!-- Why should we do this? Potential sources of data: Feedback Hub, other GitHub issues, other  anecdotes from listening to customers in person or online, request from another team, telemetry  data, user research, market or competitive research -->    macOS's calculator clears when the user presses C since I believe Tiger. macOS has a fairly large userbase as well.    **Proposal**  <!-- How will the solution/feature help us solve the problem? How will it meet the target  audience’s needs? If there are business goals or metrics, how does this improve them? -->    This feature will help users stay on the keyboard, and won't have to hold delete to clear the display. This is useful for many short calculations.    **Goals**  <!-- What you want to accomplish with this feature. Typical examples include  “User Can *perform some task*” -->    User can clear the display without having to use the mouse.    **Non-Goals**  <!-- Things we are explicitly not doing or supporting or that are out of scope, including reasons  why. -->    This could help with accessibility if the user cannot use the mouse, as they can clear the display by pressing c instead.    **Low-Fidelity Concept**  <!-- Show as much of the experience as needed to explain the idea. This can be as simple as a  napkin drawing but can also be a code prototype, a PowerPoint walkthrough, or a design  comp. -->	alexyorke	null	null	null	null	null	null	
2019-04-03 21:20:41.0	2019-06-13 01:30:36.0	2020-12-03 06:00:44.0	closed	[duplicate]	3	426	Delete key stops working in programmer mode if left bracket is clicked first	https://api.github.com/repos/microsoft/calculator/issues/426	https://github.com/microsoft/calculator/issues/426	<!--Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.-->    The delete key (on the UI and on the keyboard) does not work after entering in a number, pressing the right bracket, then clicking delete. Even after making the brackets match, the delete button will not work (even if the input shows as `(7)`) until the display is cleared.    **Describe the bug**  <!--A clear and concise description of what the bug is.-->    **Steps To Reproduce**  <!--Steps to reproduce the behavior:  1. Go to '...'  2. Click on '....'  3. Scroll down to '....'  4. See error-->    1. Open Calculator  2. Open Programmer mode  3. Select HEX mode (anything other than binary)  4. Type the digit 7  5. Press the right bracket `)`  6. Press delete on your keyboard or in the UI. Nothing will delete.  7. Click the left bracket `(`  8. Click the right bracket `)`. The input will now show as `(7)`  9. Click delete. Nothing will delete, even though the input is valid. Even trying to re-parenthesize the input will not fix it.  10. Additionally, after doing something I was unable to reproduce, entering another digit was ignored until I pressed it twice.    **Expected behavior**  <!--A clear and concise description of what you expected to happen.-->    The calculator should be able to delete the digit.    **Screenshots**  <!--If applicable, add screenshots to help explain your problem.-->    **Device and Application Information (please complete the following information):**  - OS Build: 10.0.17763.0  - Architecture: X64  - Application Version: 10.1902.42.0    <!--Run the following commands in Powershell and copy/paste the output.  " - OS Build: $([Environment]::OSVersion.Version)"  " - Architecture: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Architecture)"  " - Application Version: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Version)"  -->    **Additional context**  <!--Add any other context about the problem here.-->  If I go into Scientific mode, then press the PI button, the delete key will not work.	alexyorke	null	null	null	null	null	null	
2019-04-03 22:45:01.0	2019-04-05 03:37:06.0	2020-12-03 06:00:43.0	closed	[Area: User Experience, won't fix, Pri: 2]	3	427	fact(negate(0)) is invalid input, but fact(0) is 1; negating zero only works when it has not been entered	https://api.github.com/repos/microsoft/calculator/issues/427	https://github.com/microsoft/calculator/issues/427	<!--Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.-->    **Describe the bug**  <!--A clear and concise description of what the bug is.-->    I'm not sure if this is intended design, as IEEE 754 defined -0 and +0 as different.    Negating zero then taking its factorial results in invalid input, while taking the factorial of zero is 1, even though calculator shows negated zero as zero.    **Steps To Reproduce**  <!--Steps to reproduce the behavior:  1. Go to '...'  2. Click on '....'  3. Scroll down to '....'  4. See error-->    1. Open Calculator  2. Open Scientific mode  3. Press n!  4. The number 1 will appear.  5. Clear input  6. Press negate  7. Press n!  8. Invalid input will appear      **Expected behavior**  <!--A clear and concise description of what you expected to happen.-->    The calculator should disallow negating zero, or should convert negated zero to zero. Calculator will allow negating zero when it is not entered (going to scientific mode then immediately clicking negate), but if it is entered, it will disallow negating it (pressing zero then clicking negate will do nothing.) It will not have a minus sign in front of it like other numbers, but the input will update to show `negate(0)`.    **Screenshots**  <!--If applicable, add screenshots to help explain your problem.-->    **Device and Application Information (please complete the following information):**  - OS Build: 10.0.17763.0  - Architecture: X64  - Application Version: 10.1902.42.0    <!--Run the following commands in Powershell and copy/paste the output.  " - OS Build: $([Environment]::OSVersion.Version)"  " - Architecture: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Architecture)"  " - Application Version: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Version)"  -->    **Additional context**  <!--Add any other context about the problem here.-->    	alexyorke	null	null	null	null	null	null	
2019-04-04 00:46:31.0	2019-10-03 22:56:44.0	2020-12-03 06:00:42.0	closed	[Enhancement, Swag: L (3-4 weeks), Pri: 1, approved]	8	428	Update Calculator keyboard for greater consistency and extensibility	https://api.github.com/repos/microsoft/calculator/issues/428	https://github.com/microsoft/calculator/issues/428	> This feature is in pre-production. Contribute to the in-progress spec **[here](https://github.com/Microsoft/calculator-specs/tree/keyboardrefresh/active/KeyboardRefresh)**.    **Problem Statement**  The Calculator keyboard requires some changes to meet the demands of upcoming features, including graphing mode and always-on-top mode. Furthermore, the current standard keyboard could be better at accommodating scaled screen sizes, which improves overall accessibility of the app. There are a number of other problems this spec seeks to address, including reducing confusion over the up arrow used as the shift key and reducing the number of keyboard layout states.    **Evidence or User Insights**  The current keyboard is not scalable to support new minimum size requirements for CompactOverlay mode, nor is it extensible to support additional functionality in graphing calculator.    **Proposal**  Update they keyboard app-wide for increased consistency and greater extensibility to prepare for upcoming feature improvements.    **Goals**  * No functionality takebacks in existing calculator modes  * Opportunistically add missing functionality across modes  * Increase clarity around shifted operations    **Non-Goals**  * Changes to display option buttons are out of scope (e.g., BYTE/WORD mode in programmer calculator), unless the button is better suited to be included in the keyboard    **Low-Fidelity Concept**  ![image](https://user-images.githubusercontent.com/1414423/55523781-7ce7b880-563f-11e9-8a71-3359ba754766.png)  	MicrosoftIssueBot	null	null	null	null	null	null	
2019-04-04 02:45:56.0	2019-09-19 23:41:50.0	2020-12-03 06:00:41.0	closed	[Enhancement, approved]	4	429	Copy values directly from history to clipboard using right-click	https://api.github.com/repos/microsoft/calculator/issues/429	https://github.com/microsoft/calculator/issues/429	<!--    See https://github.com/Microsoft/calculator/blob/master/docs/NewFeatureProcess.md for  suggestions on how to write a good feature pitch. Just want to submit an idea quickly? Try Feedback  Hub instead: https://insider.windows.com/en-us/fb/?contextid=130    -->    **Problem Statement**  <!-- What problem are we trying to solve? Who’s the target audience? Is there a customer need or  pain point we need to remedy? Is there a business goal or metric we are trying to improve? Do we  have a hypothesis we want to prove or disprove? -->    The pain point is that in order to copy a previously-calculated number to the clipboard, you have to save the current number to memory, click on the history item, click copy on the display, then re-insert the item from memory. This is slow and tedious, and also erases the last item in the history as a side effect of restoring the value. Instead, I propose that items can be copied from the history directly using a similar interface as they are copied from the output from a normal calculation.    **Evidence or User Insights**  <!-- Why should we do this? Potential sources of data: Feedback Hub, other GitHub issues, other  anecdotes from listening to customers in person or online, request from another team, telemetry  data, user research, market or competitive research -->    We should do this because it will allow users to find previous calculations and save them, or combine them together. macOS's paper-tape is essentially a text field which allows copying numbers directly to the clipboard. Also, the TI-83 series has the capability to add historical items to its own "clipboard" by setting a variable to it. This is similar to the memory function, but it allows at least 26 different variables to be used, vaguely similar to how a clipboard works.    **Proposal**  <!-- How will the solution/feature help us solve the problem? How will it meet the target  audience’s needs? If there are business goals or metrics, how does this improve them? -->    This solution will solve the problem by allowing right-clicks to be used to copy the value to the clipboard. This will reduce the number of clicks from seven to two.    **Goals**  <!-- What you want to accomplish with this feature. Typical examples include  “User Can *perform some task*” -->    The user will be able to copy any item from the history to their clipboard.    **Non-Goals**  <!-- Things we are explicitly not doing or supporting or that are out of scope, including reasons  why. -->    We should not support pasting values into history because this would make calculator more like a spreadsheet.    **Low-Fidelity Concept**  <!-- Show as much of the experience as needed to explain the idea. This can be as simple as a  napkin drawing but can also be a code prototype, a PowerPoint walkthrough, or a design  comp. -->    ![image](https://user-images.githubusercontent.com/7844441/55526067-ed0b3400-5669-11e9-851a-bcdb236765a9.png)  	alexyorke	null	null	null	null	null	null	
2019-04-04 06:36:34.0	2019-05-11 02:55:16.0	2019-05-11 02:55:16.0	closed	[Bug, fixing approved issue]	0	430	Keep spaces when users copy an error message	https://api.github.com/repos/microsoft/calculator/issues/430	https://github.com/microsoft/calculator/pull/430	## Fixes #420      ### Description of the changes:  - verify if the `StandardCalculatorViewModel::DisplayValue` isn't an error message before removing group separators (including space character).    ### How changes were validated:  - Tested in english and french  - Tested with "Cannot divide by zero" and "Result is undefined"	rudyhuyn	null	null	null	null	null	null	
2019-04-04 07:03:13.0	2019-04-10 00:36:37.0	2019-05-16 22:27:00.0	closed	[documentation]	0	431	Updating Contributing	https://api.github.com/repos/microsoft/calculator/issues/431	https://github.com/microsoft/calculator/pull/431	Updating Contributing documentation:  * Adding reference to spec repository for feature development  * Adding localization issue template  * Adding clarifications for contributions and PRs	grochocki	null	null	null	null	null	null	
2019-04-04 08:39:47.0	2019-07-16 21:24:28.0	2019-07-16 21:24:28.0	closed	[fixing approved issue]	1	432	Make History and Memory list items context menu accessible using keyboard	https://api.github.com/repos/microsoft/calculator/issues/432	https://github.com/microsoft/calculator/pull/432	## Fixes #311      ### Description of the changes:  - Move History and Memory context menus to ListViewItemContainer so users can open them with keyboards  - Modify how Memory manages context menus to use a similar approach than History (a lot simplier)    ### How changes were validated:  - Manually test using keyboard, mouse and touch.  	rudyhuyn	null	null	null	null	null	null	
2019-04-04 21:28:07.0	2019-04-18 23:01:48.0	2019-04-18 23:05:36.0	closed	[codebase quality, needs author feedback]	6	433	Refactored XAML x:Names	https://api.github.com/repos/microsoft/calculator/issues/433	https://github.com/microsoft/calculator/pull/433	## Fixes #62      ### Description of the changes:  -Refactored all x:Names to use the generally accepted Pascal-Casing    ### How changes were validated:  Unit Tests  Manual Tests    	LanceMcCarthy	null	null	null	null	null	null	
2019-04-04 21:37:36.0	2019-04-04 23:11:14.0	2019-04-05 16:28:23.0	closed	[]	0	434	Fix inline script in loc pipeline	https://api.github.com/repos/microsoft/calculator/issues/434	https://github.com/microsoft/calculator/pull/434	Our loc pipeline wasn't telling us when there were loc changes to merge back into the repo, because a YAML string was quoted incorrectly.	mcooley	null	null	null	null	null	null	
2019-04-04 21:47:38.0	2019-04-04 23:27:53.0	2020-12-03 06:00:40.0	closed	[won't fix]	3	435	Font does not auto-resize sometimes in Weight and Mass conversion view but will when the same value is pasted in	https://api.github.com/repos/microsoft/calculator/issues/435	https://github.com/microsoft/calculator/issues/435	<!--Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.-->    **Describe the bug**  <!--A clear and concise description of what the bug is.-->    Pasting in the output as the input in Weight and Mass causes the primary input's font size (not the field that has been pasted into) to correctly auto-resize, even though the number is exactly the same length. The font size does not auto resize when selecting the bottom field.    **Steps To Reproduce**  <!--Steps to reproduce the behavior:  1. Go to '...'  2. Click on '....'  3. Scroll down to '....'  4. See error-->    1. Open Calculator  2. Open Weight and Mass  3. Select "0" in the Pounds category, then change Kilograms to Pounds  4. Paste in `‪2355.04545645675‬`  5. Click on `‪2355.04545645675‬` in the lower pounds category; notice the top pounds categories's font is smaller than usual  6. Paste in `‪2355.04545645675‬`.  7. The font size for `‪2355.04545645675‬` in the top pounds box will get larger  8. Pasting the value in again will not cause the font size to change    This does not happen when performing the action again with the same input.    **Expected behavior**  <!--A clear and concise description of what you expected to happen.-->  The font-size always automatically resizes whenever the user clicks away from it.    **Screenshots**  <!--If applicable, add screenshots to help explain your problem.-->    **Device and Application Information (please complete the following information):**  - OS Build: 10.0.17763.0  - Architecture: X64  - Application Version: 10.1902.42.0    <!--Run the following commands in Powershell and copy/paste the output.  " - OS Build: $([Environment]::OSVersion.Version)"  " - Architecture: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Architecture)"  " - Application Version: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Version)"  -->    **Additional context**  <!--Add any other context about the problem here.-->  Does not occur on the Currency pane.	alexyorke	null	null	null	null	null	null	
2019-04-04 22:17:37.0	2019-04-18 00:28:46.0	2019-04-22 23:52:28.0	closed	[]	10	436	Compile CalcManager project with or without precompiled headers	https://api.github.com/repos/microsoft/calculator/issues/436	https://github.com/microsoft/calculator/pull/436	## Fixes #324 .      ### Description of the changes:  In an effort to support other compilers (#109), this change reworks how precompiled headers are handled.  For toolchains where precompiled headers are not used, there is unnecessary compilation cost because each source file explicity includes the pch, meaning all system headers in the pch were recompiled for each translation unit. This change modifies the project's files so that each translation unit includes a minimal set of dependent headers.  For MSVC users, the precompiled headers option is still enabled and the precompiled header is added to each translation unit using the compiler's Forced Includes option.  The end result is that MSVC users still see the same build times, but other toolchains are free to use or not use precompiled headers.    ### Risks introduced  Given that our CI build uses MSVC, this change introduces the risk that a system header is added to the pch and the CalcManager project builds correctly, but builds could be broken for other toolsets that don't use pch.  We know we want to add support for Clang in our CI build ([#211](https://github.com/Microsoft/calculator/pull/211#issuecomment-472186512)).  It seems reasonable to also compile without precompiled headers there so that we can regression test this setup.    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  1. Rebuild CalcManager project. Compile time: `~4.5s`.  2. Disable precompiled headers, keeping explicit include for pch in each source file. Compile time: `~13s`.  3. Remove explicit pch inclusion and add the appropriate headers to each translation unit to allow the project to compile.  Compile time: `~8s`.  4. Re-enable pch and include it using the Forced Includes compiler option. MSVC compile time: `~4.5s`.    #### Minor changes  - Delete 'targetver.h'.  I found this while looking around for system headers in the project.  It's unused and unreferenced so let's remove it.	danbelcher-MSFT	null	null	null	null	null	null	
2019-04-04 22:26:42.0	2019-04-20 01:59:11.0	2020-12-03 06:00:39.0	closed	[Pri: 3, Area: User Experience, fixed]	5	437	Clicking on the same element in the hamburger view should re-open that view, like the menu items do	https://api.github.com/repos/microsoft/calculator/issues/437	https://github.com/microsoft/calculator/issues/437	<!--    See https://github.com/Microsoft/calculator/blob/master/docs/NewFeatureProcess.md for  suggestions on how to write a good feature pitch. Just want to submit an idea quickly? Try Feedback  Hub instead: https://insider.windows.com/en-us/fb/?contextid=130    -->    **Problem Statement**  <!-- What problem are we trying to solve? Who’s the target audience? Is there a customer need or  pain point we need to remedy? Is there a business goal or metric we are trying to improve? Do we  have a hypothesis we want to prove or disprove? -->    The pain point is that when opening the hamburger menu, it is unclear what view I am currently on. Re-selecting the same view that I'm already on (e.g. Currency) does nothing. but the menu item registers a click animation. Clicking out of the hamburger menu reveals that I'm already on that view.    **Evidence or User Insights**  <!-- Why should we do this? Potential sources of data: Feedback Hub, other GitHub issues, other  anecdotes from listening to customers in person or online, request from another team, telemetry  data, user research, market or competitive research -->    When selecting a menu item that has already been selected (e.g. US Dollars) the menu item closes, even though it has already been selected as a conversion currency. This behavior should be more universal within the app.    Microsoft Outlook, Gmail, and Github desktop allow re-selecting an item from the hamburger menu that is already open and it will return you to the same view while closing the menu. I did some very primitive research and found a paper which concluded that clicking on something  should make progress towards an existing goal according to (Wang 2008, 409) and other criteria such as discover-ability. However, the size of the study was very small (n=5) so the results may not be statistically significant.    Additionally, if the menu item does close when it is clicked and is in the same view, this might not cause the user to perform a needed context switch when they switch to a different view if the view does not change but the menu item closes.    Wang X. (2008) Design and Evaluation of Intelligent Menu Interface through Cognitive Walkthrough Procedure and Automated Logging for Management Information System. In: Shen W., Yong J., Yang Y., Barthès JP.A., Luo J. (eds) Computer Supported Cooperative Work in Design IV. CSCWD 2007. Lecture Notes in Computer Science, vol 5236. Springer, Berlin, Heidelberg    **Proposal**  <!-- How will the solution/feature help us solve the problem? How will it meet the target  audience’s needs? If there are business goals or metrics, how does this improve them? -->    This will make the menu items more universal, as they would behave more similar. If someone is converting multiple values with different units, they might forget what the last unit that they converted was; trying to re-select the same menu item will do nothing.    **Goals**  <!-- What you want to accomplish with this feature. Typical examples include  “User Can *perform some task*” -->    Goal is for the user to be able to select a menu item and go to that view, even if they are already on that view.     **Non-Goals**  <!-- Things we are explicitly not doing or supporting or that are out of scope, including reasons  why. -->    Right-clicking on a menu item should not close the menu because it could have been an accidental click.    **Low-Fidelity Concept**  <!-- Show as much of the experience as needed to explain the idea. This can be as simple as a  napkin drawing but can also be a code prototype, a PowerPoint walkthrough, or a design  comp. -->	alexyorke	null	null	null	null	null	null	
2019-04-04 23:19:11.0	2019-04-05 15:39:30.0	2019-04-05 15:39:30.0	closed	[]	0	438	Update localized strings 2019-04-04	https://api.github.com/repos/microsoft/calculator/issues/438	https://github.com/microsoft/calculator/pull/438	Add new localized strings from our internal localization system.	mcooley	null	null	null	null	null	null	
2019-04-05 05:57:21.0	2019-07-26 06:02:38.0	2020-12-03 06:00:38.0	closed	[Pri: 3, fixed]	7	439	Modify the title of the window to "Calculator [Dev]"	https://api.github.com/repos/microsoft/calculator/issues/439	https://github.com/microsoft/calculator/issues/439	**Describe the change**  Modify the name of the application visible in the Titlebar of the window to make it easier to distinct the 2 version of the calculators (public and dev). This change will also be helpful when users post issues with screenshots (the application icon not being visible in a majority of them)    **Screenshots**  Hard to distinct the 2 apps  ![image](https://user-images.githubusercontent.com/1226538/55606217-ce21a600-572c-11e9-94f0-3d1cf5863163.png)      **Device and Application Information (please complete the following information):**   - OS Build: 10.0.18362.0   - Architecture: X64   - Application Version: 10.1812.10048.0  	rudyhuyn	null	null	null	null	null	null	
2019-04-05 07:01:54.0	2019-04-17 00:46:08.0	2019-04-17 00:46:08.0	closed	[fixing approved issue]	8	440	Fix #407: Removed AppBar, OperatorTextBox and OperandTextBox controls	https://api.github.com/repos/microsoft/calculator/issues/440	https://github.com/microsoft/calculator/pull/440	Removed AppBar, OperatorTextBox and OperandTextBox controls  	jatinkumarg	null	null	null	null	null	null	
2019-04-06 06:43:53.0	2019-04-30 01:03:24.0	2020-12-03 06:00:38.0	closed	[Area: Accessibility, fixed, Pri: 2]	7	441	In High-Contrast mode, the Title Bar should change color when the window is inactive	https://api.github.com/repos/microsoft/calculator/issues/441	https://github.com/microsoft/calculator/issues/441	**Describe the bug**  As indicated here: https://docs.microsoft.com/en-us/windows/uwp/design/shell/title-bar    > Do make is obvious when your window is active or inactive. At a minimum, change the color of the text, icons, and buttons in your title bar.    This is even more true when High-Contrast is activated to improve accessibility.    The Calculator currently uses the same color when the window is active and inactive.    **Steps To Reproduce**  - Activate High-Contrast  - Launch the Calculator  - Switch between applications  --> the Title bar color doesn't change.    **Expected behavior**  - the title bar should change color    **Screenshots**    ![image](https://user-images.githubusercontent.com/1226538/55665898-90d81980-57fb-11e9-9599-fbacc1f40bd2.png)    ![image](https://user-images.githubusercontent.com/1226538/55665955-79e5f700-57fc-11e9-9c84-e86885fa3b02.png)        **Device and Application Information (please complete the following information):**   - OS Build: 10.0.18362.0   - Architecture: X64   - Application Version: 10.1812.10048.0  	rudyhuyn	null	null	null	null	null	null	
2019-04-06 08:04:08.0	2019-04-20 01:49:09.0	2019-04-20 01:49:09.0	closed	[fixing approved issue]	15	442	Make it obvious that the window doesn't have focus + simplify how the app manages the title bar.	https://api.github.com/repos/microsoft/calculator/issues/442	https://github.com/microsoft/calculator/pull/442	## Fixes #407 (partially) and #441       ### Description of the changes:  - Remove TitleBarHelper and all `<Border x:Name="CustomTitleBar" />`  - Let the system defines the draggable region  - Centralize all events and functions associated to the title bar in a single control `TitleBar` instead of code splitted between MainPage/TitleBar/HistoryList/Memory.  - Use the standard title bar when high contrast is activated instead of the custom one.  - Modify the color of the title when the window doesn't have focus  - Fix the right padding of the title bar with high contrast    ### How changes were validated:  - Manually tested with LtR and RtL languages  - Manually tested with high contrast  - Tested when History and Memory flyout are opened    Window without focus - dark  ![image](https://user-images.githubusercontent.com/1226538/55785550-7b672780-5a67-11e9-8b57-0b46c14c13d7.png)    Window without focus - light  ![image](https://user-images.githubusercontent.com/1226538/55785618-9e91d700-5a67-11e9-8389-645c2733eddb.png)    Window without focus - high contrast  ![image](https://user-images.githubusercontent.com/1226538/55785680-b6695b00-5a67-11e9-9450-6317b10e02c8.png)    Right padding fixed with high contrast  ![image](https://user-images.githubusercontent.com/1226538/55785761-db5dce00-5a67-11e9-97e3-69dc49a7f023.png)  	rudyhuyn	null	null	null	null	null	null	
2019-04-06 11:23:41.0	2019-04-07 04:47:17.0	2019-04-07 11:15:29.0	closed	[]	2	443	Fixed Typo in README.md	https://api.github.com/repos/microsoft/calculator/issues/443	https://github.com/microsoft/calculator/pull/443	  ### Description of the changes:  - Fixed Typo in README.md    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - No Validation    	iamrajiv	null	null	null	null	null	null	
2019-04-07 00:38:57.0	2019-04-17 00:53:09.0	2020-09-28 08:30:50.0	closed	[fixing approved issue]	14	444	Add support for Pyeong, a Korean floorspace unit.	https://api.github.com/repos/microsoft/calculator/issues/444	https://github.com/microsoft/calculator/pull/444	## Fixes #382     ### Description of the changes:  - Add Pyeong as an Area conversion unit.  - Pyeong shows up only if the user's current **region** is Korea ( i.e. region is either `KP` or `KR` ).  - Added Korean translation for Pyeong (평). For other locales, we default to English ( Pyeong ).    ### How changes were validated:  Manually tested the below  1) For non-Korean regions, Pyeong does not show up.    2) Korean region with Korean locale => Pyeong shows up and Pyeong is correctly translated.  ![pyeong_Korean](https://user-images.githubusercontent.com/3166423/55676874-4190f800-5892-11e9-9c67-35d9a75540bc.gif)    3) Korean region with English locale => Pyeong shows up and Pyeong is in English.  ![pyeong_English](https://user-images.githubusercontent.com/3166423/55676890-946aaf80-5892-11e9-9bff-44e467e2884a.gif)    4) Korean region with simplified Chinese locale => Pyeong shows up and Pyeong is in English.  ![pyeong_Chinese](https://user-images.githubusercontent.com/3166423/55676893-9af92700-5892-11e9-9e62-c8dc4c087e01.gif)  	TurtleShip	null	null	null	null	null	null	
2019-04-07 08:12:16.0	2019-07-29 16:39:20.0	2020-12-03 06:00:36.0	closed	[Area: User Experience, fixed, Pri: 2]	8	445	User preferences are not restored between sessions.	https://api.github.com/repos/microsoft/calculator/issues/445	https://github.com/microsoft/calculator/issues/445	**Describe the bug**  Looking at Calculator source code, it looks like we meant save a user's last selected category and units, and restore them when a calculator starts up. In other words, Calculator meant to support saving & restoring user preferences between sessions.  However, calculator is failing to restore saved units. It does restore saved category.    **Steps To Reproduce**  1. Launch Calculator.  2. Pick a category (ex> Area) and units (ex> Hectares to Acres )  3. Close & re-launch Calculator.    **Expected behavior**  A user's last selected category and units should be restored when a calculator starts up (i.e. if you chose category Area and unit Hectares to Acres, and restarts Calculator, then Calculator should show category Area and unit Hectares to Acres ).  However, Calculator reverts back to the default units ( it does seem to restore category though ).     **Screenshots**  Please refer to [this video](https://www.dropbox.com/s/65bg4tlnde81ook/prefernces_demo.mp4?dl=0).    For quick reference, refer to the below  ![preferences_bug_demo](https://user-images.githubusercontent.com/3166423/55680621-c995f280-58d0-11e9-90f2-faa463228932.gif)    **Device and Application Information (please complete the following information):**   - OS Build: 10.0.17763.0   - Architecture: X64   - Application Version: 10.1812.10048.0    **Additional context**  - `UnitConverter::RestoreUserPreferences()` is working correctly.  - `UnitConverter::SaveUserPreferences()` is working correctly.  - However, after restoring saved values on Calculator startup, Something is overriding the restored value to the default value.    _Note: I would like to tackle this one and make a PR 🙂 if this issue gets accepted._  	TurtleShip	null	null	null	null	null	null	
2019-04-07 16:52:47.0	2021-07-01 04:56:37.0	2021-07-01 04:56:39.0	closed	[fixing approved issue, needs author feedback]	3	446	Fix automatic scientific notation	https://api.github.com/repos/microsoft/calculator/issues/446	https://github.com/microsoft/calculator/pull/446	## Fixes #226 .      ### Description of the changes:  - Disable scientific notation in Standard Mode.  - In Scientific Mode "auto-scientific" behavior is preserved, added ability to untoggle the F-E button to force a decimal result. If a user manually disables F-E, state is preserved until the user clears all input or switches modes.    ### How changes were validated:  - Manual	uhliksk	null	null	null	null	null	null	
2019-04-08 23:40:18.0	2019-04-20 01:59:11.0	2019-04-20 13:01:36.0	closed	[fixing approved issue]	5	447	Clicking on the same element in the hamburger view should re-open that view, like the menu items do	https://api.github.com/repos/microsoft/calculator/issues/447	https://github.com/microsoft/calculator/pull/447	## Fixes #437.  Clicking on the same element in the hamburger view should re-open that view, like the menu items do    ### Description of the changes:  -Fixed the bug that was listed    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  -manual  	AbduAmeen1	null	null	null	null	null	null	
2019-04-09 14:05:04.0	2019-04-26 19:08:37.0	2019-04-26 19:09:09.0	closed	[fixing approved issue, needs author feedback]	2	448	Change how Narrator reads information of "0th" bit button	https://api.github.com/repos/microsoft/calculator/issues/448	https://github.com/microsoft/calculator/pull/448	## Fixes #385.      ### Description of the changes:  -Changed data name="0" value from "0th" to "least significant"  -Changed data name="63" value from"63rd" to "most significant"  -    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  -Validated manually with Narrator ensuring that Narrator read "least significant bit..." when 0th bit was selected and "most significant bit..." when 63rd bit was selected.  -  -    	brulecap	null	null	null	null	null	null	
2019-04-10 22:41:51.0	2019-04-11 22:20:02.0	2019-04-11 22:20:02.0	closed	[]	0	449	Simplify some of the calc engine string logic	https://api.github.com/repos/microsoft/calculator/issues/449	https://github.com/microsoft/calculator/pull/449	For #428 some new buttons/functions will need to be added. In preparation, this PR attempts to make that process easier.    ### Description of the changes:  Currently Calculator handles strings by defining integers for each type of function that can be performed, this integer will eventually correspond with an index in s_engineStrings which holds the corresponding display string for each function. Some functions such as Sin can have multiple strings (degrees, rads, grads, inverse). Functions like Sin are mapped to another array called "rgUfne" where a new integer is given depending on the output string which will then be given to s_engineStrings. The new integer returned by the "rgUfne" array runs the risk of overlapping with any new functions that may be added in CCommand.h. Furthermore, it is expected that the strings in s_engineStrings and rgUfne are defined in a particular order (not necessarily sequential), otherwise the logic will break. This makes adding new strings for new functions confusing and difficult, since a lot of the logic is not clearly defined.    This PR attempts to make this a bit simpler by changing the s_engineStrings and rgUfne arrays to be unordered_maps instead of arrays. For s_engineStrings the keys will now be strings, allowing the existing logic for indexing to be used by simply converting the number into a string to access the value. This will also allow us to create keys in the future that are not limited to integers but to strings that hold more meaning.    The rgUfne array will also be updated to be a map that will take in an integer and give you the corresponding string that can be passed to s_engineStrings. The UFNE object in the rgUfne array will also be updated to hold all the possible string keys for a function, instead of indexing them on other numbers that may overlap with existing definitions.    Now to add a new string for a new IDC_FOO function, we would just need to add the "FooString" resource keys to the g_sids array and use the updated rgUfne map to link the IDC_FOO value to the corresponding "FooString" resource key. This way the resource key can be a meaningful string, and not an integer that must be in any particular order.    ### How changes were validated:  Tested each function manually in standard, scientific, and programmer modes.    	joseartrivera	null	null	null	null	null	null	
2019-04-11 01:14:42.0	2019-04-11 01:15:11.0	2019-11-06 23:26:33.0	closed	[graphing calculator]	0	450	Feature/GraphingCalculator initial commit	https://api.github.com/repos/microsoft/calculator/issues/450	https://github.com/microsoft/calculator/pull/450	Initial PR for the feature/GraphingCalculator feature branch, part of #338.    The feature incorporates a proprietary Microsoft-owned graphing engine to drive graphing experiences in the Windows Calculator app.  Due to the private nature of the graphing engine, the source available in the public repo will make use of a mock graphing engine.  See [README.md](https://github.com/Microsoft/calculator/blob/feature/GraphingCalculator/README.md#graphing-mode) for more details.    This PR simply serves as a base for future feature development.  As such, the PR will be immediately merged.  Feedback on the content of this PR, and on the feature in general, is encouraged.  If there is feedback related to the content of this specific PR, please leave comments on the PR page.  We will address the comments in future PRs to the feature branch.    	danbelcher-MSFT	null	null	null	null	null	null	
2019-04-11 07:25:56.0	2019-04-11 15:08:17.0	2019-04-11 15:08:17.0	closed	[]	1	451	style: fix typoes	https://api.github.com/repos/microsoft/calculator/issues/451	https://github.com/microsoft/calculator/pull/451	### Description of the changes:    Fix typoes.    ### How changes were validated:    It is clear to see....  <!-- Reviewable:start --> --- This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/microsoft/calculator/451) <!-- Reviewable:end --> 	xiekeyi98	null	null	null	null	null	null	
2019-04-12 18:36:25.0	2019-05-10 08:19:56.0	2020-12-03 06:00:35.0	closed	[Enhancement, pitch declined]	11	452	Typing the letters k,m,b will multiply the number respective to 1k,1m,1b	https://api.github.com/repos/microsoft/calculator/issues/452	https://github.com/microsoft/calculator/issues/452	**Problem Statement**  Using the key binds k, m, and b as a shortcut to multiplying by 1,000, 1,000,000, and 1,000,000,000 could be useful when dealing with larger numbers.    **Evidence or User Insights**  This is a feature I've seen appear in user interfaces in games as it correlates with a shortcut people often take in texting. It's fairly common to see 1,000 written as 1k.     **Proposal**  Adding these shortcuts can improve the speed of keyboard only operation. I've attempted using these key binds through the calculator and haven't seen them being used for anything else at the moment.    **Goals**  User can quickly multiply by 1,000, 1,000,000, and 1,000,000,000 using the key binds: k, m, and b respectively     **Non-Goals**    **Low-Fidelity Concept**    	rudes	null	null	null	null	null	null	
2019-04-13 17:25:34.0	2019-05-21 01:17:40.0	2020-12-03 06:00:34.0	closed	[Enhancement, pitch declined]	8	453	Embed as UWP Control	https://api.github.com/repos/microsoft/calculator/issues/453	https://github.com/microsoft/calculator/issues/453	**Problem Statement**  More UWP Control Yea.    **Evidence or User Insights**  Third Party like Telerik have it.  [Third party Telerik](https://www.telerik.com/products/wpf/calculator.aspx)    **Proposal**  Have a sample like Telerik.    **Goals**  Official UWP Control for the win. Microsoft The best.    **Non-Goals**  More Choice    **Low-Fidelity Concept**  [High Fidelity from Syncfusion](https://www.syncfusion.com/uwp-ui-controls/calculator)  	meteorsnows	null	null	null	null	null	null	
2019-04-13 21:24:30.0	2019-04-13 21:34:00.0	2020-12-03 06:00:33.0	closed	[won't fix]	1	454	test	https://api.github.com/repos/microsoft/calculator/issues/454	https://github.com/microsoft/calculator/issues/454	contents	throughtele	null	null	null	null	null	null	
2019-04-14 02:20:07.0	2019-07-17 00:00:57.0	2020-12-03 06:00:32.0	closed	[Enhancement, approved]	6	455	Converter should progressively increase the number of significant digits (instead of switching from 7 to 15 instantly)	https://api.github.com/repos/microsoft/calculator/issues/455	https://github.com/microsoft/calculator/issues/455	**Describe the improvement**  Based on the length of the string associated to the entry value, the converter will switch from 7 to 15 significant digits when the entry value length is higher than 7.    **Steps To Reproduce**  - Open the Length converter  - Select `centimeters` and `inches`  - Type `1.22222` in the centimeter field  - add 1 extra `2`  The result will switch from `0.481189` to `0.48118976377953`    **Expected behavior**  - based on the length of the entry value, we should progressively increase the number of significant digits, but not an instant switch.    **Screenshots**    **Current behavior:**  ![2019-04-13_19-12-25](https://user-images.githubusercontent.com/1226538/56087440-43256780-5e20-11e9-830b-9a22ef016a53.gif)    **Proposal:**  ![2019-04-13_19-15-23](https://user-images.githubusercontent.com/1226538/56087451-97c8e280-5e20-11e9-9959-d1a57b545de2.gif)      **Device and Application Information**   - OS Build: 10.0.18362.0   - Architecture: X64   - Application Version: 10.1903.21.0   - Region: en-US   - Dev Version Installed: True    **Additional context**    The diff will also fix https://github.com/Microsoft/calculator/issues/416 at the same time.	rudyhuyn	null	null	null	null	null	null	
2019-04-15 01:34:41.0	2019-07-29 16:39:20.0	2019-07-29 16:39:20.0	closed	[fixing approved issue]	9	456	Restore user preferences	https://api.github.com/repos/microsoft/calculator/issues/456	https://github.com/microsoft/calculator/pull/456	## Fixes #445.      ### Description of the changes:  **1) Do not set units to default values if they already have valid values**   This fixes the actual issue. `UnitConverter::InitializeSelectedUnits()` ( this function resets all units to their default units if available for the current category ) gets called after `UnitConverterViewModel::RestoreUserPreferences()` ( this function restores user preferences ).  So Calculator has been restoring saved values, and then overriding the restored values with default values.  I modified `InitializeSelectedUnits()` so that we only initialize units only when they are not already set to valid units for the current category.    **2) Removed `m_isFirstTime`**   I noticed that we are calling `RestoreUserPreferences()`  twice  when Calculator starts up, and the function is restoring the same value both times    The below happens when Calculator starts up  1) On startup, in `UnitConverterViewModel::InitializeView()`, `RestoreUserPreferences()` is called.  2) `RestoreUserPreferences()` in turn triggers `OnUnitChanged()`  3) During the first call to `OnUnitChanged()`, m_IsFirstTime is `True`, so we call `RestoreUserPreferences()` again while also setting `m_IsFirstTime` to `False`.   4) `RestoreUserPreference()` again triggers `OnUnitChanged()`  5) During the second call to `OnUnitChanged()`,  m_IsFirstTime is `False`, so we call `SaveUserPreferences()`    I think we should only call `SaveUserPreferences()` inside `OnUnitChanged()` since we already restored user preferences during view initialization. I can't really think of a reason to restore units after view has been initialized. This led me to just delete `m_isFirstTime`.      ### How changes were validated:  Manually tested that units and the current category are properly selected when you quit and start Calculator.    ![GifMaker_20190414182150911](https://user-images.githubusercontent.com/3166423/56102706-88f73400-5ee3-11e9-8bbf-7a0c8e051a5c.gif)    ![GifMaker_20190414183403644](https://user-images.githubusercontent.com/3166423/56102763-f0ad7f00-5ee3-11e9-99ef-3b932f587393.gif)    	TurtleShip	null	null	null	null	null	null	
2019-04-15 20:15:09.0	2019-04-15 21:12:11.0	2019-04-15 21:12:11.0	closed	[]	0	457	Fix code signing in internal builds	https://api.github.com/repos/microsoft/calculator/issues/457	https://github.com/microsoft/calculator/pull/457	Internal builds now require the OAuth access token in the PkgESCodeSign task.	mcooley	null	null	null	null	null	null	
2019-04-15 23:36:11.0	2019-04-22 21:29:58.0	2019-11-06 23:28:10.0	closed	[Enhancement, fixing approved issue, graphing calculator]	0	458	Add Pan/Zoom support for the graph surface	https://api.github.com/repos/microsoft/calculator/issues/458	https://github.com/microsoft/calculator/pull/458	### Description of the changes:  Add Pan/Zoom support for the graph surface.  - Currently only supports Mouse/Pen/Touch interactions.  Keyboard support will be added separately.    ### How changes were validated:  Manual    	danbelcher-MSFT	null	null	null	null	null	null	
2019-04-16 05:41:31.0	2019-05-10 14:40:21.0	2020-12-03 06:00:31.0	closed	[Enhancement]	8	459	Currency list need a search box	https://api.github.com/repos/microsoft/calculator/issues/459	https://github.com/microsoft/calculator/issues/459	**Problem Statement**  <!--  What problem are we trying to solve? Who’s the target audience? Is there a customer need or pain point we need to remedy? Is there a business goal or metric we are trying to improve? Do we have a hypothesis we want to prove or disprove?   -->    It is sometimes hard to find currency you expected since the list is a bit long.    **Evidence or User Insights**  <!--  Why should we do this? Potential sources of data: Feedback Hub, other GitHub issues, other anecdotes from listening to customers in person or online, request from another team, telemetry data, user research, market or competitive research  -->    Search for currency name (e.g. US dollar), code (e.g. USD) or country name (e.g. USA).    **Goals**  <!--  What you want to accomplish with this feature. Typical examples include  "User Can *perform some task*"  -->    locate currency quickly    **Non-Goals**  <!--  Things we are explicitly not doing or supporting or that are out of scope, including reasons why.  -->    N/A	Riajyuu	null	null	null	null	null	null	
2019-04-16 13:37:09.0	2019-04-16 14:56:59.0	2020-12-03 06:00:30.0	closed	[won't fix]	1	460	.kgj	https://api.github.com/repos/microsoft/calculator/issues/460	https://github.com/microsoft/calculator/issues/460	<!--  Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.  -->    **Describe the bug**  <!-- A clear and concise description of what the bug is. -->    **Steps To Reproduce**  <!--  Steps to reproduce the behavior:  1. Go to '...'  2. Click on '....'  3. Scroll down to '....'  4. See error  -->    **Expected behavior**  <!-- A clear and concise description of what you expected to happen. -->    **Screenshots**  <!-- If applicable, add screenshots to help explain your problem. -->    **Device and Application Information**   - OS Build:   - Architecture:   - Application Version:   - Region:    - Dev Version Installed:      <!--  Run the following commands in Powershell and copy/paste the output.  " - OS Build: $([Environment]::OSVersion.Version)"  " - Architecture: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Architecture)"  " - Application Version: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Version)"  " - Region: $((Get-Culture).Name)"  " - Dev Version Installed: $($null -ne (Get-AppxPackage -Name Microsoft.WindowsCalculator.Dev))"  -->    **Additional context**  <!-- Add any other context about the problem here. -->  	ulduzcu	null	null	null	null	null	null	
2019-04-16 19:19:12.0	2019-07-31 19:45:12.0	2020-12-03 06:00:29.0	closed	[tooling]	1	461	Add UI tests using WinAppDriver	https://api.github.com/repos/microsoft/calculator/issues/461	https://github.com/microsoft/calculator/issues/461	Calculator uses variety of automated tests, including _unit tests_ (which test code in isolation) and _UI tests_ (which test the finished product). Calculator has historically had a set of UI tests, but they used Microsoft-internal test frameworks and do not have coverage as extensive as we would like.    We intend to use WinAppDriver to develop a new set of UI tests for calculator. The WinAppDriver team has used Calculator as a demo application, so we'll use that code as a starting point. Once we get the initial framework checked in and running during the builds, we'll need to open additional issues to track our progress covering the desired areas of Calculator's UI.    @hassanuz is contributing the initial code and pipeline definitions from the WinAppDriver team  @sanderl is figuring out our longer-term plan about what UI test coverage we want	mcooley	null	null	null	null	null	null	
2019-04-16 19:25:20.0	2019-06-25 18:29:33.0	2020-12-03 06:00:28.0	closed	[tooling]	1	462	UI tests should be able to test both dev and store-released builds	https://api.github.com/repos/microsoft/calculator/issues/462	https://github.com/microsoft/calculator/issues/462	The official version of Calculator uses the appID "Microsoft.Calculator" while the one built in this repo and in our CI builds uses the appID "Microsoft.Calculator.Dev". We'll need to implement a way to pass the desired target application to the test harness at runtime, and then verify that it works in both our internal and external build pipelines.    Because testing in the internal release pipeline is required, I've self-assigned this.	mcooley	null	null	null	null	null	null	
2019-04-17 03:31:29.0	2019-06-24 23:38:46.0	2020-12-22 18:00:07.0	closed	[tooling]	17	463	Retarget to Build Tools 142 to support Visual Studio 2019	https://api.github.com/repos/microsoft/calculator/issues/463	https://github.com/microsoft/calculator/issues/463	Retarget the solution to VS2019 Build tools (v142) to allow support for Visual Studio 2019, out-of-the-box.    **Problem Statement**  Developers cannot use Visual Studio 2019 to build this solution without installing older Visual Studio 2017 Build Tools (v141). These can be hard to find for the everyday dev, requiring you to go to MSDN downloads and search specifically for the required version.    Note: [those Build Tools can be quickly found here](https://my.visualstudio.com/Downloads?q=visual%20studio%202017%20build%20tools).    **Evidence or User Insights**    Steps to Reproduce:  1. Clone this repo with only Visual Studio 2019 installed.   2. Attempt to Rebuild    => You are not able to build, due to failed checks for the v141 Toolset    **Proposal**  Retarget the solution, which is literally a two-click process:    1. Open the Solution in Visual Studio 2019 and right click on the solution head  2.  Select "Retarget" and click OK.    The default toolset version will be preselected as v142 by default.    **Goals**    * Stay in sync with Microsoft's vision of using modern tooling  * VS2019 is significantly faster to use than VS2017 (this is proven, not just anecdotal).    **Considerations**    This may affect developers who have not updated to Visual Studio 2019 yet if there's no backwards check in the toolcheck list. This can be mitigated by making sure v141 is still in the list after adding v142.	LanceMcCarthy	null	null	null	null	null	null	
2019-04-17 15:00:01.0	2019-04-18 21:11:41.0	2019-04-18 21:11:41.0	closed	[codebase quality]	2	464	Fix _In_ attributes in CalculatorHistory	https://api.github.com/repos/microsoft/calculator/issues/464	https://github.com/microsoft/calculator/pull/464	### Description of the changes:    These parameters have `_In_` attributes in the implementation, but not in the header file, causing a warning in the static code analysis.    ### How changes were validated:    This change causes the warnings to disappear.	tniessen	null	null	null	null	null	null	
2019-04-18 18:02:29.0	2019-04-19 00:05:45.0	2019-04-19 18:05:09.0	closed	[fixing approved issue, codebase quality]	0	465	Fix test code that never executes	https://api.github.com/repos/microsoft/calculator/issues/465	https://github.com/microsoft/calculator/pull/465	Test code never executes - ill defined loop    ## Fixes #175.  Fixes loop in test code to verify that commands not supported by the unit converter viewmodel result in no-op.    ### Description of the changes:  Replaced loop of range of enums with a list of all currently supported commands in check that those commands are no-ops.    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  Ran modified test to ensure it passes    	EriWong	null	null	null	null	null	null	
2019-04-19 07:05:58.0	2019-04-22 16:48:00.0	2019-05-09 23:05:50.0	closed	[Area: World-Readiness]	5	466	Add utf8 bom to one file, and update a localized string(zh-CN).	https://api.github.com/repos/microsoft/calculator/issues/466	https://github.com/microsoft/calculator/pull/466	1.Add utf8 bom to the "CopyPasteManager.cpp" file.  2.Amend chinese localized strings for the word "Volume".	llihua	null	null	null	null	null	null	
2019-04-19 21:22:34.0	2019-04-23 00:31:00.0	2019-11-17 02:36:13.0	closed	[]	1	467	Collapse CurrencySecondaryStatus when no text is present in the text block	https://api.github.com/repos/microsoft/calculator/issues/467	https://github.com/microsoft/calculator/pull/467	## Fixes #313   In Scan/Item mode, Narrator focus navigates to hidden element “No next item” after “Update rates” link in "Currency Converter" window #313    ### Description of the changes:  - Adds an x:Name to the CurrencySecondaryStatus text block  - Adds a NormalCurrencyStatus visual state to the CurrencySecondaryStatusStates  - Adds functionality to the CurrencySecondaryStatusStates to show or hide the CurrencySecondaryStatus text block.    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Verified that the textblock is not visible in the accessibility tree via inspect.exe from the windows sdk.  - Verified that Narrator also does not stop on the block when in scan mode.  - Verified that the textblock is visible in the accessibility tree and read out in Narrator when the ChargesMayApplyCurrencyStatus or FailedCurrencyStatus viewstates are set.    	EriWong	null	null	null	null	null	null	
2019-04-19 23:19:53.0	2019-04-19 23:23:18.0	2020-12-03 06:00:27.0	closed	[duplicate]	4	468	0 to the 0th power = 1?	https://api.github.com/repos/microsoft/calculator/issues/468	https://github.com/microsoft/calculator/issues/468	**Describe the bug**  <!-- A clear and concise description of what the bug is. -->  0 to the 0th power = 1?  think it could be an error, or 0, but not 1    **Steps To Reproduce**  0^0=1??  **Expected behavior**  <!-- A clear and concise description of what you expected to happen. -->  0 or an error  **Screenshots**  <!-- If applicable, add screenshots to help explain your problem. -->  ![image](https://user-images.githubusercontent.com/20153302/56447623-be4bb980-6309-11e9-9e1e-20b19910fe8c.png)  	aaronrancsik	null	null	null	null	null	null	
2019-04-21 06:04:20.0	2019-04-22 03:25:45.0	2019-04-22 03:25:45.0	closed	[]	2	469	Update Contributing.md	https://api.github.com/repos/microsoft/calculator/issues/469	https://github.com/microsoft/calculator/pull/469	## Fixes #.      ### Description of the changes:  -  -  -    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  -  -  -    	Shubhiey	null	null	null	null	null	null	
2019-04-23 05:44:24.0	2019-04-23 17:30:32.0	2019-04-23 17:30:33.0	closed	[documentation]	0	470	Update README to include infinite precision	https://api.github.com/repos/microsoft/calculator/issues/470	https://github.com/microsoft/calculator/pull/470	## Fixes #119    ### Description of the changes:  - Added infinite precision as a feature in README.md [here](https://github.com/Microsoft/calculator/blob/master/README.md) and in ApplicationArchitecture.md [here](https://github.com/Microsoft/calculator/blob/master/docs/ApplicationArchitecture.md)    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Manual preview of README and ApplicationArchitecture.md    	Bharat123rox	null	null	null	null	null	null	
2019-04-23 21:01:34.0	2019-04-26 23:03:17.0	2020-12-03 06:00:26.0	closed	[Area: World-Readiness, fixed, Pri: 2]	2	471	Subtracting 1-year from date during Reiwa 1 yields unexpected results.	https://api.github.com/repos/microsoft/calculator/issues/471	https://github.com/microsoft/calculator/issues/471	<!--  Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.  -->    **Describe the bug**  When using Japanese era globalization settings, adding/subtracting years can yield unexpected results.    **Steps To Reproduce**  <!--  Steps to reproduce the behavior:  1. Go to '...'  2. Click on '....'  3. Scroll down to '....'  4. See error  -->  1. Set your globalization settings to Japanese and use the Era notation for Calendar format  2. Open calculator and go to date calculation  3. Switch to add/subtract mode  4. Set the date to Reiwa 1-nen May 1  5. Subtract 1 year from that date  6. Note the result is Heisei 31-nen Apr 1    **Expected behavior**  <!-- A clear and concise description of what you expected to happen. -->  the result should be Heisei 30, May 1  **Screenshots**  <!-- If applicable, add screenshots to help explain your problem. -->    **Device and Application Information**   - OS Build: 17763   - Architecture: x64   - Application Version:   - Region:    - Dev Version Installed:      <!--  Run the following commands in Powershell and copy/paste the output.  " - OS Build: $([Environment]::OSVersion.Version)"  " - Architecture: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Architecture)"  " - Application Version: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Version)"  " - Region: $((Get-Culture).Name)"  " - Dev Version Installed: $($null -ne (Get-AppxPackage -Name Microsoft.WindowsCalculator.Dev))"  -->    **Additional context**  <!-- Add any other context about the problem here. -->  The Japanese Era system can have multiple year partitions within the same year.  For example, April 30, 2019 is denoted April 30, Heisei 31; May 1, 2019 is denoted as May 1, Reiwa 1.  The Calendar treats Heisei 31 and Reiwa 1 as separate years, which results in some unexpected behaviors where subtracting a year from Reiwa 1 results in a date in Heisei 31.  	MicrosoftIssueBot	null	null	null	null	null	null	
2019-04-23 22:15:25.0	2019-04-23 23:41:48.0	2019-04-26 00:48:40.0	closed	[]	0	472	Ignore GraphingImplOverrides.props.	https://api.github.com/repos/microsoft/calculator/issues/472	https://github.com/microsoft/calculator/pull/472	### Description of the changes:  Update the .gitignore to ignore GraphingImplOverrides.props.    This update already exists in the feature branch but we can merge it to master now to make development of the feature easier and prevent accidentally commiting this file.    ### How changes were validated:  Manual.  - Switch to feature branch.  Add GraphingImplOverrides.props  - Switch to dabelc/IgnoreGraphingImplOverrides.props. Confirm git shows no files changed but props file is present.  	danbelcher-MSFT	null	null	null	null	null	null	
2019-04-23 22:45:39.0	2019-04-24 20:37:50.0	2019-11-17 02:36:13.0	closed	[]	0	473	[JaEra] Calc: subtracting 1-year from date during Reiwa 1 yields unexpected results.	https://api.github.com/repos/microsoft/calculator/issues/473	https://github.com/microsoft/calculator/pull/473	## Fixes 471#.  [JaEra] Calc: subtracting 1-year from date during Reiwa 1 yields unexpected results.    ### Description of the changes:  - When doing addition or subtraction of dates, if using the Japanese Era Calendar system, use the gregorian system to perform year addition/subtraction.    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Manually verified that the transition between Reiwa and Heisei eras are handled correctly  - Wrote tests covering an already established era transition between Heisei and Showa eras.    	EriWong	null	null	null	null	null	null	
2019-04-23 23:44:48.0	2019-04-24 19:05:20.0	2019-04-26 00:48:47.0	closed	[]	0	474	Allow vcxproj and sln files to merge as text.	https://api.github.com/repos/microsoft/calculator/issues/474	https://github.com/microsoft/calculator/pull/474	### Description of the changes:  This will cause Git to insert conflict markers in the file and make it easier to identify and fix merge conflicts. Previously, Git would complain about conflicts with these files, but no markers were inserted.    ### How changes were validated:  Manual.  - Checkout feature/GraphingCalculator and merge in upstream/master.  Git identifies merge conflicts present for Calculator.vcxproj but there are no conflict markers in the file.  Abort the merge.  - Merge in dabelc/MergeProjectFilesAsText.  Confirm Git is able to merge Calculator.vcxproj.    	danbelcher-MSFT	null	null	null	null	null	null	
2019-04-24 01:28:36.0	2019-05-25 01:49:07.0	2020-12-03 06:00:25.0	closed	[Enhancement, pitch declined]	7	475	Test Feature	https://api.github.com/repos/microsoft/calculator/issues/475	https://github.com/microsoft/calculator/issues/475	Test Feature	grochocki	null	null	null	null	null	null	
2019-04-25 21:09:47.0	2019-05-01 16:26:32.0	2020-12-03 06:00:24.0	closed	[Swag: XS (1-2 days), Pri: 2, tooling]	1	476	Update to Windows UI Library 2.1	https://api.github.com/repos/microsoft/calculator/issues/476	https://github.com/microsoft/calculator/issues/476	Update Calculator project to Windows UI Library 2.1 ([Release Notes](https://docs.microsoft.com/en-us/uwp/toolkits/winui/release-notes/winui-2.1)). As part of this update, we should thoroughly test all user scenarios to check for possible UX regressions. A particularly exciting feature introduced in 2.1 that affects us is [Shadows](https://docs.microsoft.com/en-us/uwp/toolkits/winui/release-notes/winui-2.1#shadows):    > With Windows 10 May 2019 Update, many of our common controls add elevation by using z-depth and shadow by default. The NavigationView and TeachingTip controls in WinUI 2.1 will also have default shadows when running on an OS with Windows 10 May 2019 Update.	grochocki	null	null	null	null	null	null	
2019-04-25 23:07:25.0	2019-04-25 23:54:08.0	2019-04-25 23:54:08.0	closed	[]	0	477	Miscellaneous updates to internal release builds	https://api.github.com/repos/microsoft/calculator/issues/477	https://github.com/microsoft/calculator/pull/477	- Use the default approvers for release code signing  - Fix a grammar mistake in a comment	mcooley	null	null	null	null	null	null	
2019-04-26 02:10:34.0	2020-08-12 15:53:31.0	2020-12-03 06:00:23.0	closed	[Enhancement, Pri: 2, approved]	6	478	Enable keyboard entry in bit-toggling mode	https://api.github.com/repos/microsoft/calculator/issues/478	https://github.com/microsoft/calculator/issues/478	**Problem Statement**    When the bit toggling keypad is active in the Programmer calculator, the keyboard no longer functions for input.    **Evidence or User Insights**    I'm an embedded firmware developer, and I use the Programmer calculator frequently with both keypads, especially when doing low-level microcontroller register programming. When I'm working, I frequently find myself alt-tabbing over to the calculator to do a quick calculation and start typing, only to discover that nothing is happening because I've left the bit toggling keypad open. I then have to grab the mouse and click on the full-keypad icon before I can continue. I've found this to be extremely frustrating.    **Proposal**    Allow the keyboard functionality that is available with the full keypad to continue working when the the bit toggling keypad is active. For example, in hex mode, 0–9, a–f, the operator keys, ESC, Enter, etc., will continue working exactly as they do with the full keypad, even though the bit toggling keypad is active.    This is touched on briefly in #157 (which I also fully support), but the focus of that issue is keyboard navigation, while this is specifically about keyboard input while the bit toggling keypad is visible.    **Goals**    - Keyboard input is enabled and behavior is identical in the Programmer calculator, regardless of which keypad is active.    **Non-Goals**    - Enhanced keyboard navigation (which I fully support, but which is covered more directly by #157).	SWB2	null	null	null	null	null	null	
2019-04-26 10:41:30.0	2019-05-11 02:35:23.0	2019-05-11 02:35:23.0	closed	[]	3	479	Improve readme screenshot and icon	https://api.github.com/repos/microsoft/calculator/issues/479	https://github.com/microsoft/calculator/pull/479	## Fixes #.  Improve calculator screenshot by moving it to the center for more awesomeness    ### Description of the changes:  - Added icon  - Centered screenshot    ### How changes were validated:  Simply take a look at the README    	e-minguez	null	null	null	null	null	null	
2019-04-29 05:42:52.0	2019-04-30 14:13:47.0	2019-04-30 14:13:47.0	closed	[]	3	480	UI Tests YAML updated to integrate WinAppDriver task 	https://api.github.com/repos/microsoft/calculator/issues/480	https://github.com/microsoft/calculator/pull/480	New WinAppDriver task for Azure Pipelines was recently [released](https://marketplace.visualstudio.com/items?itemName=WinAppDriver.winappdriver-pipelines-task). YAML has been updated to reference it.     The task will have to be manually installed from the [DevOps marketplace](https://marketplace.visualstudio.com/items?itemName=WinAppDriver.winappdriver-pipelines-task) for the pipeline to be successful.     ## Fixes #.      ### Description of the changes:  - Removed step powershell script to adjust agent resolution  - Removed step for powershell script to start WinAppDriver on agent  - Added step for WinAppDriver Task to Start WinAppDriver & adjust resolution  - Added step for WinAppDriver Task to Stop WinAppDriver & fetch logs      ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Valided bits on private pipeline.     	hassanuz	null	null	null	null	null	null	
2019-04-29 23:42:13.0	2019-04-30 19:26:05.0	2019-11-17 02:36:14.0	closed	[]	2	481	Expand fix for ja era to handle months and days	https://api.github.com/repos/microsoft/calculator/issues/481	https://github.com/microsoft/calculator/pull/481	## Fixes #471  The previous fix only covered how the Calendar control handles years across era boundaries.  It turns out the calendar treats the boundary as a month boundary as well.  So if the transition across eras happens on the 15th of January, then it considers the 16th of January and the 14th of January to be in different months.    ### Description of the changes:  -  Uses the Gregorian calendar for all addition and subtraction of dates when in the Japanese era system.    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Manually tested month and day subtraction across era boundaries not at the beginning or end of a month.    	EriWong	null	null	null	null	null	null	
2019-04-30 01:46:22.0	2019-05-17 22:54:35.0	2020-12-03 06:00:22.0	closed	[help wanted, Area: Accessibility, fixed, Pri: 2]	5	482	Name property of a focusable element must not be null (Scrollable Input)	https://api.github.com/repos/microsoft/calculator/issues/482	https://github.com/microsoft/calculator/issues/482	**Repro Steps**  * Click on the Menu options  * Click on Programmer options  * Chose “BIN” from the list  * Enter number 1 (around >50 times) in the input field to invoke the scroll bar  * Observe Hyperlink for scrolling right/left is missing an accessible name  * Observe the issue using inspect.exe (available in C:\Program Files (x86)\Windows Kits\10\bin\<SDK Version>\x64)    **Actual Result**  Name Property is not defined for left/right buttons.    **Expected Result**  Name Property should be defined    ![image](https://user-images.githubusercontent.com/1414423/56937408-44f25a80-6ab1-11e9-8f9b-4c303617605a.png)  	MicrosoftIssueBot	null	null	null	null	null	null	
2019-04-30 14:01:41.0	2019-06-15 01:31:10.0	2020-12-03 06:00:21.0	closed	[help wanted, Area: Accessibility, fixed, Pri: 2]	3	483	In Scan/Item mode, while navigating to "4.8 coffee cups" text from "0.25 gal(UK)" text, Narrator focus navigates to hidden elements	https://api.github.com/repos/microsoft/calculator/issues/483	https://github.com/microsoft/calculator/issues/483	**Repro Steps**  * Launch "Calculator" app.  * Launch Narrator.  * Navigate to "Open Navigation" button and activate it.  * Navigate to "Volume" menu item and activate it.  * Volume converter window will open.  * Select any value for "Converts from" combo box say "2 Pints(UK)".  * Select any "Converts to" combo box say "Cubic feet".  * Navigate to "4.8 coffee cups" text in the Scan/Item mode.  * Observe the issue.     _Note: Same issue is repro in length menu item. This issue is not repro in version 10.1902.42.0_    **Actual Result**  In Scan/Item mode, while navigating to "4.8 coffee cups" text from "0.25 gal(UK)" text narrator focus navigates to hidden elements.    **Expected Result**  In Scan/Item mode, while navigating to "4.8 coffee cups" text from "0.25 gal(UK)" text narrator focus should not navigate to hidden elements.    **Test Environment**  * OS Version: Windows 10 (Build 18362.53)  * App Name: Calculator  * App Version: 10.1903.21.0 	MicrosoftIssueBot	null	null	null	null	null	null	
2019-04-30 21:18:15.0	2019-05-01 16:26:32.0	2019-05-01 16:26:32.0	closed	[fixing approved issue]	0	484	Update to Windows UI Library 2.1	https://api.github.com/repos/microsoft/calculator/issues/484	https://github.com/microsoft/calculator/pull/484	## Fixes #476       ### Description of the changes:  Updates the nuget package to 2.1.190405004.2    This will automatically updates some of our UI elements, including adding shadows to NavView    Left is after, right is before  ![image](https://user-images.githubusercontent.com/6334170/56993553-9eaa6180-6b51-11e9-8ca3-cfcdc3cf8ac3.png)    ### How changes were validated:  Visual inspection  Ran some smoke tests  Ran on touch device and tested swipe controls  	joseartrivera	null	null	null	null	null	null	
2019-05-01 18:09:01.0	null	2021-08-02 09:04:27.0	open	[Enhancement, Pri: 2, needs more info]	10	485	Add support for default decimal places for users commonly performing math related to currency such as those in accounting roles	https://api.github.com/repos/microsoft/calculator/issues/485	https://github.com/microsoft/calculator/issues/485	**Problem Statement**  Accounting users that utilize traditional desktop calculators often want to default to having 2 digits after a decimal because they are constantly entering currency values.     **Evidence or User Insights**  Having to enter a period to denote cents adds a great deal of additional data entry throughout the course of a day and is one of the primary barriers to switching from a printer with a paper spool to a computerized calculator.    **Proposal**  Add a setting to configure the starting position when inputting data. The default would be as it currently works, but setting it to -2 would place it in the hundredths, -3 would be thousandths and 3 would be thousands, etc.    Alternate solution: Add an accounting mode option just as there is a scientific mode option. This option would be designed for users working with currency values regularly.    **Goals**  Increase user adoption of the calculator by meeting needs of accountants and office workers that deal with currencies regularly.    **Low-Fidelity Concept**  If the user enters "1" it would display as "0.01"  If the user enters "1" followed by "2" it would display as "0.12"  If the user entered "1 followed by "2" followed by "3" it would display as "1.23"	datapharmer	null	null	null	null	null	null	
2019-05-02 11:01:12.0	null	2021-10-22 01:16:40.0	open	[help wanted, Enhancement, Pri: 2, needs spec]	15	486	Add setting to allow user to change default launch behavior	https://api.github.com/repos/microsoft/calculator/issues/486	https://github.com/microsoft/calculator/issues/486	I loved the old Calculator because it was so quick to just <kbd>Win</kbd>, "calc", <kbd>Enter</kbd>, and do some quick math.    But now, this process is often super slow because the new Calculator app opens up with the last random mode I was in. Could be Currency, could be Length, doesn't matter. I love that the modes are there, but what I most often want when I open calculator is to do some quick math. It's very rare, if ever at all, that I actually want to do a conversion, and _even more rare_ that I want to do the _same exact_ conversion type that I did last time.    It's especially annoying because switching back to Standard mode is so slow.    0. **Launch "Calculator"**  1. Leave my keyboard  2. Find my mouse  3. Click the hamburger button  4. Scroll up to find Standard  5. Click on it  6. Move hand back to keyboard  7. Finally, **Actually do the calculation**    Steps 1-6 are super annoying. Please make Standard the default mode. Or at least default to the most recently used *normal* calculator (i.e. Standard or Scientific).	Svish	null	null	null	null	null	null	
2019-05-02 18:01:23.0	2019-05-02 18:31:08.0	2020-12-03 06:00:20.0	closed	[Area: Accessibility, Pri: 3, duplicate, needs more info]	1	487	[AccSpot] Failed Accessibility Error - Calculator.exe (Calculator.exe 10.1903.21.0) - Control type:UIA_HyperlinkControlType, Test:MissingProperty Error:UIA_NameProperty: Error - MissingProperty UIA_NameProperty , Priority - 0 , ElementControlType - UIA_Hy	https://api.github.com/repos/microsoft/calculator/issues/487	https://github.com/microsoft/calculator/issues/487	A team member will update this issue with more details soon.	MicrosoftIssueBot	null	null	null	null	null	null	
2019-05-02 19:59:49.0	2019-05-02 20:00:01.0	2019-05-02 20:06:39.0	closed	[]	0	488	Secondary updates to project formatting style	https://api.github.com/repos/microsoft/calculator/issues/488	https://github.com/microsoft/calculator/pull/488	### Description of the changes:  - Adjusted some of the values in .clang-format  - Add clang-format-all.ps1  - Fix path to .clang-format in Calculator.sln    ### How changes were validated:  - Manual.    	danbelcher-MSFT	null	null	null	null	null	null	
2019-05-02 20:08:48.0	2019-05-02 23:48:34.0	2019-05-02 23:48:34.0	closed	[]	0	489	Secondary formatting changes	https://api.github.com/repos/microsoft/calculator/issues/489	https://github.com/microsoft/calculator/pull/489	### Description of the changes:  - Adjusted some of the values in .clang-format  - Add clang-format-all.ps1  - Fix path to .clang-format in Calculator.sln    ### How changes were validated:  - Manual.    	danbelcher-MSFT	null	null	null	null	null	null	
2019-05-03 03:44:48.0	2019-05-22 17:16:19.0	2020-12-03 06:00:19.0	closed	[help wanted, fixed]	9	490	Project not compiling with default compiler options on system with Chinese as default language	https://api.github.com/repos/microsoft/calculator/issues/490	https://github.com/microsoft/calculator/issues/490	  The project cannot be compiled because of the following error:  `Code: LNK1181`  `Description: cannot  open input file 'E:\hot_backup\calculator-master\src\x64\Debug\CalcViewModel\CalcViewModel.lib'`  `Project: Calculator`  `File: E:\hot_backup\calculator-master\src\Calculator\LINK`  `Line: 1`  `Suppression State:`    **Steps To Reproduce**  Steps to reproduce the behavior:  1. Open the project in Visual Studio 2017  2. Set build options to Debug, x64, click on 'build' - 'Build Solution'  3. Wait for a while  4. Compilation stops with the mentioned error report.    **Expected behavior**  The project should compile.    **Screenshots**    ![image](https://user-images.githubusercontent.com/40388212/57118676-8e83c380-6d97-11e9-9112-9aa8496d21f6.png)    **Device and Application Information**   - OS Build: Windows 10, Enterprise LTSC, 17763.437   - Architecture: x64   - Region: Mainland China    **Additional context**  Default language of the local operating system: Chinese (simplified).  	Northurland	null	null	null	null	null	null	
2019-05-05 22:19:04.0	2019-07-11 17:46:14.0	2019-07-11 17:46:21.0	closed	[codebase quality]	3	491	Applying NR 1 to CalculatorVector.h	https://api.github.com/repos/microsoft/calculator/issues/491	https://github.com/microsoft/calculator/pull/491	## Fixes #.  Applied [NR 1](https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Rnr-top) from the ISO C++ Guidelines to CalculatorVector.h    ### Description of the changes:  - Move towards understandable and maintainable code    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->    	Nicholas-Baron	null	null	null	null	null	null	
2019-05-07 14:20:46.0	2019-05-07 14:21:30.0	2019-05-07 14:21:30.0	closed	[]	0	492	test1	https://api.github.com/repos/microsoft/calculator/issues/492	https://github.com/microsoft/calculator/pull/492	## Fixes #.      ### Description of the changes:  -  -  -    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  -  -  -    	ko040123	null	null	null	null	null	null	
2019-05-08 03:24:50.0	2019-08-13 01:13:05.0	2020-12-03 06:00:18.0	closed	[Enhancement, pitch declined]	10	493	Programmer mode should allow for input and bit toggling without switching input modes	https://api.github.com/repos/microsoft/calculator/issues/493	https://github.com/microsoft/calculator/issues/493	**Problem Statement**  * The calculator of win32 version (for example the calculator in Windows 7), can both type numbers and edit all binary bits in the same interface without switching tabs, while the Windows store (UWP) version does not. You must switch to **bit toggling keypad** to view and edit the binary bits, and go back to type numbers again, not such convenient.    **Evidence or User Insights**  Everyone who had used knows.    **Proposal**  Reference some better ideas and designs from win32 legacy calculator...    **Goals**  Make the calculator more powerful than the previous versions, not vice versa.    > Note: A team member edited this comment for clarity based on conversation below.	xenoplastic	null	null	null	null	null	null	
2019-05-08 03:58:04.0	2019-05-09 23:12:38.0	2019-06-04 08:44:50.0	closed	[]	3	494	Change the awkward Simplified Chinese translation for "bit toggling keypad"	https://api.github.com/repos/microsoft/calculator/issues/494	https://github.com/microsoft/calculator/pull/494	**Bit toggling keypad** is translated to 比特绷板键盘. I use a more clear and simple string like 位切换键盘 instead. 绷板 is a rare word even in daily life, never used at all in the computer industry.  	xenoplastic	null	null	null	null	null	null	
2019-05-09 11:15:20.0	2019-05-09 22:08:00.0	2020-12-03 06:00:17.0	closed	[Enhancement]	3	495	Flatpak Version for all platforms	https://api.github.com/repos/microsoft/calculator/issues/495	https://github.com/microsoft/calculator/issues/495	<!--  See https://github.com/Microsoft/calculator/blob/master/docs/NewFeatureProcess.md for suggestions on how to write a good feature pitch. Just want to submit an idea quickly? Try Feedback Hub instead: https://insider.windows.com/en-us/fb/?contextid=130  -->    **Problem Statement**  <!--  What problem are we trying to solve? Who’s the target audience? Is there a customer need or pain point we need to remedy? Is there a business goal or metric we are trying to improve? Do we have a hypothesis we want to prove or disprove?   -->  Linux needs a very nice calculator  **Evidence or User Insights**  <!--  Why should we do this? Potential sources of data: Feedback Hub, other GitHub issues, other anecdotes from listening to customers in person or online, request from another team, telemetry data, user research, market or competitive research  -->  It is wonderful that Microsoft has decided to join the Linux ecosystem. I believe a very good gesture to the community would be a flatpak version of the Windows Calculator..     The benefit of this is that Microsoft would have created what is in essence a universal binary. The flatpak would run on WSL2, Linux, Chrome OS, Librem Phone, and anywhere else that flatpak runs. This would inevitably include a hyper-visor for Mac if and when such a beast is created :-)    This would be historic as the first Microsoft sponsored app which runs across platforms with no recompilation necessary.   **Non-Goals**  <!--  Things we are explicitly not doing or supporting or that are out of scope, including reasons why.  -->  No need for Microsoft to be the sole support provider for this project. The community will help drive development.   No need to support multiple Linux distributions as flatpak runs everywhere.  No need to simultaneously support  a Windows-specific version as flatpak runs everywhere,  **Low-Fidelity Concept**  <!--  Show as much of the experience as needed to explain the idea. This can be as simple as a napkin drawing but can also be a code prototype, or a design comp. Keep it simple at this stage, as it can be refined later during the pre-production stage.  -->  The  experience would be simple. Windows calculator for Linux. Since flatpak is the only container format that runs on ALL Linux distributions, Windows Calculator would be everywhere.	nycnikato	null	null	null	null	null	null	
2019-05-09 22:56:18.0	2019-05-09 23:13:32.0	2019-05-09 23:13:33.0	closed	[]	0	496	Update localized strings 2019-05-09	https://api.github.com/repos/microsoft/calculator/issues/496	https://github.com/microsoft/calculator/pull/496	Add new localized strings from our internal localization system.	mcooley	null	null	null	null	null	null	
2019-05-10 07:42:27.0	null	2021-08-02 09:04:33.0	open	[help wanted, Enhancement, Pri: 2, needs spec]	4	497	Refresh Approximation units (aka "Whimsical" units)	https://api.github.com/repos/microsoft/calculator/issues/497	https://github.com/microsoft/calculator/issues/497	**Problem Statement**  In general, we want to provide "real world" approximations for conversions to help users conceptually grasp the magnitude of the values being displayed while performing unit conversions. However, we do not currently scale these approximations or document them as well as we should.    **Evidence or User Insights**  The community has identified gaps in our documentation in regards to these units (#120). There is also some confusion around when we decide to show which units (#335).    **Proposal**  Improve the approximation units we display and how we display them by defining an appropriate scaled set of approximations for each applicable unit converter type and auditing the set of units we display today for accuracy. We should also more thoroughly documenting these units.    **Goals**  * Present representative approximations across all applicable unit converters  * Approximations are accurate and scale appropriately with magnitude of inputted values (e.g., maybe we should add "Olympic size swimming pool" for really large volumes)    **Non-Goals**  * None    **Low-Fidelity Concept**  N/A (we should leverage the existing design).	grochocki	null	null	null	null	null	null	
2019-05-10 08:55:12.0	2019-07-17 00:00:58.0	2019-07-17 00:00:58.0	closed	[Enhancement, fixing approved issue]	3	498	Unit Converter - Calculate the rounding precision of results based on the source	https://api.github.com/repos/microsoft/calculator/issues/498	https://github.com/microsoft/calculator/pull/498	## Fixes #455 and #416     ### Description of the changes:  - Ignore trailing zeros (issue #416), negative sign, decimal separator of the source when calculating the precision of the result   - Round the result number based on the number of digits in the source value    ### How changes were validated:  Manually tested, including the 2 repros from #455 and #416 	rudyhuyn	null	null	null	null	null	null	
2019-05-10 17:05:21.0	2019-05-14 00:01:29.0	2019-05-14 00:01:29.0	closed	[Bug, fixing approved issue]	0	499	Taskbar and start menu jumplist items should not be pinnable/unpinnable or removable	https://api.github.com/repos/microsoft/calculator/issues/499	https://github.com/microsoft/calculator/pull/499	## Fixes #281 .      ### Description of the changes:  - Removed GroupName for `JumpListItem`s.        _It seems that the only way for UWP apps to remove pin/unpin and remove ability from jumplist items is to [not specify a group name for them](https://stackoverflow.com/a/39436591/942659). The downside is, the header for jumplist items will be "Tasks" instead of the current header title which is "Calculator"._    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Manual testing  	MahdiGhiasi	null	null	null	null	null	null	
2019-05-10 17:24:43.0	2019-05-10 18:17:44.0	2019-05-10 18:17:44.0	closed	[]	0	500	Updating version of release builds to 1905	https://api.github.com/repos/microsoft/calculator/issues/500	https://github.com/microsoft/calculator/pull/500		mcooley	null	null	null	null	null	null	
2019-05-10 20:51:44.0	2019-06-21 21:54:36.0	2019-06-27 18:07:27.0	closed	[fixing approved issue, codebase quality]	0	501	Added Calculator Standard Mode UI Tests	https://api.github.com/repos/microsoft/calculator/issues/501	https://github.com/microsoft/calculator/pull/501	## Fixes #74 .      ### Description of the changes:  - Added the CalculatorUIFramework to handle the WinAppDriver logic.  - Added Standard Mode smoke tests and BVTs to the CalculatorUITests project.  - Removed old UI tests that did not use the CalculatorUIFramework    ### How changes were validated:  - Used VSTest to run the UI tests and unit tests    	sanderl	null	null	null	null	null	null	
2019-05-11 01:56:44.0	2019-05-11 02:20:22.0	2019-05-11 02:22:23.0	closed	[documentation]	0	502	Repair empty link	https://api.github.com/repos/microsoft/calculator/issues/502	https://github.com/microsoft/calculator/pull/502	Link to the same infinite-precision-arithmetic article on Wikipedia as in README.md    ## Fixes  Existing output in the `ApplicationArchitecture.md` is a literal  `[infinite precision][Infinite Precision]`. It should be a link to https://en.wikipedia.org/wiki/Arbitrary-precision_arithmetic.    ### Description of the changes:  This patch assumes the author intended to link to [the same Wikipedia article](https://en.wikipedia.org/wiki/Arbitrary-precision_arithmetic) linked to in [README.md](https://github.com/microsoft/calculator/blob/452f18fd8e5264650edc811bafae0937c98cd0b3/README.md#features)    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  A local test on my machine — it’s a Markdown-only edit.	LucasLarson	null	null	null	null	null	null	
2019-05-11 23:24:43.0	2019-05-17 22:54:35.0	2019-05-17 22:54:35.0	closed	[Bug, Area: Accessibility, fixing approved issue]	6	503	Added the name property for right/left scroll buttons on screen	https://api.github.com/repos/microsoft/calculator/issues/503	https://github.com/microsoft/calculator/pull/503	## Fixes #482     ### Description of the changes:  -  Added the 'AutomationProperties.Name' tag to the HyperlinkButton template used to create the button  - The above was done for both the right and left buttons  - The left and right buttons now have accessible names as intended.    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  -Manually  - The fix was tested by running the application and trying to reproduce the original problem described in issue #482.   - The expected results as specified by the report on the issue was that the 'Name Property should be defined' for both the right and left buttons and this was achieved and tested by using the inspector tool.      	MelulekiDube	null	null	null	null	null	null	
2019-05-13 08:27:35.0	2020-04-30 19:04:34.0	2020-12-03 06:00:16.0	closed	[Bug, Area: User Experience, fixed, Pri: 1]	23	504	Copy paste result contains hidden character	https://api.github.com/repos/microsoft/calculator/issues/504	https://github.com/microsoft/calculator/issues/504	<!--  Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.  -->    **Describe the bug**  <!-- A clear and concise description of what the bug is. -->  Copy paste result contains hidden tailing character `U+202C` which can cause syntax errors to programming languages or breaks in Excel.    **Steps To Reproduce**  Steps to reproduce the behavior:  1. Key in an integer.  2. Double click the number to select it.  3. CTRL+C.  4. CTRL+V else where, such as a code editor.    **Expected behavior**  A clean set of digits entered as valid syntax and works in Excel as a number.    **Screenshots**  <!-- If applicable, add screenshots to help explain your problem. -->  ![image](https://user-images.githubusercontent.com/28769707/57606683-f3ab9600-759b-11e9-94f1-d634b5d0f46e.png)      **Device and Application Information**   - OS Build: 10.0.17134.0   - Architecture: X64   - Application Version: 10.1903.21.0   - Region: en-SG    - Dev Version Installed: False  <!--  Run the following commands in Powershell and copy/paste the output.  " - OS Build: $([Environment]::OSVersion.Version)"  " - Architecture: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Architecture)"  " - Application Version: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Version)"  " - Region: $((Get-Culture).Name)"  " - Dev Version Installed: $($null -ne (Get-AppxPackage -Name Microsoft.WindowsCalculator.Dev))"  -->    **Additional context**  <!-- Add any other context about the problem here. -->  	Cerlancism	null	null	null	null	null	null	
2019-05-13 18:33:25.0	2019-10-13 16:56:20.0	2020-12-03 06:00:15.0	closed	[codebase quality, approved]	4	505	Update CALC_E_* to no longer use macros	https://api.github.com/repos/microsoft/calculator/issues/505	https://github.com/microsoft/calculator/issues/505	**Problem Statement**  One of the goals for this project appears to be converting legacy C style code to modern C++.  Avoiding macros unless completely necessary has been a C++ best practice for quite some time.    **Proposal**  With more modern features such as constexpr values, you should be able to replace all CALC_E_* macros with constexpr values.  Preferably, you could replace them with an enum class, but that is riskier and would require much more code refactoring.    **Goals**  Modernize the code base and make it easier to maintain.  	gsfreema	null	null	null	null	null	null	
2019-05-14 12:29:42.0	2019-05-17 18:10:29.0	2019-05-17 18:10:30.0	closed	[Bug, Area: User Experience, fixing approved issue]	5	506	Removed entrance transition for about button in NavigationView	https://api.github.com/repos/microsoft/calculator/issues/506	https://github.com/microsoft/calculator/pull/506	## Fixes #285.      ### Description of the changes:  - Remove EntranceThemeTransition (which is a default transition for NavigationViewList) for the NavigationViewList on PaneFooter of NavigationView.    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Manual testing  	MahdiGhiasi	null	null	null	null	null	null	
2019-05-15 21:04:20.0	2019-06-15 01:41:03.0	2019-06-15 01:41:03.0	closed	[Bug, Area: Accessibility, fixing approved issue]	3	507	Bound the calendar picker to the control above	https://api.github.com/repos/microsoft/calculator/issues/507	https://github.com/microsoft/calculator/pull/507	## Fixes #387       ### Description of the changes:  -Initially name of the "From" Calendar picker was bound using the name of the above control  -Bound the name of "From" calendar picker using the id of the above control       ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  -manually using the inspect tool      	dkheri	null	null	null	null	null	null	
2019-05-16 22:08:46.0	null	2021-05-26 10:04:35.0	open	[help wanted, Bug, triage approved, Area: User Experience, Pri: 2]	7	508	keyboard input sometimes broken when multiple instances open	https://api.github.com/repos/microsoft/calculator/issues/508	https://github.com/microsoft/calculator/issues/508	**Describe the bug**  If you have more than one instance of Calculator open, which ever instance is not the "original" will lose certain keyboard functions.     For example pressing `escape` to clear, `backspace` to backspace and `enter` to sum. These keyboard keys no longer work on the second instance. I cannot reproduce this 100% of the time. But every time I have encountered this problem, it was when multiple instances were opened. And     **Steps To Reproduce**    1. Open calculator  2. Hold shift and lose focus of the window (easiest way to do this is just to hold shift and left click somewhere outside the window)  3. Regain focus of the window  4. Press keys such as `enter` `backspace` `escape` `p` `l` `x` `y` and probably more      **Expected behavior**  Keyboard input should be observed no matter how many instances of calculator are open.     **Device and Application Information**   - OS Build: 10     0      17134  0"   - Architecture: X64   - Application Version: 10.1903.21.0   - Region:  en-US   - Dev Version Installed: False     > Note: A team member edited this comment to clarify steps to reproduce.	ZenMasta	null	null	null	null	null	null	
2019-05-16 22:33:54.0	2019-05-17 18:52:03.0	2019-07-31 02:02:10.0	closed	[documentation]	0	509	Updating terminology in new feature development process for clarity	https://api.github.com/repos/microsoft/calculator/issues/509	https://github.com/microsoft/calculator/pull/509	Updating terminology in new feature development process for clarity.	grochocki	null	null	null	null	null	null	
2019-05-20 18:21:51.0	2019-05-21 00:19:01.0	2019-05-21 00:19:05.0	closed	[documentation]	0	510	Update bug/feature templates to track if submitter requests assignment	https://api.github.com/repos/microsoft/calculator/issues/510	https://github.com/microsoft/calculator/pull/510	An additional datapoint that can be helpful during triage of bugs and features  is if the submitter is interested in being the implementor as well.    Updating the bug_report and feature_request templates to help track this.	HowardWolosky	null	null	null	null	null	null	
2019-05-20 18:55:23.0	2019-05-21 03:22:07.0	2020-12-03 06:00:14.0	closed	[won't fix]	2	511	Negation re-applies preceding operation	https://api.github.com/repos/microsoft/calculator/issues/511	https://github.com/microsoft/calculator/issues/511	<!--  Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.  -->    **Describe the bug**  <!-- A clear and concise description of what the bug is. -->    **Steps To Reproduce**  <!--  Steps to reproduce the behavior:  1. Go to '...'  2. Click on '....'  3. Scroll down to '....'  4. See error  -->  1. Open a scientific calculator.  2. Enter a simple calculation, e.g. 5 x 2.   3. Press = to obtain the result, e.g. 10.  4. Press the +/- button to negate the result.  5. Observe that the intermediate result (`negate(10)`) shown is -10.  6. Press = to clear the calculator's screen and obtain the result; it is now -20.  7. Press +/- again to negate; intermediate result (`negate(-20)`) is shown as 20.  8. Press = again; the screen now shows 40.    **Expected behavior**  I expect the calculator to only apply calculations shown in the secondary line, i.e. `negate(10)`, not to implicitly re-apply the preceding operation (e.g. x2).  <!-- A clear and concise description of what you expected to happen. -->    **Screenshots**  <!-- If applicable, add screenshots to help explain your problem. -->  The first column shows entered calculations the second results after pressing '='. The last image on the right shows the history of calculations   ![calculator](https://user-images.githubusercontent.com/11773136/58044534-4a871180-7b40-11e9-91a0-629d4be92c10.png)    **Device and Application Information**   - OS Build: 10.0.17763   - Architecture: X64   - Application Version: 10.1903.21.0   - Region: en-US   - Dev Version Installed: False     <!--  Run the following commands in Powershell and copy/paste the output.  " - OS Build: $([Environment]::OSVersion.Version)"  " - Architecture: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Architecture)"  " - Application Version: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Version)"  " - Region: $((Get-Culture).Name)"  " - Dev Version Installed: $($null -ne (Get-AppxPackage -Name Microsoft.WindowsCalculator.Dev))"  -->    **Additional context**  <!-- Add any other context about the problem here. -->  	M-Schiller	null	null	null	null	null	null	
2019-05-20 21:46:32.0	2019-06-17 21:21:25.0	2020-12-03 06:00:13.0	closed	[Enhancement, pitch declined]	9	512	Pressing 'x' should be the equivalent to muliply	https://api.github.com/repos/microsoft/calculator/issues/512	https://github.com/microsoft/calculator/issues/512	<!--  See https://github.com/Microsoft/calculator/blob/master/docs/NewFeatureProcess.md for suggestions on how to write a good feature pitch. Just want to submit an idea quickly? Try Feedback Hub instead: https://insider.windows.com/en-us/fb/?contextid=130  -->    **Problem Statement**  <!--  What problem are we trying to solve? Who’s the target audience? Is there a customer need or pain point we need to remedy? Is there a business goal or metric we are trying to improve? Do we have a hypothesis we want to prove or disprove?   -->  When quickly calculating some numbers it is very nice to keep your hands on the keyboard instead of reaching for the mouse and hitting the 'x' button on the UI.    **Evidence or User Insights**  <!--  Why should we do this? Potential sources of data: Feedback Hub, other GitHub issues, other anecdotes from listening to customers in person or online, request from another team, telemetry data, user research, market or competitive research  -->  When using the calculator on Google you can easily type "21x9" and it will give you the result. Having this in the Windows App will make the users life easier and more efficient     **Proposal**  <!--  How will the solution/feature help us solve the problem? How will it meet the target audience’s needs? If there are business goals or metrics, how does this improve them?  -->  By pressing the 'x' key it should be the equivalent to muliply on the on screen UI    **Goals**  <!--  What you want to accomplish with this feature. Typical examples include  "User Can *perform some task*"  -->  More efficiency       	andreaspalmer	null	null	null	null	null	null	
2019-05-21 11:05:06.0	null	2021-10-01 05:25:18.0	open	[fixing approved issue]	7	513	Ensure the calculator uses correctly unary operations when the equal button is pressed	https://api.github.com/repos/microsoft/calculator/issues/513	https://github.com/microsoft/calculator/pull/513	## Fixes #264     ### Fix unary actions displaying faulty results when a binary operation precedes it    ![a2019-03-08_4-36-01](https://user-images.githubusercontent.com/1226538/54029006-e5846800-415b-11e9-8ef1-4911983c11c5.gif)    - Type a random binary operation: `3 + 5` (for example)  - press Enter  - Use an unary action (Power or square root for example)  - press Enter      ### Make unary operations (including <kbd>+/-</kbd> ) are repeatable when the equal button is pressed instead of using the last binary action done.    ![76B914F7-E585-488A-AEAC-906926574955](https://user-images.githubusercontent.com/1226538/58091046-7e345c80-7b7d-11e9-850d-69c6ee78f791.GIF)    - Type a random binary operation: 3 + 5 (for example)  - press Enter  - Use an unary action (Power or square root for example)  - press Enter  - press Enter  - press Enter    ### Description of the changes:  - Add support of unary actions in `ResolveHighestPrecedenceOperation`  - Modify `ProcessCommandWorker` to set `m_nOpCode`, `m_bNoPrevEqu` when an unary action is used.    ### How changes were validated:  - manually tested      	rudyhuyn	null	null	null	null	null	null	
2019-05-22 00:54:19.0	2019-07-13 00:37:11.0	2020-12-03 06:00:12.0	closed	[help wanted, question, design]	12	514	Need help picking icon to represent "Bit Shifts"	https://api.github.com/repos/microsoft/calculator/issues/514	https://github.com/microsoft/calculator/issues/514	We are working on updating the keyboard for improved consistency and extensibility (#428). This includes refreshing iconography to support new functionality, and we need your help picking a good icon to represent the general concept of "Bit Shifts".    Here are a couple options we came up with that we would like to hear your feedback on. We do not need to limit our options to just these, though, so if you have a design idea (even if it is just a quick sketch), we would love to see those too!    | Option A | Option B | Option C |  |:-:|:-:|:-:|  |![bitShiftA](https://user-images.githubusercontent.com/1414423/58138671-2aad2780-7bec-11e9-898f-8fd7e06b0551.jpg) | ![bitShiftB](https://user-images.githubusercontent.com/1414423/58138673-2c76eb00-7bec-11e9-954d-3df17b084a18.jpg) | ![bitShiftC](https://user-images.githubusercontent.com/1414423/58138675-2e40ae80-7bec-11e9-8592-6fce63e840b0.jpg)|    A couple notes:  * We are planning to use `<<` and `>>` to represent left shift and right shift, respectively, though we are open to alternative suggestions with these as well  * Icons should have 1px stroke and need to be legible at small sizes (generally, that means 16x16, though we have some wiggle room; the mocks above show 24x24)    Thoughts?	grochocki	null	null	null	null	null	null	
2019-05-22 03:23:58.0	null	2021-08-02 09:04:37.0	open	[help wanted, Enhancement, Pri: 2, needs spec]	9	515	Converter should integrate (or reuse) online unit conversions (Bing or similar services) to increase category/unit coverage	https://api.github.com/repos/microsoft/calculator/issues/515	https://github.com/microsoft/calculator/issues/515	<!--  See https://github.com/Microsoft/calculator/blob/master/docs/NewFeatureProcess.md for suggestions on how to write a good feature pitch. Just want to submit an idea quickly? Try Feedback Hub instead: https://insider.windows.com/en-us/fb/?contextid=130  -->    **Problem Statement**  The proposed feature is to add more comprehensive coverage of categories and units for Converter through some form of integration with newly created or existing online systems.    Calculator provides unit conversions for 13 categories (Currency, Volume, Length, Weight/Mass, Temperature, Energy, Area, Speed, Time, Power, Data, Pressure, Angle) via the main Hamburger Menu. Length has for example selections for 11 units (Nanometer, Microns, Millimeters, Centimeters, Meters, Kilometers, Inches, Feed, Yards, Miles, Nautical Miles) and outputs additional "practical" units in the UI (Paperclips). While the current hard-coded list of conversions in calculator is reasonably extensive, the fixed set of units can quickly reach its limits, in particular when scientific or rare units are required (see evidence below).     Once a user hits a unit conversion limitation, they will likely turn to search engines which generally provide the requested conversions directly from the search box. This slows down the user trying to perform unit conversions (context switch to browser, copy-and-paste of converted results) overall diminishes the value of the unit conversion feature and Calculator in a cloud-connected world.    The goal for this feature is to make the Converter the one-stop-shop for unit conversions, in particular for scientific and educational settings.    <!--  What problem are we trying to solve? Who’s the target audience? Is there a customer need or pain point we need to remedy? Is there a business goal or metric we are trying to improve? Do we have a hypothesis we want to prove or disprove?  -->    **Evidence or User Insights**  <!--  Why should we do this? Potential sources of data: Feedback Hub, other GitHub issues, other anecdotes from listening to customers in person or online, request from another team, telemetry data, user research, market or competitive research  -->    Various gaps have been identified and documented in existing issues:  https://github.com/microsoft/calculator/issues/275 - month and ns for time  https://github.com/microsoft/calculator/issues/325 - light years for distance    A Bing query for a unit conversion (https://www.bing.com/search?q=20+F+in+C) shows a "Convert units" dialog with 17 categories (Length, Mass, Temperature, Speed, Volume, Area, Time, Frequency, Angle, Force, Pressure, Energy, Power, Electric Current, Voltage, Resistance, Digital storage, Fuel consumption) which is 4 more than calculator.    The Wikipedia page for Length https://en.wikipedia.org/wiki/Conversion_of_units#Length lists 77 distinct distance units, which is 66 more than calculator.    A Bing query can also support variable conversions such as currency conversions (https://www.bing.com/search?q=20+euro+in+dollar&FORM=AWRE) where the factor changes over time.    **Proposal**  <!--  How will the solution/feature help us solve the problem? How will it meet the target audience’s needs? If there are business goals or metrics, how does this improve them?  -->    The related work to modernize the unit conversion architecture:  https://github.com/microsoft/calculator/issues/379  should consider making Converter fully data driven, and integrate with an online data-source or service so Converter can provide more comprehensive (and daily updatable) conversion tables without binary updates to Calculator itself.    Assuming the existence of an online service which would aggregate and serve existing conversions from online sources (i.e. via an exposed search engine API or code-sharing), add currency services, scrape Wikipedia or other public sources, and allow for curation (to avoid errors), Converter could download and cache a conversion table that is much more comprehensive than the current version.    **Goals**  <!--  What you want to accomplish with this feature. Typical examples include  "User Can *perform some task*"  -->    User can convert anything that works in a search engine such as "20 dollars into euro" or "1 ly into mm" with Converter.    **Non-Goals**  <!--  Things we are explicitly not doing or supporting or that are out of scope, including reasons why.  -->    Design and implementation of the web-service that aggregates and serves conversion data.    **Low-Fidelity Concept**  <!--  Show as much of the experience as needed to explain the idea. This can be as simple as a napkin drawing but can also be a code prototype, or a design comp. Keep it simple at this stage, as it can be refined later during the pre-production stage.  -->    [Online Conversion Sources] + [Curators]  ----web service ---> [Conversion Table Artifact] ---download/update---> [Calculator] ---cache/use---> [Converter UI]    **Requested Assignment**  <!--  Some people just want to suggest a feature and let someone else implement it.  Other people want to not only suggest a feature, but implement it as well.  Both scenarios are completely ok. We just want to know which one it is.  We are likely to prioritize the review of feature requests if they already have someone who can implement them.  Please indicate which bucket you fall into by keeping one and removing the other.  -->    I'm just suggesting this idea.  I don't want to implement it.  	ferzkopp	null	null	null	null	null	null	
2019-05-22 04:19:24.0	2019-05-22 17:16:21.0	2019-05-22 17:16:22.0	closed	[Bug, fixing approved issue]	1	516	Make the solution compilable on systems in Chinese	https://api.github.com/repos/microsoft/calculator/issues/516	https://github.com/microsoft/calculator/pull/516	## Fixes #490       ### Description of the changes:  - Added compiler option /utf-8 for all build configurations for all projects in the solution.    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Tried to compile in all configurations locally, using the same machine mentioned initially in #490. Build was successful, no other problems occurred.     	Northurland	null	null	null	null	null	null	
2019-05-22 06:58:13.0	null	2021-08-02 09:04:40.0	open	[help wanted, Enhancement, Pri: 2, needs spec]	6	517	Add Matrix & Vector Modes	https://api.github.com/repos/microsoft/calculator/issues/517	https://github.com/microsoft/calculator/issues/517	**Problem Statement**  Matrix and Vector math can be complicated and hard, but is a vital thing to understand in college-level math for [various fields of study](https://www.decodedscience.org/practical-uses-matrix-mathematics/40494), especially [computer graphics](http://news.mit.edu/2013/explained-matrices-1206) and [artificial intelligence](https://towardsdatascience.com/the-mathematics-of-machine-learning-894f046c568). Having a calculator to help with basic calculations can help users focus on the results and understanding than tedium after initial skills have been learned in class.  By making matrices/vector math more discoverable and easier to process, we can make the skills required for these advanced fields more approachable.    **Evidence or User Insights**  There are [many](https://www.symbolab.com/solver/matrix-calculator) [online](https://matrixcalc.org/en/) [matrix](https://matrix.reshish.com/multiplication.php) [calculators](https://www.emathhelp.net/calculators/linear-algebra/matrix-calculator/) available.  Having one available inbox that works offline would be a great benefit, just like #338.    Inspired by [this comment](https://github.com/microsoft/calculator/issues/512#issuecomment-494408824) on #512.    **Proposal**  <!--  How will the solution/feature help us solve the problem? How will it meet the target audience’s needs? If there are business goals or metrics, how does this improve them?  -->  I think these modes are combined as matrix math can lead to a vector which then may want to be manipulated.  They could also have similar interfaces to be shared, so it could make sense for them to overlap.  The keyboard should be contextual anyway and only highlight/enable operations that make sense for the current state of the calculator.    This mode should allow a user to visually set the vector/matrix/matrices size(s) and click with in each cell to enter values (or use number keys and return to enter a value and then proceed to next empty cell or arrow keys to navigate cells).  They should be able to see a single matrix or two matrices to perform operations involving 1 or 2 matrices.    After performing an operation, the matrix display should update to show the resulting matrix/value.  The user should be able to click within their history to also restore the original matrices states from before the operation (i.e. to go back a step and re-perform a different operation).    **Goals**  <!--  What you want to accomplish with this feature. Typical examples include  "User Can *perform some task*"  -->  - [ ] Perform single matrix operations (Transpose, Inverse, Rank, Determinate, Power, etc...)  - [ ] Perform two matrix operations (Add, Subtract, Multiple, Divide)  - [ ] Work with Vectors and dot/cross product as well  - [ ] Able to restore working state from History  - [ ] Click in matrix cell to modify value  - [ ] Use arrow keys to navigate matrix cells  - [ ] Enter matrix values efficiently with keyboard    **Non-Goals**  <!--  Things we are explicitly not doing or supporting or that are out of scope, including reasons why.  -->    **Low-Fidelity Concept**  <!--  Show as much of the experience as needed to explain the idea. This can be as simple as a napkin drawing but can also be a code prototype, or a design comp. Keep it simple at this stage, as it can be refined later during the pre-production stage.  -->  ![image](https://user-images.githubusercontent.com/24302614/58153469-eb023200-7c23-11e9-83fb-25f1c4267ee1.png)      **Requested Assignment**  I'm just suggesting this idea.  I don't want to implement it.  	michael-hawker	null	null	null	null	null	null	
2019-05-22 22:44:26.0	2019-05-23 00:09:24.0	2019-05-24 17:08:38.0	closed	[documentation]	2	518	committed an appreciation message	https://api.github.com/repos/microsoft/calculator/issues/518	https://github.com/microsoft/calculator/pull/518	To extend appreciation to people that are reading  this.    ## Fixes #.  not a bug fix    ### Description of the changes:  -prose addition  -  -    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)--> No need to test  -  -  -    	jmjohnmcgovern707	null	null	null	null	null	null	
2019-05-24 00:02:41.0	2019-07-27 00:45:16.0	2020-12-03 06:00:11.0	closed	[Enhancement, pitch declined]	3	519	Allow deletion of typed-in operators	https://api.github.com/repos/microsoft/calculator/issues/519	https://github.com/microsoft/calculator/issues/519	  **Problem Statement**  In the current version of Calculator, if you typed in an operator, you cannot delete it. This will cause significant inconvenience, especially when dealing with rather complicated expressions, since you may have to discard the done part of the expression due to the wrong operator and type everything again from the beginning.    Adding the requested feature will greatly improve convenience.    **Evidence or User Insights**  Many scientific calculators, such as the Casio fx-991ES PLUS, support such feature; also, you can easily find online calculators doing so.    **Proposal**  If there is an operator at the end of an expression (like what is shown in the picture below,)  ![image](https://user-images.githubusercontent.com/40388212/58259799-db135b00-7da7-11e9-90c2-a5a052ab1c22.png)  the user should be able to delete it by backspace on their real keyboard or by the deletion button on the calculator GUI.     **Goals**  (the same to what mentioned in 'proposal'.)    **Low-Fidelity Concept**  I think a GIF or a video will explain this perfectly. However, I don't get one.    **Requested Assignment**  I'm just suggesting this idea. I don't want to implement it.  (Actually I really want to implement it, but I am completely not able to)	Northurland	null	null	null	null	null	null	
2019-05-24 02:42:04.0	2019-06-13 01:41:47.0	2020-12-03 06:00:10.0	closed	[Enhancement, pitch declined]	3	520	Scientific mode should more scientific	https://api.github.com/repos/microsoft/calculator/issues/520	https://github.com/microsoft/calculator/issues/520	<!--  See https://github.com/Microsoft/calculator/blob/master/docs/NewFeatureProcess.md for suggestions on how to write a good feature pitch. Just want to submit an idea quickly? Try Feedback Hub instead: https://insider.windows.com/en-us/fb/?contextid=130  -->    **Problem Statement**  1. Inputs in scientific mode cannot be modified at exact position after typed in, as people who use this mode are expecting some more control over the equation, that feature is a must from my perspective.  2. Button's function is illogical. When I click **log**, this will act as a postfix notation; however, if I click **power**, it will act as an infix notation. Why?      **Evidence or User Insights**  <!--  Why should we do this? Potential sources of data: Feedback Hub, other GitHub issues, other anecdotes from listening to customers in person or online, request from another team, telemetry data, user research, market or competitive research  -->    **Proposal**  <!--  How will the solution/feature help us solve the problem? How will it meet the target audience’s needs? If there are business goals or metrics, how does this improve them?  -->    **Goals**  <!--  What you want to accomplish with this feature. Typical examples include  "User Can *perform some task*"  -->    **Non-Goals**  <!--  Things we are explicitly not doing or supporting or that are out of scope, including reasons why.  -->    **Low-Fidelity Concept**  <!--  Show as much of the experience as needed to explain the idea. This can be as simple as a napkin drawing but can also be a code prototype, or a design comp. Keep it simple at this stage, as it can be refined later during the pre-production stage.  -->    **Requested Assignment**  <!--  Some people just want to suggest a feature and let someone else implement it.  Other people want to not only suggest a feature, but implement it as well.  Both scenarios are completely ok. We just want to know which one it is.  We are likely to prioritize the review of feature requests if they already have someone who can implement them.  Please indicate which bucket you fall into by keeping one and removing the other.  -->  I'm just suggesting this idea.  I don't want to implement it.  	RoadToDream	null	null	null	null	null	null	
2019-05-24 17:20:32.0	2019-05-24 17:41:43.0	2019-05-24 17:41:43.0	closed	[]	0	521	Update localized strings 2019-05-24	https://api.github.com/repos/microsoft/calculator/issues/521	https://github.com/microsoft/calculator/pull/521	Add new localized strings from our internal localization system.	mcooley	null	null	null	null	null	null	
2019-05-24 20:13:12.0	2019-05-24 20:15:13.0	2019-05-24 20:18:45.0	closed	[]	1	522	Feature/graphing calculator	https://api.github.com/repos/microsoft/calculator/issues/522	https://github.com/microsoft/calculator/pull/522	## Fixes #.      ### Description of the changes:  -  -  -    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  -  -  -    	gxa2019	null	null	null	null	null	null	
2019-05-26 12:28:43.0	2019-05-26 12:29:31.0	2019-05-28 15:02:41.0	closed	[]	1	523	Dev/madi/fix background color	https://api.github.com/repos/microsoft/calculator/issues/523	https://github.com/microsoft/calculator/pull/523	## Fixes #.  Background color on xamarin platforms    ### Description of the changes:  - Since by default the background is pure white on iOS and Android, the buttons would blen id with the background   - Background was set to light gray  -    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Tested on iOS emulator (working from home) and windows desktop    	MaximeDionNventiveCom	null	null	null	null	null	null	
2019-05-30 03:41:38.0	2019-05-31 19:55:07.0	2019-05-31 19:55:07.0	closed	[]	0	524	Migrate currency converter endpoints	https://api.github.com/repos/microsoft/calculator/issues/524	https://github.com/microsoft/calculator/pull/524	## Fixes #77      ### Description of the changes:  We are migrating the REST endpoint that Currency Converter uses.  The REST endpoint is not licensed for your use.  To continue to enable community participation in the development of the feature, developer builds will use an alternate REST endpoint that serves mock data (clearly identifiable as it references planets instead of countries).    ### How changes were validated:  Manual testing    	joseartrivera	null	null	null	null	null	null	
2019-05-30 20:23:53.0	2019-07-18 01:09:40.0	2020-12-03 06:00:09.0	closed	[Enhancement, Swag: XL (1+ months), Pri: 1, approved]	4	525	Refresh Calculator Diagnostic Data	https://api.github.com/repos/microsoft/calculator/issues/525	https://github.com/microsoft/calculator/issues/525	To make decisions about what user experiences to focus on, we need to understand which parts of calculator are used most often and whether they're working correctly. We want to update the app-specific diagnostic information Calculator is collecting to answer these questions:    1. Is Calculator performing?  2. Which Calculator mode is the best default experience?  3. Can users discover all the calculators and converters in the app?  4. What changes can we make to the keyboard layout to optimize for the most used operators?  5. Are History and Memory features used by the users?  6. Does Calculator need to support multi-instance?  7. Where is the product non-fatally failing (error/exception)?    	MicrosoftIssueBot	null	null	null	null	null	null	
2019-05-31 18:28:59.0	null	2021-09-30 09:04:56.0	open	[help wanted, Enhancement, Pri: 1, needs spec]	13	526	Develop a parser for arbitrary expressions in the calc engine	https://api.github.com/repos/microsoft/calculator/issues/526	https://github.com/microsoft/calculator/issues/526	**Problem Statement**  Currently, Calculator executes all operations in immediate mode--press an operator, get a new answer. For multiple scenarios, it would be useful for the user to enter an expression like "(5 + 2) * 3" and have Calculator parse and compute the result.    **Evidence or User Insights**  Several proposed features could leverage this work:  - Expression paste #344 (includes some prototype code which could be useful for this effort)  - History editing #163   - Input via ink or voice #24, #288   - Editing expressions in scientific calculator #520    **Proposal**  Add code and tests to the calc engine to parse mathematical expressions as strings.    **Goals**  - A developer can use the CalcManager library to convert an expression into a numerical result  - Expressions support order of operations, e.g. "(5 + 2) * 3" = 21  - Expressions support evaluation of functions, e.g. "sqrt(4)"      - Functions are implemented for as many existing calculator operators as possible      - Each function has a thoughtful name informed by similar systems  - Expressions are evaluated using the arbitrary-precision engine  - When invalid expressions are passed to the engine, error information is returned which could be used to construct a helpful error message  - Parsing and evaluation is deterministic, and ideally not locale-dependent  - The parser can find expressions embedded in natural language sentences with loose syntax (e.g. "what is the square root of sin(3 - 2)" evaluates to "what is the square root of [expression tree]"), for future use in voice input scenarios    **Non-Goals**  - Integrate expression parsing with the Calculator UI (tracked by other issues)  - Natural language intent recognition, e.g. "what is the square root of 4" evaluating to "sqrt(4)"    **Requested Assignment**  I'm happy to help with this, but would be great for someone else to implement.  	mcooley	null	null	null	null	null	null	
2019-05-31 21:53:05.0	2019-06-06 00:16:21.0	2020-12-03 00:01:49.0	closed	[Area: Reliability, duplicate]	3	527	Calculator.exe crashing when selecting "Date Calculation" on RS5 build 10.1904.31.0 	https://api.github.com/repos/microsoft/calculator/issues/527	https://github.com/microsoft/calculator/issues/527	```  0:007> !di;  Dump Name: calculator.exe.3828.dmp  Computer Name: XXXXXX  Windows 10 Version 17763 MP (4 procs) Free x64  Product: WinNt, suite: SingleUserTS  17763.1.amd64fre.rs5_release.180914-1434  Debug session time: Tue May 28 12:46:42.000 2019 (UTC - 5:00)  System Uptime: 0 days 0:05:37.857  Process Uptime: 0 days 0:00:06.000    Kernel time: 0 days 0:00:00.000    User time: 0 days 0:00:00.000  User Name: XXXXXX  PID: 0xEF4 = 0n3828    User Mini Dump File with Full Memory: Only application data is available.    0:007> !crash;  Last exception (.exr -1)  ============================================  ExceptionAddress: 00007ff9978d7842 (Windows_UI_Xaml!DirectUI::ErrorHelper::ProcessUnhandledError+0x00000000000000f2)     ExceptionCode: c000027b    ExceptionFlags: 00000001  NumberParameters: 2     Parameter[0]: 000001a249524080     Parameter[1]: 0000000000000005      Setting context to the last exception (.ecxr)  ============================================  rax=00000076552fc820 rbx=00000076552fcdd0 rcx=00000076552fc820  rdx=0000000000000000 rsi=0000000000000002 rdi=00000076552fc820  rip=00007ff9a37edc0f rsp=00000076552fc740 rbp=00000076552fce10   r8=0000000000000000  r9=0000000000000000 r10=0000000000000000  r11=00000076552fcdd0 r12=0000000000000004 r13=000001a23a87f260  r14=0000000000000000 r15=0000000000000000  iopl=0         nv up ei pl zr na po nc  cs=0033  ss=002b  ds=002b  es=002b  fs=0053  gs=002b             efl=00000244  KERNELBASE!RaiseFailFastException+0xaf:  00007ff9`a37edc0f 0f1f440000      nop     dword ptr [rax+rax]    Crashing Stack (kn)  ============================================    *** Stack trace for last set context - .thread/.cxr resets it   # Child-SP          RetAddr           Call Site  00 00000076`552fc740 00007ff9`a4245450 KERNELBASE!RaiseFailFastException+0xaf  01 00000076`552fcd10 00007ff9`978d7842 combase!RoFailFastWithErrorContextInternal2+0x480  02 00000076`552fcff0 00007ff9`978d720a Windows_UI_Xaml!DirectUI::ErrorHelper::ProcessUnhandledError+0xf2  03 00000076`552fd040 00007ff9`978d7099 Windows_UI_Xaml!DirectUI::FinalUnhandledErrorDetectedRegistration::OnFinalUnhandledErrorDetected+0x9a  04 (Inline Function) --------`-------- Windows_UI_Xaml!Microsoft::WRL::Callback::__l2::<lambda_fa46ac39691f4ca87fe78d9a3f2f4de1>::operator()+0x13  05 00000076`552fd0c0 00007ff9`a0bc2f32 Windows_UI_Xaml!Microsoft::WRL::Details::DelegateArgTraits<long (__cdecl Windows::Foundation::IEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Core::UnhandledErrorDetectedEventArgs * __ptr64,Windows::ApplicationModel::Core::IUnhandledErrorDetectedEventArgs * __ptr64> >::*)(IInspectable * __ptr64,Windows::ApplicationModel::Core::IUnhandledErrorDetectedEventArgs * __ptr64) __ptr64>::DelegateInvokeHelper<Microsoft::WRL::Implements<Microsoft::WRL::RuntimeClassFlags<2>,Windows::Foundation::IEventHandler<Windows::ApplicationModel::Core::UnhandledErrorDetectedEventArgs * __ptr64>,Microsoft::WRL::FtmBase>,<lambda_fa46ac39691f4ca87fe78d9a3f2f4de1>,-1,IInspectable * __ptr64,Windows::ApplicationModel::Core::IUnhandledErrorDetectedEventArgs * __ptr64>::Invoke+0x19  06 00000076`552fd0f0 00007ff9`a0bc2f8a twinapi_appcore!Windows::Internal::Details::GitInvokeHelper<Windows::Foundation::IEventHandler<Windows::ApplicationModel::Core::UnhandledErrorDetectedEventArgs * __ptr64>,Windows::Internal::GitPtr,2>::Invoke+0x62  07 00000076`552fd130 00007ff9`a0bb28e3 twinapi_appcore!Windows::ApplicationModel::Core::UnhandledErrorInvokeHelper::Invoke+0x1a  08 (Inline Function) --------`-------- twinapi_appcore!Microsoft::WRL::EventSource<Windows::Foundation::IEventHandler<Windows::ApplicationModel::Core::UnhandledErrorDetectedEventArgs *>,Microsoft::WRL::InvokeModeOptions<2> >::InvokeAll::__l2::<lambda_554db31ac46423117fe731f412dd63d8>::operator()+0x1d  09 00000076`552fd160 00007ff9`a0bb2279 twinapi_appcore!Microsoft::WRL::InvokeTraits<2>::InvokeDelegates<<lambda_554db31ac46423117fe731f412dd63d8>,Windows::Foundation::IEventHandler<Windows::ApplicationModel::Core::UnhandledErrorDetectedEventArgs * __ptr64> >+0x57  0a 00000076`552fd1b0 00007ff9`a0bb2880 twinapi_appcore!Microsoft::WRL::EventSource<Windows::Foundation::IEventHandler<Windows::ApplicationModel::Core::UnhandledErrorDetectedEventArgs * __ptr64>,Microsoft::WRL::InvokeModeOptions<2> >::DoInvoke<<lambda_554db31ac46423117fe731f412dd63d8> >+0x65  0b 00000076`552fd200 00007ff9`a0bbd52a twinapi_appcore!Microsoft::WRL::EventSource<Windows::Foundation::IEventHandler<Windows::ApplicationModel::Core::UnhandledErrorDetectedEventArgs * __ptr64>,Microsoft::WRL::InvokeModeOptions<2> >::InvokeAll<std::nullptr_t,Windows::ApplicationModel::Core::UnhandledErrorDetectedEventArgs * __ptr64>+0x34  0c 00000076`552fd250 00007ff9`a0bd7781 twinapi_appcore!Windows::ApplicationModel::Core::CoreApplication::ForwardLocalError+0x6a  0d 00000076`552fd2a0 00007ff9`a4243fa3 twinapi_appcore!Windows::ApplicationModel::Core::CoreApplicationFactory::ForwardLocalError+0xf1  0e 00000076`552fd2e0 00007ff9`978d7a13 combase!CallErrorForwarder+0x12f  0f 00000076`552fd370 00007ff9`9763a632 Windows_UI_Xaml!DirectUI::ErrorHelper::ReportUnhandledError+0xc7  10 00000076`552fd3f0 00007ff9`97406e17 Windows_UI_Xaml!DirectUI::DXamlCore::FireEvent+0x273ad2  11 00000076`552fd480 00007ff9`97406cfd Windows_UI_Xaml!CCoreServices::CLR_FireEvent+0xf7  12 00000076`552fd4e0 00007ff9`97480a2a Windows_UI_Xaml!CommonBrowserHost::CLR_FireEvent+0x1d  13 00000076`552fd520 00007ff9`9741ab9f Windows_UI_Xaml!CControlBase::ScriptCallback+0x14a  14 00000076`552fd5b0 00007ff9`9741a80c Windows_UI_Xaml!CXcpDispatcher::OnScriptCallback+0x1df  15 (Inline Function) --------`-------- Windows_UI_Xaml!CXcpDispatcher::OnWindowMessage+0x14  16 (Inline Function) --------`-------- Windows_UI_Xaml!CXcpDispatcher::ProcessMessage+0x3e  17 00000076`552fd690 00007ff9`a486ca66 Windows_UI_Xaml!CXcpDispatcher::WindowProc+0x8c  18 00000076`552fd6f0 00007ff9`a486c78c user32!UserCallWinProcCheckWow+0x266  19 00000076`552fd870 00007ff9`a487fa83 user32!DispatchClientMessage+0x9c  1a 00000076`552fd8d0 00007ff9`a69633c4 user32!__fnDWORD+0x33  1b 00000076`552fd930 00007ff9`a2b31184 ntdll!KiUserCallbackDispatcherContinue  1c 00000076`552fd9b8 00007ff9`a486c128 win32u!ZwUserMessageCall+0x14  1d 00000076`552fd9c0 00007ff9`a486be38 user32!SendMessageWorker+0x288  1e 00000076`552fda60 00007ff9`9741a38c user32!SendMessageW+0xf8  1f (Inline Function) --------`-------- Windows_UI_Xaml!CXcpDispatcher::SendMessageW+0x11  20 00000076`552fdac0 00007ff9`972e1777 Windows_UI_Xaml!CXcpBrowserHost::SyncScriptCallbackRequest+0x13c  21 (Inline Function) --------`-------- Windows_UI_Xaml!CEventManager::RaiseControlEvents+0x169  22 00000076`552fdb50 00007ff9`972e1c5f Windows_UI_Xaml!CEventManager::Raise+0x547  23 00000076`552fdc50 00007ff9`9770e1a7 Windows_UI_Xaml!CEventManager::RaiseRoutedEventBubbling+0x12f  24 (Inline Function) --------`-------- Windows_UI_Xaml!CEventManager::RaiseRoutedEvent+0x35  25 00000076`552fdcf0 00007ff9`9770ab77 Windows_UI_Xaml!CInputManager::RaiseDelayedPointerUpEvent+0x137  26 00000076`552fdd60 00007ff9`9770dc29 Windows_UI_Xaml!CInputManager::ProcessGestureInput+0x21b  27 00000076`552fde10 00007ff9`97846486 Windows_UI_Xaml!CInputManager::ProcessTouchInteractionCallback+0xa9  28 00000076`552fde40 00007ff9`97a806cf Windows_UI_Xaml!CCoreServices::ProcessTouchInteractionCallback+0x3a  29 00000076`552fde70 00007ff9`97a808d2 Windows_UI_Xaml!TIEAdapter::InteractionEngineCallback+0x497  2a 00000076`552fe070 00007ff9`9e731223 Windows_UI_Xaml!TIEAdapter::StaticInteractionEngineCallback+0x12  2b 00000076`552fe0a0 00007ff9`9e72e1e7 ninput!COutputConverter::Process+0x433  2c 00000076`552fe230 00007ff9`9e74b71f ninput!CInteractionContextImpl::OutputCallback+0xe7  2d 00000076`552fe300 00007ff9`9e74b6ea ninput!CInteractionGroupingFilter::_SendOutput+0x1f  2e 00000076`552fe340 00007ff9`9e74ae86 ninput!CInteractionGroupingFilter::_OnInput+0x7e  2f 00000076`552fe370 00007ff9`9e74af5b ninput!COutputCoalescingFilter::Flush+0xbe  30 00000076`552fe3a0 00007ff9`9e749944 ninput!COutputCoalescingFilter::_OnInput+0x43  31 00000076`552fe3d0 00007ff9`9e72eb4b ninput!CInteractionEngineImpl::DigitizerInput+0x254  32 00000076`552fe480 00007ff9`9e72ce30 ninput!CInteractionContextImpl::ProcessFrameHistory+0x637  33 00000076`552fe9f0 00007ff9`97a7f95f ninput!ProcessPointerFramesInteractionContext+0x180  34 00000076`552fea20 00007ff9`97a7fbd4 Windows_UI_Xaml!ElementGestureTracker::ProcessPointerInformation+0x1f7  35 00000076`552feac0 00007ff9`9770db4b Windows_UI_Xaml!ElementGestureTracker::ProcessPointerMessage+0x84  36 00000076`552feaf0 00007ff9`9770afaa Windows_UI_Xaml!CInputManager::ProcessPointerMessagesWithInteractionEngine+0x233  37 00000076`552febd0 00007ff9`9770d4bc Windows_UI_Xaml!CInputManager::ProcessInteractionPointerMessages+0x116  38 00000076`552fec80 00007ff9`97657d98 Windows_UI_Xaml!CInputManager::ProcessPointerInput+0xdd8  39 00000076`552fedc0 00007ff9`9740ef4f Windows_UI_Xaml!CInputManager::ProcessInput+0x248e28  3a 00000076`552fee20 00007ff9`9740ee82 Windows_UI_Xaml!CCoreServices::ProcessInput+0x43  3b 00000076`552fee50 00007ff9`978c9e1e Windows_UI_Xaml!CXcpBrowserHost::HandleInputMessage+0x122  3c 00000076`552fef30 00007ff9`97652c8a Windows_UI_Xaml!CJupiterControl::HandlePointerMessage+0xf6  3d 00000076`552feff0 00007ff9`9740017a Windows_UI_Xaml!CJupiterControl::HandleWindowMessage+0x2526c6  3e 00000076`552ff070 00007ff9`973fffb9 Windows_UI_Xaml!CJupiterWindow::CoreWindowSubclassProc+0x18a  3f 00000076`552ff0f0 00007ff9`a486ca66 Windows_UI_Xaml!CJupiterWindow::StaticCoreWindowSubclassProc+0x49  40 00000076`552ff130 00007ff9`a486c582 user32!UserCallWinProcCheckWow+0x266  41 00000076`552ff2b0 00007ff9`984952f7 user32!DispatchMessageWorker+0x1b2  42 00000076`552ff330 00007ff9`9849502e Windows_UI!Windows::UI::Core::CDispatcher::ProcessMessage+0x177  43 00000076`552ff3e0 00007ff9`98494edb Windows_UI!Windows::UI::Core::CDispatcher::WaitAndProcessMessagesInternal+0xae  44 00000076`552ff4f0 00007ff9`975169a0 Windows_UI!Windows::UI::Core::CDispatcher::ProcessEvents+0x7b  45 00000076`552ff5a0 00007ff9`9751693f Windows_UI_Xaml!CJupiterWindow::RunCoreWindowMessageLoop+0x4c  46 (Inline Function) --------`-------- Windows_UI_Xaml!CJupiterControl::RunMessageLoop+0x1f  47 00000076`552ff5d0 00007ff9`a0b64c2a Windows_UI_Xaml!DirectUI::DXamlCore::RunMessageLoop+0x47  48 00000076`552ff640 00007ff9`a0b37a66 twinapi_appcore!Windows::ApplicationModel::Core::CoreApplicationView::Run+0x3a  49 00000076`552ff670 00007ff9`a474c315 twinapi_appcore!<lambda_02cef69f8ae13d771fa47a74be974b8f>::operator()+0x206  4a 00000076`552ff760 00007ff9`a67b7974 SHCore!_WrapperThreadProc+0xf5  4b 00000076`552ff840 00007ff9`a692a271 kernel32!BaseThreadInitThunk+0x14  4c 00000076`552ff870 00000000`00000000 ntdll!RtlUserThreadStart+0x21      0:007> !dse  =========================================================================================   PDE v11.9 - Copyright 2019 Andrew Richards  =========================================================================================  Stowed Exception Array @ 0x000001a249524080    Stowed Exception #1 @ 0x000001a23a86b2b8   0x8000FFFF (FACILITY_NULL - Default): E_UNEXPECTED - Unexpected failure     Stack  : 0x1a2494efa80    7ff956e5736a Microsoft_UI_Xaml!winrt::hresult_error::hresult_error+0xae    7ff956e5756a Microsoft_UI_Xaml!winrt::throw_hresult+0x1ce    7ff956e7def7 Microsoft_UI_Xaml!winrt::impl::produce<NavigationViewItemPresenter,winrt::Windows::UI::Xaml::Controls::IControlOverrides>::OnPointerReleased+0xd7    7ff997adbdd3 Windows_UI_Xaml!DirectUI::ControlGenerated::OnPointerReleasedProtected+0x4b    7ff99763a73b Windows_UI_Xaml!DirectUI::Control::FireEvent+0x27395b    7ff9973c6c63 Windows_UI_Xaml!DirectUI::DXamlCore::FireEvent+0x103    7ff997406e17 Windows_UI_Xaml!CCoreServices::CLR_FireEvent+0xf7    7ff997406cfd Windows_UI_Xaml!CommonBrowserHost::CLR_FireEvent+0x1d    7ff997480a2a Windows_UI_Xaml!CControlBase::ScriptCallback+0x14a    7ff99741ab9f Windows_UI_Xaml!CXcpDispatcher::OnScriptCallback+0x1df    7ff99741a80c Windows_UI_Xaml!CXcpDispatcher::WindowProc+0x8c    7ff9a486ca66 user32!UserCallWinProcCheckWow+0x266    7ff9a486c78c user32!DispatchClientMessage+0x9c    7ff9a487fa83 user32!__fnDWORD+0x33    7ff9a69633c4 ntdll!KiUserCallbackDispatcherContinue+0x0    7ff9a2b31184 win32u!ZwUserMessageCall+0x14    7ff9a486c128 user32!SendMessageWorker+0x288    7ff9a486be38 user32!SendMessageW+0xf8    7ff99741a38c Windows_UI_Xaml!CXcpBrowserHost::SyncScriptCallbackRequest+0x13c    7ff9972e1777 Windows_UI_Xaml!CEventManager::Raise+0x547    7ff9972e1c5f Windows_UI_Xaml!CEventManager::RaiseRoutedEventBubbling+0x12f    7ff99770e1a7 Windows_UI_Xaml!CInputManager::RaiseDelayedPointerUpEvent+0x137    7ff99770ab77 Windows_UI_Xaml!CInputManager::ProcessGestureInput+0x21b    7ff99770dc29 Windows_UI_Xaml!CInputManager::ProcessTouchInteractionCallback+0xa9    7ff997846486 Windows_UI_Xaml!CCoreServices::ProcessTouchInteractionCallback+0x3a    7ff997a806cf Windows_UI_Xaml!TIEAdapter::InteractionEngineCallback+0x497    7ff997a808d2 Windows_UI_Xaml!TIEAdapter::StaticInteractionEngineCallback+0x12    7ff99e731223 ninput!COutputConverter::Process+0x433    7ff99e72e1e7 ninput!CInteractionContextImpl::OutputCallback+0xe7    7ff99e74b71f ninput!CInteractionGroupingFilter::_SendOutput+0x1f    7ff99e74b6ea ninput!CInteractionGroupingFilter::_OnInput+0x7e    7ff99e74ae86 ninput!COutputCoalescingFilter::Flush+0xbe    7ff99e74af5b ninput!COutputCoalescingFilter::_OnInput+0x43    7ff99e749944 ninput!CInteractionEngineImpl::DigitizerInput+0x254    7ff99e72eb4b ninput!CInteractionContextImpl::ProcessFrameHistory+0x637    7ff99e72ce30 ninput!ProcessPointerFramesInteractionContext+0x180    7ff997a7f95f Windows_UI_Xaml!ElementGestureTracker::ProcessPointerInformation+0x1f7    7ff997a7fbd4 Windows_UI_Xaml!ElementGestureTracker::ProcessPointerMessage+0x84    7ff99770db4b Windows_UI_Xaml!CInputManager::ProcessPointerMessagesWithInteractionEngine+0x233    7ff99770afaa Windows_UI_Xaml!CInputManager::ProcessInteractionPointerMessages+0x116    7ff99770d4bc Windows_UI_Xaml!CInputManager::ProcessPointerInput+0xdd8    7ff997657d98 Windows_UI_Xaml!CInputManager::ProcessInput+0x248e28    7ff99740ef4f Windows_UI_Xaml!CCoreServices::ProcessInput+0x43    7ff99740ee82 Windows_UI_Xaml!CXcpBrowserHost::HandleInputMessage+0x122    7ff9978c9e1e Windows_UI_Xaml!CJupiterControl::HandlePointerMessage+0xf6    7ff997652c8a Windows_UI_Xaml!CJupiterControl::HandleWindowMessage+0x2526c6    7ff99740017a Windows_UI_Xaml!CJupiterWindow::CoreWindowSubclassProc+0x18a    7ff9973fffb9 Windows_UI_Xaml!CJupiterWindow::StaticCoreWindowSubclassProc+0x49    7ff9a486ca66 user32!UserCallWinProcCheckWow+0x266    7ff9a486c582 user32!DispatchMessageWorker+0x1b2    7ff9984952f7 Windows_UI!Windows::UI::Core::CDispatcher::ProcessMessage+0x177    7ff99849502e Windows_UI!Windows::UI::Core::CDispatcher::WaitAndProcessMessagesInternal+0xae    7ff998494edb Windows_UI!Windows::UI::Core::CDispatcher::ProcessEvents+0x7b    7ff9975169a0 Windows_UI_Xaml!CJupiterWindow::RunCoreWindowMessageLoop+0x4c    7ff99751693f Windows_UI_Xaml!DirectUI::DXamlCore::RunMessageLoop+0x47    7ff9a0b64c2a twinapi_appcore!Windows::ApplicationModel::Core::CoreApplicationView::Run+0x3a    7ff9a0b37a66 twinapi_appcore!<lambda_02cef69f8ae13d771fa47a74be974b8f>::operator()+0x206    7ff9a474c315 SHCore!_WrapperThreadProc+0xf5    7ff9a67b7974 kernel32!BaseThreadInitThunk+0x14    7ff9a692a271 ntdll!RtlUserThreadStart+0x21    Stowed Exception #2 @ 0x000001a23a875cc8   0x8000FFFF (FACILITY_NULL - Default): E_UNEXPECTED - Unexpected failure     Stack  : 0x1a249052d80    7ff956e5736a Microsoft_UI_Xaml!winrt::hresult_error::hresult_error+0xae    7ff956e5756a Microsoft_UI_Xaml!winrt::throw_hresult+0x1ce    7ff956e75891 Microsoft_UI_Xaml!winrt::impl::consume_Windows_UI_Xaml_IDependencyObject<NavigationView>::SetValue+0x85    7ff956e735ff Microsoft_UI_Xaml!NavigationViewProperties::SelectedItem+0x6b    7ff956e915ea Microsoft_UI_Xaml!NavigationView::SetSelectedItemAndExpectItemInvokeWhenSelectionChangedIfNotInvokedFromAPI+0xc6    7ff956e8f322 Microsoft_UI_Xaml!NavigationView::OnSelectionChanged+0x242    7ff956e69093 Microsoft_UI_Xaml!winrt::impl::delegate<winrt::Windows::UI::Xaml::SizeChangedEventHandler>::type<<lambda_778e218533f9d63cc7aafcdd2f5bac52> >::Invoke+0x43    7ff99722ae7c Windows_UI_Xaml!DirectUI::CRoutedEventSourceBase<DirectUI::IUntypedEventSource,Windows::Foundation::ITypedEventHandler<Windows::UI::Xaml::UIElement * __ptr64,Windows::UI::Xaml::BringIntoViewRequestedEventArgs * __ptr64>,Windows::UI::Xaml::IUIElement,Windows::UI::Xaml::IBringIntoViewRequestedEventArgs>::Raise+0xe4    7ff9974d5e64 Windows_UI_Xaml!DirectUI::Selector::OnSelectionChanged+0x44    7ff997467407 Windows_UI_Xaml!DirectUI::Selector::InvokeSelectionChanged+0xab    7ff99746926a Windows_UI_Xaml!DirectUI::Selector::EndChange+0x2ee    7ff9974667ec Windows_UI_Xaml!DirectUI::Selector::SelectJustThisItemInternal+0xa0    7ff997c09eea Windows_UI_Xaml!DirectUI::Selector::MakeSingleSelection+0x6a    7ff997c82c49 Windows_UI_Xaml!DirectUI::ListViewBase::MakeSingleSelection+0x79    7ff997c82b77 Windows_UI_Xaml!DirectUI::ListViewBase::MakeSingleSelection+0xa3    7ff997c87d42 Windows_UI_Xaml!DirectUI::ListViewBase::OnSelectItemPrimary+0x16e    7ff997c8538c Windows_UI_Xaml!DirectUI::ListViewBase::OnItemPrimaryInteractionGesture+0x2dc    7ff997c2b498 Windows_UI_Xaml!DirectUI::ListViewBaseItem::DoTapInteraction+0x70    7ff997c2b3fc Windows_UI_Xaml!DirectUI::ListViewBaseItem::DoPendingTapInteractionForPointerId+0x60    7ff997c2ee49 Windows_UI_Xaml!DirectUI::ListViewBaseItem::OnPointerReleased+0x439    7ff956e7dea8 Microsoft_UI_Xaml!winrt::impl::produce<NavigationViewItemPresenter,winrt::Windows::UI::Xaml::Controls::IControlOverrides>::OnPointerReleased+0x88    7ff997adbdd3 Windows_UI_Xaml!DirectUI::ControlGenerated::OnPointerReleasedProtected+0x4b    7ff99763a73b Windows_UI_Xaml!DirectUI::Control::FireEvent+0x27395b    7ff9973c6c63 Windows_UI_Xaml!DirectUI::DXamlCore::FireEvent+0x103    7ff997406e17 Windows_UI_Xaml!CCoreServices::CLR_FireEvent+0xf7    7ff997406cfd Windows_UI_Xaml!CommonBrowserHost::CLR_FireEvent+0x1d    7ff997480a2a Windows_UI_Xaml!CControlBase::ScriptCallback+0x14a    7ff99741ab9f Windows_UI_Xaml!CXcpDispatcher::OnScriptCallback+0x1df    7ff99741a80c Windows_UI_Xaml!CXcpDispatcher::WindowProc+0x8c    7ff9a486ca66 user32!UserCallWinProcCheckWow+0x266    7ff9a486c78c user32!DispatchClientMessage+0x9c    7ff9a487fa83 user32!__fnDWORD+0x33    7ff9a69633c4 ntdll!KiUserCallbackDispatcherContinue+0x0    7ff9a2b31184 win32u!ZwUserMessageCall+0x14    7ff9a486c128 user32!SendMessageWorker+0x288    7ff9a486be38 user32!SendMessageW+0xf8    7ff99741a38c Windows_UI_Xaml!CXcpBrowserHost::SyncScriptCallbackRequest+0x13c    7ff9972e1777 Windows_UI_Xaml!CEventManager::Raise+0x547    7ff9972e1c5f Windows_UI_Xaml!CEventManager::RaiseRoutedEventBubbling+0x12f    7ff99770e1a7 Windows_UI_Xaml!CInputManager::RaiseDelayedPointerUpEvent+0x137    7ff99770ab77 Windows_UI_Xaml!CInputManager::ProcessGestureInput+0x21b    7ff99770dc29 Windows_UI_Xaml!CInputManager::ProcessTouchInteractionCallback+0xa9    7ff997846486 Windows_UI_Xaml!CCoreServices::ProcessTouchInteractionCallback+0x3a    7ff997a806cf Windows_UI_Xaml!TIEAdapter::InteractionEngineCallback+0x497    7ff997a808d2 Windows_UI_Xaml!TIEAdapter::StaticInteractionEngineCallback+0x12    7ff99e731223 ninput!COutputConverter::Process+0x433    7ff99e72e1e7 ninput!CInteractionContextImpl::OutputCallback+0xe7    7ff99e74b71f ninput!CInteractionGroupingFilter::_SendOutput+0x1f    7ff99e74b6ea ninput!CInteractionGroupingFilter::_OnInput+0x7e    7ff99e74ae86 ninput!COutputCoalescingFilter::Flush+0xbe    7ff99e74af5b ninput!COutputCoalescingFilter::_OnInput+0x43    7ff99e749944 ninput!CInteractionEngineImpl::DigitizerInput+0x254    7ff99e72eb4b ninput!CInteractionContextImpl::ProcessFrameHistory+0x637    7ff99e72ce30 ninput!ProcessPointerFramesInteractionContext+0x180    7ff997a7f95f Windows_UI_Xaml!ElementGestureTracker::ProcessPointerInformation+0x1f7    7ff997a7fbd4 Windows_UI_Xaml!ElementGestureTracker::ProcessPointerMessage+0x84    7ff99770db4b Windows_UI_Xaml!CInputManager::ProcessPointerMessagesWithInteractionEngine+0x233    7ff99770afaa Windows_UI_Xaml!CInputManager::ProcessInteractionPointerMessages+0x116    7ff99770d4bc Windows_UI_Xaml!CInputManager::ProcessPointerInput+0xdd8    7ff997657d98 Windows_UI_Xaml!CInputManager::ProcessInput+0x248e28    7ff99740ef4f Windows_UI_Xaml!CCoreServices::ProcessInput+0x43    7ff99740ee82 Windows_UI_Xaml!CXcpBrowserHost::HandleInputMessage+0x122    7ff9978c9e1e Windows_UI_Xaml!CJupiterControl::HandlePointerMessage+0xf6    7ff997652c8a Windows_UI_Xaml!CJupiterControl::HandleWindowMessage+0x2526c6    7ff99740017a Windows_UI_Xaml!CJupiterWindow::CoreWindowSubclassProc+0x18a    7ff9973fffb9 Windows_UI_Xaml!CJupiterWindow::StaticCoreWindowSubclassProc+0x49    7ff9a486ca66 user32!UserCallWinProcCheckWow+0x266    7ff9a486c582 user32!DispatchMessageWorker+0x1b2    7ff9984952f7 Windows_UI!Windows::UI::Core::CDispatcher::ProcessMessage+0x177    7ff99849502e Windows_UI!Windows::UI::Core::CDispatcher::WaitAndProcessMessagesInternal+0xae    7ff998494edb Windows_UI!Windows::UI::Core::CDispatcher::ProcessEvents+0x7b    7ff9975169a0 Windows_UI_Xaml!CJupiterWindow::RunCoreWindowMessageLoop+0x4c    7ff99751693f Windows_UI_Xaml!DirectUI::DXamlCore::RunMessageLoop+0x47    7ff9a0b64c2a twinapi_appcore!Windows::ApplicationModel::Core::CoreApplicationView::Run+0x3a    7ff9a0b37a66 twinapi_appcore!<lambda_02cef69f8ae13d771fa47a74be974b8f>::operator()+0x206    7ff9a474c315 SHCore!_WrapperThreadProc+0xf5    7ff9a67b7974 kernel32!BaseThreadInitThunk+0x14    7ff9a692a271 ntdll!RtlUserThreadStart+0x21    Stowed Exception #3 @ 0x000001a248f31cd8   0x8000FFFF (FACILITY_NULL - Default): E_UNEXPECTED - Unexpected failure     Stack  : 0x1a248724970    7ff956e5736a Microsoft_UI_Xaml!winrt::hresult_error::hresult_error+0xae    7ff956e5756a Microsoft_UI_Xaml!winrt::throw_hresult+0x1ce    7ff956e8f787 Microsoft_UI_Xaml!NavigationView::RaiseSelectionChangedEvent+0x24b    7ff956e8fde1 Microsoft_UI_Xaml!NavigationView::ChangeSelection+0x301    7ff956e91475 Microsoft_UI_Xaml!NavigationView::OnSelectedItemPropertyChanged+0x55    7ff956e93d7d Microsoft_UI_Xaml!NavigationView::OnPropertyChanged+0x26d    7ff956e72573 Microsoft_UI_Xaml!NavigationViewProperties::OnIsPaneOpenPropertyChanged+0x73    7ff956e54e1b Microsoft_UI_Xaml!winrt::impl::delegate<winrt::Windows::UI::Xaml::PropertyChangedCallback>::type<<lambda_7e7a26da47dff7b0d2ec2f8ae5761249> >::Invoke+0x3b    7ff997402247 Windows_UI_Xaml!DirectUI::DependencyObject::NotifyPropertyChanged+0x1b7    7ff99740201d Windows_UI_Xaml!CDependencyObject::NotifyPropertyChanged+0xbd    7ff997379d86 Windows_UI_Xaml!CDependencyObject::SetEffectiveValue+0x1f6    7ff99737abe0 Windows_UI_Xaml!CDependencyObject::UpdateEffectiveValue+0xb0    7ff9972dab02 Windows_UI_Xaml!CDependencyObject::SetValue+0xa2    7ff9972da806 Windows_UI_Xaml!CUIElement::SetValue+0xb6    7ff9972d9d97 Windows_UI_Xaml!CFrameworkElement::SetValue+0xb7    7ff9972d9be7 Windows_UI_Xaml!CControl::SetValue+0x47    7ff9972d9161 Windows_UI_Xaml!CContentControl::SetValue+0x71    7ff9973da491 Windows_UI_Xaml!DirectUI::DependencyObject::SetValueCore+0x271    7ff99734df40 Windows_UI_Xaml!DirectUI::DependencyObject::UpdateEffectiveValue+0x80    7ff99734d695 Windows_UI_Xaml!DirectUI::DependencyObject::SetValueInternal+0xb5    7ff99734d159 Windows_UI_Xaml!DirectUI::DependencyObject::SetValue+0x49    7ff956e75869 Microsoft_UI_Xaml!winrt::impl::consume_Windows_UI_Xaml_IDependencyObject<NavigationView>::SetValue+0x5d    7ff956e735ff Microsoft_UI_Xaml!NavigationViewProperties::SelectedItem+0x6b    7ff956e915ea Microsoft_UI_Xaml!NavigationView::SetSelectedItemAndExpectItemInvokeWhenSelectionChangedIfNotInvokedFromAPI+0xc6    7ff956e8f322 Microsoft_UI_Xaml!NavigationView::OnSelectionChanged+0x242    7ff956e69093 Microsoft_UI_Xaml!winrt::impl::delegate<winrt::Windows::UI::Xaml::SizeChangedEventHandler>::type<<lambda_778e218533f9d63cc7aafcdd2f5bac52> >::Invoke+0x43    7ff99722ae7c Windows_UI_Xaml!DirectUI::CRoutedEventSourceBase<DirectUI::IUntypedEventSource,Windows::Foundation::ITypedEventHandler<Windows::UI::Xaml::UIElement * __ptr64,Windows::UI::Xaml::BringIntoViewRequestedEventArgs * __ptr64>,Windows::UI::Xaml::IUIElement,Windows::UI::Xaml::IBringIntoViewRequestedEventArgs>::Raise+0xe4    7ff9974d5e64 Windows_UI_Xaml!DirectUI::Selector::OnSelectionChanged+0x44    7ff997467407 Windows_UI_Xaml!DirectUI::Selector::InvokeSelectionChanged+0xab    7ff99746926a Windows_UI_Xaml!DirectUI::Selector::EndChange+0x2ee    7ff9974667ec Windows_UI_Xaml!DirectUI::Selector::SelectJustThisItemInternal+0xa0    7ff997c09eea Windows_UI_Xaml!DirectUI::Selector::MakeSingleSelection+0x6a    7ff997c82c49 Windows_UI_Xaml!DirectUI::ListViewBase::MakeSingleSelection+0x79    7ff997c82b77 Windows_UI_Xaml!DirectUI::ListViewBase::MakeSingleSelection+0xa3    7ff997c87d42 Windows_UI_Xaml!DirectUI::ListViewBase::OnSelectItemPrimary+0x16e    7ff997c8538c Windows_UI_Xaml!DirectUI::ListViewBase::OnItemPrimaryInteractionGesture+0x2dc    7ff997c2b498 Windows_UI_Xaml!DirectUI::ListViewBaseItem::DoTapInteraction+0x70    7ff997c2b3fc Windows_UI_Xaml!DirectUI::ListViewBaseItem::DoPendingTapInteractionForPointerId+0x60    7ff997c2ee49 Windows_UI_Xaml!DirectUI::ListViewBaseItem::OnPointerReleased+0x439    7ff956e7dea8 Microsoft_UI_Xaml!winrt::impl::produce<NavigationViewItemPresenter,winrt::Windows::UI::Xaml::Controls::IControlOverrides>::OnPointerReleased+0x88    7ff997adbdd3 Windows_UI_Xaml!DirectUI::ControlGenerated::OnPointerReleasedProtected+0x4b    7ff99763a73b Windows_UI_Xaml!DirectUI::Control::FireEvent+0x27395b    7ff9973c6c63 Windows_UI_Xaml!DirectUI::DXamlCore::FireEvent+0x103    7ff997406e17 Windows_UI_Xaml!CCoreServices::CLR_FireEvent+0xf7    7ff997406cfd Windows_UI_Xaml!CommonBrowserHost::CLR_FireEvent+0x1d    7ff997480a2a Windows_UI_Xaml!CControlBase::ScriptCallback+0x14a    7ff99741ab9f Windows_UI_Xaml!CXcpDispatcher::OnScriptCallback+0x1df    7ff99741a80c Windows_UI_Xaml!CXcpDispatcher::WindowProc+0x8c    7ff9a486ca66 user32!UserCallWinProcCheckWow+0x266    7ff9a486c78c user32!DispatchClientMessage+0x9c    7ff9a487fa83 user32!__fnDWORD+0x33    7ff9a69633c4 ntdll!KiUserCallbackDispatcherContinue+0x0    7ff9a2b31184 win32u!ZwUserMessageCall+0x14    7ff9a486c128 user32!SendMessageWorker+0x288    7ff9a486be38 user32!SendMessageW+0xf8    7ff99741a38c Windows_UI_Xaml!CXcpBrowserHost::SyncScriptCallbackRequest+0x13c    7ff9972e1777 Windows_UI_Xaml!CEventManager::Raise+0x547    7ff9972e1c5f Windows_UI_Xaml!CEventManager::RaiseRoutedEventBubbling+0x12f    7ff99770e1a7 Windows_UI_Xaml!CInputManager::RaiseDelayedPointerUpEvent+0x137    7ff99770ab77 Windows_UI_Xaml!CInputManager::ProcessGestureInput+0x21b    7ff99770dc29 Windows_UI_Xaml!CInputManager::ProcessTouchInteractionCallback+0xa9    7ff997846486 Windows_UI_Xaml!CCoreServices::ProcessTouchInteractionCallback+0x3a    7ff997a806cf Windows_UI_Xaml!TIEAdapter::InteractionEngineCallback+0x497    7ff997a808d2 Windows_UI_Xaml!TIEAdapter::StaticInteractionEngineCallback+0x12    7ff99e731223 ninput!COutputConverter::Process+0x433    7ff99e72e1e7 ninput!CInteractionContextImpl::OutputCallback+0xe7    7ff99e74b71f ninput!CInteractionGroupingFilter::_SendOutput+0x1f    7ff99e74b6ea ninput!CInteractionGroupingFilter::_OnInput+0x7e    7ff99e74ae86 ninput!COutputCoalescingFilter::Flush+0xbe    7ff99e74af5b ninput!COutputCoalescingFilter::_OnInput+0x43    7ff99e749944 ninput!CInteractionEngineImpl::DigitizerInput+0x254    7ff99e72eb4b ninput!CInteractionContextImpl::ProcessFrameHistory+0x637    7ff99e72ce30 ninput!ProcessPointerFramesInteractionContext+0x180    7ff997a7f95f Windows_UI_Xaml!ElementGestureTracker::ProcessPointerInformation+0x1f7    7ff997a7fbd4 Windows_UI_Xaml!ElementGestureTracker::ProcessPointerMessage+0x84    7ff99770db4b Windows_UI_Xaml!CInputManager::ProcessPointerMessagesWithInteractionEngine+0x233    7ff99770afaa Windows_UI_Xaml!CInputManager::ProcessInteractionPointerMessages+0x116    7ff99770d4bc Windows_UI_Xaml!CInputManager::ProcessPointerInput+0xdd8    7ff997657d98 Windows_UI_Xaml!CInputManager::ProcessInput+0x248e28    7ff99740ef4f Windows_UI_Xaml!CCoreServices::ProcessInput+0x43    7ff99740ee82 Windows_UI_Xaml!CXcpBrowserHost::HandleInputMessage+0x122    7ff9978c9e1e Windows_UI_Xaml!CJupiterControl::HandlePointerMessage+0xf6    7ff997652c8a Windows_UI_Xaml!CJupiterControl::HandleWindowMessage+0x2526c6    7ff99740017a Windows_UI_Xaml!CJupiterWindow::CoreWindowSubclassProc+0x18a    7ff9973fffb9 Windows_UI_Xaml!CJupiterWindow::StaticCoreWindowSubclassProc+0x49    7ff9a486ca66 user32!UserCallWinProcCheckWow+0x266    7ff9a486c582 user32!DispatchMessageWorker+0x1b2    7ff9984952f7 Windows_UI!Windows::UI::Core::CDispatcher::ProcessMessage+0x177    7ff99849502e Windows_UI!Windows::UI::Core::CDispatcher::WaitAndProcessMessagesInternal+0xae    7ff998494edb Windows_UI!Windows::UI::Core::CDispatcher::ProcessEvents+0x7b    7ff9975169a0 Windows_UI_Xaml!CJupiterWindow::RunCoreWindowMessageLoop+0x4c    7ff99751693f Windows_UI_Xaml!DirectUI::DXamlCore::RunMessageLoop+0x47    7ff9a0b64c2a twinapi_appcore!Windows::ApplicationModel::Core::CoreApplicationView::Run+0x3a    7ff9a0b37a66 twinapi_appcore!<lambda_02cef69f8ae13d771fa47a74be974b8f>::operator()+0x206    7ff9a474c315 SHCore!_WrapperThreadProc+0xf5    7ff9a67b7974 kernel32!BaseThreadInitThunk+0x14    7ff9a692a271 ntdll!RtlUserThreadStart+0x21    Stowed Exception #4 @ 0x000001a23d120e98   0x8000FFFF (FACILITY_NULL - Default): E_UNEXPECTED - Unexpected failure     Stack  : 0x1a248ffc560    7ff9a40e03f1 combase!RoOriginateError+0x51    7ff9715887c5 vccorlib140_app!Platform::Details::ReCreateException+0x51    7ff971589e12 vccorlib140_app!__abi_WinRTraiseCOMException+0x12  *** WARNING: Unable to verify checksum for Calculator.exe    7ff7712d1395 Calculator!__abi_WinRTraiseException+0xb5    7ff771224a3a Calculator!Windows::UI::Xaml::Controls::IMenuFlyoutItem::Text::set+0x1a    7ff7713af206 Calculator!CalculatorApp::Common::DateCalculation::DateCalculationEngine::DateCalculationEngine+0x86    7ff771398c61 Calculator!std::make_shared<CalculatorApp::Common::DateCalculation::DateCalculationEngine,Platform::String ^>+0x5d    7ff771207ac9 Calculator!CalculatorApp::ViewModel::DateCalculatorViewModel::DateCalculatorViewModel+0x1e1    7ff7711f83d1 Calculator!CalculatorApp::ViewModel::ApplicationViewModel::OnModeChanged+0x18d    7ff7711ffa34 Calculator!CalculatorApp::ViewModel::ApplicationViewModel::Mode::[CalculatorApp::ViewModel::__IApplicationViewModelPublicNonVirtuals::Mode]::set+0x34    7ff7712274a3 Calculator!CalculatorApp::MainPage::OnNavSelectionChanged+0x133    7ff7712436de Calculator!`Windows::Foundation::TypedEventHandler<Microsoft::UI::Xaml::Controls::NavigationView ^,Platform::Object ^>::TypedEventHandler<Microsoft::UI::Xaml::Controls::NavigationView ^,Platform::Object ^><CalculatorApp::MainPage,void (__cdecl CalculatorApp::MainPage::*)(Microsoft::UI::Xaml::Controls::NavigationView ^,Platform::Object ^)>'::`2'::__abi_PointerToMemberWeakRefCapture::Invoke+0x8e    7ff7712586d2 Calculator!?__abi_Windows_Foundation_?$TypedEventHandler@PE$AAVNavigationView@Controls@Xaml@UI@Microsoft@@PE$AAVNavigationViewSelectionChangedEventArgs@2345@___abi_IDelegate____abi_Invoke@?Q__abi_IDelegate@?$TypedEventHandler@PE$AAVNavigationView@Controls@Xaml@UI@Microsoft@@PE$AAVNavigationViewSelectionChangedEventArgs@2345@@Foundation@Windows@@234@UE$AAAJPE$AAVNavigationView@Controls@Xaml@UI@Microsoft@@PE$AAVNavigationViewSelectionChangedEventArgs@6789@@Z+0x12    7ff956e8f6c7 Microsoft_UI_Xaml!NavigationView::RaiseSelectionChangedEvent+0x18b    7ff956e8fde1 Microsoft_UI_Xaml!NavigationView::ChangeSelection+0x301    7ff956e91475 Microsoft_UI_Xaml!NavigationView::OnSelectedItemPropertyChanged+0x55    7ff956e93d7d Microsoft_UI_Xaml!NavigationView::OnPropertyChanged+0x26d    7ff956e72573 Microsoft_UI_Xaml!NavigationViewProperties::OnIsPaneOpenPropertyChanged+0x73    7ff956e54e1b Microsoft_UI_Xaml!winrt::impl::delegate<winrt::Windows::UI::Xaml::PropertyChangedCallback>::type<<lambda_7e7a26da47dff7b0d2ec2f8ae5761249> >::Invoke+0x3b    7ff997402247 Windows_UI_Xaml!DirectUI::DependencyObject::NotifyPropertyChanged+0x1b7    7ff99740201d Windows_UI_Xaml!CDependencyObject::NotifyPropertyChanged+0xbd    7ff997379d86 Windows_UI_Xaml!CDependencyObject::SetEffectiveValue+0x1f6    7ff99737abe0 Windows_UI_Xaml!CDependencyObject::UpdateEffectiveValue+0xb0    7ff9972dab02 Windows_UI_Xaml!CDependencyObject::SetValue+0xa2    7ff9972da806 Windows_UI_Xaml!CUIElement::SetValue+0xb6    7ff9972d9d97 Windows_UI_Xaml!CFrameworkElement::SetValue+0xb7    7ff9972d9be7 Windows_UI_Xaml!CControl::SetValue+0x47    7ff9972d9161 Windows_UI_Xaml!CContentControl::SetValue+0x71    7ff9973da491 Windows_UI_Xaml!DirectUI::DependencyObject::SetValueCore+0x271    7ff99734df40 Windows_UI_Xaml!DirectUI::DependencyObject::UpdateEffectiveValue+0x80    7ff99734d695 Windows_UI_Xaml!DirectUI::DependencyObject::SetValueInternal+0xb5    7ff99734d159 Windows_UI_Xaml!DirectUI::DependencyObject::SetValue+0x49    7ff956e75869 Microsoft_UI_Xaml!winrt::impl::consume_Windows_UI_Xaml_IDependencyObject<NavigationView>::SetValue+0x5d    7ff956e735ff Microsoft_UI_Xaml!NavigationViewProperties::SelectedItem+0x6b    7ff956e915ea Microsoft_UI_Xaml!NavigationView::SetSelectedItemAndExpectItemInvokeWhenSelectionChangedIfNotInvokedFromAPI+0xc6    7ff956e8f322 Microsoft_UI_Xaml!NavigationView::OnSelectionChanged+0x242    7ff956e69093 Microsoft_UI_Xaml!winrt::impl::delegate<winrt::Windows::UI::Xaml::SizeChangedEventHandler>::type<<lambda_778e218533f9d63cc7aafcdd2f5bac52> >::Invoke+0x43    7ff99722ae7c Windows_UI_Xaml!DirectUI::CRoutedEventSourceBase<DirectUI::IUntypedEventSource,Windows::Foundation::ITypedEventHandler<Windows::UI::Xaml::UIElement * __ptr64,Windows::UI::Xaml::BringIntoViewRequestedEventArgs * __ptr64>,Windows::UI::Xaml::IUIElement,Windows::UI::Xaml::IBringIntoViewRequestedEventArgs>::Raise+0xe4    7ff9974d5e64 Windows_UI_Xaml!DirectUI::Selector::OnSelectionChanged+0x44    7ff997467407 Windows_UI_Xaml!DirectUI::Selector::InvokeSelectionChanged+0xab    7ff99746926a Windows_UI_Xaml!DirectUI::Selector::EndChange+0x2ee    7ff9974667ec Windows_UI_Xaml!DirectUI::Selector::SelectJustThisItemInternal+0xa0    7ff997c09eea Windows_UI_Xaml!DirectUI::Selector::MakeSingleSelection+0x6a    7ff997c82c49 Windows_UI_Xaml!DirectUI::ListViewBase::MakeSingleSelection+0x79    7ff997c82b77 Windows_UI_Xaml!DirectUI::ListViewBase::MakeSingleSelection+0xa3    7ff997c87d42 Windows_UI_Xaml!DirectUI::ListViewBase::OnSelectItemPrimary+0x16e    7ff997c8538c Windows_UI_Xaml!DirectUI::ListViewBase::OnItemPrimaryInteractionGesture+0x2dc    7ff997c2b498 Windows_UI_Xaml!DirectUI::ListViewBaseItem::DoTapInteraction+0x70    7ff997c2b3fc Windows_UI_Xaml!DirectUI::ListViewBaseItem::DoPendingTapInteractionForPointerId+0x60    7ff997c2ee49 Windows_UI_Xaml!DirectUI::ListViewBaseItem::OnPointerReleased+0x439    7ff956e7dea8 Microsoft_UI_Xaml!winrt::impl::produce<NavigationViewItemPresenter,winrt::Windows::UI::Xaml::Controls::IControlOverrides>::OnPointerReleased+0x88    7ff997adbdd3 Windows_UI_Xaml!DirectUI::ControlGenerated::OnPointerReleasedProtected+0x4b    7ff99763a73b Windows_UI_Xaml!DirectUI::Control::FireEvent+0x27395b    7ff9973c6c63 Windows_UI_Xaml!DirectUI::DXamlCore::FireEvent+0x103    7ff997406e17 Windows_UI_Xaml!CCoreServices::CLR_FireEvent+0xf7    7ff997406cfd Windows_UI_Xaml!CommonBrowserHost::CLR_FireEvent+0x1d    7ff997480a2a Windows_UI_Xaml!CControlBase::ScriptCallback+0x14a    7ff99741ab9f Windows_UI_Xaml!CXcpDispatcher::OnScriptCallback+0x1df    7ff99741a80c Windows_UI_Xaml!CXcpDispatcher::WindowProc+0x8c    7ff9a486ca66 user32!UserCallWinProcCheckWow+0x266    7ff9a486c78c user32!DispatchClientMessage+0x9c    7ff9a487fa83 user32!__fnDWORD+0x33    7ff9a69633c4 ntdll!KiUserCallbackDispatcherContinue+0x0    7ff9a2b31184 win32u!ZwUserMessageCall+0x14    7ff9a486c128 user32!SendMessageWorker+0x288    7ff9a486be38 user32!SendMessageW+0xf8    7ff99741a38c Windows_UI_Xaml!CXcpBrowserHost::SyncScriptCallbackRequest+0x13c    7ff9972e1777 Windows_UI_Xaml!CEventManager::Raise+0x547    7ff9972e1c5f Windows_UI_Xaml!CEventManager::RaiseRoutedEventBubbling+0x12f    7ff99770e1a7 Windows_UI_Xaml!CInputManager::RaiseDelayedPointerUpEvent+0x137    7ff99770ab77 Windows_UI_Xaml!CInputManager::ProcessGestureInput+0x21b    7ff99770dc29 Windows_UI_Xaml!CInputManager::ProcessTouchInteractionCallback+0xa9    7ff997846486 Windows_UI_Xaml!CCoreServices::ProcessTouchInteractionCallback+0x3a    7ff997a806cf Windows_UI_Xaml!TIEAdapter::InteractionEngineCallback+0x497    7ff997a808d2 Windows_UI_Xaml!TIEAdapter::StaticInteractionEngineCallback+0x12    7ff99e731223 ninput!COutputConverter::Process+0x433    7ff99e72e1e7 ninput!CInteractionContextImpl::OutputCallback+0xe7    7ff99e74b71f ninput!CInteractionGroupingFilter::_SendOutput+0x1f    7ff99e74b6ea ninput!CInteractionGroupingFilter::_OnInput+0x7e    7ff99e74ae86 ninput!COutputCoalescingFilter::Flush+0xbe    7ff99e74af5b ninput!COutputCoalescingFilter::_OnInput+0x43    7ff99e749944 ninput!CInteractionEngineImpl::DigitizerInput+0x254    7ff99e72eb4b ninput!CInteractionContextImpl::ProcessFrameHistory+0x637    7ff99e72ce30 ninput!ProcessPointerFramesInteractionContext+0x180    7ff997a7f95f Windows_UI_Xaml!ElementGestureTracker::ProcessPointerInformation+0x1f7    7ff997a7fbd4 Windows_UI_Xaml!ElementGestureTracker::ProcessPointerMessage+0x84    7ff99770db4b Windows_UI_Xaml!CInputManager::ProcessPointerMessagesWithInteractionEngine+0x233    7ff99770afaa Windows_UI_Xaml!CInputManager::ProcessInteractionPointerMessages+0x116    7ff99770d4bc Windows_UI_Xaml!CInputManager::ProcessPointerInput+0xdd8    7ff997657d98 Windows_UI_Xaml!CInputManager::ProcessInput+0x248e28    7ff99740ef4f Windows_UI_Xaml!CCoreServices::ProcessInput+0x43    7ff99740ee82 Windows_UI_Xaml!CXcpBrowserHost::HandleInputMessage+0x122    7ff9978c9e1e Windows_UI_Xaml!CJupiterControl::HandlePointerMessage+0xf6    7ff997652c8a Windows_UI_Xaml!CJupiterControl::HandleWindowMessage+0x2526c6    7ff99740017a Windows_UI_Xaml!CJupiterWindow::CoreWindowSubclassProc+0x18a    7ff9973fffb9 Windows_UI_Xaml!CJupiterWindow::StaticCoreWindowSubclassProc+0x49    7ff9a486ca66 user32!UserCallWinProcCheckWow+0x266    7ff9a486c582 user32!DispatchMessageWorker+0x1b2    7ff9984952f7 Windows_UI!Windows::UI::Core::CDispatcher::ProcessMessage+0x177    7ff99849502e Windows_UI!Windows::UI::Core::CDispatcher::WaitAndProcessMessagesInternal+0xae    7ff998494edb Windows_UI!Windows::UI::Core::CDispatcher::ProcessEvents+0x7b    7ff9975169a0 Windows_UI_Xaml!CJupiterWindow::RunCoreWindowMessageLoop+0x4c    7ff99751693f Windows_UI_Xaml!DirectUI::DXamlCore::RunMessageLoop+0x47    7ff9a0b64c2a twinapi_appcore!Windows::ApplicationModel::Core::CoreApplicationView::Run+0x3a    7ff9a0b37a66 twinapi_appcore!<lambda_02cef69f8ae13d771fa47a74be974b8f>::operator()+0x206    7ff9a474c315 SHCore!_WrapperThreadProc+0xf5    7ff9a67b7974 kernel32!BaseThreadInitThunk+0x14    7ff9a692a271 ntdll!RtlUserThreadStart+0x21    Stowed Exception #5 @ 0x000001a24928df80   0x8000FFFF (FACILITY_NULL - Default): E_UNEXPECTED - Unexpected failure     Stack  : 0x1a24928c298    7ff997653cb1 Windows_UI_Xaml!DirectUI::DependencyObject::NotifyPropertyChanged+0x251c21    7ff99740201d Windows_UI_Xaml!CDependencyObject::NotifyPropertyChanged+0xbd    7ff997379d86 Windows_UI_Xaml!CDependencyObject::SetEffectiveValue+0x1f6    7ff99737abe0 Windows_UI_Xaml!CDependencyObject::UpdateEffectiveValue+0xb0    7ff9972dab02 Windows_UI_Xaml!CDependencyObject::SetValue+0xa2    7ff9972da806 Windows_UI_Xaml!CUIElement::SetValue+0xb6    7ff9972d9d97 Windows_UI_Xaml!CFrameworkElement::SetValue+0xb7    7ff9972d9be7 Windows_UI_Xaml!CControl::SetValue+0x47    7ff9972d9161 Windows_UI_Xaml!CContentControl::SetValue+0x71    7ff9973da491 Windows_UI_Xaml!DirectUI::DependencyObject::SetValueCore+0x271    7ff99734df40 Windows_UI_Xaml!DirectUI::DependencyObject::UpdateEffectiveValue+0x80    7ff99734d695 Windows_UI_Xaml!DirectUI::DependencyObject::SetValueInternal+0xb5    7ff99734d159 Windows_UI_Xaml!DirectUI::DependencyObject::SetValue+0x49    7ff956e75869 Microsoft_UI_Xaml!winrt::impl::consume_Windows_UI_Xaml_IDependencyObject<NavigationView>::SetValue+0x5d    7ff956e735ff Microsoft_UI_Xaml!NavigationViewProperties::SelectedItem+0x6b    7ff956e915ea Microsoft_UI_Xaml!NavigationView::SetSelectedItemAndExpectItemInvokeWhenSelectionChangedIfNotInvokedFromAPI+0xc6    7ff956e8f322 Microsoft_UI_Xaml!NavigationView::OnSelectionChanged+0x242    7ff956e69093 Microsoft_UI_Xaml!winrt::impl::delegate<winrt::Windows::UI::Xaml::SizeChangedEventHandler>::type<<lambda_778e218533f9d63cc7aafcdd2f5bac52> >::Invoke+0x43    7ff99722ae7c Windows_UI_Xaml!DirectUI::CRoutedEventSourceBase<DirectUI::IUntypedEventSource,Windows::Foundation::ITypedEventHandler<Windows::UI::Xaml::UIElement * __ptr64,Windows::UI::Xaml::BringIntoViewRequestedEventArgs * __ptr64>,Windows::UI::Xaml::IUIElement,Windows::UI::Xaml::IBringIntoViewRequestedEventArgs>::Raise+0xe4    7ff9974d5e64 Windows_UI_Xaml!DirectUI::Selector::OnSelectionChanged+0x44    7ff997467407 Windows_UI_Xaml!DirectUI::Selector::InvokeSelectionChanged+0xab    7ff99746926a Windows_UI_Xaml!DirectUI::Selector::EndChange+0x2ee    7ff9974667ec Windows_UI_Xaml!DirectUI::Selector::SelectJustThisItemInternal+0xa0    7ff997c09eea Windows_UI_Xaml!DirectUI::Selector::MakeSingleSelection+0x6a    7ff997c82c49 Windows_UI_Xaml!DirectUI::ListViewBase::MakeSingleSelection+0x79    7ff997c82b77 Windows_UI_Xaml!DirectUI::ListViewBase::MakeSingleSelection+0xa3    7ff997c87d42 Windows_UI_Xaml!DirectUI::ListViewBase::OnSelectItemPrimary+0x16e    7ff997c8538c Windows_UI_Xaml!DirectUI::ListViewBase::OnItemPrimaryInteractionGesture+0x2dc    7ff997c2b498 Windows_UI_Xaml!DirectUI::ListViewBaseItem::DoTapInteraction+0x70    7ff997c2b3fc Windows_UI_Xaml!DirectUI::ListViewBaseItem::DoPendingTapInteractionForPointerId+0x60    7ff997c2ee49 Windows_UI_Xaml!DirectUI::ListViewBaseItem::OnPointerReleased+0x439    7ff956e7dea8 Microsoft_UI_Xaml!winrt::impl::produce<NavigationViewItemPresenter,winrt::Windows::UI::Xaml::Controls::IControlOverrides>::OnPointerReleased+0x88    7ff997adbdd3 Windows_UI_Xaml!DirectUI::ControlGenerated::OnPointerReleasedProtected+0x4b    7ff99763a73b Windows_UI_Xaml!DirectUI::Control::FireEvent+0x27395b    7ff9973c6c63 Windows_UI_Xaml!DirectUI::DXamlCore::FireEvent+0x103    7ff997406e17 Windows_UI_Xaml!CCoreServices::CLR_FireEvent+0xf7    7ff997406cfd Windows_UI_Xaml!CommonBrowserHost::CLR_FireEvent+0x1d    7ff997480a2a Windows_UI_Xaml!CControlBase::ScriptCallback+0x14a    7ff99741ab9f Windows_UI_Xaml!CXcpDispatcher::OnScriptCallback+0x1df    7ff99741a80c Windows_UI_Xaml!CXcpDispatcher::WindowProc+0x8c    7ff9a486ca66 user32!UserCallWinProcCheckWow+0x266    7ff9a486c78c user32!DispatchClientMessage+0x9c    7ff9a487fa83 user32!__fnDWORD+0x33    7ff9a69633c4 ntdll!KiUserCallbackDispatcherContinue+0x0    7ff9a2b31184 win32u!ZwUserMessageCall+0x14    7ff9a486c128 user32!SendMessageWorker+0x288    7ff9a486be38 user32!SendMessageW+0xf8    7ff99741a38c Windows_UI_Xaml!CXcpBrowserHost::SyncScriptCallbackRequest+0x13c    7ff9972e1777 Windows_UI_Xaml!CEventManager::Raise+0x547    7ff9972e1c5f Windows_UI_Xaml!CEventManager::RaiseRoutedEventBubbling+0x12f    7ff99770e1a7 Windows_UI_Xaml!CInputManager::RaiseDelayedPointerUpEvent+0x137    7ff99770ab77 Windows_UI_Xaml!CInputManager::ProcessGestureInput+0x21b    7ff99770dc29 Windows_UI_Xaml!CInputManager::ProcessTouchInteractionCallback+0xa9    7ff997846486 Windows_UI_Xaml!CCoreServices::ProcessTouchInteractionCallback+0x3a    7ff997a806cf Windows_UI_Xaml!TIEAdapter::InteractionEngineCallback+0x497    7ff997a808d2 Windows_UI_Xaml!TIEAdapter::StaticInteractionEngineCallback+0x12    7ff99e731223 ninput!COutputConverter::Process+0x433    7ff99e72e1e7 ninput!CInteractionContextImpl::OutputCallback+0xe7    7ff99e74b71f ninput!CInteractionGroupingFilter::_SendOutput+0x1f    7ff99e74b6ea ninput!CInteractionGroupingFilter::_OnInput+0x7e    7ff99e74ae86 ninput!COutputCoalescingFilter::Flush+0xbe    7ff99e74af5b ninput!COutputCoalescingFilter::_OnInput+0x43    7ff99e749944 ninput!CInteractionEngineImpl::DigitizerInput+0x254    7ff99e72eb4b ninput!CInteractionContextImpl::ProcessFrameHistory+0x637    7ff99e72ce30 ninput!ProcessPointerFramesInteractionContext+0x180    7ff997a7f95f Windows_UI_Xaml!ElementGestureTracker::ProcessPointerInformation+0x1f7    7ff997a7fbd4 Windows_UI_Xaml!ElementGestureTracker::ProcessPointerMessage+0x84    7ff99770db4b Windows_UI_Xaml!CInputManager::ProcessPointerMessagesWithInteractionEngine+0x233    7ff99770afaa Windows_UI_Xaml!CInputManager::ProcessInteractionPointerMessages+0x116    7ff99770d4bc Windows_UI_Xaml!CInputManager::ProcessPointerInput+0xdd8    7ff997657d98 Windows_UI_Xaml!CInputManager::ProcessInput+0x248e28    7ff99740ef4f Windows_UI_Xaml!CCoreServices::ProcessInput+0x43    7ff99740ee82 Windows_UI_Xaml!CXcpBrowserHost::HandleInputMessage+0x122    7ff9978c9e1e Windows_UI_Xaml!CJupiterControl::HandlePointerMessage+0xf6    7ff997652c8a Windows_UI_Xaml!CJupiterControl::HandleWindowMessage+0x2526c6    7ff99740017a Windows_UI_Xaml!CJupiterWindow::CoreWindowSubclassProc+0x18a    7ff9973fffb9 Windows_UI_Xaml!CJupiterWindow::StaticCoreWindowSubclassProc+0x49    7ff9a486ca66 user32!UserCallWinProcCheckWow+0x266    7ff9a486c582 user32!DispatchMessageWorker+0x1b2    7ff9984952f7 Windows_UI!Windows::UI::Core::CDispatcher::ProcessMessage+0x177    7ff99849502e Windows_UI!Windows::UI::Core::CDispatcher::WaitAndProcessMessagesInternal+0xae    7ff998494edb Windows_UI!Windows::UI::Core::CDispatcher::ProcessEvents+0x7b    7ff9975169a0 Windows_UI_Xaml!CJupiterWindow::RunCoreWindowMessageLoop+0x4c    7ff99751693f Windows_UI_Xaml!DirectUI::DXamlCore::RunMessageLoop+0x47    7ff9a0b64c2a twinapi_appcore!Windows::ApplicationModel::Core::CoreApplicationView::Run+0x3a    7ff9a0b37a66 twinapi_appcore!<lambda_02cef69f8ae13d771fa47a74be974b8f>::operator()+0x206    7ff9a474c315 SHCore!_WrapperThreadProc+0xf5    7ff9a67b7974 kernel32!BaseThreadInitThunk+0x14    7ff9a692a271 ntdll!RtlUserThreadStart+0x21  ```	danilotg	null	null	null	null	null	null	
2019-06-03 06:36:48.0	2019-07-26 06:02:38.0	2019-07-26 06:02:38.0	closed	[fixing approved issue]	1	531	Modifying the title of the window to "Calculator [Dev]"	https://api.github.com/repos/microsoft/calculator/issues/531	https://github.com/microsoft/calculator/pull/531	## Fixes #439 .      ### Description of the changes:  - Modified the title of the window to "Calculator [Dev]".    ### Screenshot of the Changes:  ![Screenshot](https://user-images.githubusercontent.com/44574572/58780589-03e0ef00-85f7-11e9-8f7c-6f51079baf68.jpg)      ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Manual.      	tanuja3	null	null	null	null	null	null	
2019-06-03 17:09:58.0	2019-06-03 20:58:55.0	2019-06-03 20:58:55.0	closed	[tooling]	0	532	Update internal package version	https://api.github.com/repos/microsoft/calculator/issues/532	https://github.com/microsoft/calculator/pull/532	## Fixes #77       ### Description of the changes:  As part of #77 we need to update the internal package version so that the right one gets pulled in.  	joseartrivera	null	null	null	null	null	null	
2019-06-03 17:55:15.0	null	2021-10-19 05:02:21.0	open	[Pri: 3, tooling, approved]	1	533	Enable GitHub Source Linking with the Symbol Server for ADO CI builds	https://api.github.com/repos/microsoft/calculator/issues/533	https://github.com/microsoft/calculator/issues/533	To enable easier post-mortem debugging from cabs, we should have the GitHub source associated with our pdb's on the symbol server.    For more information, refer to the [Azure DevOps documentation](https://docs.microsoft.com/en-us/azure/devops/artifacts/symbols/setting-up-github-sourcelinking?view=azure-devops) for source linking.	HowardWolosky	null	null	null	null	null	null	
2019-06-03 19:09:31.0	2019-06-03 20:58:38.0	2019-06-03 20:58:38.0	closed	[]	0	534	Wrap json parsing in try/catch	https://api.github.com/repos/microsoft/calculator/issues/534	https://github.com/microsoft/calculator/pull/534	## Fixes #77       ### Description of the changes:  There is a bug on the service side of the currency converter endpoints that returns an unnecessary null value. Work around this on the client side until a service side fix is found.    ### How changes were validated:  Manual testing    	joseartrivera	null	null	null	null	null	null	
2019-06-03 19:15:17.0	2019-06-03 21:15:02.0	2019-06-03 21:15:31.0	closed	[]	2	535	Migrate currency converter endpoints into the 1904 version	https://api.github.com/repos/microsoft/calculator/issues/535	https://github.com/microsoft/calculator/pull/535	## Fixes #77      ### Description of the changes:  We are migrating the REST endpoint that Currency Converter uses.  The REST endpoint is not licensed for your use.  To continue to enable community participation in the development of the feature, developer builds will use an alternate REST endpoint that serves mock data (clearly identifiable as it references planets instead of countries).    ### How changes were validated:  Manual testing    	joseartrivera	null	null	null	null	null	null	
2019-06-03 21:14:57.0	2019-06-03 22:21:59.0	2019-06-03 22:21:59.0	closed	[]	0	536	Migrate currency converter endpoints into the 1904 version	https://api.github.com/repos/microsoft/calculator/issues/536	https://github.com/microsoft/calculator/pull/536	## Fixes #77      ### Description of the changes:  We are migrating the REST endpoint that Currency Converter uses.  The REST endpoint is not licensed for your use.  To continue to enable community participation in the development of the feature, developer builds will use an alternate REST endpoint that serves mock data (clearly identifiable as it references planets instead of countries).    ### How changes were validated:  Manual testing    	joseartrivera	null	null	null	null	null	null	
2019-06-03 22:26:45.0	2019-06-04 21:12:31.0	2019-06-04 21:12:31.0	closed	[]	0	537	Updating version of release builds to 1906	https://api.github.com/repos/microsoft/calculator/issues/537	https://github.com/microsoft/calculator/pull/537	  	mcooley	null	null	null	null	null	null	
2019-06-04 07:01:43.0	2019-07-16 18:36:37.0	2020-12-03 00:01:48.0	closed	[Enhancement, pitch declined]	28	538	Option to save the current size of the calculator as "user preferred" size and have a way for the user to instantly resize the calculator to their "user preferred" size.	https://api.github.com/repos/microsoft/calculator/issues/538	https://github.com/microsoft/calculator/issues/538	**Problem Statement**  If a user intentionally or unintentionally resizes the calculator and then closes it, there is no way for them to automatically resize the calculator to the size their were using before.    **Evidence or User Insights**  "I accidentally resized my calculator. Now I can't undo this back to the optimal size I like it to be."    **Proposal**  Please add an option for the user to be able to save their preferred calculator size. The size could be limited to several options e.g. Half the screen, a quarter of the screen or just save the current size as default. In order for the user to select their preferred default size, they could click on max button or hit a shortcut key.    **Goals**  The goal is for the user to be able to use the calculator in the same fashion it uses it on their desktop: The calculator is always ready to be used, lying around on the desktop, never taking the entire working area and never surprising the user by starting in a size that is not comfortable to use.    **Requested Assignment**  I'm just suggesting this idea.  I don't want to implement it.            	drizo72	null	null	null	null	null	null	
2019-06-04 17:08:00.0	2019-06-04 17:26:38.0	2020-12-03 00:01:47.0	closed	[by design]	3	539	Wrong calculation in Programmer mode: 3000 * 80 = -22144	https://api.github.com/repos/microsoft/calculator/issues/539	https://github.com/microsoft/calculator/issues/539	In Programmer mode the result for 3000 * 80 is -22144, which is wrong, while in Standard and Scientific mode the result is correct (240000).    **Steps To Reproduce**  1. Switch to Programmer mode  2. Type 3000 * 80  (I did not test it on other machines)    **Screenshots**  ![calc_bug_2](https://user-images.githubusercontent.com/35116136/58898846-f1f56e00-8714-11e9-9dbc-f14e14df3690.gif)    **Device and Application Information**   - OS Build: 10.0.17134.0   - Architecture: X64   - Application Version: 10.1904.31.0   - Region: ru-RU   - Dev Version Installed: False    **Requested Assignment**  I'm just reporting this problem.  I don't want to fix it.  	Edgar-P-yan	null	null	null	null	null	null	
2019-06-05 20:22:53.0	2019-06-06 21:08:32.0	2021-01-12 18:05:18.0	closed	[]	2	540	Add CMake project, GCC support	https://api.github.com/repos/microsoft/calculator/issues/540	https://github.com/microsoft/calculator/pull/540	This is extract from #211 that enables compilation with GCC. With #211  now in the state of bitrot, I would rather try approaching it in smaller  steps that can be hopefully merged quicker, even if it does not provide  full support for all the features #211 provided.    This will _compile_ correctly with my (@janisozaur) GCC, but clang is  more picky about flexible array memebers and refuses to compile it yet.  I will extract remaining parts of #211 in future PRs.    I marked @fwcd as author, as he did most of the work in #211.	janisozaur	null	null	null	null	null	null	
2019-06-05 21:01:46.0	2021-09-01 06:02:24.0	2021-10-01 18:00:44.0	closed	[Bug, Area: User Experience, not repro, Pri: 2]	5	541	Date picker on date calculator stretches too far down	https://api.github.com/repos/microsoft/calculator/issues/541	https://github.com/microsoft/calculator/issues/541	**Describe the bug**  In the date calculator, there are two date picker buttons. Clicking any of them spawns the date picker, but it extends too far down. One can see the rectangle where it should be in, but there are days even below that rectangle. However, no dates can be selected below the rectangle.    **Steps To Reproduce**  1. Open the date calculator.  2. Click a date picker.    **Expected behavior**  The date picker should remain within its designated rectangle.    **Screenshots**  ![image](https://user-images.githubusercontent.com/11506007/58990146-947d2200-87e5-11e9-891b-d1d9f982ddfb.png)      **Device and Application Information**   - OS Build: 10.0.18362.145   - Architecture: x64   - Application Version: 10.1904.31.0   - Region: de-DE   - Dev Version Installed: No    **Requested Assignment**  I'm just reporting this problem.  I don't want to fix it.  	adrianghc	null	null	null	null	null	null	
2019-06-05 22:55:37.0	2019-06-13 00:37:20.0	2019-06-13 00:37:20.0	closed	[Bug, fixing approved issue]	0	542	Improving accessibility in scan mode	https://api.github.com/repos/microsoft/calculator/issues/542	https://github.com/microsoft/calculator/pull/542	## Fixes #483.    ### Description of the changes:  - Sets the AccessibilityView property to Raw and Control for hidden and shown units respectively. These updates are performed in the ArrangeOverride function of the HorizontalNoOverflowStackPanel class.    ### How changes were validated:  - Manual/ad-hoc testing based on the steps outlined in #483 was performed and the indicated issue involving Narrator no longer appears.  	greedyAI	null	null	null	null	null	null	
2019-06-06 11:13:48.0	null	2021-07-23 10:53:50.0	open	[Pri: 2, tooling, approved]	4	543	Provide appx releases on releases tag	https://api.github.com/repos/microsoft/calculator/issues/543	https://github.com/microsoft/calculator/issues/543	<!--  See https://github.com/Microsoft/calculator/blob/master/docs/NewFeatureProcess.md for suggestions on how to write a good feature pitch. Just want to submit an idea quickly? Try Feedback Hub instead: https://insider.windows.com/en-us/fb/?contextid=130  -->    **Problem Statement**  <!--  What problem are we trying to solve? Who’s the target audience? Is there a customer need or pain point we need to remedy? Is there a business goal or metric we are trying to improve? Do we have a hypothesis we want to prove or disprove?  -->    This would let people update to a newer version or get an older version to see if there was a regression. Target audience would be, well, anyone using Calculator.    **Evidence or User Insights**  <!--  Why should we do this? Potential sources of data: Feedback Hub, other GitHub issues, other anecdotes from listening to customers in person or online, request from another team, telemetry data, user research, market or competitive research  -->    For reporting bug fixes and for fixing regressions.     **Proposal**  <!--  How will the solution/feature help us solve the problem? How will it meet the target audience’s needs? If there are business goals or metrics, how does this improve them?  -->    By adding appx downloads, people can test for bugs, create suggestions without having to check commits too far. By adding appx downloads, people can do regression tests.    **Goals**  <!--  What you want to accomplish with this feature. Typical examples include  "User Can *perform some task*"  -->    User can update to latest Microsoft release (includes currency conversion from Bing)  User can update to latest non-Microsoft release  User can install older releases    **Non-Goals**  <!--  Things we are explicitly not doing or supporting or that are out of scope, including reasons why.  -->    **Low-Fidelity Concept**  <!--  Show as much of the experience as needed to explain the idea. This can be as simple as a napkin drawing but can also be a code prototype, or a design comp. Keep it simple at this stage, as it can be refined later during the pre-production stage.  -->    **Requested Assignment**  <!--  Some people just want to suggest a feature and let someone else implement it.  Other people want to not only suggest a feature, but implement it as well.  Both scenarios are completely ok. We just want to know which one it is.  We are likely to prioritize the review of feature requests if they already have someone who can implement them.  Please indicate which bucket you fall into by keeping one and removing the other.  -->  I'm just suggesting this idea.  I don't want to implement it.    > Note: This comment was updated based on conversation below.  	Poopooracoocoo	null	null	null	null	null	null	
2019-06-06 22:17:14.0	2020-03-13 16:21:29.0	2021-10-16 21:55:10.0	closed	[codebase quality]	25	544	Port number's mantissa to std::vector	https://api.github.com/repos/microsoft/calculator/issues/544	https://github.com/microsoft/calculator/pull/544	These are the changes extracted from #211 that port number's mantissa  from flexible member arrays, a non-standard C++ extension, to  std::vector, which enables compilation and linkage with clang.    @fwcd is the original author of these changes, I (@janisozaur) merely  rebased them on top of current master.    The rebase was luckily fairly straight-forward, with the only real  conflict coming from 7a7ceb58882828096cac87494f5a1ffb5359e212  (https://github.com/microsoft/calculator/pull/412), but was trivial to  fix.	janisozaur	null	null	null	null	null	null	
2019-06-09 21:30:05.0	2019-06-10 21:36:05.0	2019-06-11 20:56:42.0	closed	[codebase quality]	2	545	Drop __inline from conflicting declarations	https://api.github.com/repos/microsoft/calculator/issues/545	https://github.com/microsoft/calculator/pull/545	`mulnum` et al. are declared `extern` in `ratpak.h`, which conflicts  with the `__inline` used with them. Additionally, most similar functions  don't have such keyword applied to them.    See https://github.com/microsoft/calculator/blob/fe30c7cabc1f30c239b5a22ff6d0f7fa0fba5cd1/src/CalcManager/Ratpack/ratpak.h#L463-L464	janisozaur	null	null	null	null	null	null	
2019-06-10 23:50:43.0	2019-06-10 23:51:03.0	2019-06-10 23:55:09.0	closed	[]	1	546	Comment reformat	https://api.github.com/repos/microsoft/calculator/issues/546	https://github.com/microsoft/calculator/pull/546	## Fixes #.  N/A    ### Description of the changes:  - Making comments more readable  - Adding comments to functions for readability.  -    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Not needed.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Not needed.  -  -    	Nathan127	null	null	null	null	null	null	
2019-06-13 00:25:29.0	2019-06-25 20:40:57.0	2019-11-06 23:26:44.0	closed	[Enhancement, graphing calculator]	6	547	Create EquationTextBox control	https://api.github.com/repos/microsoft/calculator/issues/547	https://github.com/microsoft/calculator/pull/547	### Description of the changes:  As part of #338, this PR creates the EquationBoxControl which contains some of the styling that will be used in the EquationArea. The control is still a little rough but I wanted to commit what I have so far so others can start building on top of it.       ### How changes were validated:  Manual testing, still a few bugs/kinks to work out which include:  - Existing bug that causes an equation to have a 0 inside of it  - Flickering of icons when entering analysis mode  - Still needs analysis mode visual states  - Still needs actual color picker, using stock color picker for now  - Need to figure out navigation for hover buttons    	joseartrivera	null	null	null	null	null	null	
2019-06-13 00:55:56.0	2019-06-24 23:38:46.0	2019-06-24 23:44:48.0	closed	[build]	4	548	Update to v142 build tools for Visual Studio 2019	https://api.github.com/repos/microsoft/calculator/issues/548	https://github.com/microsoft/calculator/pull/548	Fixes #463     - Update to build tools v142  - Update official build pipelines to use VS2019  - Update instructions to suggest updating to VS2019	mcooley	null	null	null	null	null	null	
2019-06-14 20:47:22.0	2019-06-18 00:15:36.0	2021-01-12 18:04:46.0	closed	[]	0	549	Update comment in scicomm.cpp	https://api.github.com/repos/microsoft/calculator/issues/549	https://github.com/microsoft/calculator/pull/549	While reading this part of code I had hard time understanding the  comment, especially the misused `serious`. I tried rewording it  slightly.	janisozaur	null	null	null	null	null	null	
2019-06-14 22:12:57.0	2019-06-18 00:10:16.0	2021-01-12 18:04:43.0	closed	[]	0	550	Fix type of m_openParenCount	https://api.github.com/repos/microsoft/calculator/issues/550	https://github.com/microsoft/calculator/pull/550	This is always used as unsigned and compared against unsigneds, e.g.  https://github.com/microsoft/calculator/blob/1eb717f336bae8b35281bbb27571748d458d862e/src/CalcManager/CEngine/scicomm.cpp#L544  much like `m_precedenceOpCount` few lines lower.	janisozaur	null	null	null	null	null	null	
2019-06-14 22:16:44.0	2019-06-18 20:02:40.0	2021-01-12 18:04:37.0	closed	[codebase quality]	0	551	Add missing override/final to CalculatorManagerDisplayTester	https://api.github.com/repos/microsoft/calculator/issues/551	https://github.com/microsoft/calculator/pull/551		janisozaur	null	null	null	null	null	null	
2019-06-16 17:18:18.0	2019-06-17 23:05:32.0	2020-12-03 00:01:46.0	closed	[help wanted, Area: User Experience, fixed]	3	552	Date difference calculation wrong in certain cases	https://api.github.com/repos/microsoft/calculator/issues/552	https://github.com/microsoft/calculator/issues/552	<!--  Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.  -->    **Describe the bug**  When calculating the difference between dates near the ends of months the results are sometimes wrong. I.E. 31st July - 30th December 2019 results in "5 moths; 613566756 weeks; 3 days".    **Steps To Reproduce**  1. Open Calculator   2. Switch to date calculation mode  3. Go to the difference between dates - mode  4. Enter start-date 31st of July 2019  4. Enter end-date 30th of December 2019 (might be 31th of December to cause the bug in a different time-zone)    **Expected behavior**  Display a difference that is closer to reality. What the "correct" difference is, is sort of up to debate but 613566756 weeks is definitely not it. Fixing this bug results in "4 Months; 4 Weeks; 2 Days" which is kind of silly but technically correct according to the calculation method of "31st July + 4Months = November 30th" that Windows::Globalization::Calendar appears to use.      **Screenshots**  <!-- If applicable, add screenshots to help explain your problem. -->  ![image](https://user-images.githubusercontent.com/465677/59567223-26e5b700-906b-11e9-9e54-620e7aacce77.png)      **Device and Application Information**   - OS Build: 10.0.18362.0   - Architecture: X64   - Application Version: 10.1904.42.0   - Region: de-DE   - Dev Version Installed: True        **Additional context**  Originally reported by /u/RLWLB2985 on /r/Windows10    **Requested Assignment**  If possible, I would like to fix this.  I have the minimal possible solution already implemented.  	Bigpet	null	null	null	null	null	null	
2019-06-16 17:40:47.0	2019-06-17 23:05:32.0	2019-06-19 09:38:24.0	closed	[Bug]	1	553	Handle date difference for ends of months	https://api.github.com/repos/microsoft/calculator/issues/553	https://github.com/microsoft/calculator/pull/553	## Fixes #552      ### Description of the changes:  The incrementally calling `Window::Globalization::Calendar::AddMonths`  resulted in a negative value for `GetDifferenceInDays` which was then  assigned to an unsigned variable `daysDiff`.    One example of the issue when running the calculator in UTC+2 was the  difference between July 31st and December 30th.    The initial guess was 4 months which then landed on November 30th.  This date was stored and then in the loop incremeted by one month.  This then landed precisely on the end date December 30th.  After the loop the final value is then used July 31st + 5 months  which results in the 31st of December.  The resulting difference of -1 days is then assigned to the unsigned  value `daysDiff`.    This commit makes the minimal changes to remedy this bug.  It makes sure to only ever call `AddMonths` with the same starting date  instead of incrementally to different dates.    This commit makes the minimal changes to remedy this bug.  It makes sure to only ever call `AddMonths` with the same starting date  instead of incrementally to different dates.    ### How changes were validated:  - manually tested dates near the end of month where this incremental calculation would be triggered  	Bigpet	null	null	null	null	null	null	
2019-06-17 06:43:43.0	2019-07-01 01:22:30.0	2020-12-03 00:01:45.0	closed	[help wanted, codebase quality, approved]	2	554	Prevent Date Difference to display faulty results	https://api.github.com/repos/microsoft/calculator/issues/554	https://github.com/microsoft/calculator/issues/554	**Describe the bug**    When `DateCalculationEngine::GetDateDifference` isn't able to correctly calculate the number of years, months, weeks, days between two dates, the function currently returns an incorrect result, as seen with #552 (which focuses on a specific calculation error).    In order to prevent any further bugs in the future, we must add a way to indicate that the function weren't able to calculate correctly the difference and modify the ViewModel to display instead the number of days (only) between the two dates.    Note: This proposal doesn't try to fix #552 (#553 does it already), but prevent all future similar bugs.    **Steps To Reproduce**  - Open Calculator  - Switch to date calculation mode  - Go to the difference between dates - mode  - Enter start-date 31st of July 2019  - Enter end-date 30th of December 2019 (might be 31th of December to cause the bug in a different time-zone)    **Expected behavior**  <!-- A clear and concise description of what you expected to happen. -->    **Screenshots**  ![image](https://user-images.githubusercontent.com/1226538/59583374-f3695380-908f-11e9-969a-ff6db35e9708.png)  Left: faulty result displayed  Right: display the difference in days when we aren't able to calculate the difference in year/month/week/day    **Device and Application Information**   - OS Build: 10.0.18362.0   - Architecture: X64   - Application Version: 10.1904.42.0   - Region: en-US   - Dev Version Installed: True    **Requested Assignment**  If possible, I would like to fix this.  	rudyhuyn	null	null	null	null	null	null	
2019-06-17 18:44:02.0	2019-07-01 01:22:30.0	2019-07-01 01:22:30.0	closed	[fixing approved issue, codebase quality]	0	555	Date difference: display the difference in days (only) when we aren't able to calculate the difference in days/weeks/months..	https://api.github.com/repos/microsoft/calculator/issues/555	https://github.com/microsoft/calculator/pull/555	## Fixes #554     Modify how the Calculator behaves when `DateCalculationEngine::GetDateDifference` isn't able to calculate correctly the number of years, months, weeks, days between two dates.    Instead of displaying an incorrect result, the UI will now display the difference in days (only).     ### Description of the changes:  - Add new constant `DateDifferenceUnknown`  - rename `TryGetDateDifference` to `TryGetDateDifference` and modify the prototype to return a boolean.  - when we aren't able to calculate correctly the result, return false  - Modify `DateCalculatorViewModel::OnInputsChanged()` to display the difference in Days (only) when we were not able to calculate the difference in days/weeks/months     ### How changes were validated:  Manually.  This diff can be test with the same repro as #552 (if still not fixed).  	rudyhuyn	null	null	null	null	null	null	
2019-06-17 21:29:47.0	2019-06-18 20:05:19.0	2021-01-12 18:04:32.0	closed	[codebase quality]	0	556	Ensure gldPrevious is scoped to its own translation unit	https://api.github.com/repos/microsoft/calculator/issues/556	https://github.com/microsoft/calculator/pull/556		janisozaur	null	null	null	null	null	null	
2019-06-18 07:46:19.0	2019-06-27 01:47:51.0	2020-12-03 00:01:44.0	closed	[Area: User Experience, fixed, Pri: 2]	3	557	Date Difference: dates returned by CalendarDatePicker and used to calculate the difference can be shifted depending on the current time and time zone.	https://api.github.com/repos/microsoft/calculator/issues/557	https://github.com/microsoft/calculator/issues/557	## Describe the bug    In C++/CX, a DateTime is represented using a [`FILETIME`](https://docs.microsoft.com/en-us/windows/desktop/api/minwinbase/ns-minwinbase-filetime), number of seconds since 01/01/1601 12:00am UTC. Obviously, this way of representing a date has no notion of local time/UTC time, by design, date are always UTC.    This is an issue with `CalendarDatePicker`, returning the date selected (with hours and minutes equal to the current time) in **local time**.    ## What the calculator currently does  - User selects a date using the `CalendarDatePicker`     - for example: __06/20/2019__  - `CalendarDatePicker` will "concatenate" this date with the current time (11:16pm local time)     - _06/20/2019 11:16PM GMT-7_  - Because we use C++/CX, this date will be converted in FILETIME     - _06/20/2019 11:16PM GMT-7_ -> _06/21/2019 6:16AM GMT_ --> _132055713600000000_  - The ViewModel will "clip" this datetime to the time to midnight.    - _132055713600000000_ -> _132055488000000000_    The issue here is that _132055488000000000_ represents 06/21/2019, not 06/20/2019 as the user expected.    This shift shouldn't impact the result of the difference, both `FromDate` and `ToDate` being shifted the same way, but it's an issue for us developers, making bugs harder to detect/reproduce and making unit tests + code execution less deterministic.    ## Expected behavior  The Calculator must compute the difference between 2 dates exactly the same way whatever the timezone, `CalendarDatePicker::Date` must be adjusted to represent the day selected at midnight UTC time.    In the example, the date returned should be **132054624000000000**.    ## Screenshots    When users select 06/20/2019:    ![image](https://user-images.githubusercontent.com/1226538/59662176-3e9f6700-9161-11e9-820a-df077c5ad02b.png)    equivalent to _GMT: Friday, June 21, 2019 6:36:07 AM_, then "clipped" to set the time to midnight: _GMT: Friday, June **21**, 2019 12:00:00 PM_    ==> should be Friday, June 20 instead.    ## Device and Application Information   - OS Build: 10.0.18362.0   - Architecture: X64   - Application Version: 10.1904.42.0   - Region: en-US   - Dev Version Installed: True    ## Requested Assignment  If possible, I would like to fix this.  	rudyhuyn	null	null	null	null	null	null	
2019-06-18 22:44:43.0	2019-06-26 23:17:48.0	2019-06-26 23:17:48.0	closed	[Bug, fixing approved issue]	2	558	Modify ClipTime to adjust the datetime to local time before clipping 	https://api.github.com/repos/microsoft/calculator/issues/558	https://github.com/microsoft/calculator/pull/558	## Fixes #557     In some cases (depending on the current time and time zone), the calculation of the difference between two dates was based on the previous or next day of the selected one.    To fix this issue, we need to "convert" FromDate and ToDate to local time (because CalendarDatePicker uses local time to generate the datetime) before clipping the time.     This PR will make sure that `FromDate` and `ToDate` are correctly set and really match what the user selected.    ### Description of the changes:  - Modify `ClipTime` and add an extra parameter to "convert" the current UTC FILETIME to Local FILETIME prior to clipping the time.      ### How changes were validated:  - Manually tested with different time zones, date and time.  	rudyhuyn	null	null	null	null	null	null	
2019-06-19 17:14:11.0	null	2021-08-02 09:04:49.0	open	[Pri: 2, codebase quality, approved]	2	560	Develop a minimal repro for coroutine issues and remove workarounds	https://api.github.com/repos/microsoft/calculator/issues/560	https://github.com/microsoft/calculator/issues/560	In [several](https://github.com/microsoft/calculator/pull/548#issuecomment-503312276) [places](https://github.com/microsoft/calculator/blob/9f01c8168b921a82ada80be24203de7729b1b6fa/src/CalcViewModel/Common/ConversionResultTaskHelper.cpp#L32) [in](https://github.com/microsoft/calculator/blob/fe30c7cabc1f30c239b5a22ff6d0f7fa0fba5cd1/src/CalcViewModel/DataLoaders/CurrencyDataLoader.cpp#L186) Calculator, we disable optimizations to work around bugs in the compiler related to coroutines. Some of these workarounds might no longer be needed (since some bugs have been [fixed](https://developercommunity.visualstudio.com/content/problem/263131/co-await-optimization-bugs-in-visual-studio-157-x6.html)) while others might be hiding still-unresolved issues that need to be fixed in the compiler.    For every instance where we've disabled optimizations (starting with the [one](https://github.com/microsoft/calculator/pull/548#issuecomment-503312276) which seems to be new in VS2019) we should [produce a minimal repro case](https://docs.microsoft.com/en-us/cpp/overview/how-to-report-a-problem-with-the-visual-cpp-toolset?view=vs-2019) which we can send to the C++ team.	mcooley	null	null	null	null	null	null	
2019-06-21 19:45:43.0	2019-06-21 20:17:40.0	2019-11-06 23:26:51.0	closed	[graphing calculator]	0	561	Updating GraphingInterfaces to use Graphing Engine 2.0	https://api.github.com/repos/microsoft/calculator/issues/561	https://github.com/microsoft/calculator/pull/561	## Contributes to #338: Add Graphing Mode.      ### Description of the changes:  - Updated the GraphingInterfaces that the graph control uses to communicate with the GraphingEngine.    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Manually tested drawing a graph using the internal graphing engine.    	sanderl	null	null	null	null	null	null	
2019-06-22 03:10:14.0	2019-07-07 21:50:50.0	2020-12-03 00:01:43.0	closed	[Bug, Area: World-Readiness, won't fix, Pri: 2]	4	562	Access keys showing inaccessible Chinese characters	https://api.github.com/repos/microsoft/calculator/issues/562	https://github.com/microsoft/calculator/issues/562	The hotkey experience related issue should be addressed in calculator zh-cn.  When navigating in hamberger menu with alt+hotkey, there are Chinese characters in the indicators and these items can't be accessed by pressing any key.    OS Ver. 18362.175 (19H1)  App Ver. 10.1904.42.0    ![image](https://user-images.githubusercontent.com/52092252/59958778-469f3400-94de-11e9-8374-5b60673b87f7.png)  	skyanchor	null	null	null	null	null	null	
2019-06-22 21:36:46.0	2019-07-26 06:24:13.0	2020-12-03 00:01:42.0	closed	[codebase quality, approved]	2	563	Odd dependency cycle in CalculatorEngine	https://api.github.com/repos/microsoft/calculator/issues/563	https://github.com/microsoft/calculator/issues/563	There is an odd dependency in CalcEngine.    `CalculatorManager` inherits `ICalcDisplay` and implements a set of virtual calls it exposes, in particular `SetPrimaryDisplay`.  https://github.com/microsoft/calculator/blob/2517854836fee634a273adf3be72371cdb51ddaa/src/CalcManager/Header%20Files/ICalcDisplay.h#L13    When setting a mode in `CalculatorManager`, e.g. https://github.com/microsoft/calculator/blob/2517854836fee634a273adf3be72371cdb51ddaa/src/CalcManager/CalculatorManager.cpp#L208  `this` (here: an instance of `CalculatorManager`) gets passed as an argument to the newly created `CCalcEngine` as `ICalcDisplay` pointer and the engine is stored as `unique_ptr` member field of `CalculatorManager`.    In the destructor of `CalculatorManager`, a single function is called, `MemorizedNumberClearAll` which then invokes `ProcessCommand(IDC_MCLEAR)` on current engine, gets passed on to `CCalcEngine::ProcessCommandWorker`, to `DisplayNum`, to `CCalcEngine::SetPrimaryDisplay` and finally to `m_pCalcDisplay->SetPrimaryDisplay`, but here `m_pCalcDisplay` _was_ the instance of `CalculatorManager` that just got its destructor called.    https://github.com/microsoft/calculator/blob/2517854836fee634a273adf3be72371cdb51ddaa/src/CalcManager/CalculatorManager.cpp#L46  https://github.com/microsoft/calculator/blob/2517854836fee634a273adf3be72371cdb51ddaa/src/CalcManager/CalculatorManager.cpp#L475  https://github.com/microsoft/calculator/blob/2517854836fee634a273adf3be72371cdb51ddaa/src/CalcManager/CEngine/scicomm.cpp#L87  https://github.com/microsoft/calculator/blob/2517854836fee634a273adf3be72371cdb51ddaa/src/CalcManager/CEngine/scicomm.cpp#L133  https://github.com/microsoft/calculator/blob/2517854836fee634a273adf3be72371cdb51ddaa/src/CalcManager/CEngine/scidisp.cpp#L124  https://github.com/microsoft/calculator/blob/2517854836fee634a273adf3be72371cdb51ddaa/src/CalcManager/CEngine/scicomm.cpp#L837    It will likely differ by implementation on how exactly, but the [standard suggests](http://eel.is/c++draft/class.cdtor#4) that will invoke the pure virtual `ICalcDisplay::SetPrimaryDisplay`. In case of GCC I believe the vtable is already destroyed by the time you enter dtor's body.    My question is: why is it necessary to call `MemorizedNumberClearAll` in `CalculatorManager::~CalculatorManager()`? The calc manager and all its engines are going down anyway, maybe it's ok to just drop that and it should fix the described problem.    **Device and Application Information**   - OS Build: 5.0.13.1  ```  Get-AppxPackage : The term 'Get-AppxPackage' is not recognized as the name of a cmdlet, function, script file, or operable program.  Check the spelling of the name, or if a path was included, verify that the path is correct and try again.  At line:1 char:22  + " - Architecture: $((Get-AppxPackage -Name Microsoft.WindowsCalculato ...  +                      ~~~~~~~~~~~~~~~  + CategoryInfo          : ObjectNotFound: (Get-AppxPackage:String) [], CommandNotFoundException  + FullyQualifiedErrorId : CommandNotFoundException   ```   - Architecture:  ```  Get-AppxPackage : The term 'Get-AppxPackage' is not recognized as the name of a cmdlet, function, script file, or operable program.  Check the spelling of the name, or if a path was included, verify that the path is correct and try again.  At line:1 char:29  + " - Application Version: $((Get-AppxPackage -Name Microsoft.WindowsCa ...  +                             ~~~~~~~~~~~~~~~  + CategoryInfo          : ObjectNotFound: (Get-AppxPackage:String) [], CommandNotFoundException  + FullyQualifiedErrorId : CommandNotFoundException  ```   - Application Version:    - Region: pl-PL  ```  Get-AppxPackage : The term 'Get-AppxPackage' is not recognized as the name of a cmdlet, function, script file, or operable program.  Check the spelling of the name, or if a path was included, verify that the path is correct and try again.  At line:1 char:41  + " - Dev Version Installed: $($null -ne (Get-AppxPackage -Name Microso ...  +                                         ~~~~~~~~~~~~~~~  + CategoryInfo          : ObjectNotFound: (Get-AppxPackage:String) [], CommandNotFoundException  + FullyQualifiedErrorId : CommandNotFoundException  ```   - Dev Version Installed:	janisozaur	null	null	null	null	null	null	
2019-06-24 17:35:36.0	2019-06-24 19:17:15.0	2019-06-24 19:17:15.0	closed	[tooling]	2	564	Update .gitignore to ignore VSCode settings directories	https://api.github.com/repos/microsoft/calculator/issues/564	https://github.com/microsoft/calculator/pull/564	Some users (including this one) occasionally use VSCode for  inspecting/updating the project, so let's keep `git status`  clean by ignoring the VSCode user settings directory.    ### Description of the changes:  - tells `git` to Ignore the `.vscode` directory within the root directory as well as any sub-directory    ### How changes were validated:  - Added a `.vscode` directory to my root and a number of random sub-directories to my clone and ensured that `git status` reported that there were no new files to be added.	HowardWolosky	null	null	null	null	null	null	
2019-06-24 19:41:14.0	2019-06-24 20:23:42.0	2019-06-24 20:23:42.0	closed	[tooling]	0	565	Remove deprecated internal-only tests	https://api.github.com/repos/microsoft/calculator/issues/565	https://github.com/microsoft/calculator/pull/565	Our new WinAppDriver-based UI tests now have more coverage than our old internal test suite provided, so we can remove it from the repo.  	mcooley	null	null	null	null	null	null	
2019-06-24 22:44:13.0	2019-06-28 22:45:44.0	2019-06-28 22:45:48.0	closed	[Bug, fixing approved issue]	2	566	Ensure consistent margins/padding with currency converter keypad	https://api.github.com/repos/microsoft/calculator/issues/566	https://github.com/microsoft/calculator/pull/566	## Fixes #87.    ### Description of the changes:  - Simplifies the layout of `ConverterNumPad` to match that  seen of `NumpadPanel` in Calculator.xaml.     - They now both use the same static margin ('`3,0,3,3`)     - Removed two "gutter" columns that had been used for dynamic margins.    > The `GutterLeft` and `GutterRight` columns were left untouched on purpose.  > They are only activated when in a "landscape" width/height orientation, used to ensure that the app display is evenly split 50/50 between the input fields and the number pad.  > `GutterLeft` gives a margin to the input field column, while `GutterRight` is used to ensure that the number pad column has an equal width available to it (as the numberpad is displayed in a column span that merges its column with that of `GutterRight`.    ### How changes were validated:  - Validated with a "screen ruler" that the left/right/bottom margins were the same within Volume.    ![Volume (before and after)](https://user-images.githubusercontent.com/22158599/60053943-fff03c00-968d-11e9-872a-d557561eb0ca.png)    - Validated with a "screen ruler" that the left/top/bottom in Volume were identical to those seen in Standard mode.  ![Existing standard vs new Volume](https://user-images.githubusercontent.com/22158599/60053948-02eb2c80-968e-11e9-8d38-7fe0595391f6.png)    - Verified the margins in "wide" mode as well  ![Volume (wide) (before and after)](https://user-images.githubusercontent.com/22158599/60053973-14343900-968e-11e9-9dd9-899b32b522dd.png)      	HowardWolosky	null	null	null	null	null	null	
2019-06-25 17:29:21.0	2019-06-25 18:29:33.0	2019-07-17 17:29:02.0	closed	[]	0	567	UI tests should be able to test both dev and store-released builds	https://api.github.com/repos/microsoft/calculator/issues/567	https://github.com/microsoft/calculator/pull/567	Fixes #462    - Add x64 and x86 UI tests to the release builds (internal builds for the store)  - UI tests now accept the target app ID as a parameter in the runsettings file	mcooley	null	null	null	null	null	null	
2019-06-25 17:44:00.0	2019-06-27 16:53:07.0	2019-06-27 16:53:07.0	closed	[build]	0	568	Update to SDK 18362	https://api.github.com/repos/microsoft/calculator/issues/568	https://github.com/microsoft/calculator/pull/568	Related to #463, since Windows SDK version 18362 is now installed with Visual Studio    - Build with version 18362 of the Windows SDK to enable us to adopt platform capabilities which are new in that version  - Update MaxVersionTested to 18362 to opt in to any behavior changes which are new in Windows 10 version 18362  	mcooley	null	null	null	null	null	null	
2019-06-25 22:08:33.0	2019-06-25 22:51:07.0	2019-06-25 22:51:07.0	closed	[]	1	569	edit instance condition	https://api.github.com/repos/microsoft/calculator/issues/569	https://github.com/microsoft/calculator/pull/569	using a conditional operator instead of a basic condition is a good practice and the code looks neat.    and i am new  here so please reply, that would make my day even i am sure i didn't follow your instructions properly.  	RaisingRay	null	null	null	null	null	null	
2019-06-26 20:35:50.0	2019-07-26 06:24:13.0	2021-01-12 18:03:38.0	closed	[fixing approved issue, codebase quality]	7	570	Fix #563: Odd dependency cycle	https://api.github.com/repos/microsoft/calculator/issues/570	https://github.com/microsoft/calculator/pull/570	There was no discussion other than lone comment from friendly Microsoft Issue Bot and I'm curious to see what breaks, if anything.    Resolves #563	janisozaur	null	null	null	null	null	null	
2019-06-27 08:41:42.0	2019-06-27 08:59:21.0	2020-12-03 00:01:41.0	closed	[duplicate]	2	571	Date calculation error	https://api.github.com/repos/microsoft/calculator/issues/571	https://github.com/microsoft/calculator/issues/571	![1561626021178-1089485513](https://user-images.githubusercontent.com/22158599/60252805-bff0ab00-987f-11e9-8e76-4835386bf0f8.jpg)    > The original report was simply a link to a screenshot stored on another website.  A member of the team updated this initial post to embed the screenshot directly into the Issue and removed the link.  For future reference, if anyone wishes to embed an image with their report, they simply need to drag/drop the image directly onto the text area and GitHub will upload it to a shared location and automatically add markup that references the file from the newly uploaded location.	jndman	null	null	null	null	null	null	
2019-06-27 18:28:02.0	2019-07-18 01:09:40.0	2020-01-16 18:27:27.0	closed	[Enhancement, fixing approved issue]	4	572	Updated Calculator diagnostic data collection per the specification	https://api.github.com/repos/microsoft/calculator/issues/572	https://github.com/microsoft/calculator/pull/572	## Fixes #525: Refresh Calculator Diagnostic Data.      ### Description of the changes:  - Removed unneeded diagnostic events and code  - Added and consolidated events into the events defined in the spec    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Tested manually to ensure the diagnostic events were logged as expected    	sanderl	null	null	null	null	null	null	
2019-06-30 20:35:05.0	2019-07-01 11:47:00.0	2020-12-03 00:01:40.0	closed	[won't fix]	5	573	[readme] funny incorrect calculator screenshot.	https://api.github.com/repos/microsoft/calculator/issues/573	https://github.com/microsoft/calculator/issues/573	Just see it: left calculator is screenshot from your repo, right calculator it from my computer :)  How? How 4 + 2 + == 2 ? 🤔🤔🤔🤔 When it == 6.    ![image](https://user-images.githubusercontent.com/39625750/60401809-54645180-9b8f-11e9-9902-c8818bb7bf3c.png)  	MairwunNx	null	null	null	null	null	null	
2019-07-05 05:12:39.0	null	2021-05-26 10:04:46.0	open	[help wanted, Bug, Pri: 3, triage approved, Area: User Experience]	7	574	Incorrect result for exponational and logarithmic functions with exact results	https://api.github.com/repos/microsoft/calculator/issues/574	https://github.com/microsoft/calculator/issues/574	<!--  Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.  -->    **Describe the bug**  The below example shows a case that shown answer (2) doesn't match the real answer  log(e^2)/log(e)-2 != 0    **Steps To Reproduce**    Steps to reproduce the behavior:  1. Go to `Scientific mode`  2. enter log(e^2)/log(e^1)-2  4. See error      **Expected behavior**  log(e^2)/log(e^1)-2 should be 0 as *base changing formula for logarithms*:  ![LaTex](https://user-images.githubusercontent.com/40313014/60698458-05694400-9f22-11e9-9098-d2d3ca318c51.JPG)      **Screenshots**  ![non-zero result](https://user-images.githubusercontent.com/40313014/60698475-17e37d80-9f22-11e9-878a-69efc957b10d.JPG)      **Device and Application Information**   - OS Build: 10.0.17134.0   - Architecture: X64   - Application Version: 10.1905.28.0   - Region: zh-CN   - Dev Version Installed: False    <!--  Run the following commands in Powershell and copy/paste the output.  " - OS Build: $([Environment]::OSVersion.Version)"  " - Architecture: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Architecture)"  " - Application Version: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Version)"  " - Region: $((Get-Culture).Name)"  " - Dev Version Installed: $($null -ne (Get-AppxPackage -Name Microsoft.WindowsCalculator.Dev))"  -->    **Additional context**  This is a new issue related with #309 and #222   **Requested Assignment**<!--  Some people just want to report a bug and let someone else fix it.  Other people want to not only submit the bug report, but fix it as well.  Both scenarios are completely ok. We just want to know which one it is.  Please indicate which bucket you fall into by keeping one and removing the other.  -->  I'm just reporting this problem.  I don't know how to fix it.  	dovisutu	null	null	null	null	null	null	
2019-07-05 07:29:14.0	2019-07-07 21:49:25.0	2019-07-07 21:49:25.0	closed	[]	1	575	Fix mistranslated Keys	https://api.github.com/repos/microsoft/calculator/issues/575	https://github.com/microsoft/calculator/pull/575	## Fixes #562 .      ### Description of the changes:  - Fixes mistranslated Keys:     - AR (Area)     - AN (Angle)     - L (Length)  ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - manually    	dovisutu	null	null	null	null	null	null	
2019-07-06 17:57:22.0	2019-07-16 19:53:35.0	2019-07-17 17:01:39.0	closed	[codebase quality]	10	576	Removed need for trimIdx and fDigitsFound, resulting in less code.	https://api.github.com/repos/microsoft/calculator/issues/576	https://github.com/microsoft/calculator/pull/576	Having an extra integer variable to hold onto an i or i-1 value is inefficient, for "if (m_token.at(i) != chZero)", the code under "fDigitsFound" will always run, so it makes sense to put the fDigitsFound code under the if statement, which can return from the function entirely instead of breaking.    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Manual Testing verified the code having identical behavior as before, with no side effects.	ghost	null	null	null	null	null	null	
2019-07-06 21:23:55.0	2019-07-11 17:18:18.0	2019-07-11 17:18:18.0	closed	[]	0	577	Ameliorating runtime speed by adding in optimizations that make the code more concise	https://api.github.com/repos/microsoft/calculator/issues/577	https://github.com/microsoft/calculator/pull/577	## Fixes #.  #209    ### Description of the changes:  - Refactoring code to eliminate unnecessary checks, calculations, loops, etc.  -  -    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Manual Testing  -  -  	ghost	null	null	null	null	null	null	
2019-07-09 08:36:12.0	2019-07-09 08:38:35.0	2019-07-09 13:47:15.0	closed	[off-topic]	0	578	TEST IGNORE Update DateCalculatorUnitTests.cpp	https://api.github.com/repos/microsoft/calculator/issues/578	https://github.com/microsoft/calculator/pull/578	## Fixes #.      ### Description of the changes:  -  -  -    ### How changes were validated:  	codez266	null	null	null	null	null	null	
2019-07-10 04:02:42.0	2019-07-31 00:53:39.0	2019-07-31 00:53:40.0	closed	[Enhancement, fixing approved issue]	0	579	Always-on-Top mode implemented	https://api.github.com/repos/microsoft/calculator/issues/579	https://github.com/microsoft/calculator/pull/579	Implemented the 2nd most user requested new feature: the ability for users to pin Calculator on top of other windows.    ### Description of the changes:  - A `Button` has been added to `TitleBar` and styled identical to the other `TitleBar` buttons. This button only appears in Standard calculator mode. Clicking on this button calls `ViewModePreferences` API to switch the window into `CompactOverlay` mode (and back, when exiting from Always-on-Top mode).  - The `ViewModel` is updated accordingly when the button is pressed. These updates propagate dependency properties and observable variables back to the UI to show/hide and enable/disable certain UI elements (eg. buttons) and keyboard shortcuts.  - The screen size is stored in `LocalSettings` whenever the user resizes the screen in Always-on-Top mode. This is used for restoring the last used screen size when the user enters Always-on-Top mode.  - `AdaptiveTriggers` and `SizedChanged` event handlers are used to implement a responsive UI: certain buttons are hidden when the screen shrinks and the font sizes vary based on the screen size as well.  - The main expression in the Always-on-Top mode combines an `ItemsControl` and a `TextBlock` to render the desired mathematical result/expression. This scrollable expression shows the full mathematical expression when edited. When the user presses the "=" button, it shows the final computed result.  - The resulting functionality matches that as specified in the PM spec [here](https://github.com/microsoft/calculator-specs/blob/master/active/Always-on-top/README.md).    ### How changes were validated:  - Manual testing.    Fixes #78	greedyAI	null	null	null	null	null	null	
2019-07-10 04:05:13.0	2019-07-10 04:05:28.0	2020-05-05 16:35:23.0	closed	[off-topic]	2	580	ERROR PR - please delete this PR.	https://api.github.com/repos/microsoft/calculator/issues/580	https://github.com/microsoft/calculator/pull/580	This version is based on "Light Theme".    Recent changes for Pink theme has been reverted.	carldebilly	null	null	null	null	null	null	
2019-07-10 23:09:49.0	2019-07-24 18:23:34.0	2019-11-06 23:26:57.0	closed	[Enhancement, graphing calculator]	0	581	Add variable editing	https://api.github.com/repos/microsoft/calculator/issues/581	https://github.com/microsoft/calculator/pull/581	### Description of the changes:  As part of #338, this PR adds the UI and backend for editing variables that exist for each equation. Variables can be modified with a slider and textbox. Min/Max/Step can be modified by selecting the gear icon for each variable (temporary icon).    The entry point to the UI is temporary as that is still being finalized.    ### How changes were validated:  Manual testing  	joseartrivera	null	null	null	null	null	null	
2019-07-13 00:52:22.0	2020-12-11 05:04:19.0	2021-01-10 06:00:06.0	closed	[Enhancement, Pri: 2, approved]	19	582	Add link to GitHub repo on about flyout	https://api.github.com/repos/microsoft/calculator/issues/582	https://github.com/microsoft/calculator/issues/582	**Problem Statement**  There is no way to navigate to the project from within the Calculator app.    **Evidence or User Insights**    **Proposal**  By adding a link to the GitHub repo on the about flyout, people will know that it's open source and that they can create issues, PRs and more.    **Goals**  Improve discoverability of the GitHub project from within Calculator.    **Non-Goals**    **Low-Fidelity Concept**  Add this string to the about dialog after the "Send feedback" button:  > To learn how you can contribute to Windows Calculator, check out the project on [GitHub](https://go.microsoft.com/fwlink/?linkid=2099939).    ![image](https://user-images.githubusercontent.com/1414423/62022535-a776f780-b181-11e9-9c2b-49e0a40f4409.png)    **Requested Assignment**  I'm just suggesting this idea.  I don't want to implement it.    > Note: Copied/split from #543 	grochocki	null	null	null	null	null	null	
2019-07-14 18:33:07.0	2019-07-14 18:36:52.0	2020-12-03 00:01:39.0	closed	[Enhancement]	2	583	Programmer mode: Add shortcuts for switching to non-decimal input	https://api.github.com/repos/microsoft/calculator/issues/583	https://github.com/microsoft/calculator/issues/583	**Problem Statement**  The programmer mode has no hotkeys to switch between decimal / hexdecimal / octal and binary input.    **Evidence or User Insights**  It's quite annoying for programmers to be able to launch the calculator and switch to programmer mode all by using the keyboard and then taking a hand off and use the mouse to click on HEX or BIN or OCT and then switching back to keyboard to input the value.    We also do have keyboard shortcuts for pretty much anything else which kinda makes sense to support this as well.    **Proposal**  Add shortcuts to switch between decimal / hexdecimal / octal and binary input.    **Goals**  User can continue using the keyboard to enter non decimal values without taking hand off and using the mouse.    **Low-Fidelity Concept**  I don't think it's required for this request.    **Requested Assignment**  I'm just suggesting this idea.  I don't want to implement it.  	Symbai	null	null	null	null	null	null	
2019-07-15 17:25:33.0	2019-07-15 17:46:17.0	2019-07-15 17:46:17.0	closed	[]	0	584	[DO NOT MERGE] Test of Changes to put in future pull requests	https://api.github.com/repos/microsoft/calculator/issues/584	https://github.com/microsoft/calculator/pull/584	## Fixes #.      ### Description of the changes:  -  -  -    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  -  -  -    	ghost	null	null	null	null	null	null	
2019-07-15 17:48:32.0	2019-07-15 18:17:22.0	2020-01-16 18:27:27.0	closed	[]	0	585	Merge master into feature/GraphingCalculator branch	https://api.github.com/repos/microsoft/calculator/issues/585	https://github.com/microsoft/calculator/pull/585	## Pulled master into feature/GraphingCalculator branch:  -pulled master into feature/GraphingCalculator and resolved merge conflicts    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Ensured the branch built  - Launched the app and smoke tested standard mode and graphing mode.  -    	sanderl	null	null	null	null	null	null	
2019-07-16 22:52:58.0	2019-07-16 23:21:45.0	2019-07-17 17:29:02.0	closed	[]	0	586	Use 2020 as the major version for the appxbundle	https://api.github.com/repos/microsoft/calculator/issues/586	https://github.com/microsoft/calculator/pull/586	Calculator's build number in release builds follows the pattern 10.{YYMM}.{build}.0. We use the build number in lots of places, including the app binaries, the app package version, and the app _bundle_ version. Before Calculator moved to GitHub, the app _bundle_ version was generated using a date-based formula which produced versions like "2019.105.612.0". This means that the bundles generated from GitHub have a lower version than previous bundles. This appears to cause some issues during device reset.    This change sets the app bundle major version number to "2020" to ensure that newly-produced appxbundles have higher versions than legacy bundles. The remaining parts of the bundle version number will match the build number for easy reference.    Also updating the MakeAppx version used in bundle creation to 18362.	mcooley	null	null	null	null	null	null	
2019-07-17 00:01:38.0	2019-09-18 08:12:05.0	2020-12-03 00:01:38.0	closed	[Area: User Experience, fixed, Pri: 2]	6	587	In small layouts, history button overlaps with window management buttons in title bar	https://api.github.com/repos/microsoft/calculator/issues/587	https://github.com/microsoft/calculator/issues/587	**Describe the bug**  Notice how sometimes the history button will render overlapped with content in the title bar.    **Steps To Reproduce**  This bug was filed from another source and did not have detailed repro steps, but anecdotally, I have seen this behavior. It would be great if someone could help consistently repro this.    **Expected behavior**  History button is positioned below title bar:  ![image](https://user-images.githubusercontent.com/1414423/61338118-e5bd0000-a7ec-11e9-89a4-3811e66469e4.png)    **Screenshots**  ![image](https://user-images.githubusercontent.com/1414423/61337980-5a436f00-a7ec-11e9-9d25-f847ffe5249d.png)    **Device and Application Information**   - OS Build: 10.0.18942.0   - Architecture: X64   - Application Version: 10.1906.25.0   - Region: en-US   - Dev Version Installed: True    **Requested Assignment**  I'm just reporting this problem.  I don't want to fix it.  	MicrosoftIssueBot	null	null	null	null	null	null	
2019-07-18 01:40:32.0	2019-07-18 02:00:20.0	2019-07-18 02:00:20.0	closed	[]	0	588	Fix 32-bit build	https://api.github.com/repos/microsoft/calculator/issues/588	https://github.com/microsoft/calculator/pull/588	Fixes a build break introduced in #572.	mcooley	null	null	null	null	null	null	
2019-07-18 02:08:30.0	null	2021-09-30 09:04:59.0	open	[help wanted, Enhancement, Pri: 2, needs spec]	3	589	Update unit selection UX to highlight common and recently-used units and make it easier to find and select units	https://api.github.com/repos/microsoft/calculator/issues/589	https://github.com/microsoft/calculator/issues/589	**Problem Statement**  Unit converters in Calculator support a large set of units, which can make it difficult to quickly access common or frequently-used units.    **Evidence or User Insights**  There is some discussion in #382 regarding having a smaller set of units by default with an option to turn on more in settings. Numerous issues (#108, #167, #271, #325, #275, #515) discuss expanding the set of units or converters further, which improves converters overall, but makes this particular UX problem worse.    Anecdotally, it is clear to see some scenarios where we show common units mixed in with uncommon units:    ![image](https://user-images.githubusercontent.com/1414423/61423332-3bb0a700-a8c4-11e9-81ee-ac30b959e6c5.png)    **Proposal**  Update the unit selection UX to highlight common and recently-used units and make it easier to find and select units.    **Goals**  * Users can quickly select commonly-used units  * Users can quickly select recently-used units  * Users can easily find less commonly-used units    **Non-Goals**  * Determining which converters/units to include is out-of-scope (covered by #515)  * Redesign any other parts of converter navigation or UX    **Low-Fidelity Concept**  One approach might be an AutoSuggestBox/ComboBox hybrid experience. This would allow us to highlight the most common units as well as recently used units, while also allowing users to search-to-filter/select any unit.    ![image](https://user-images.githubusercontent.com/1414423/61423904-7287bc80-a8c6-11e9-8a10-aae2dd300309.png) ![image](https://user-images.githubusercontent.com/1414423/61423762-dc539680-a8c5-11e9-81d3-14f82583499b.png)  <sub>Instead of People/Places/Things, we could highlight common/recently used units</sub>    ![image](https://user-images.githubusercontent.com/1414423/62404396-c9d59000-b548-11e9-9d05-e3b15c2b43c9.png)    **Requested Assignment**  I'm just suggesting this idea.  I don't want to implement it.	grochocki	null	null	null	null	null	null	
2019-07-18 04:01:59.0	2019-07-18 04:37:30.0	2019-07-18 04:37:31.0	closed	[]	0	590	Update version of release builds to 1907	https://api.github.com/repos/microsoft/calculator/issues/590	https://github.com/microsoft/calculator/pull/590		mcooley	null	null	null	null	null	null	
2019-07-18 10:56:40.0	2019-07-18 13:24:35.0	2020-12-03 00:01:37.0	closed	[won't fix]	2	591	math problems	https://api.github.com/repos/microsoft/calculator/issues/591	https://github.com/microsoft/calculator/issues/591	**Expected behavior**  1x2+1x2 = 4  **Screenshots**  <!-- If applicable, add screenshots to help explain your problem. -->  ![image](https://user-images.githubusercontent.com/1940081/61452103-310a1680-a985-11e9-8151-2f768dc4423e.png)    Google Calculator show the right answer  ![image](https://user-images.githubusercontent.com/1940081/61452422-e8069200-a985-11e9-806c-39292efd35ae.png)   And Bing  ![image](https://user-images.githubusercontent.com/1940081/61452996-3ec09b80-a987-11e9-924d-0b1ff90ac1bb.png)  	nguyenkien	null	null	null	null	null	null	
2019-07-18 17:14:57.0	2019-07-18 18:21:36.0	2020-12-03 00:01:36.0	closed	[fixed]	1	592	Add diagnostics for copy and paste by mode	https://api.github.com/repos/microsoft/calculator/issues/592	https://github.com/microsoft/calculator/issues/592	<!--  Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.  -->    **Describe the bug**  Copy and paste diagnostics events were removed with the latest diagnostic spec. The current diagnostics data implementation will not answer questions about usage by mode accurately because it will exclude users who only copy and paste in a given session.      **Additional context**  This will require a new diagnostics data event added to the Diagnostics spec in the Calculator-Specs repo.    **Requested Assignment**  <!--  Some people just want to report a bug and let someone else fix it.  Other people want to not only submit the bug report, but fix it as well.  Both scenarios are completely ok. We just want to know which one it is.  Please indicate which bucket you fall into by keeping one and removing the other.  -->  If possible, I would like to fix this.	sanderl	null	null	null	null	null	null	
2019-07-18 17:49:04.0	2019-07-18 18:21:36.0	2019-09-03 18:48:36.0	closed	[]	0	593	Add InputPasted Event to Diagnostics Implementation	https://api.github.com/repos/microsoft/calculator/issues/593	https://github.com/microsoft/calculator/pull/593	## Fixes #592.      ### Description of the changes:  - Added LogInputPasted event to the TraceLogger  - Called LogInputPasted from the StandardCalculatorViewModel and the UnitConverterViewModel    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Manually: copy and pasted values into several modes and verified the event was triggered.]  	sanderl	null	null	null	null	null	null	
2019-07-18 20:40:34.0	null	2021-09-30 09:05:01.0	open	[help wanted, Enhancement, Pri: 2, needs spec]	4	594	Collapse unit converters into single page and refresh layout	https://api.github.com/repos/microsoft/calculator/issues/594	https://github.com/microsoft/calculator/issues/594	**Problem Statement**  Today, we treat each converter type as a high-level navigation item. This means that if you want to switch between volume and weight converters, you need to navigate to an entirely different page. While we do offer shortcuts to switch between modes, they are not very discoverable (#157), and parsing a mixed list of calculators and converters is unnecessarily more complex than it needs to be. Furthermore, the converter page interface is laid out differently than other calculator modes and feedback suggests that the interface could be made more intuitive.    ![image](https://user-images.githubusercontent.com/1414423/61490296-787eab80-a961-11e9-9d8a-f8cdb3101958.png)    **Evidence or User Insights**  We currently have a flat navigation structure. According to [app navigation guidance](https://docs.microsoft.com/en-us/windows/uwp/design/basics/navigation-basics), this structure is appropriate when there are less than 8 pages in the group. We already have 13 converters, and #515 is looking at evaluating which converters and units we include, and suggests we may actually be _missing_ some converter types (increase to 17). In this case, hierarchical or an alternative navigation would be preferred.    Some other UX issues have been identified as well. It is unclear how to quickly switch units (#172 and #266). There is some additional conversation in #382 and #379 as well.    **Proposal**  Collapse converters into a single "Converter" page where you can select the type of conversion in addition to the units. There may be an opportunity to streamline input even further with #589 to allow users to input any unit they like without having to explicitly select a converter type first.    **Goals**  * Collapse top-level converter navigation into a single Converter (open question: does currency converter feel different enough to remain separate?)  * Redesign page layout for greater consistency with other calculator modes  * Redesign value input to align with other converter patterns (e.g., found in translation apps)    **Non-Goals**  * Determining which converters/units to include is out-of-scope (covered by #515)    **Low-Fidelity Concept**  ![image](https://user-images.githubusercontent.com/1414423/61490046-e1195880-a960-11e9-9a7a-3952a74712b6.png)    Bing Translator/Converter UX (for inspiration)  ![bing](https://user-images.githubusercontent.com/1414423/54236480-d93c3a00-44d0-11e9-9bdd-11c0d0dc0616.jpg)    ![image](https://user-images.githubusercontent.com/1414423/61490237-538a3880-a961-11e9-86af-7571233bf54f.png)    **Requested Assignment**  I'm just suggesting this idea.  I don't want to implement it.	grochocki	null	null	null	null	null	null	
2019-07-19 00:59:00.0	null	2021-05-26 10:04:54.0	open	[help wanted, Bug, Pri: 3, triage approved, Area: User Experience]	6	595	Users are unable to edit numerical values inserted from memory	https://api.github.com/repos/microsoft/calculator/issues/595	https://github.com/microsoft/calculator/issues/595	**Describe the bug**  Users are unable to edit numerical values inserted from memory.    **Steps To Reproduce**  1. Perform a calculation in Standard or Scientific mode so that a result is generated  2. Press "MS" button to store memory entry  3. Press <kbd>ESC</kbd> to clear input  4. Press "MR" button to recall stored memory entry  5. Press <kbd>Backspace</kbd> and notice that you cannot edit the numerical value    Note: This is only kind of related to #519, but in this case, we are only ever restoring numerical values, and not operators.    **Expected behavior**  Numerical values are editable as if you typed them in manually.    **Screenshots**  N/A    **Device and Application Information**   - OS Build: 10.0.18942.0   - Architecture: X64   - Application Version: 10.1906.25.0   - Region: en-US   - Dev Version Installed: True    **Requested Assignment**  I'm just reporting this problem.  I don't want to fix it.  	grochocki	null	null	null	null	null	null	
2019-07-19 01:33:51.0	2021-08-09 08:23:01.0	2021-09-08 12:00:49.0	closed	[Enhancement, Pri: 2, approved]	26	596	Replace current about dialog with settings page	https://api.github.com/repos/microsoft/calculator/issues/596	https://github.com/microsoft/calculator/issues/596	**Problem Statement**  Calculator currently does not have a settings page, which will block future work. The current about dialog is also inconsistent with many other Microsoft apps.    **Evidence or User Insights**  Many suggested features have suggested adding options in settings (#538, #486, #485, #393, #382, #215), and while we have not accepted all of these pitches, it is inevitable that there will be functionality requiring settings UX.    **Proposal**  Replace current about dialog with settings page.     **Goals**  * Replace current about dialog with settings page  * Be consistent with settings UX patterns established in other Microsoft apps  * Add basic theme selection option common across many other apps    **Non-Goals**  * Add any additional options at this time    **Low-Fidelity Concept**  ![image](https://user-images.githubusercontent.com/1414423/61502861-69602380-a98a-11e9-976e-c11b66a7220a.png)      **Requested Assignment**  I'm just suggesting this idea.  I don't want to implement it.  	grochocki	null	null	null	null	null	null	
2019-07-19 07:36:02.0	2019-07-19 07:36:36.0	2019-07-19 14:14:31.0	closed	[off-topic]	0	597	file.Update nuget.config	https://api.github.com/repos/microsoft/calculator/issues/597	https://github.com/microsoft/calculator/pull/597	## Fixes #.      ### Description of the changes:  -  -  -    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  -  -  -    	harsh07051	null	null	null	null	null	null	
2019-07-20 20:31:48.0	null	2021-08-02 09:05:04.0	open	[Enhancement, Pri: 2, needs spec]	15	598	Add support for custom color and photo themes	https://api.github.com/repos/microsoft/calculator/issues/598	https://github.com/microsoft/calculator/issues/598	**Problem Statement**  Calculator is great example of Fluent design, but it doesn't feel like _my_ Calculator.    ![image](https://user-images.githubusercontent.com/1414423/61583756-6e8bb280-aaf1-11e9-9635-7a5ec02f27c0.png)      **Evidence or User Insights**  * Adding more color options is a top requested feature on Feedback Hub  * Other products, like [SwiftKey](https://www.microsoft.com/swiftkey) and the new [Windows Terminal](https://github.com/microsoft/terminal), support themes, which are quite popular with users.    **Proposal**  Add support for custom color and photo themes in Calculator.    **Goals**  * Users can select a custom color theme.  * Users can select an image as their theme.    **Non-Goals**  * Fine-grained personalization of individual UI elements    **Low-Fidelity Concept**  ![image](https://user-images.githubusercontent.com/1414423/61583833-992a3b00-aaf2-11e9-90ff-ae777fb5b953.png)    **Requested Assignment**  I'm just suggesting this idea.  I don't want to implement it.  	grochocki	null	null	null	null	null	null	
2019-07-21 20:47:16.0	2019-07-21 21:24:16.0	2019-07-21 21:25:01.0	closed	[Bug, duplicate, fixing approved issue]	1	599	Restore user preferences	https://api.github.com/repos/microsoft/calculator/issues/599	https://github.com/microsoft/calculator/pull/599	## Fixes #445      ### Description of the changes:  - On April 14, 2019, @TurtleShip had a bug fix that caused Calculator to fail to restore those changes. This is PR#456. Because this was not touched since then, I am making this PR now.  - Removed m_isFirstTime  - Refraining from setting default values if they already have valid values  - Refactoring to condense the code changes so it falls in line the code style of the rest of the project without any side effects.    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Manual and Automated testing in regards to the reproduction steps in the original PR validated these changes.  -  -  	ghost	null	null	null	null	null	null	
2019-07-22 06:02:17.0	2019-07-25 22:25:25.0	2020-08-30 02:02:54.0	closed	[off-topic]	2	600	Mcooley/ut capabilities	https://api.github.com/repos/microsoft/calculator/issues/600	https://github.com/microsoft/calculator/pull/600	## Fixes #.      ### Description of the changes:  -  -  -    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  -  -  -    	15139057552	null	null	null	null	null	null	
2019-07-25 20:13:42.0	2019-08-13 19:57:14.0	2020-02-17 16:16:38.0	closed	[graphing calculator]	1	601	Adding share functionality to Graphing Calculator	https://api.github.com/repos/microsoft/calculator/issues/601	https://github.com/microsoft/calculator/pull/601	### Description of the changes:    Use the new GitBitmap feature from the graph engine to get a stream to the current graph state.  Then build up a HMLT share with that and the current set of equations as a key.    ### How changes were validated:    Manual testing	DavidShoe	null	null	null	null	null	null	
2019-07-26 16:40:11.0	2019-07-26 18:51:02.0	2020-12-03 00:01:35.0	closed	[fixed, Pri: 1]	1	602	Missing UI_Responsive Event in Latest Calculator Build	https://api.github.com/repos/microsoft/calculator/issues/602	https://github.com/microsoft/calculator/issues/602	<!--  Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.  -->    **Describe the bug**  <!-- A clear and concise description of what the bug is. -->  The logic for updating the WindowIdLog in the TraceLogger code was removed, so no windowIds are ever added to the map. This prevents the UIResponsive events from firing after the app launches because it checks if the current window is in the log before firing the event.  **Steps To Reproduce**  Used internal diagnostics tools to repro this issue.    **Expected behavior**  UIResponsive events are fired after the app lauches.      **Device and Application Information**   - OS Build:   - Architecture:   - Application Version: 10.1906.25.0   - Region:   - Dev Version Installed:    <!--  Run the following commands in Powershell and copy/paste the output.  " - OS Build: $([Environment]::OSVersion.Version)"  " - Architecture: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Architecture)"  " - Application Version: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Version)"  " - Region: $((Get-Culture).Name)"  " - Dev Version Installed: $($null -ne (Get-AppxPackage -Name Microsoft.WindowsCalculator.Dev))"  -->    **Additional context**  <!-- Add any other context about the problem here. -->    **Requested Assignment**  <!--  Some people just want to report a bug and let someone else fix it.  Other people want to not only submit the bug report, but fix it as well.  Both scenarios are completely ok. We just want to know which one it is.  Please indicate which bucket you fall into by keeping one and removing the other.  -->  If possible, I would like to fix this.  	sanderl	null	null	null	null	null	null	
2019-07-26 16:54:28.0	2019-07-26 18:51:02.0	2019-09-03 18:48:32.0	closed	[fixing approved issue]	0	603	Fixed issue where UI Responsive events were not fired	https://api.github.com/repos/microsoft/calculator/issues/603	https://github.com/microsoft/calculator/pull/603	## Fixes #602       ### Description of the changes:  - Updated the LogWindowCreated method to take in the windowId and update the WindowIdLog  - Renamed UpdateWindowIdLog to IsWindowIdInLog so that it reflects what the method is actually doing.    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Manually using internal diagnostics tools to ensure the UI Responsive events are firing now.    	sanderl	null	null	null	null	null	null	
2019-07-27 04:41:32.0	2019-07-29 03:27:31.0	2020-12-03 00:01:34.0	closed	[Area: User Experience, duplicate]	2	604	calc error	https://api.github.com/repos/microsoft/calculator/issues/604	https://github.com/microsoft/calculator/issues/604	Calc Version: Calculator 10.1812.10048.0    Reproduce the bug:  1. Paste "1.8 * 0.7+1.8 * 0.5+0.7 * 0.5 * 2" to calc  2. Press "Enter" or click "="  3. The result is 2.23 instead of 2.86  	playgithub	null	null	null	null	null	null	
2019-07-30 04:01:27.0	2020-12-16 22:46:38.0	2021-01-16 00:00:05.0	closed	[Bug, Pri: 3, triage approved, Area: User Experience]	5	605	Upon launch, sometimes, the calculator type title shifts down 	https://api.github.com/repos/microsoft/calculator/issues/605	https://github.com/microsoft/calculator/issues/605	**Describe the bug**  Upon launch, sometimes, the calculator type title shifts down.  In most calculator types this can cause readability issues when performing some actions.    **Steps To Reproduce**  1) Launch Date Calculation calculator  2) Observe UI  3) If issue did not occur, repeat steps 1 through 2 multiple times    **Observed behavior**  Upon launch, sometimes, the calculator type title shifts down    **Expected behavior**  Upon launch, the calculator UI does not shift down    **Screenshots**  ![image](https://user-images.githubusercontent.com/1414423/62101103-19664400-b249-11e9-9659-72137552bdd5.png)    **Device and Application Information**  - OS Build: 10.0.18362.0  - Architecture: X64  - Application Version: 10.1906.53.0  - Region: en-US  - Dev Version Installed: True    **Additional context**  I can repro quickly by pinning the Calculator app to the taskbar and using middle click to rapidly open several Calculator windows.	MicrosoftIssueBot	null	null	null	null	null	null	
2019-07-31 14:43:03.0	2019-07-31 14:44:25.0	2019-07-31 14:45:18.0	closed	[off-topic]	0	606	Merge pull request #1 from microsoft/master	https://api.github.com/repos/microsoft/calculator/issues/606	https://github.com/microsoft/calculator/pull/606	Fixed issue where UI Responsive events were not fired (#603)    ## Fixes #.      ### Description of the changes:  -  -  -    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  -  -  -    	ghost	null	null	null	null	null	null	
2019-07-31 16:03:50.0	2019-08-19 18:34:44.0	2020-12-03 00:01:33.0	closed	[duplicate, Enhancement]	3	607	Enhancing currency converter with search box and an alphebetical sorting	https://api.github.com/repos/microsoft/calculator/issues/607	https://github.com/microsoft/calculator/issues/607	First I have seen a closed thread [Currency list need a search box #459](Currency list need a search box #459), but here's the deal why I wanna readdress this issue, especially when I'm using the app in zh-cn.  * The combobox searching can't be performed when using IME (a drawback compared to the win32 counterpart)  * Locating items in combobox can't be performed rapidly. Say there's a list of several items starting with "A", the only way I can scan over the items is pressing the button A with a second's pausing between each input. The selected item just freezes if I press the button rapidly (another drawback compared to the win32 counterpart)  * What's worse, the items on the list are not arranged alphabetically, at least in zh-cn. Not in pheonetical, not in strokes, even not in continents. They are in chaos.    What are my suggestions?  * Arrange these currencies in a particular order (say alphabetically, continentally, etc.) and let us use semantic-zoom control to locate the destination quickly.  * Add a search box which I can use any language to locate my destination (say I can type "USD" or Chinese charaters "美元" to get Dollar selected.    OS: 19H1  App ver. 10.1905.30.0	skyanchor	null	null	null	null	null	null	
2019-08-01 18:29:26.0	2020-04-28 17:54:56.0	2020-12-03 00:01:32.0	closed	[Pri: 2, codebase quality, approved]	3	608	Automated UI Tests for the Scientific Calculator Mode	https://api.github.com/repos/microsoft/calculator/issues/608	https://github.com/microsoft/calculator/issues/608	**Problem Statement**  Currently, the basic smoke tests for Scientific calculator mode are all manual.  There aren't any automated UI tests for calculator modes other than the standard calculator mode.  Automation testing is faster than manual testing. Repeated test that can be automated, should be automated.      **Evidence or User Insights**  It would be helpful to developers and testers to have some streamlined, reliable UI tests for the Scientific calculator mode.      **Proposal**  - These tests would allow developers to know that their feature/code change, when introduced to the application, does not break other aspects of the application.    - These tests allow testers to focus on more creative, testing scenarios during manual testing rather than spending a lot of extra time executing tests that an automaton could complete.    **Goals**  - Replace basic, repeatable manual tests, with streamlined, reliable automated UI tests for the Scientific calculator mode  - Use these tests as a gate when checking in new features    **Non-Goals**  - The UI automated tests are not a replacement for Unit tests  - The UI automated tests will not cover end-to-end testing (It will cover smoke/BVT type tests)      **Low-Fidelity Concept**  Read through "ManualTests.md" (https://github.com/microsoft/calculator/blob/master/docs/ManualTests.md).  Would you prefer to execute these tests manually, or if possible, execute most of these through automation?       **Requested Assignment**  If possible, I would like to implement this.  	edwcry	null	null	null	null	null	null	
2019-08-01 18:32:11.0	2020-05-05 20:43:50.0	2020-12-03 00:01:31.0	closed	[Pri: 2, codebase quality, approved]	4	609	Automated UI Tests for the Programmer Calculator Mode	https://api.github.com/repos/microsoft/calculator/issues/609	https://github.com/microsoft/calculator/issues/609	**Problem Statement**  Currently, the basic smoke tests for Programmer calculator mode are all manual.  There aren't any automated UI tests for calculator modes other than the standard calculator mode.  Automation testing is faster than manual testing. Repeated test that can be automated, should be automated.      **Evidence or User Insights**  It would be helpful to developers and testers to have some streamlined, reliable UI tests for the Programmer calculator mode.      **Proposal**  - These tests would allow developers to know that their feature/code change, when introduced to the application, does not break other aspects of the application.    - These tests allow testers to focus on more creative, testing scenarios during manual testing rather than spending a lot of extra time executing tests that an automaton could complete.    **Goals**  - Replace basic, repeatable manual tests, with streamlined, reliable automated UI tests for the Programmer calculator mode  - Use these tests as a gate when checking in new features    **Non-Goals**  - The UI automated tests are not a replacement for Unit tests  - The UI automated tests will not cover end-to-end testing (It will cover smoke/BVT type tests)    **Low-Fidelity Concept**  Read through "ManualTests.md" (https://github.com/microsoft/calculator/blob/master/docs/ManualTests.md).  Would you prefer to execute these tests manually, or if possible, execute most of these through automation?       **Requested Assignment**  If possible, I would like to implement this.  	edwcry	null	null	null	null	null	null	
2019-08-01 21:04:33.0	2020-02-13 22:42:44.0	2020-12-03 00:01:30.0	closed	[codebase quality, approved]	4	610	Make Automated UI Tests for the Standard Calculator, faster, reliable, and AoT tests and Error Tests	https://api.github.com/repos/microsoft/calculator/issues/610	https://github.com/microsoft/calculator/issues/610	**Problem Statement**  Currently, the automated UI tests for Standard calculator mode are slow, keyboard test are flakey, and they do not include AoT tests.      **Evidence or User Insights**  It would be helpful to developers and testers to have some streamlined, reliable UI tests for the Standard calculator mode that also include tests for the new AoT feature.  Making these test reliable, and fast will encourage the use of these tests.    **Proposal**  - These tests would allow developers to know that their feature/code change, when introduced to the application, does not break other aspects of the application.    - These tests allow testers to focus on more creative, testing scenarios during manual testing rather than spending a lot of extra time executing tests that an automaton could complete.    **Goals**  - Make Standard calculator mode automated UI test, streamlined, faster, and more reliable  - Include a couple of basic error tests  - Include AoT tests  - Use these tests as a gate when checking in new features    **Non-Goals**  - The UI automated tests are not a replacement for Unit tests  - The UI automated tests will not cover end-to-end testing (It will cover smoke/BVT type tests)    **Low-Fidelity Concept**  In a forked repo, I made small changes to the UI test framework, and to the UI tests that impact the Standard Mode Functional:  https://github.com/v-credwa/calculator/tree/autocal/src  - Has error tests  - Has an AoT tests  - Resize app window before tests so that all required buttons and the history panel is visible  - Does not have changes to make keyboard tests more reliable  - May need more/fewer tests to streamline    **Requested Assignment**  If possible, I would like to implement this  	edwcry	null	null	null	null	null	null	
2019-08-02 02:09:31.0	2019-08-03 21:22:36.0	2020-12-03 00:01:29.0	closed	[fixed]	9	611	Unable to open certificate: TemporaryKey.pfx. The specified network password is incorrect 	https://api.github.com/repos/microsoft/calculator/issues/611	https://github.com/microsoft/calculator/issues/611	Unable to open certificate: TemporaryKey.pfx. The specified network password is incorrect     Calculator E:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VisualStudio\v16.0\AppxPackage\Microsoft.AppXPackage.Targets 821        OS Name:     Windows   OS Version:  10.0.18950   OS Platform: Windows   RID:         win10-x64    Visual Studio Community 2019  v16.2.9123.88    	kinglionsz	null	null	null	null	null	null	
2019-08-02 19:07:32.0	null	2021-08-02 09:05:10.0	open	[help wanted, Enhancement, Pri: 2, needs spec]	5	613	Add support for imaginary numbers	https://api.github.com/repos/microsoft/calculator/issues/613	https://github.com/microsoft/calculator/issues/613	**Problem Statement**  Windows Calculator currently does not support [imaginary numbers](https://en.wikipedia.org/wiki/Imaginary_number). Instead, we show "Invalid input":    ![image](https://user-images.githubusercontent.com/1414423/62392301-f8894180-b51b-11e9-8d92-fce63781e427.png)    **Evidence or User Insights**  The complex number system is part of US high school [common core curriculum](http://www.corestandards.org/Math/Content/HSN/). According to [some reports](https://matheducators.stackexchange.com/questions/11847/complex-numbers-in-high-school) in the Math Educators Stack Exchange, complex numbers are taught in at least some high school level math and science courses in China, Norway, Italy, India, Israel, and the UK.    **Proposal**  Add support for imaginary numbers in Scientific mode of Windows Calculator.    **Goals**  * Add support for output that includes imaginary numbers (e.g., √(-16) = 4 _i_)  * Add support for inputting expressions with imaginary numbers (e.g., _i_<sup>2</sup> = -1)  * Add <kbd>_i_</kbd> to the keyboard    **Non-Goals**  * Support for imaginary numbers outside of Scientific mode    **Low-Fidelity Concept**  ![image](https://user-images.githubusercontent.com/1414423/62392788-2b800500-b51d-11e9-9b1b-079d27b75570.png)    **Requested Assignment**  I'm just suggesting this idea.  I don't want to implement it.  	grochocki	null	null	null	null	null	null	
2019-08-02 21:16:31.0	2019-08-02 21:55:34.0	2020-12-03 00:01:28.0	closed	[fixed, Pri: 1]	1	614	Calculator uses WinUI 2.1 framework, which is not available in OS image	https://api.github.com/repos/microsoft/calculator/issues/614	https://github.com/microsoft/calculator/issues/614	Calculator uses WinUI 2.1 framework, which is not available in OS image, so we need to _temporarily_ revert to 2.0.	MicrosoftIssueBot	null	null	null	null	null	null	
2019-08-02 21:18:02.0	2019-08-02 21:38:28.0	2019-08-02 21:38:34.0	closed	[]	0	615	Downgrade WinUI version to 2.0, as that is what is available in the OS repo	https://api.github.com/repos/microsoft/calculator/issues/615	https://github.com/microsoft/calculator/pull/615	## Fixes #614     ### Description of the changes:  - Downgrade WinUI version 2.1 to 2.0. This is for current OS builds, and only a change to the 1906 branch. We will submit WinUI version 2.1 in our app store apps and in future OS builds.    ### How changes were validated:  - Visual inspection  - Ran some smoke tests  - Ran on touch device and tested swipe controls  	Geveffe	null	null	null	null	null	null	
2019-08-02 23:31:33.0	2019-08-03 21:22:12.0	2020-12-03 00:01:27.0	closed	[fixed]	5	616	build ,Error Certificate could not be opened: TemporaryKey.pfx. The specified network password is not correct.	https://api.github.com/repos/microsoft/calculator/issues/616	https://github.com/microsoft/calculator/issues/616	build sln,report the issues:    Severity Code Description Project File Line Suppression State  Error (active) E0312 no suitable user-defined conversion from "int" to "Platform::ValueType" exists CalcViewModel E:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.22.27905\include\vccorlib.h 1723     Severity Code Description Project File Line Suppression State  Warning NU1701 已使用“.NETFramework,Version=v4.6.1”而不是项目目标框架“.NETStandard,Version=v2.0”还原包“MSTest.TestAdapter 1.4.0”。此包可能与项目不完全兼容。 CalculatorUITestFramework C:\Users\lyl\AppData\Roaming\Code - Insiders\User\cpptest\calculator\src\CalculatorUITestFramework\CalculatorUITestFramework.csproj 1     Severity Code Description Project File Line Suppression State  Error  Certificate does not match supplied signing thumbprint: 3F0C32266A4D995CC08C9AEC3960CFF3EF0D1853 CalculatorUnitTests E:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\MSBuild\Microsoft\VisualStudio\v16.0\AppxPackage\Microsoft.AppXPackage.Targets 821     Severity Code Description Project File Line Suppression State  Error  Certificate could not be opened: TemporaryKey.pfx.  The specified network password is not correct.   Calculator E:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\MSBuild\Microsoft\VisualStudio\v16.0\AppxPackage\Microsoft.AppXPackage.Targets 821        - OS Build: 10.0.18950.0     - Architecture: X64     - Application Version: 10.1906.53.0     - Region: en-US     - Dev Version Installed: False    see:   https://gyazo.com/93cabe0905a0fc050abaf0f8bafb026c	kinglionsz	null	null	null	null	null	null	
2019-08-03 09:15:56.0	2019-08-03 21:22:12.0	2019-08-05 07:01:08.0	closed	[]	1	617	Fix certificate issue in CalculatorUnitTests	https://api.github.com/repos/microsoft/calculator/issues/617	https://github.com/microsoft/calculator/pull/617	## Fixes #616    The problem reported by users regarding the impossibility to compile `CalculatorUnitTests` is due to a mismatch between the certificate and the certificate thumbprint value in the vcxproj.    **.vcxproj**  ```xml  <PackageCertificateThumbprint>**3F0C32266A4D995CC08C9AEC3960CFF3EF0D1853</PackageCertificateThumbprint>  ```    **certificate info**  ![image](https://user-images.githubusercontent.com/1226538/62409776-2492da00-b591-11e9-845f-3178bcd0998a.png)    This mismatch isn't new and has always been present in this repository, but Visual Studio has ignored it so far. It seems that the certificate thumbprint verification was introduced in Visual Studio 2019 16.2. (the project compiles correctly with 16.1).    ### 3 ways to fix the issue  - Remove the `<PackageCertificateThumbprint>` from .vcxproj, so Visual Studio won't verify the certificate thumbprint  - Fix the value of `<PackageCertificateThumbprint>`  - Fully remove the certificate from the project (the certificate is only necessary when we generate a msix, not when Visual Studio deploys the application)    Because this project is for Unit Tests, I assume that it is never sideloaded using a msix and that therefore solution 3 is the most suitable, but in case it breaks the CI, the 2 others are also possible.    **EDIT: Calculator-CI fails if one of these properties is missing, Solution 2 is the only fix possible.**     ### How changes were validated:  - Manually tested    	rudyhuyn	null	null	null	null	null	null	
2019-08-04 07:33:46.0	2019-08-07 00:02:54.0	2020-12-03 00:01:26.0	closed	[won't fix]	3	618	RUN CalculatorUnitTests.exe ERROR:0X800700D8  Operation not supported 	https://api.github.com/repos/microsoft/calculator/issues/618	https://github.com/microsoft/calculator/issues/618	[see attach:](https://gyazo.com/6e276801665ca7830e8347f49a6c2a7e)    RUN CalculatorUnitTests.exe ERROR:0X800700D8  Operation not supported      - OS Build: 10.0.18950.0   - Architecture: X64   - Application Version: 10.1906.53.0   - Region: en-US   - Dev Version Installed: True	kinglionsz	null	null	null	null	null	null	
2019-08-06 00:37:06.0	2019-09-26 18:38:41.0	2019-09-26 18:38:41.0	closed	[fixing approved issue]	3	619	Do not collapse Update Rates button in a transient state	https://api.github.com/repos/microsoft/calculator/issues/619	https://github.com/microsoft/calculator/pull/619	## Fixes #352     ### Description of the changes:  In this change I am fixing an issue where focus moves from the "Update Rates" button to the "CE" button without being initiated by the user explicitly. The issue is that when "Update Rates" is pressed the button becomes collapsed. When the button becomes collapsed the XAML focus manager then migrates focus to the next logical thing (which happens to be the "CE" button). In this change I modified the "Update Rates" button to not collapse when being pressed. For completeness I added a storyboard animation to fade in everything that was binding to IsCurrencyLoadingVisible so that it matches the animations of the Timestamp. The animations are only used if the user settings enable animations.    Now that the "Update Rates" button is always visible there is a possibility that the user will click it numerous times before the first update actually completes. My change safeguards this scenario by adding a logical check in the button's click handler so that work is only done if we are not already updating the rates.    ### How changes were validated:  Manual testing    	zherman	null	null	null	null	null	null	
2019-08-06 00:53:31.0	null	2021-08-02 09:05:13.0	open	[Enhancement, Pri: 2, needs spec]	5	620	Enable free-form input of math expressions	https://api.github.com/repos/microsoft/calculator/issues/620	https://github.com/microsoft/calculator/issues/620	**Problem Statement**  Today, when you input an expression, you are committing previous input with each operator, which means that you cannot easily edit or undo what you have already committed. We also have a key mapping such that keyboard keys are mapped to specific button inputs. This means that to enter "cos()", you actually press o. This is unintuitive and makes entering equations difficult.    We also currently only support linear input, which means we display this:    x ^ 2 + √(2x)    instead of this:    ![image](https://user-images.githubusercontent.com/1414423/62503564-92b1e980-b7a9-11e9-8f73-7933cf7ead89.png)    **Evidence or User Insights**  Our current keyboard mapping is unintuitive and requires extensive documentation to educate users (#157). Not only is free-form input more intuitive, there have been several issues opened that would require support for it as a pre-requisite (e.g., #163, #519, #150).    **Proposal**  Enable free-form input across calculator modes, which means that users can place the cursor anywhere inside of an equation input box to edit the expression. This also means that users can type or paste in "cos(x)", which feels natural, as this is how you would write this expression up on a whiteboard.    > Note: This is the same input behavior that we are going to have in graphing mode.    **Goals**  * Users can input their equations with free-form input  * Expressions are displayed in rich [MathML](https://www.w3.org/Math/) styling format    **Non-Goals**  * Build a parser (this is covered by #526, which is a prerequisite for this work)  * Introduce new input methods other than keyboard (e.g., inking input is covered by #24)    **Low-Fidelity Concept**    ![image](https://user-images.githubusercontent.com/1414423/62503564-92b1e980-b7a9-11e9-8f73-7933cf7ead89.png)  <sub>Just an example of rendering as MathML</sub>    **Requested Assignment**  I'm just suggesting this idea.  I don't want to implement it.  	grochocki	null	null	null	null	null	null	
2019-08-06 03:08:25.0	2019-08-06 16:08:02.0	2020-12-03 00:01:25.0	closed	[by design]	9	621	CalculatorUITests run errors	https://api.github.com/repos/microsoft/calculator/issues/621	https://github.com/microsoft/calculator/issues/621	OS Build: 10.0.18950.0    Architecture: X64    Application Version: 10.1906.53.0    Region: en-US    Dev Version Installed: True    System.Exception    HResult=0x80131500    Message=The local WinAppDriver server has not been started: c:\Program Files (x86)\Windows Application Driver\winappdriver.exe Arguments: .       Source=CalculatorUITestFramework    StackTrace:     at CalculatorUITestFramework.WindowsDriverLocalService.Start() in E:\CodeSources\cpptest\calculator\src\CalculatorUITestFramework\WindowsDriverLocalService.cs:line 81     at CalculatorUITestFramework.WinAppDriver.SetupCalculatorSession(TestContext context) in E:\CodeSources\cpptest\calculator\src\CalculatorUITestFramework\WinAppDriver.cs:line 50     at CalculatorUITests.StandardModeFunctionalTests.ClassInitialize(TestContext context) in E:\CodeSources\cpptest\calculator\src\CalculatorUITests\StandardModeFunctionalTests.cs:line 24    Inner Exception 1:  Win32Exception: The system cannot find the file specified    Test Name: KeyboardInput_Cubed  Test FullName: Test Detail Summary  Test Source: E:\CodeSources\cpptest\calculator\src\CalculatorUITests\StandardModeFunctionalTests.cs : line 246  Test Outcome: Failed  Test Duration: 0:00:00    Test Name: KeyboardInput_Cubed  Test Outcome: Failed  Result StackTrace:   at CalculatorUITestFramework.WindowsDriverLocalService.Start() in E:\CodeSources\cpptest\calculator\src\CalculatorUITestFramework\WindowsDriverLocalService.cs:line 81     at CalculatorUITestFramework.WinAppDriver.SetupCalculatorSession(TestContext context) in E:\CodeSources\cpptest\calculator\src\CalculatorUITestFramework\WinAppDriver.cs:line 50     at CalculatorUITests.StandardModeFunctionalTests.ClassInitialize(TestContext context) in E:\CodeSources\cpptest\calculator\src\CalculatorUITests\StandardModeFunctionalTests.cs:line 24  Result Message: Class Initialization method CalculatorUITests.StandardModeFunctionalTests.ClassInitialize threw exception. System.Exception: System.Exception: The local WinAppDriver server has not been started: c:\Program Files (x86)\Windows Application Driver\winappdriver.exe Arguments: .    ---> System.ComponentModel.Win32Exception: The system cannot find the file specified.      [see here](https://gyazo.com/29487b8b1c22512c4ad27a7ef8079aac)    [and here](https://gyazo.com/f15da328a97a76cc74924fddbeb5cf90)    [and here](https://gyazo.com/8e82262cf6978971fbb4d3866713d746)	kinglionsz	null	null	null	null	null	null	
2019-08-06 10:01:32.0	2019-08-06 21:07:50.0	2019-08-06 21:07:50.0	closed	[]	2	622	AlwaysOnTop: remove improper use of AcrylicBrush	https://api.github.com/repos/microsoft/calculator/issues/622	https://github.com/microsoft/calculator/pull/622	## Code quality    ### Description of the changes:  - AcrylicBrush with BackgroundSource="HostBackdrop" were used in the Always-on-top view to hide the content behind the 2 controls `ScrollLeft` and `ScrollRight` in the OverflowTextBlock control, instead, we should use Grid.Columns to correctly position the 2 buttons and the ScrollViewer.    ### How changes were validated:  - Manually  	rudyhuyn	null	null	null	null	null	null	
2019-08-06 11:02:41.0	2019-08-20 19:55:50.0	2019-08-21 07:26:39.0	closed	[codebase quality]	2	623	Remove unused expression item template selector	https://api.github.com/repos/microsoft/calculator/issues/623	https://github.com/microsoft/calculator/pull/623	## Code quality    ### Description of the changes:  - Code cleaning:    - remove unused `DataTemplate` and `ExpressionItemTemplateSelector` from `Calculator.xaml`    - Replace incorrect `ThemeResource` references by `StaticResource` when they don't depend on the currently active theme.      ### How changes were validated:  - Manually	rudyhuyn	null	null	null	null	null	null	
2019-08-06 16:38:24.0	2019-08-06 21:42:40.0	2019-08-06 21:42:43.0	closed	[documentation]	0	624	Updated README to note the requirement for installing WinAppDriver	https://api.github.com/repos/microsoft/calculator/issues/624	https://github.com/microsoft/calculator/pull/624	## Fixes #621    ### Description of the changes:  - Our documentation should make it clear to contributors what the expected developer    environment is in order for the project to work.  In this case, a user tried to run the UI    tests, unaware that they needed WinAppDriver installed on their machine.  This updates    the README to indicate that requirement.  - Trailing spaces from other parts of the document were also removed as part of this change	HowardWolosky	null	null	null	null	null	null	
2019-08-06 22:35:43.0	2019-09-05 18:01:58.0	2020-12-03 00:01:24.0	closed	[codebase quality, approved]	5	625	 Replace use of AppChromeAcrylicHostBackdropMediumLowBrush to hide controls underneath.	https://api.github.com/repos/microsoft/calculator/issues/625	https://github.com/microsoft/calculator/issues/625	## Describe the bug    The new Always-On-Top UI uses `AppChromeAcrylicHostBackdropMediumLowBrush` in the style `AlwaysOnTopStyleS` to partially hide the left and right part of the Scrollviewer when `ScrollLeft` and `ScrollRight` buttons are displayed.    See code:  https://github.com/microsoft/calculator/blob/master/src/Calculator/Views/Calculator.xaml#L181    This is not compatible with #598, we should hide/mask the UI underneath instead of cover it with a brush. Alternative solutions not using a Brush are possible and should be used instead.    ## Expected    We should keep the current layout (a 3-column grid with the scrollviewer using all the space available instead of the scrollviewer using only the center column) to avoid visual glitches when users scroll (due to the resizing of the scrollviewer). But instead of using a background brush to partially obscure the scrollviewer when the buttons are displayed, we should:  - use the property Clip of ScrollViewer  - or modify ScrollViewer.Padding + EditableToken.Margin (preferred solution)    Both solutions have been tested and work correctly:  ![8E0A60FB-035E-4E90-B3E9-7D2AC547D9E7](https://user-images.githubusercontent.com/1226538/62581808-25f92680-b85f-11e9-8780-945be33356d3.GIF)      **Device and Application Information**   - OS Build: 10.0.18362.0   - Architecture: X64   - Application Version: 10.1906.53.0   - Region: en-US   - Dev Version Installed: True    **Requested Assignment**  If possible, I would like to fix this.  	rudyhuyn	null	null	null	null	null	null	
2019-08-06 22:52:27.0	2019-08-07 02:52:20.0	2019-08-07 02:52:20.0	closed	[]	1	626	Fixes Always-on-Top crashes in release	https://api.github.com/repos/microsoft/calculator/issues/626	https://github.com/microsoft/calculator/pull/626	### Description of the changes:  - Always-on-Top currently crashes in release due to a compiler optimization bug related to co_await's. I've fixed this by turning off compiler optimization for parts of the code that uses co_await's.    ### How changes were validated:  - Manual testing.    Related to Issue #560	greedyAI	null	null	null	null	null	null	
2019-08-06 22:57:41.0	2019-08-06 23:32:14.0	2019-08-06 23:32:17.0	closed	[Bug]	0	627	Prevent Dev title from showing up on Store builds	https://api.github.com/repos/microsoft/calculator/issues/627	https://github.com/microsoft/calculator/pull/627	Commit 0722781fc updated the app to use `DevAppName` for the app's window title when it was a non-official build, based on the state of `IsStoreBuild`.    Unfortunately, `IsStoreBuild` is a _project_ level variable defined in [build-app-internal.yaml](https://github.com/microsoft/calculator/blob/0722781fc60565938da42ea252766b30d02e5fb5/build/pipelines/templates/build-app-internal.yaml#L36), but not a _compile-time_ defined value.    To solve this, we are now defining `IS_STORE_BUILD` in `Calculator.vcxproj` when `IsStoreBuild='True'`, the same way that we set `SEND_DIAGNOSTICS` for official builds, and we'll change the window title based on that new `#define`.    Using this new `#define` can lead us down a slippery slope.  We need to limit the amount of divergent code that we have between dev/official builds.  This should be hopefully one of very few instances where this value is ever used.    ### Description of the changes:  - Sets a new `#define` named `IS_STORE_BUILD` when the _project_ flag `IsStoreBuild` is set to `True` for the `Calculator` project.  - Updated the check for `IsStoreBuild` when determining the window title name to instead check against `IS_STORE_BUILD`    ### How changes were validated:  - Launched via the debugger and verified both `IS_STORE_BUILD` and `SEND_DIAGNOSTICS` were not set.  Then, modified the project file and changed the check to be `IsStoreBuild != 'True'` and ran the same checks again, and verified that this time both `IS_STORE_BUILD` and `SEND_DIAGNOSTICS` were set.	HowardWolosky	null	null	null	null	null	null	
2019-08-07 00:11:47.0	2019-09-19 23:41:51.0	2021-07-12 21:48:01.0	closed	[fixing approved issue]	3	628	Add copy button to history menu item context menu	https://api.github.com/repos/microsoft/calculator/issues/628	https://github.com/microsoft/calculator/pull/628	## Fixes #429     ### Description of the changes:  Added a Copy button to the context menu for history menu items located above the delete button in the menu. Copy only copies the result and not the entire content of the history item (equation and result).    ### How changes were validated:  Manual Testing  	zherman	null	null	null	null	null	null	
2019-08-07 03:01:26.0	2019-10-10 06:32:31.0	2020-12-03 00:01:23.0	closed	[Area: User Experience, duplicate, Pri: 2]	5	629	Handle Calculator AoT error message text more gracefully	https://api.github.com/repos/microsoft/calculator/issues/629	https://github.com/microsoft/calculator/issues/629	**Describe the bug**  Error messages in Always-on-Top mode may overflow, introducing arrows unintentionally.    **Steps To Reproduce**  1. Launch Calc  2. Enter AoT mode  3. Divide by zero    Notice that the error message text is big and does not fit all in the display area    **Expected behavior**  _Error messages_ scale to fit the display without causing overflow with arrows.    **Screenshots**  ![image](https://user-images.githubusercontent.com/1414423/62646027-48904b80-b902-11e9-9533-5c5de6c34790.png)    **Device and Application Information**   - OS Build: 10.0.18942.0   - Architecture: X64   - Application Version: 10.1906.53.0   - Region: en-US   - Dev Version Installed: True    **Requested Assignment**  I'm just reporting this problem.  I don't want to fix it.	MicrosoftIssueBot	null	null	null	null	null	null	
2019-08-07 03:01:30.0	null	2021-05-27 00:32:04.0	open	[Bug, Area: Accessibility, Pri: 3, triage approved]	3	630	When in high contrast mode the About menu item once selected can never be unselected	https://api.github.com/repos/microsoft/calculator/issues/630	https://github.com/microsoft/calculator/issues/630	**Describe the bug**  When in high contrast mode the About menu item once selected can never be unselected.    **Steps To Reproduce**  When in high contrast mode the About menu item once selected can never be unselected  - In high contrast mode open the calculator  - Click on the About in the drop down menu  - Try unselect in or get rid of the highlighting    **Expected behavior**  High contrast color is applied appropriately    **Screenshots**  ![image](https://user-images.githubusercontent.com/1414423/62645939-154dbc80-b902-11e9-82a5-2eda0f5d2ad3.png)    **Device and Application Information**   - OS Build: 10.0.18942.0   - Architecture: X64   - Application Version: 10.1906.53.0   - Region: en-US   - Dev Version Installed: True    **Requested Assignment**  I'm just reporting this problem.  I don't want to fix it.	MicrosoftIssueBot	null	null	null	null	null	null	
2019-08-07 08:38:39.0	2019-08-19 23:34:50.0	2020-12-03 00:01:21.0	closed	[Area: User Experience, fixed]	1	631	The app title is no longer grayed out when the application loses focus	https://api.github.com/repos/microsoft/calculator/issues/631	https://github.com/microsoft/calculator/issues/631	**Describe the bug**  A regression seems to have been introduced, the behavior added with #442 doesn't work anymore.    **Steps To Reproduce**  - Open the calculator  - Focus another windows  - Observe that the title is no more gray    **Expected behavior**  - The title should be gray    **Screenshots**  ![image](https://user-images.githubusercontent.com/1226538/62608043-f9232e80-b8b3-11e9-97ab-d09e995f979c.png)  Left: public release, Right: current dev version    **Device and Application Information**   - OS Build: 10.0.18362.0   - Architecture: X64   - Application Version: 10.1906.53.0   - Region: en-US   - Dev Version Installed: True	rudyhuyn	null	null	null	null	null	null	
2019-08-07 08:45:53.0	2019-08-19 23:34:50.0	2019-08-19 23:34:50.0	closed	[fixing approved issue]	4	632	Fix regression bug with application title no longer grayed out.	https://api.github.com/repos/microsoft/calculator/issues/632	https://github.com/microsoft/calculator/pull/632	## Fixes #631     ### Description of the changes:  - Move back the VisualStateManager node to the root XAML element to fix visual states of the titlebar.    ### How changes were validated:  - Manually    	rudyhuyn	null	null	null	null	null	null	
2019-08-07 09:16:12.0	2020-12-16 22:46:38.0	2020-12-17 03:52:38.0	closed	[fixing approved issue]	2	633	Prevent the user interface from shifting at launch	https://api.github.com/repos/microsoft/calculator/issues/633	https://github.com/microsoft/calculator/pull/633	## Fixes #605     ### Cause of the glitch    At launch, properties of CoreApplicationViewTitleBar aren't initialized correctly during the first seconds, creating 2 issues:  - Because `IsVisible == False`, we reduce our custom title bar  - Because `Height == 0`, we change the size of our custom title bar to 0    Then ~ 1 second later, the application receives `TitleBar::LayoutMetricsChanged` and we "fix" IsVisible and Height, causing this visual glitch.    ### Description of the changes:  - At launch, if the current device is a PC and not in Tablet Mode, we don't modify the visibility of the title bar.   - We don't resize the title bar if the height is 0, we will only rely on `IsVisible` to hide the title bar.    ### Other improvements  - Fixed the Visual Studio warnings concerning ` this` and lamba expressions.  - Fixed bugs when the height of the title bar is higher than 32    ### How changes were validated:  - Manually in English and Arabic (RtL)    	rudyhuyn	null	null	null	null	null	null	
2019-08-07 10:40:00.0	2019-08-23 20:42:01.0	2019-08-23 20:42:11.0	closed	[codebase quality]	2	634	General improvement of the title bar for Always-On-Top.	https://api.github.com/repos/microsoft/calculator/issues/634	https://github.com/microsoft/calculator/pull/634	Code cleaning + Make sure issues similar to #587 won't happen with AOT.    ### Description of the changes:  - Make TitleBar generic and remove ApplicationViewModel dependency, so other apps can use this control  - Force the calculation of the title bar visibility when we enter and leave AOT.  - Use Visual States instead of bindings to manage the 2 states of the title bar.  - (very) small performance improvement: deferred loading of `ExitAlwaysOnTopButton`  - Make sure `ExitAlwaysOnTopButton` has the same height than the title bar (the height was fixed)  - Remove the converter and properties not used by `ExitAlwaysOnTopButton` (FontWeight, AllowFocusWhenDisabled, Grid.Row)    In ApplicationViewModel:  - Use macro to declare `IsAlwaysOnTop`  - Make `IsAlwaysOnTop` and `DisplayNormalAlwaysOnTopOption` read-only    ### How changes were validated:  - Manually    	rudyhuyn	null	null	null	null	null	null	
2019-08-07 20:55:16.0	2019-08-07 20:56:54.0	2019-08-07 21:31:11.0	closed	[]	2	635	Fix titlebar changing color based off window focus state	https://api.github.com/repos/microsoft/calculator/issues/635	https://github.com/microsoft/calculator/pull/635	## Fixes #.  #631     ### Description of the changes:  The VisualStateManager tag associated with the visual states used for the titlebar got moved into a difference scope as part of the Always-on-Top feature by mistake. This caused the states to not function properly. Moving the XAML elements back to their original scope fixes the issue. The titlebar is still not visible when in Always-on-Top mode.    ### How changes were validated:  Manual Testing  	zherman	null	null	null	null	null	null	
2019-08-08 19:12:50.0	2019-08-09 01:37:06.0	2019-08-09 01:37:06.0	closed	[]	0	636	Update localized strings 2019-08-08	https://api.github.com/repos/microsoft/calculator/issues/636	https://github.com/microsoft/calculator/pull/636	Adding new strings from our internal localization system.	mcooley	null	null	null	null	null	null	
2019-08-08 20:16:57.0	2019-08-16 23:11:44.0	2019-08-16 23:11:44.0	closed	[graphing calculator]	0	637	Adds zoom buttons to graph controls	https://api.github.com/repos/microsoft/calculator/issues/637	https://github.com/microsoft/calculator/pull/637	### Description of the changes:  - Zoom-in and zoom-out buttons have been added. When clicked or pressed, they call `GraphingControl`'s `ScaleRange` function. These buttons take advantage of `RepeatButton`'s API to allow for hold-down repeat click behavior.  - Zoom reset button has been added. When clicked or pressed, it calls `GraphingControl`'s `ResetGrid` function.  - Appropriate keyboard shortcuts and light-mode styling for these buttons have also been added.    ### How changes were validated:  - Manual testing.  	greedyAI	null	null	null	null	null	null	
2019-08-08 23:24:37.0	2019-10-04 19:24:44.0	2019-10-04 19:24:44.0	closed	[graphing calculator]	2	638	Passive & Active tracing	https://api.github.com/repos/microsoft/calculator/issues/638	https://github.com/microsoft/calculator/pull/638	## Fixes #.      ### Description of the changes:  Add the ability to trace the values of the graphed lines.  -  -    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  Manual/ad-hoc retail and debug.  -  -  -    	DavidShoe	null	null	null	null	null	null	
2019-08-13 13:03:10.0	2019-08-13 14:22:39.0	2019-08-15 07:04:46.0	closed	[off-topic]	2	639	Update README.md	https://api.github.com/repos/microsoft/calculator/issues/639	https://github.com/microsoft/calculator/pull/639	## Fixes #.      ### Description of the changes:  -This alters the readme file and explains a complicated term.  -  -    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  -  -  -    	AbhijeetGhosh	null	null	null	null	null	null	
2019-08-14 06:12:29.0	2019-08-26 16:31:14.0	2019-08-26 16:31:14.0	closed	[fixing approved issue]	2	640	Optimize BitFlipPanel to suppress flicker when users switch between bit lengths	https://api.github.com/repos/microsoft/calculator/issues/640	https://github.com/microsoft/calculator/pull/640	## Fixes #408    The main cause of this flicker is the long delay between the value changes of Checkbox::IsChecked and Checkbox::IsEnabled properties.    This is due to how the calculator generates the 64 different `AutomationProperties::Name` values and how the app converts the number in enumerable<bool>. These 2 tasks were too CPU-intensive for no reason.    ### Description of the changes:  - Optimize how we convert the binary number into a list of booleans:     - Before:         - In VM: call GetStringForDisplay, GroupDigitsPerRadix (add spaces), localizer.LocalizeDisplayValue (convert '0', '1' into the local equivalents)         - In View: remove LTR, RTL, spaces, etc... , remove characters added by LocalizeDisplayValue, add padding ('0'), compare each characters with the local '0'      - Now:          - In VM: call GetStringForDisplay, convert the string in vector<bool>          - in View: nothing   - remove the very heavy and not optimized `BitFlipAutomationNameConverter` converter and replace it by a lighter and more optimized way to generate strings (note: this converter was called 64 times every time the number was changed or the bit length changed)  - Create new type `BitLength` and use only one way to represent bit lengths in `CopyPasteManager`, `StandardCalculatorViewModel` (instead of 4 booleans + 1 enum)  - The view model is now responsible for sending commands to CalculatorManager instead of the view.  - optimize `CalculatorProgrammerBitFlipPanel`     - remove half of native bindings    - modify how the application manages the visibility of this control    ### How changes were validated:  - Tested in all modes    ### Result  - CPU usage decreased when users enter a new number or change bit length  - No more flickering    	rudyhuyn	null	null	null	null	null	null	
2019-08-16 18:28:28.0	2019-09-04 21:20:59.0	2019-09-04 21:20:59.0	closed	[]	2	641	Remove ProgModeRadixChange unload	https://api.github.com/repos/microsoft/calculator/issues/641	https://github.com/microsoft/calculator/pull/641	# Description of the changes:  Looks like by the time the OnUnloaded event is called Model can already be null in cases where one of the Calculator windows is being closed. This PR uses a dependency property instead of an event to fix the crash.    ### How changes were validated:  Manual testing    	joseartrivera	null	null	null	null	null	null	
2019-08-20 03:01:22.0	2019-10-09 14:39:56.0	2020-12-03 00:01:20.0	closed	[Pri: 3, Area: User Experience, fixed, hacktoberfest]	4	642	Right-click on numbers fails to highlight after 'selecting all' from context menu	https://api.github.com/repos/microsoft/calculator/issues/642	https://github.com/microsoft/calculator/issues/642	**Describe the bug**  When trying to "select all" when right-clicking on the main display output, you are not able to actually select all text.    **Steps To Reproduce**  1. Enter in a number in Calculator  2. Right-click on the number and click "select all"    **Expected behavior**  Display text appears selected.    **Screenshots**  Could not capture a good screenshot.    **Device and Application Information**   - OS Build: 10.0.18942.0   - Architecture: X64   - Application Version: 10.1907.22.0   - Region: en-US   - Dev Version Installed: True    **Additional context**  Right-clicking again selects all text, so it appears this bug might only affect visuals.    **Requested Assignment**  I'm just reporting this problem.  I don't want to fix it.  	MicrosoftIssueBot	null	null	null	null	null	null	
2019-08-21 02:01:38.0	2019-08-21 02:15:45.0	2020-12-03 00:01:19.0	closed	[duplicate]	2	643	1+2*3=9？	https://api.github.com/repos/microsoft/calculator/issues/643	https://github.com/microsoft/calculator/issues/643	![image](https://user-images.githubusercontent.com/15053276/63396723-a0e34500-c3fa-11e9-9a67-50d76ddbaede.png)  	NZPF	null	null	null	null	null	null	
2019-08-21 22:16:00.0	2019-08-21 22:40:01.0	2019-08-21 22:40:02.0	closed	[]	0	644	Remove colorize and fullcolor app list icons	https://api.github.com/repos/microsoft/calculator/issues/644	https://github.com/microsoft/calculator/pull/644	Remove the versions of the CalculatorAppList icon with "colorize" and "fullcolor" qualifiers. The code in the OS which would have loaded these has been gone for a long time.	mcooley	null	null	null	null	null	null	
2019-08-23 18:55:32.0	2019-08-26 17:29:57.0	2019-08-26 17:29:57.0	closed	[]	0	645	Update internals package to 0.0.18	https://api.github.com/repos/microsoft/calculator/issues/645	https://github.com/microsoft/calculator/pull/645	Update the internals package to 0.0.18, which removes the internal icons which were previously removed from this repo in #644.	mcooley	null	null	null	null	null	null	
2019-08-23 21:06:48.0	2019-09-29 23:42:38.0	2019-09-29 23:42:38.0	closed	[codebase quality]	0	646	Code cleanup: simplify NarratorNotifier	https://api.github.com/repos/microsoft/calculator/issues/646	https://github.com/microsoft/calculator/pull/646	Now that the RaiseNotificationEvent API is available on all platforms where the Calculator app runs, we can remove the factory classes which switched between RaiseNotificationEvent and an alternative implementation based on live regions.	mcooley	null	null	null	null	null	null	
2019-08-28 09:05:05.0	2019-09-05 18:01:58.0	2019-09-05 18:01:59.0	closed	[fixing approved issue, codebase quality]	1	647	Replace AppChromeAcrylicHostBackdropMediumLowBrush from OverflowTextBlock + improvements	https://api.github.com/repos/microsoft/calculator/issues/647	https://github.com/microsoft/calculator/pull/647	## Fixes #625      ### Description of the changes:  - Remove AcrylicChromeBrushes and use dynamic Margin/Padding on the Scrollviewer instead    Also:  - ⚠ MainPage was not correctly formatted with XAML Styler  - Simplify how the control manages the visibility of the button  - Improve how the control manages the focus of `ScrollLeft` and `ScrollRight`.       - ScrollLeft will be focused after ScrollRight is collapsed even if the user didn't click on the ScrollRight (the new version will do it when users scroll for example)  - Refactoring to use only 1 style for `CalculatorAlwaysOnTopResults` instead of 2.  - Remove functions without definitions from `OverflowTextBlock` header file  - Separate ScrollLeft and ScrollRight click event handlers.  - Make `scrollRatio` a constexpr.  - Remove ColumnHeight and rename ColumnWidth to a more self-explanatory name.    ### How changes were validated:  - Manually    	rudyhuyn	null	null	null	null	null	null	
2019-08-29 08:15:49.0	null	2021-08-02 09:05:17.0	open	[Pri: 2, codebase quality, approved]	3	648	AlwaysOnTop should use the same control than the normal mode to display calculation results.	https://api.github.com/repos/microsoft/calculator/issues/648	https://github.com/microsoft/calculator/issues/648	### Describe the issue  Instead of using the same control than in Normal mode to display the current value, AOT use a different control based on `OverflowText`.     This control wasn't made for this purpose, we should use the same control in both modes (cleaner, providing more features and easier to support).     Originally, the Calculator had 2 similar controls:    - **CalculationResult**      - Purpose: Display a numeric value or an error message      - Usage: Display the result of a calculation or the current value entered      - Unique features: Support auto font resizing, made to host a textblock, support left/right keys to scroll, support error messages, including change the font to correctly display the message, support LtR for error messages, support context menu (copy/paste the value)      - The control scrolls automatically to the end when the value changed (to replicate this behavior, `OverflowText` modified the VM and misuse `TokenUpdated` )    - **OverflowText**      - Purpose: Display a ItemsControl      - Usage: Display the current operation (e.g.: `123 + 243 x 343`)      - Unique features: improve the accessibility of the containing ItemsControl.    It is very clear when we compare the 2 controls that the first one corresponds exactly to our needs unlike the second. The current implementation tries to adjust/tweak the style of OverflowText to look like CalculationResult, instead we should use it directly.    ### How will we improve the code quality and the UX?    Using the CalculationResult will effortlessly add the following features to AOT:   - better sizing of the text, the current implementation (via visual states in Calculator.xaml) only uses 2 font sizes, a large and a very small one (see screenshots)  - support of Left/Right keys  - better display of error messages (a comment from this repository mentions that we should improve this point in AOT mode, switching to CalculationResult will solve the problem)  - Support copy/paste via context menu.  - All future enhancements to the normal view will be added automatically in AOT mode.  - We will be able to improve the display of the operation without impacting AOT mode.  - slightly better performance, only 1 control instead of 2 will be used to display results  - remove huge template from Calculator.xaml, making the code easier to read.  - improve transition between the 2 mode, a text selected in one mode will still be selected in the other.    ### Screenshots    <img src="https://user-images.githubusercontent.com/1226538/63923094-cbd12880-c9fa-11e9-9112-3215d7eec9e1.png" height="240" />  The current implementation supports only 2 font sizes, not adapted to all the sizes supported by AOT    <img src="https://user-images.githubusercontent.com/1226538/63923440-6c274d00-c9fb-11e9-9bf0-9493541b8628.png" height="240" />  The display of error messages can be improved    ### What do we need to do?  -  Add the `ScrollButtonsPlacement="Above"` mode added by #647 in OverflowTextBlock to CalculationResult. (will it be necessary if the control auto-resizes the font?)  - Remove `AlwaysOnTopStyleS`, `AlwaysOnTopStyleM` and `AlwaysOnTopResults` from `Calculator.xaml`  - in visual states associated to AOT, set the correct values for `Result.MinFontSize`, `Result.MaxFontSize` to perfectly fit the AOT UI.      ### Device and Application Information   - OS Build: 10.0.18875.0   - Architecture: X64   - Application Version: 10.1905.30.0   - Region: en-US   - Dev Version Installed: True    ### Requested Assignment  If possible, I would like to fix this.  	rudyhuyn	null	null	null	null	null	null	
2019-08-29 09:44:28.0	2020-01-07 19:03:47.0	2020-01-07 19:03:47.0	closed	[codebase quality]	0	649	Code cleaning: Remove all properties/functions not used in CalculationResult	https://api.github.com/repos/microsoft/calculator/issues/649	https://github.com/microsoft/calculator/pull/649	### Description of the changes:  - Remove all obsolete properties: `AccentColor`, `MaxExpressionHistoryCharacters`, `ExpressionVisibility`, `DisplayStringExpression` (I suppose this control displayed the expression too in the past?)  - Separate ScrollLeft and ScrollRight click event handlers    ### How changes were validated:  - manually    	rudyhuyn	null	null	null	null	null	null	
2019-08-30 08:17:20.0	2019-09-09 16:57:30.0	2020-12-03 00:01:18.0	closed	[Pri: 3, Area: User Experience, fixed]	1	650	CalculationResult doesn't correctly update the status of scroll buttons	https://api.github.com/repos/microsoft/calculator/issues/650	https://github.com/microsoft/calculator/issues/650	## Describe the bug  The `CalculationResult` control has some issues with scroll buttons:  - when using a mouse, scroll buttons are only updated after the mouse has left the control  - buttons are never updated with touch events.  - buttons are not updated when users scroll    ℹ _Issue visible in the public and dev version of the Calculator_    ## Steps To Reproduce  - horizontally resize the window to the minimum   - switch to the Programmer mode  - enter the number ‭999999999999999999‬ (decimal mode)  - Click on "BIN" to switch to binary mode  - try one of the 3 actions listed above    ## Expected behavior  Visibility of scroll buttons should be automatically updated    ## Screenshots    ![4FF2F4BD-35E5-488A-8F04-376FBF11F586](https://user-images.githubusercontent.com/1226538/64004728-a9efa880-cac3-11e9-9a2d-8a008025dee8.GIF)    ## Device and Application Information   - OS Build: 10.0.18362.0   - Architecture: X64   - Application Version: 10.1906.53.0   - Region: en-US   - Dev Version Installed: True      ## Requested Assignment    If possible, I would like to fix this. 🖐  	rudyhuyn	null	null	null	null	null	null	
2019-08-30 08:29:50.0	2020-04-08 00:08:44.0	2020-12-03 00:01:17.0	closed	[Bug, Area: User Experience, fixed, Pri: 2]	2	651	CalculationResult should keep the focus on scroll buttons when their visibility changes	https://api.github.com/repos/microsoft/calculator/issues/651	https://github.com/microsoft/calculator/issues/651	## Problem Statement  This is hard to test because of #650, but contrary to `OverflowTextBlock`, `CalculationResult` does nothing to keep the focus when the button `ScrollRight` has the focus and becomes collapsed.    See code of `OverflowTextBlock` here: https://github.com/microsoft/calculator/blob/796d171960a7351bb2c36cac5cec22d3e74ec0de/src/Calculator/Controls/OverflowTextBlock.cpp#L201    ## Proposal  `CalculationResult` should have the same behavior than `OverflowTextBlock` and give the focus to `ScrollLeft` when `ScrollRight` has it and becomes collapsed.    ## Goals  Get consistent behavior between controls and improve UX.    ## Requested Assignment  If possible, I would like to implement this because already done 😉  	rudyhuyn	null	null	null	null	null	null	
2019-08-30 09:14:45.0	2019-09-09 16:57:31.0	2019-09-15 06:46:13.0	closed	[Bug, fixing approved issue]	1	652	Fix scroll buttons in CalculationResult	https://api.github.com/repos/microsoft/calculator/issues/652	https://github.com/microsoft/calculator/pull/652	## Fixes #650      ### Description of the changes:  - Check ViewChanged events and verify if we need to hide/show `ScrollLeft`/`ScrollRight`  - To improve the reliability, I've added a sufficient safety margin (4 pixels) to guarantee the detection (it happens sometimes when users scroll to the maximum, HorizontalOffset is a little low by a few sub-pixels and when users scroll again to the right, no events are launched)    Code quality:  - unregister `SizeChanged`, `ScrollLeft::Click` and `ScrollRight::Click` events (were missing)  - make `ScrollLeft` and `ScrollRight` independent (templates in the app always use both, but it's cleaner this way).  - rename `TextContainerSizeChanged` to `OnTextContainerSizeChanged` to be consistent with other events.  - support <kbd>&larr;</kbd> and <kbd>&rarr;</kbd> keys even if `ScrollLeft` and `ScrollRight` are not part of the template.    ### How changes were validated:  - Manually    	rudyhuyn	null	null	null	null	null	null	
2019-08-31 02:31:11.0	2019-10-18 20:40:14.0	2020-12-03 00:01:16.0	closed	[Enhancement, approved, hacktoberfest]	11	653	Don't hide expression after pressing Enter	https://api.github.com/repos/microsoft/calculator/issues/653	https://github.com/microsoft/calculator/issues/653	**Problem Statement**  Calculator has this nice display that shows the expression that is about to be calculated.  ![image](https://user-images.githubusercontent.com/11667451/64058193-dc051700-cb64-11e9-835b-cc39845d7376.png)  Upon pressing Enter, the expression disappears.  ![image](https://user-images.githubusercontent.com/11667451/64058195-ee7f5080-cb64-11e9-85b0-3ca5479d9046.png)  Wouldn't it be nice to know what that expression was after pressing Enter?    **Evidence or User Insights**  Personal anecdote: I often have to re-enter computations because I'm worried that I might have made a typo, and there's no way to tell.    **Proposal**  In Standard, Scientific, and Programmer modes, keep the expression display visible after user presses Enter.  The expression display ends in "=".  After pressing Enter, further operations cause the expression display to start with the value from the result display, as it does today.    **Goals**  User can determine expression that was entered after entering it.    **Non-Goals**  Expression display will continue to be non-editable.    **Low-Fidelity Concept**  ![image](https://user-images.githubusercontent.com/11667451/64058155-10c49e80-cb64-11e9-8b11-a6c8eab0ef9d.png)    **Requested Assignment**  I'm just suggesting this idea.  I don't want to implement it.  	carlreinke	null	null	null	null	null	null	
2019-09-02 22:43:37.0	2019-09-03 13:59:49.0	2020-12-03 00:01:15.0	closed	[by design]	4	655	20 +10% = 22	https://api.github.com/repos/microsoft/calculator/issues/655	https://github.com/microsoft/calculator/issues/655	<!--  Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.  -->    **Describe the bug**  <!-- A clear and concise description of what the bug is. -->    **Steps To Reproduce**  <!--  Steps to reproduce the behavior:  1. Go to '...'  2. Click on '....'  3. Scroll down to '....'  4. See error  -->    **Expected behavior**  <!-- A clear and concise description of what you expected to happen. -->    **Screenshots**  <!-- If applicable, add screenshots to help explain your problem. -->    **Device and Application Information**   - OS Build:   - Architecture:   - Application Version:   - Region:   - Dev Version Installed:    <!--  Run the following commands in Powershell and copy/paste the output.  " - OS Build: $([Environment]::OSVersion.Version)"  " - Architecture: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Architecture)"  " - Application Version: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Version)"  " - Region: $((Get-Culture).Name)"  " - Dev Version Installed: $($null -ne (Get-AppxPackage -Name Microsoft.WindowsCalculator.Dev))"  -->    **Additional context**  <!-- Add any other context about the problem here. -->    **Requested Assignment**  <!--  Some people just want to report a bug and let someone else fix it.  Other people want to not only submit the bug report, but fix it as well.  Both scenarios are completely ok. We just want to know which one it is.  Please indicate which bucket you fall into by keeping one and removing the other.  -->  If possible, I would like to fix this.  I'm just reporting this problem.  I don't want to fix it.  	medmin	null	null	null	null	null	null	
2019-09-03 18:25:24.0	2019-09-05 17:23:36.0	2020-12-03 00:01:14.0	closed	[codebase quality, approved]	1	656	Update to Windows UI Library 2.2	https://api.github.com/repos/microsoft/calculator/issues/656	https://github.com/microsoft/calculator/issues/656	Update the Calculator and CalcViewModel projects to use Windows UI 2.2. We will want to test the app to ensure there are no UX regressions.	sanderl	null	null	null	null	null	null	
2019-09-03 21:05:26.0	2019-09-03 21:12:50.0	2019-09-03 21:12:54.0	closed	[documentation]	0	657	Update documentation for communicating discovered security vulnerabilities	https://api.github.com/repos/microsoft/calculator/issues/657	https://github.com/microsoft/calculator/pull/657	Aligning to recently published common SECURITY.md file available at  https://github.com/microsoft/microsoft.github.io/blob/master/SECURITY.MD	HowardWolosky	null	null	null	null	null	null	
2019-09-04 22:37:04.0	2019-09-05 17:23:36.0	2020-01-16 18:27:27.0	closed	[]	0	658	Updated Win UI to 2.2 for Calculator and CalcViewModel projects	https://api.github.com/repos/microsoft/calculator/issues/658	https://github.com/microsoft/calculator/pull/658	## Fixes #656.      ### Description of the changes:  - Update the WinUI version for the Calculator and CalcViewModel projects to 2.2    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Manual UX regression test pass    	sanderl	null	null	null	null	null	null	
2019-09-05 13:15:33.0	2019-09-05 13:16:07.0	2020-12-03 00:01:13.0	closed	[won't fix]	1	659	sss	https://api.github.com/repos/microsoft/calculator/issues/659	https://github.com/microsoft/calculator/issues/659	<!--  Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.  -->    **Describe the bug**  <!-- A clear and concise description of what the bug is. -->    **Steps To Reproduce**  <!--  Steps to reproduce the behavior:  1. Go to '...'  2. Click on '....'  3. Scroll down to '....'  4. See error  -->    **Expected behavior**  <!-- A clear and concise description of what you expected to happen. -->    **Screenshots**  <!-- If applicable, add screenshots to help explain your problem. -->    **Device and Application Information**   - OS Build:   - Architecture:   - Application Version:   - Region:   - Dev Version Installed:    <!--  Run the following commands in Powershell and copy/paste the output.  " - OS Build: $([Environment]::OSVersion.Version)"  " - Architecture: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Architecture)"  " - Application Version: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Version)"  " - Region: $((Get-Culture).Name)"  " - Dev Version Installed: $($null -ne (Get-AppxPackage -Name Microsoft.WindowsCalculator.Dev))"  -->    **Additional context**  <!-- Add any other context about the problem here. -->    **Requested Assignment**  <!--  Some people just want to report a bug and let someone else fix it.  Other people want to not only submit the bug report, but fix it as well.  Both scenarios are completely ok. We just want to know which one it is.  Please indicate which bucket you fall into by keeping one and removing the other.  -->  If possible, I would like to fix this.  I'm just reporting this problem.  I don't want to fix it.  	pdc-cool	null	null	null	null	null	null	
2019-09-05 21:46:32.0	2019-09-05 22:01:12.0	2019-09-05 22:01:13.0	closed	[]	0	660	Merge master into feature/GraphingCalculator branch	https://api.github.com/repos/microsoft/calculator/issues/660	https://github.com/microsoft/calculator/pull/660	## Pulled master into feature/GraphingCalculator branch:  -pulled master into feature/GraphingCalculator and resolved merge conflicts    ### How changes were validated:  - Ensured the branch built  - Launched the app and smoke tested standard mode and graphing mode.  	joseartrivera	null	null	null	null	null	null	
2019-09-05 22:16:00.0	2019-09-05 23:00:28.0	2020-01-28 01:17:08.0	closed	[]	3	661	Update app version to 1908	https://api.github.com/repos/microsoft/calculator/issues/661	https://github.com/microsoft/calculator/pull/661	Update the version of the app to 1908.  	sanderl	null	null	null	null	null	null	
2019-09-06 20:47:11.0	2019-09-30 21:04:21.0	2019-09-30 21:04:22.0	closed	[Enhancement, fixing approved issue]	0	662	Update Calc Engine for new functions needed for keyboard refresh	https://api.github.com/repos/microsoft/calculator/issues/662	https://github.com/microsoft/calculator/pull/662	## Fixes #428    Spec for this change can be found here:  [Update Calculator keyboard for greater consistency and extensibility](https://github.com/microsoft/calculator-specs/blob/master/active/KeyboardRefresh/README.md)    ### Description of the changes:  This PR includes only the Calc Engine changes for the keyboard refresh spec. The UI portion will be a separate PR.  - Updated Calc Engine to support new functionality (sec, csc, cot, hyperbolic, inverse, floor, ceil, rand, log base x, new bit shifts, nand, xor.  - Exposed property to know when to pivot on the Clear Entry button vs Clear button with the IsInputEmpty boolean     ### How changes were validated:  - Manual testing  - Unit tests added	joseartrivera	null	null	null	null	null	null	
2019-09-07 23:25:08.0	2019-09-08 03:40:38.0	2021-06-02 00:00:11.0	closed	[Enhancement, off-topic]	1	663	.	https://api.github.com/repos/microsoft/calculator/issues/663	https://github.com/microsoft/calculator/issues/663	made a mistake, please delete this issue	ghost	null	null	null	null	null	null	
2019-09-08 00:01:04.0	null	2021-08-02 09:05:23.0	open	[Enhancement, Pri: 2, needs spec]	7	664	Support for significant figures	https://api.github.com/repos/microsoft/calculator/issues/664	https://github.com/microsoft/calculator/issues/664	<!--  See https://github.com/Microsoft/calculator/blob/master/docs/NewFeatureProcess.md for suggestions on how to write a good feature pitch. Just want to submit an idea quickly? Try Feedback Hub instead: https://insider.windows.com/en-us/fb/?contextid=130  -->    **Problem Statement**    [Significant figures](https://en.wikipedia.org/wiki/Significant_figures) (also called significant digits) are an important part of scientific and mathematical calculations and deals with the accuracy and precision of numbers. It is important to estimate uncertainty in the final result, and this is where significant figures become very important. (from [Wikibooks Chemical Engineering](https://en.wikibooks.org/wiki/Introduction_to_Chemical_Engineering_Processes/Significant_figures)) They're typically used from high school science to college classes these days and are used often in engineering settings. It is also part of a common core standard as per <http://www.corestandards.org/Math/Content/HSN/Q/> (a.k.a. HSN-Q.A.3), so it is arguably notable enough to support.    **Evidence or User Insights**  <!--  Why should we do this? Potential sources of data: Feedback Hub, other GitHub issues, other anecdotes from listening to customers in person or online, request from another team, telemetry data, user research, market or competitive research  -->    There are all sorts of significant figures calculators out there already:   ![image](https://user-images.githubusercontent.com/7173984/64481327-3a0aad80-d1a8-11e9-8b86-2ec3f005d9b9.png)  The sheer number of results alone shows the demand for it.      **Proposal**  <!--  How will the solution/feature help us solve the problem? How will it meet the target audience’s needs? If there are business goals or metrics, how does this improve them?  -->    Add support to the existing scientific calculator mode to use significant figures in calculations, or add a separate mode for making calculations with significant figures.    **Goals**  <!--  What you want to accomplish with this feature. Typical examples include  "User Can *perform some task*"  -->    * Support US common core math curriculum   * Provide a great baseline significant figures-driven calculator experience in Windows Calculator      **Low-Fidelity Concept**  <!--  Show as much of the experience as needed to explain the idea. This can be as simple as a napkin drawing but can also be a code prototype, or a design comp. Keep it simple at this stage, as it can be refined later during the pre-production stage.  -->    ![image](https://user-images.githubusercontent.com/7173984/64481417-c23d8280-d1a9-11e9-845f-fa8be1eb713a.png)  ![image](https://user-images.githubusercontent.com/7173984/64481423-d3868f00-d1a9-11e9-994a-319e97981e83.png)    **User Cans**    * Compute using significant figures when using the four operations, square roots, logarithms, and other functions. (all of the aforementioned have special rules)      **Requested Assignment**  <!--  Some people just want to suggest a feature and let someone else implement it.  Other people want to not only suggest a feature, but implement it as well.  Both scenarios are completely ok. We just want to know which one it is.  We are likely to prioritize the review of feature requests if they already have someone who can implement them.  Please indicate which bucket you fall into by keeping one and removing the other.  -->  I'm just suggesting this idea.  I don't want to implement it.  	ghost	null	null	null	null	null	null	
2019-09-09 09:01:41.0	2019-09-20 23:29:46.0	2020-12-03 00:01:12.0	closed	[Pri: 3, Area: User Experience, fixed]	1	665	History is not available in programmer mode, but you can access history panel via hotkeys	https://api.github.com/repos/microsoft/calculator/issues/665	https://github.com/microsoft/calculator/issues/665	**Describe the bug**  History is not available in programmer mode, but you can access history panel via hotkeys (Ctrl + H).    **Steps To Reproduce**  1. Launch Calculator 10.1907.24.0  2. Perform 10+5=15 calculation in Standard  3. Switch modes to Programmer  4. Reduce window size to minimum threshold  5. Perform any calculation in any mode (Hex, Dec, Oct, Bin)  6. Press [Ctrl]+[h]  7. Observe that only 10+5=15 appears in History    **Expected behavior**  Unable to access history panel in Programmer mode.    **Screenshots**  ![image](https://user-images.githubusercontent.com/1414423/64551591-367f3f80-d2ea-11e9-80b0-e9e3100f4625.png)    **Device and Application Information**   - OS Build: 10.0.18970.0   - Architecture: X64   - Application Version: 10.1907.24.0   - Region: en-US   - Dev Version Installed: True    **Additional context**    **Requested Assignment**  I'm just reporting this problem.  I don't want to fix it.	MicrosoftIssueBot	null	null	null	null	null	null	
2019-09-09 23:16:21.0	2019-09-18 08:22:21.0	2020-12-03 00:01:11.0	closed	[Area: User Experience, duplicate, Pri: 2]	3	666	Calculations that require a number after the operator (+, -, /, *, ^, and mod) are inadvertently performed on subsequent calculations	https://api.github.com/repos/microsoft/calculator/issues/666	https://github.com/microsoft/calculator/issues/666	**Describe the bug**  Calculations that require a number after the operator (+, -, /, *, ^, and mod) are inadvertently performed on subsequent calculations    **Steps To Reproduce**  1. Launch Calculator in Standard mode  2. Perform any basic arithmetic calculation, example input: "3 / 3 ="  3. Select CE or press 'delete' key **without selecting C or pressing 'escape'**  4. Input '2 1/x ='  5. Observe history panel to check what calculation was just made    Note: Most recent calculation shows 1/(2) / 3 = 1.6667    **Expected behavior**  1/(2) = 0.5 because the input line only showed 1/(2). The '/3' came from the previous calculation and is performed on all subsequent operations that do not require a 2nd number to be input after the operator. Until either: the user clears all input via 'escape' or 'C' OR the user performs another operation that requires a number after the operator.    **Screenshots**  N/A    **Device and Application Information**   - OS Build: 10.0.18970.0   - Architecture: X64   - Application Version: 10.1907.24.0   - Region: en-US   - Dev Version Installed: True    **Requested Assignment**  I'm just reporting this problem.  I don't want to fix it.	MicrosoftIssueBot	null	null	null	null	null	null	
2019-09-09 23:31:31.0	null	2021-05-26 10:05:10.0	open	[Bug, Pri: 3, triage approved, Area: User Experience]	12	667	'Always on Top' button disappears if there are multiple sessions open on a device with low processing power	https://api.github.com/repos/microsoft/calculator/issues/667	https://github.com/microsoft/calculator/issues/667	**Describe the bug**  'Always on Top' button disappears if there are multiple sessions open on a device with low processing power    **Steps To Reproduce**  1. Launch calculator on a VM or device with low processing power  2. Repeat step 1 about 10 times  3. Observe how many sessions have an 'Always on Top' button    A few sessions do not have an 'Always on Top' button and the UI can shift down slightly.    **Expected behavior**  'Always on Top' button always appears regardless of processing power    **Screenshots**  _Needed_    **Device and Application Information**   - OS Build: 10.0.18970.0   - Architecture: X64   - Application Version: 10.1907.24.0   - Region: en-US   - Dev Version Installed: True      **Requested Assignment**  I'm just reporting this problem.  I don't want to fix it.  	MicrosoftIssueBot	null	null	null	null	null	null	
2019-09-11 00:48:35.0	2019-09-25 17:48:57.0	2019-09-25 17:48:57.0	closed	[Enhancement, fixing approved issue, graphing calculator]	0	668	Update color picker	https://api.github.com/repos/microsoft/calculator/issues/668	https://github.com/microsoft/calculator/pull/668	## Part of #338       ### Description of the changes:  - Update color picker to use defined set of colors instead of the default color picker  - Don't reinitialize the graph when changing colors  - Some code and UI clean up    ### How changes were validated:  - Manual testing  	joseartrivera	null	null	null	null	null	null	
2019-09-11 06:43:00.0	2020-04-08 00:08:44.0	2020-04-08 00:08:44.0	closed	[Bug, fixing approved issue]	1	669	CalculationResult: keep focus on Scroll buttons	https://api.github.com/repos/microsoft/calculator/issues/669	https://github.com/microsoft/calculator/pull/669	## Fixes #651      ### Description of the changes:  - Modify CalculationResult::UpdateScrollButtons to switch the focus from ScrollLeft to ScrollRight when one of them is focused but will be collapsed.      ### How changes were validated:  - manually      ### How to test it  - Reduce window size to the minimum  - Switch to Programmer mode  - Select BIN  - Type 1111111111...1111111  	rudyhuyn	null	null	null	null	null	null	
2019-09-11 13:32:41.0	null	2021-08-02 09:05:25.0	open	[Enhancement, Pri: 2, needs more info]	6	670	Formula solver for frequency, wavelength, and energy (Photon energy)	https://api.github.com/repos/microsoft/calculator/issues/670	https://github.com/microsoft/calculator/issues/670	<!--  See https://github.com/Microsoft/calculator/blob/master/docs/NewFeatureProcess.md for suggestions on how to write a good feature pitch. Just want to submit an idea quickly? Try Feedback Hub instead: https://insider.windows.com/en-us/fb/?contextid=130  -->    **Problem Statement**  <!--  What problem are we trying to solve? Who’s the target audience? Is there a customer need or pain point we need to remedy? Is there a business goal or metric we are trying to improve? Do we have a hypothesis we want to prove or disprove?  -->    The conversion between these three is done very often in chemistry-related workloads. As a result, there are multiple online calculators dedicated for this where you can input one and get the other two out. This behavior can still be adapted for the input one-output one that already exists in this calculator. This also fits with [HS-PS4-1](https://www.nextgenscience.org/topic-arrangement/hswaves-and-electromagnetic-radiation) of the common core. This is also part of basic college chem classes.    **Evidence or User Insights**  <!--  Why should we do this? Potential sources of data: Feedback Hub, other GitHub issues, other anecdotes from listening to customers in person or online, request from another team, telemetry data, user research, market or competitive research  -->  ![image](https://user-images.githubusercontent.com/7173984/64701556-fac5b080-d476-11e9-9861-7b1c4b1009ad.png)      **Proposal**  <!--  How will the solution/feature help us solve the problem? How will it meet the target audience’s needs? If there are business goals or metrics, how does this improve them?  -->  Add a converter for photon energy    **Low-Fidelity Concept**  <!--  Show as much of the experience as needed to explain the idea. This can be as simple as a napkin drawing but can also be a code prototype, or a design comp. Keep it simple at this stage, as it can be refined later during the pre-production stage.  -->    ![image](https://user-images.githubusercontent.com/7173984/64701595-0c0ebd00-d477-11e9-8fb2-98ebdc1776e5.png)  ![image](https://user-images.githubusercontent.com/7173984/64701600-103ada80-d477-11e9-9c8b-1812e203aee4.png)  ![image](https://user-images.githubusercontent.com/7173984/64701611-14ff8e80-d477-11e9-9152-baef7d6ac36f.png)      **Requested Assignment**  <!--  Some people just want to suggest a feature and let someone else implement it.  Other people want to not only suggest a feature, but implement it as well.  Both scenarios are completely ok. We just want to know which one it is.  We are likely to prioritize the review of feature requests if they already have someone who can implement them.  Please indicate which bucket you fall into by keeping one and removing the other.  -->  I'm just suggesting this idea.  I don't want to implement it.  	ghost	null	null	null	null	null	null	
2019-09-12 01:43:52.0	2019-09-16 13:43:54.0	2019-09-16 13:43:54.0	closed	[]	0	671	Move unit test runs to hosted pools	https://api.github.com/repos/microsoft/calculator/issues/671	https://github.com/microsoft/calculator/pull/671	We can now run our unit tests in the Hosted VS2019 pool since bugs have been fixed in the version of Visual Studio deployed on those agents.    Our existing "Essential Experiences Pipelines" pool had a hacked-together machine reimaging setup which was not very reliable and required regular maintenance. I expect that this change will substantially improve our PR and CI build success rate.	mcooley	null	null	null	null	null	null	
2019-09-12 20:11:58.0	2019-09-23 18:51:09.0	2019-09-23 18:51:10.0	closed	[Enhancement, fixing approved issue, graphing calculator]	0	672	Switch to RichEdit math mode in EquationTextBox	https://api.github.com/repos/microsoft/calculator/issues/672	https://github.com/microsoft/calculator/pull/672	## Part of #338     ### Description of the changes:  - Switch to using math mode in the rich edit control in EquationTextBox  - Switch GraphControl to use MathML instead of plain text    ### How changes were validated:  - Manual testing  	joseartrivera	null	null	null	null	null	null	
2019-09-14 16:17:04.0	2019-09-18 05:06:41.0	2020-12-03 00:01:10.0	closed	[won't fix]	4	673	Button labels become smaller after making the window bigger than 639×1024 DIP	https://api.github.com/repos/microsoft/calculator/issues/673	https://github.com/microsoft/calculator/issues/673	**Describe the bug**  Usually, the button labels become _bigger_ while I increase the window size. But for some sizes, the buttons may suddenly become _smaller_ after increasing the window.    **Steps To Reproduce**  1. Open the calculator, make the client window size bigger than 639×1023 DIP (this will be exactly 1023×639px on 100% scale). For example, on my 100%-scaled display I could make the window of size 644×1037px (see the screenshots below).  2. Now, make the client window size slightly less than 639×1023 DIP. For example, I could make the window 636×1037px.    **Expected behavior**  Button labels should be bigger or the same in bigger window, not the other way around.    ### Screenshots  Here's the GIF with the bug on 4K display (150%); the static images for 100% scale are below.  ![calculahter](https://user-images.githubusercontent.com/92793/64910905-a86de380-d745-11e9-9fab-2b98330e3d89.gif)    **Bigger window size (644×1037px):**  ![image](https://user-images.githubusercontent.com/92793/64910785-a192a100-d744-11e9-8578-f41732b9418d.png)    **Lesser window size (636×1037px):**  ![image](https://user-images.githubusercontent.com/92793/64910822-eae2f080-d744-11e9-9b97-aa71b673872a.png)    **Device and Application Information**   - OS Build: Windows 10 1903 (Build 18362.356)   - Architecture: x64   - Application Version: Calculator 10.1906.53.0; reproducible on the dev build from `master`, too   - Dev Version Installed: Yes  	ForNeVeR	null	null	null	null	null	null	
2019-09-14 21:41:12.0	2019-10-24 16:02:26.0	2020-12-03 00:01:09.0	closed	[Area: User Experience, fixed, Pri: 2]	10	674	Add ability to paste in mod '%' operator	https://api.github.com/repos/microsoft/calculator/issues/674	https://github.com/microsoft/calculator/issues/674	Right now `5-2` or `5/2` can be pasted into the calculator and it will solve it.  However, if `5 % 2` is pasted, it errors.  However, typing `5 % 2 ` works just fine.    Similar to issue #299.    ### How to duplicate the issue:  1) copy `5 % 2` to the clipboard  2) paste in the calculator  3) the message _Invalid input_ appears    ### How it already works with +, -, *, /  1) copy `5-2` to the clipboard  2) paste in the calculator and press enter  3) the correct value of _3_ shows    	SunsetQuest	null	null	null	null	null	null	
2019-09-18 08:27:54.0	2019-09-27 17:39:51.0	2019-09-27 17:39:51.0	closed	[Bug, fixing approved issue]	3	675	Modify how narrator names the first and last bits of a number in Bit Flip	https://api.github.com/repos/microsoft/calculator/issues/675	https://github.com/microsoft/calculator/pull/675	## Fixes #385     ### Description of the changes:  - replace "0th bit"  by "least significant bit"  - add support of  "most significant bit" and update texts when BitLength changes.    - Note: to keep CPU usage low, we only update texts of the previous checkbox associated to the MSB and the new one.    ### How changes were validated:  - Manually	rudyhuyn	null	null	null	null	null	null	
2019-09-18 08:42:29.0	2019-09-20 23:29:46.0	2019-09-20 23:29:46.0	closed	[Bug, fixing approved issue]	0	676	Prevent the history panel to be displayed when using the Programmer mode	https://api.github.com/repos/microsoft/calculator/issues/676	https://github.com/microsoft/calculator/pull/676	## Fixes #665    ### Description of the changes:  - be sure we don't display the panel when the current view is the Programmer mode.    Bonus:  - remove obsolete comment    ### How changes were validated:  - Manually    	rudyhuyn	null	null	null	null	null	null	
2019-09-19 18:12:05.0	2019-10-17 21:18:35.0	2020-12-03 00:01:08.0	closed	[Area: User Experience, fixed, Pri: 1, hacktoberfest]	2	677	Unexpected exit from always on top when enter is pressed	https://api.github.com/repos/microsoft/calculator/issues/677	https://github.com/microsoft/calculator/issues/677	**Possible Reason**  This is likely due to focus. the default focus is on the "Back to full view" button when the app enters alwaysontop mode. So if the enter or space key is hit, it will fire this button. Fix would be to move the focus off this button when the app enters alwaysontop mode.    **Describe the bug**  when in Alwaysontop, app will fall out of always on top mode when enter is pressed    **Steps To Reproduce**  Steps to reproduce the behavior:  1. Go to standard mode  2. Click on always on top button on right next to "Standard"  3. use keyboard/num pad to enter a calculation ( ending in enter key)     3(a) - alternate - just hit enter key     3(b) - alternate - just hit space key    **Expected behavior**  app should stay in always on top mode    **Actual behavior**  app falls out of always on top mode    **Device and Application Information**   - OS Build: 10.0.18986.0   - Architecture: X64   - Application Version: 10.1908.13.0   - Region: en-US   - Dev Version Installed: False  	HerrickSpencer	null	null	null	null	null	null	
2019-09-20 19:46:36.0	2019-09-20 22:04:29.0	2020-12-03 00:01:07.0	closed	[Area: User Experience, fixed, Pri: 2]	1	678	Programmer logic function hot keys can be used in other modes after switching to and from programmer mode	https://api.github.com/repos/microsoft/calculator/issues/678	https://github.com/microsoft/calculator/issues/678	**Repro Steps:**  1) Launch calculator  2) Set calculator to programmer mode  3) Set calculator to Standard mode  4) Press any logical function hot key (^, &, | ....)    **Observed Results:**  Logic functions are entered into standard calculator when returning to standard mode and using hotkeys    **Expected Results:**  Logic functions can only be used in programmer mode	MicrosoftIssueBot	null	null	null	null	null	null	
2019-09-20 20:04:56.0	2019-09-20 22:04:29.0	2019-09-20 22:04:29.0	closed	[Bug, fixing approved issue]	0	679	Disable ProgrammerRadixOperators when not visible	https://api.github.com/repos/microsoft/calculator/issues/679	https://github.com/microsoft/calculator/pull/679	## Fixes #678      ### Description of the changes:  Calculator validates keyboard hotkeys by checking if the button is enabled. Since the binding to disable CalculatorProgrammerRadixOperators was removed, the buttons were always enabled allowing the hotkeys to be used from any mode. This PR does the simple solution of adding the binding back.    ### How changes were validated:  - Manual tests    	joseartrivera	null	null	null	null	null	null	
2019-09-22 09:55:40.0	2019-09-22 10:00:50.0	2019-09-22 10:00:50.0	closed	[]	1	680	update readme.md	https://api.github.com/repos/microsoft/calculator/issues/680	https://github.com/microsoft/calculator/pull/680	  ## Fixes  Multiple functionalities for each (programmer, scientific)  Not single "functionality"    ### Description of the changes:  - "functionality" => "functionalities"	lamarrr	null	null	null	null	null	null	
2019-09-25 01:21:37.0	2019-09-26 23:28:06.0	2019-09-26 23:28:06.0	closed	[build]	1	681	Update unit test signature	https://api.github.com/repos/microsoft/calculator/issues/681	https://github.com/microsoft/calculator/pull/681	Update unit test signature so that VS 2019 will build the UT project.  The signature check is enforced in VS 2019.	DavidShoe	null	null	null	null	null	null	
2019-09-26 08:53:45.0	2019-10-18 18:07:52.0	2019-10-18 18:07:52.0	closed	[Bug, fixing approved issue]	0	682	Allow users to paste expressions with ^ (power) or % (modulo)	https://api.github.com/repos/microsoft/calculator/issues/682	https://github.com/microsoft/calculator/pull/682	## Fixes #299 and #674     Add support of `%` for Scientific and Programmer mode  Add support of `^` for Scientific mode    ### Description of the changes:  - Modify `StandardCalculatorViewModel::MapCharacterToButtonId` to support the 2 new characters  - Improve character verification and use 4 different white lists instead of one. (basic (for unit converters, standard, scientific and programmer)     - this will also make our verification more robust  - slight optimization of `CopyPasteManager::ExtractOperands`  - Add unit tests    ### How changes were validated:  Manually    	rudyhuyn	null	null	null	null	null	null	
2019-09-26 09:59:04.0	2019-10-14 17:16:32.0	2020-12-03 00:01:06.0	closed	[Pri: 3, Area: User Experience, fixed]	5	683	Clarify whether the application should allow users to paste numbers in scientific notation when using Standard mode or not	https://api.github.com/repos/microsoft/calculator/issues/683	https://github.com/microsoft/calculator/issues/683	## Describe the bug  It is not clear if the calculator should allow users to paste expressions with scientific notations (E notation, for example 12e+10) when the calculator is in Standard mode.    Some unit tests and methods show that we should support it:  https://github.com/microsoft/calculator/blob/41e2e975918c6838947e29a046778bd4d57feeee/src/CalculatorUnitTests/CopyPasteManagerTest.cpp#L133    https://github.com/microsoft/calculator/blob/41e2e975918c6838947e29a046778bd4d57feeee/src/CalcViewModel/Common/CopyPasteManager.cpp#L197    while other methods like `CopyPasteManager::ExpressionRegExMatch` don't accept them when the calculator is in Standard mode, making it impossible to paste a number in scientific notation.    ### Why we should allow it  - the standard mode can display number with this notation, for example if they calculate `999999999999*999999999999`, so we should probably allow users to copy the result and paste it later.    ### Why we should not allow it  - This mode doesn't have a `exp` button, meaning the only way to enter a number in scientific mode will be via copy/paste (and via the history).    ## Steps To Reproduce  - launch the Calculator  - paste `12e+10`  - the calculator will display 'INVALID INPUT'    ## Expected behavior    Currently unknown    ## Device and Application Information**   - OS Build: 10.0.18363.0   - Architecture: X64   - Application Version: 10.1907.24.0   - Region: en-US   - Dev Version Installed: True    ## Requested Assignment  If possible, I would like to fix this.    ## Bonus    If we allow users to do it, we should also decide if we want to allow them to copy these type of numbers with unit converters.  	rudyhuyn	null	null	null	null	null	null	
2019-09-28 00:14:55.0	2019-10-17 21:10:27.0	2020-12-03 00:01:05.0	closed	[Area: User Experience, fixed, Pri: 2, hacktoberfest]	4	684	No hover effect on history or keep on top buttons when transparency effects are off	https://api.github.com/repos/microsoft/calculator/issues/684	https://github.com/microsoft/calculator/issues/684	<!--  Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.  -->    **Describe the bug**  <!-- A clear and concise description of what the bug is. -->  No hover effect on history or keep on top buttons when transparency effects are off  **Steps To Reproduce**  Steps to reproduce the behavior:  1. Disable transparency effects  2. Open Calculator  3. Hover over keep on top or history  4. See error    **Expected behavior**  <!-- A clear and concise description of what you expected to happen. -->  The button would be grey  **Screenshots**  <!-- If applicable, add screenshots to help explain your problem. -->    **Device and Application Information**   - OS Build: 10.0.18362.0   - Architecture: X64   - Application Version: 10.1908.0.0   - Region: en-AU   - Dev Version Installed: False    <!--  Run the following commands in Powershell and copy/paste the output.  " - OS Build: $([Environment]::OSVersion.Version)"  " - Architecture: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Architecture)"  " - Application Version: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Version)"  " - Region: $((Get-Culture).Name)"  " - Dev Version Installed: $($null -ne (Get-AppxPackage -Name Microsoft.WindowsCalculator.Dev))"  -->    **Additional context**  <!-- Add any other context about the problem here. -->    **Requested Assignment**  <!--  Some people just want to report a bug and let someone else fix it.  Other people want to not only submit the bug report, but fix it as well.  Both scenarios are completely ok. We just want to know which one it is.  Please indicate which bucket you fall into by keeping one and removing the other.  -->  I'm just reporting this problem.  I don't want to fix it.  	Poopooracoocoo	null	null	null	null	null	null	
2019-09-28 07:43:53.0	2019-10-17 21:10:27.0	2019-10-17 21:10:27.0	closed	[Bug, fixing approved issue]	0	685	Add fallback colors to RevealBrushes missing them	https://api.github.com/repos/microsoft/calculator/issues/685	https://github.com/microsoft/calculator/pull/685	## Fixes #684    All the following buttons don't provide UI feedback when users hover or press the following buttons:  ![image](https://user-images.githubusercontent.com/1226538/65813158-225e8d80-e186-11e9-9a5b-f28b4b2a6f6a.png)    ![image](https://user-images.githubusercontent.com/1226538/65813150-0ce96380-e186-11e9-84c6-44562e41a39b.png)    ![image](https://user-images.githubusercontent.com/1226538/65813154-170b6200-e186-11e9-97be-6ceda7271b79.png)      ### Description of the changes:  - Add fallback colors to RevealBrush missing them    ### Breaking change to validate  Because buttons from the numeric pad use the same brushes than the buttons above, this change has also an impact on them.    Battery mode - before  ![image](https://user-images.githubusercontent.com/1226538/65813213-e2e47100-e186-11e9-8e87-429ea338135a.png)  Battery mode - after  ![image](https://user-images.githubusercontent.com/1226538/65813235-54bcba80-e187-11e9-943f-a638331552d5.png)  Acrylic enabled  ![image](https://user-images.githubusercontent.com/1226538/65813227-1c1ce100-e187-11e9-9049-4e3ec5004685.png)    In my opinion, this change is positive, for 2 reasons:  - It improve the "readability" of the UI, buttons use the same background color than the app in the current version.  - Colors used for hover and press where the same gray (default fallback color) when acrylic is disabled, so it was impossible to see if a button was pressed or hovered.    ### How changes were validated:  - Manually	rudyhuyn	null	null	null	null	null	null	
2019-09-29 08:41:54.0	2019-10-17 21:18:35.0	2019-10-17 21:18:36.0	closed	[Bug, fixing approved issue]	0	686	Fix focus with AlwaysOnTop mode	https://api.github.com/repos/microsoft/calculator/issues/686	https://github.com/microsoft/calculator/pull/686	## Fixes #677       ### Description of the changes:  - Make sure the user interface has been updated before setting the focus.  - Make `Storyboard::Completed` function names consistent  - slight refactoring of `Calculator::OnIsAlwaysOnTopPropertyChanged`    ### How changes were validated:  - manual    	rudyhuyn	null	null	null	null	null	null	
2019-09-30 07:13:08.0	2019-10-14 17:16:32.0	2019-10-14 17:16:33.0	closed	[Bug, fixing approved issue]	7	687	Add E-notation support to CopyPasteManager for standard mode	https://api.github.com/repos/microsoft/calculator/issues/687	https://github.com/microsoft/calculator/pull/687	## Fixes #683     ### Description of the changes:  - modify `CopyPasteManager::standardModePatterns` to support E-notation    #### Bonus:  - merge the 2 regular expressions from ` CopyPasteManager::scientificModePatterns` to improve performance  - Fix `unitConverterPatterns` (the regular expression accepted empty strings) and use `c_signedDecFloat` instead of the custom expression.    ### How changes were validated:  - Manually	rudyhuyn	null	null	null	null	null	null	
2019-09-30 23:45:55.0	2019-10-03 22:56:45.0	2019-10-11 08:14:33.0	closed	[fixing approved issue]	5	688	Update Calculator keyboard for greater consistency and extensibility	https://api.github.com/repos/microsoft/calculator/issues/688	https://github.com/microsoft/calculator/pull/688	## Fixes #428    Spec for this change can be found here:  [Update Calculator keyboard for greater consistency and extensibility](https://github.com/microsoft/calculator-specs/blob/master/active/KeyboardRefresh/README.md)    ### Description of the changes:  This PR includes the UI changes for the keyboard refresh spec.  - Added corresponding UI buttons for new calc functions added in #662  - Rearranged some of the buttons in the Standard, Scientific, and Programmer modes  - Added OperatorPanelButton that displays a flyout when clicked, storing buttons that are closely related  - C and CE button are conditionally visible based on if there is input that can be cleared  - Calc Buttons can be navigated with arrow keys  - Visual State layouts tweaked and simplified per the spec linked above  - Enable negate buttons in some conversion modes per the spec linked above    ### How changes were validated:  - Manual testing	joseartrivera	null	null	null	null	null	null	
2019-10-01 00:57:53.0	2019-11-04 15:41:14.0	2019-11-04 15:41:14.0	closed	[codebase quality]	0	689	Enable code analysis in the CalcManager project	https://api.github.com/repos/microsoft/calculator/issues/689	https://github.com/microsoft/calculator/pull/689	Enable Code Analysis for the CalcManager project when it's building in the release configuration, and address many of the warnings by fixing inconsistent or missing annotations.    This is a small step towards getting and staying clean on code analysis. Future work remains to fix the remaining warnings in CalcManager and to turn on code analysis in the other projects. Filed #693 to track the future work.	mcooley	null	null	null	null	null	null	
2019-10-01 05:26:09.0	2019-10-03 03:48:06.0	2020-12-03 00:01:04.0	closed	[won't fix]	3	690	Incorrect Result in simple sum of products	https://api.github.com/repos/microsoft/calculator/issues/690	https://github.com/microsoft/calculator/issues/690	**Describe the bug**    0.7 * 0.7 = 0.49    0.7 * 0.7 + 0.7 * 0.7 = 0.833    Screenshot:  ![image](https://user-images.githubusercontent.com/5207611/65936202-b6239a00-e3d0-11e9-81ce-c3fbb07dfd74.png)    It works with several numbers in range [0,1] that I tested, e.g. 0.5.   It does NOT work in scientific mode, only in Standard.      **Device and Application Information**   - OS Build: 18362.356 (Windows 10 Pro 1903)   - Architecture: x64   - Application Version: 10.1906.53.0   - Region: US   - Dev Version Installed: N/A  	BabakAp	null	null	null	null	null	null	
2019-10-01 09:01:49.0	2019-11-05 23:04:29.0	2020-12-03 00:01:03.0	closed	[Pri: 3, Area: User Experience, fixed]	3	691	History button does not always disappear when increasing window width >850px, becomes unresponsive	https://api.github.com/repos/microsoft/calculator/issues/691	https://github.com/microsoft/calculator/issues/691	**Repro Steps**  1) Launch calculator  2) Reduce the window width below 850 pixels (until History and Memory panels are hidden)  3) Slowly resize the window width above 850px  4) Repeat steps 2-3 until the History button does not disappear    **Observed Results**  History button is unresponsive in this state and History panel is empty despite there being history to show    **Expected Results**  History button disappears 100% of the time when resizing the window past the 850 pixel threshold	MicrosoftIssueBot	null	null	null	null	null	null	
2019-10-01 10:19:31.0	2019-10-01 12:27:41.0	2019-10-01 14:03:34.0	closed	[off-topic]	1	692	Mcooley/ut capabilities	https://api.github.com/repos/microsoft/calculator/issues/692	https://github.com/microsoft/calculator/pull/692	## Fixes #.      ### Description of the changes:  Isn't properly programmed.    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - automated testing  -  -    	devYRPauli	null	null	null	null	null	null	
2019-10-01 14:10:09.0	null	2021-09-30 09:05:07.0	open	[help wanted, Pri: 2, codebase quality, build, approved]	2	693	Enable code analysis on all projects and resolve warnings	https://api.github.com/repos/microsoft/calculator/issues/693	https://github.com/microsoft/calculator/issues/693	Visual Studio's code analysis tools can help find issues in our C++ code. Eventually, it would be great to have these tools running in all of our builds and to fix all the warnings they generate.    See #689 for an example of how to enable the tools during the build. We'll enable code analysis only in the "Release" configuration to avoid slowing down Debug builds.    To see which warnings still need to be fixed, check [a recent build from the master branch](https://dev.azure.com/ms/calculator/_build?definitionId=57&_a=summary&repositoryFilter=40&branchFilter=877).    It would be best to submit fixes for unrelated warnings as separate PRs. I'll close out this issue when 1) all C++ projects are building with code analysis rules on and 2) all the warnings generated by those tools are fixed or silenced.	mcooley	null	null	null	null	null	null	
2019-10-01 20:13:40.0	2019-10-18 20:40:14.0	2019-10-19 11:44:31.0	closed	[Enhancement, fixing approved issue]	1	695	Do not hide expression when user presses Enter or =	https://api.github.com/repos/microsoft/calculator/issues/695	https://github.com/microsoft/calculator/pull/695	## Fixes #653.  Does not hide expression, when user pressed Enter or = on keypad (issue #653).    ### Description of the changes:  - updated unit tests  - clearing expression after user takes action following Enter in engine, and not when user pressed Enter    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - I have used unittests (adjusted for this change)  - I have done manual tests from https://github.com/microsoft/calculator/blob/master/docs/ManualTests.md: From begining to Always-on-Top section  - I have done few manual test checking, than after Enter/= expression is displayed and it dissapears after entering a number. For example I used actions: 1, +, 2, = (expression is 1+2, result is 3), 2 (expression is empty, result is 2).    	mateka	null	null	null	null	null	null	
2019-10-03 08:31:51.0	2019-10-03 12:55:56.0	2019-10-03 12:55:56.0	closed	[off-topic, invalid]	0	696	[Translation] "Weight" should be translated to "Peso" in pt-BR #198	https://api.github.com/repos/microsoft/calculator/issues/696	https://github.com/microsoft/calculator/pull/696	## Fixes #.  [Translation] "Weight" should be translated to "Peso" in pt-BR #198    ### Description of the changes:  - Changes all the "weight" word into "peso"    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  -  -  -    	hacky1997	null	null	null	null	null	null	
2019-10-03 13:09:17.0	2019-10-03 13:17:52.0	2019-10-03 13:26:09.0	closed	[documentation, off-topic, invalid]	0	697	Update README.md	https://api.github.com/repos/microsoft/calculator/issues/697	https://github.com/microsoft/calculator/pull/697	## Fixes #.      ### Description of the changes:  -  -  -    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  -  -  -    	pravindevghare	null	null	null	null	null	null	
2019-10-04 05:02:33.0	2019-10-09 14:39:56.0	2019-10-09 14:39:56.0	closed	[Bug, fixing approved issue]	1	698	Fix the focus when right-clicking CalculationResult's TextBlock	https://api.github.com/repos/microsoft/calculator/issues/698	https://github.com/microsoft/calculator/pull/698	## Fixes #642 .    ### Description of the changes:  - Focused the TextBlock element when the event source is the TextBlock itself. This fixes the resultant number not gaining focus when a right-click is performed.    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Tested Manually    	praveensvsrk	null	null	null	null	null	null	
2019-10-04 10:26:54.0	2020-01-06 23:21:29.0	2020-12-03 00:01:02.0	closed	[codebase quality, approved]	5	699	Code cleanup: remove the code related to the management of the focus in CalculationResult	https://api.github.com/repos/microsoft/calculator/issues/699	https://github.com/microsoft/calculator/issues/699	**Describe the code cleanup**  `CalculationResult` implements 3 methods to manage the focus states of the control:   - OnLostFocus  - OnGotFocus  - OnRightTapped    But none of the templates used by `CalculationResult` contains the visual states "Focused"/"Unfocused", meaning that these 3 methods are meaningless.    **Device and Application Information**   - OS Build: 10.0.18363.0   - Architecture: X64   - Application Version: 10.1908.0.0   - Region: en-US   - Dev Version Installed: True      **Requested Assignment**  If possible, I would like to fix this.  	rudyhuyn	null	null	null	null	null	null	
2019-10-04 10:33:04.0	2020-01-06 23:21:29.0	2020-01-06 23:21:30.0	closed	[codebase quality]	1	700	remove the useless code related to the management of the focus in CalculationResult	https://api.github.com/repos/microsoft/calculator/issues/700	https://github.com/microsoft/calculator/pull/700	## Fixes #699    ### Description of the changes:  - remove OnLostFocus, OnFocus and OnRightTapped  - remove `CalculationResult::s_FocusedState` and `CalculationResult::s_UnfocusedState`  - stop forcing the focus when users tap the control    ### How changes were validated:  - manually    	rudyhuyn	null	null	null	null	null	null	
2019-10-04 17:14:51.0	2019-10-07 21:19:58.0	2019-10-07 21:37:41.0	closed	[off-topic, invalid]	0	701	Update Settings.XamlStyler	https://api.github.com/repos/microsoft/calculator/issues/701	https://github.com/microsoft/calculator/pull/701	## Fixes #.      ### Description of the changes:  -  -  -    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  -  -  -    	aniket-daphale	null	null	null	null	null	null	
2019-10-04 23:20:17.0	2019-10-10 20:28:35.0	2019-10-10 20:28:35.0	closed	[graphing calculator]	3	702	Active tracing	https://api.github.com/repos/microsoft/calculator/issues/702	https://github.com/microsoft/calculator/pull/702	## Fixes #.      ### Description of the changes:  -  -  -    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  -  -  -    	DavidShoe	null	null	null	null	null	null	
2019-10-07 17:03:35.0	2019-10-07 17:12:39.0	2019-10-07 17:12:39.0	closed	[documentation, invalid]	1	703	Screenshot from Scientific Mode	https://api.github.com/repos/microsoft/calculator/issues/703	https://github.com/microsoft/calculator/pull/703	## Fixes #.      ### Description of the changes:  -I Just added an Screen Shot    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  -  -  -    	erfansaberi	null	null	null	null	null	null	
2019-10-07 21:30:37.0	2019-11-12 21:46:12.0	2020-01-16 18:28:09.0	closed	[graphing calculator]	0	704	Key graph features	https://api.github.com/repos/microsoft/calculator/issues/704	https://github.com/microsoft/calculator/pull/704	### Description of the changes:  - This is a working implementation of Key Graph Features for Graphing Calculator. It is not complete.  - Remaining work: Hooking up the KGF EquationEditBox, Error Handling, Rich Edit Styling, Fit and Finish    	sanderl	null	null	null	null	null	null	
2019-10-07 21:54:52.0	2019-10-08 17:44:13.0	2020-01-16 18:27:27.0	closed	[approved, design]	1	705	Added new dev app icons and update version to 1909	https://api.github.com/repos/microsoft/calculator/issues/705	https://github.com/microsoft/calculator/pull/705	Added new app icon files with the dev icon image.  	sanderl	null	null	null	null	null	null	
2019-10-09 03:46:48.0	2019-10-10 16:19:28.0	2019-10-10 16:19:28.0	closed	[documentation, invalid]	1	706	Update CONTRIBUTING.md	https://api.github.com/repos/microsoft/calculator/issues/706	https://github.com/microsoft/calculator/pull/706	Change title "Contributions we accept" with "Contributions rules".    ## Fixes #.    Change title "Contributions we accept" with "Contributions rules".    ### Description of the changes:  - Better to read    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->    	V0lk3n	null	null	null	null	null	null	
2019-10-09 15:14:07.0	2019-10-10 16:18:18.0	2020-12-03 00:01:01.0	closed	[by design]	4	707	mod '%'  input problem with standard calculator	https://api.github.com/repos/microsoft/calculator/issues/707	https://github.com/microsoft/calculator/issues/707	### After entering a number, clicking "%" with the mouse will set to 0.  _I hope to express 'mod' by clicking '%' with my mouse._    Steps to reproduce the behavior:  1. Go to standard calculator  2. Entering number  3. Click on '%' with mouse  4. See error (output 0)    ![3](https://user-images.githubusercontent.com/51294315/66422430-a47f6980-ea44-11e9-95aa-31552d2c6d2a.png)     - OS Build: 10.0.18362.0   - Architecture: X64   - Application Version: 10.1908.0.0    I'm just reporting this problem.  I don't want to fix it.  	na0-K	null	null	null	null	null	null	
2019-10-11 04:58:37.0	2019-10-13 16:56:21.0	2019-10-13 16:56:21.0	closed	[fixing approved issue, codebase quality]	2	710	fix 505	https://api.github.com/repos/microsoft/calculator/issues/710	https://github.com/microsoft/calculator/pull/710	## Fixes #505 .      ### Description of the changes:  - Changed all the E_CODE_* Variables located in CalcErr.h from Macros to static const expr (inline is implicite)    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Manual-Adhoc testing      	Grommers00	null	null	null	null	null	null	
2019-10-11 08:22:56.0	2019-11-05 23:04:29.0	2019-11-05 23:04:29.0	closed	[Bug, fixing approved issue]	0	712	Modify how Calculator manages the visibility of the History button	https://api.github.com/repos/microsoft/calculator/issues/712	https://github.com/microsoft/calculator/pull/712	## Fixes #691     Explanation of the cause of the problem here: https://github.com/microsoft/calculator/issues/691#issuecomment-540957636    ### Description of the changes:  - Use Visual State to hide the History button when in Dock mode.  - Rely on `DockPanel->Visibility` instead of the windows size to move History and Memory panels  - Remove `App::GetAppViewState` (2 reasons: this code was specific to `Calculator`, so better to manage that in `Calculator.xaml.cpp` + it's better to rely on visual states instead of having a different method to calculate the view mode of the control)   - Remove `App::GetAppWindowHeight()` (should not be a static method + never used)     Unfortunately, the current version of `Calculator.xaml` was updated without XAML Styler (or XAML Styler changed its rules recently), making this diff a little harder to read ☹    ### How changes were validated:  - Manually    	rudyhuyn	null	null	null	null	null	null	
2019-10-12 17:05:45.0	2019-10-12 17:37:16.0	2019-10-12 17:37:16.0	closed	[off-topic, invalid]	0	713	Create addition	https://api.github.com/repos/microsoft/calculator/issues/713	https://github.com/microsoft/calculator/pull/713	## Fixes #.      ### Description of the changes:  -  -  -    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  -  -  -    	vanshika1205	null	null	null	null	null	null	
2019-10-13 14:51:21.0	2019-10-15 17:48:03.0	2019-10-15 17:48:03.0	closed	[]	2	714	Turkish Translation	https://api.github.com/repos/microsoft/calculator/issues/714	https://github.com/microsoft/calculator/pull/714	# Hesap Makinesi  Windows Hesap Makinesi uygulaması, önceden yüklenmiş Windows ile birlikte gelen C ++ ile yazılmış modern bir Windows uygulamasıdır.   Uygulamaya standart, bilimsel ve programcı hesap makinesi işlevselliği yanı sıra, çeşitli ölçüm birimleri ve para birimleri arasında bir dizi dönüştürücü sağlar.    Hesap makinesi düzenli olarak yeni özellikler ve hata düzeltmeleri ile birlikte gönderilir. Hesap makinesinin en son sürümünü [Microsoft Mağazası](https://www.microsoft.com/store/apps/9WZDNCRFHVN5)'nda bulabilirsiniz.    [![Durum](https://dev.azure.com/ms/calculator/_apis/build/status/Calculator-CI?branchName=master)](https://dev.azure.com/ms/calculator/_build/latest?definitionId=57&branchName=master)      ![Ekran Görüntüsü](https://i.resimyukle.xyz/0VOTUH.png)    ## Özellikler  - Temel işlemler sunan ve komutları girildiği anda değerlendiren Standart Hesap Makinesi işlevi.  - Genişletilmiş işlemler sunan ve işlem sırasını kullanarak komutları değerlendiren Bilimsel Hesap Makinesi işlevi.  - Ortak bazlar arasında dönüşüm dahil geliştiriciler için ortak matematiksel işlemler sunan Programcı Hesap Makinesi işlevi.  - İki tarih arasındaki farkı sunan Tarih Hesaplama işlevselliği ve ayrıca belirli bir giriş tarihine yıl, ay ve / veya gün ekleme / çıkarma yeteneği.  - Hesaplama geçmişi ve hafıza yetenekleri.  - Birçok ölçüm birimi arasında dönüşüm.  - [Bing](https://www.bing.com) 'den alınan verilere göre para birimi dönüştürme.  - [Temel aritmetik işlemler](https://en.wikipedia.org/wiki/Arbitrary-precision_arithmetic) için sonsuz hassasiyet (toplama, çıkarma, çarpma, bölme) böylece hesaplamalar hiçbir zaman kesinliği kaybetmez.    ## Başlangıç  Ön şartlar:  - Bilgisayarınızda Windows 10, sürüm 1803 veya daha yeni bir sürüm çalışıyor olmalıdır.  - [Visual Studio](https://developer.microsoft.com/en-us/windows/downloads) 'nun en son sürümünü yükleyin (ücretsiz topluluk sürümü yeterli).    - "Evrensel Windows Platform Geliştirme" paketini yükleyin.    - İsteğe bağlı "C++ Evrensel Windows Platform araçları" bileşenini yükleyin.    - En son Windows 10 SDK'yı yükleyin.    ![Visual Studio Installation Screenshot](https://i.resimyukle.xyz/QzVRN5.png)  - [XAML Styler](https://marketplace.visualstudio.com/items?itemName=TeamXavalon.XAMLStyler) Visual Studio eklentisini yükleyin.    - Kodlara erişim:      ```      git clone https://github.com/Microsoft/calculator.git      ```    - Hesap makinesi uygulamasını oluşturmak ve çalıştırmak için Visual Studio'da aç : [src\Calculator.sln](/src/Calculator.sln)   - Hesap Makinesi proje mimarisinin genel bir açıklaması için [ApplicationArchitecture.md](https://github.com/microsoft/calculator/blob/master/docs/ApplicationArchitecture.md)'a bakın.  - UI Testlerini çalıştırmak için [Windows Application Driver](https://github.com/microsoft/WinAppDriver/releases/latest) yüklü olduğundan emin olmanız gerekir.    ## Katkıda Bulunmak  Katkıda bulunmak mı istiyorsun? Ekip topluluğun geri bildirimlerini ve katkılarını teşvik eder.  [katkıda bulunma rehberini](CONTRIBUTING.md)'ı takip et.    Hesap makinesi düzgün çalışmıyorsa, lütfen [Geri Bildirim Merkezi](https://insider.windows.com/en-us/fb/?contextid=130) 'nde bir rapor verin.  Ayrıca [sorunlar](https://github.com/Microsoft/calculator/issues) için açığız.    ## Yol Haritası  Windows Hesap Makinesi planları ve sürüm takvimi hakkında daha fazla bilgi için lütfen [Windows Hesap Makinesi Yol Haritası](docs/Roadmap.md) 'na bakın.    ## Teşhis Verileri  Bu proje kullanım verilerini toplar ve ürünlerimizi ve hizmetlerimizi geliştirmemize yardımcı olmak için Microsoft'a gönderir.  Daha fazlasını öğrenmek için [gizlilik bildirimini](https://go.microsoft.com/fwlink/?LinkId=521839) okuyun.  Teşhis verileri geliştirme yapılarında varsayılan olarak devre dışıdır ve  `SEND_DIAGNOSTICS` ile etkinleştirilebilir.    ## Döviz Çevirici  Windows Hesap Makinesi, geliştirici yapılarında sahte verileri kullanan bir para birimi dönüştürücü özelliği içerir. Microsoft'un para birimi dönüştürücü özelliği için kullandığı veriler (örneğin, uygulamanın perakende sürümünde), kullanımınız için lisanslanmamıştır. Sahte veriler, ülkeler yerine gezegenlere referans verdiği için açıkça tanımlanabilir ve seçilen girdilerden bağımsız olarak statik kalır.    ## Güvenlik Sorunlarını Rapor Etme  Lütfen [SECURITY.md](./SECURITY.md)'i baz alın.    ## Lisans  Telif Hakkı (c) Microsoft Corporation. Her hakkı saklıdır.    [MIT Lisansı](./LICENSE) altındadır.  	batuhantastekin	null	null	null	null	null	null	
2019-10-14 10:25:40.0	2019-10-29 20:44:13.0	2019-10-30 14:17:51.0	closed	[tooling, needs author feedback, no recent activity]	4	715	Add debug-generated files to .gitignore	https://api.github.com/repos/microsoft/calculator/issues/715	https://github.com/microsoft/calculator/pull/715	Those files are generated during debugging (actually cmake, but they're generated under "x64-Debug" folder) using the latest version of Visual Studio, so they should be added to .gitignore.	Howard-C	null	null	null	null	null	null	
2019-10-14 23:53:20.0	2019-10-15 00:13:57.0	2019-10-15 00:14:25.0	closed	[Enhancement, fixing approved issue]	1	716	Add contribute link to the About flyout	https://api.github.com/repos/microsoft/calculator/issues/716	https://github.com/microsoft/calculator/pull/716	## Fixes #582.  Added the contribute link to this project    ### Description of the changes:  -Changed the AboutFlyout.xaml     <!-- Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - I don't think that it needed testing    	nishp77	null	null	null	null	null	null	
2019-10-17 23:10:50.0	2019-10-29 22:31:22.0	2020-12-03 00:01:00.0	closed	[Area: Reliability, won't fix]	7	717	Scientific Mode | copying the result of 102^12 crashes calculator?	https://api.github.com/repos/microsoft/calculator/issues/717	https://github.com/microsoft/calculator/issues/717	**Describe the bug**  Calculator crashes upon copying the result of 102^12    **Steps To Reproduce**  <!--  Steps to reproduce the behavior:  1. Go to 'Scientific Mode'  2. Enter '102'  3. Press the 'xy' button  4. Enter '12'  5. Press 'Select all' in the result  6. Press 'Copy'  -->    **Expected behavior**  For it to copy the result and not crash.    **Screenshots**  None but I have a video at https://i.caspers.app/2019-Friday-u0iT.mp4    **Device and Application Information**   - OS Build: Major 10, Minor 0, Build 17763, Revision 0   - Architecture: X64   - Application Version: 10.1908.0.0   - Region: en-US   - Dev Version Installed: False    <!--  Run the following commands in Powershell and copy/paste the output.  " - OS Build: $([Environment]::OSVersion.Version)"  " - Architecture: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Architecture)"  " - Application Version: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Version)"  " - Region: $((Get-Culture).Name)"  " - Dev Version Installed: $($null -ne (Get-AppxPackage -Name Microsoft.WindowsCalculator.Dev))"  -->    **Additional context**  None.    **Requested Assignment**  I'm just reporting this problem.  I don't want to fix it.  	BitesizedLion	null	null	null	null	null	null	
2019-10-18 13:13:54.0	2019-10-30 17:55:14.0	2020-12-03 00:00:59.0	closed	[codebase quality, approved, hacktoberfest]	7	718	CalculatorVector<TType> should be replaced with std::vector	https://api.github.com/repos/microsoft/calculator/issues/718	https://github.com/microsoft/calculator/issues/718	**Edit**  The original proposal below was to make CalculatorVector functions noexcept.  It was then suggested to remove it all together.  This issue is being repurposed for that.  The comments below are left for historical purposes.    **Proposal**  All of `CalculatorVector<TType>`'s functions return a `ResultCode` which indicates that they should not throw an exception.  Knowing this, the exception overhead for those functions can be reduced by making those functions noexcept.    It should be noted that based on the current implementation, `CalculatorVector<TType>` could still allow exceptions to escape.  However, I don't think this is intentional since all functions return a `ResultCode`.  An instance where one of these functions could throw would be in code like this:    ```      ResultCode SetAt(_In_ unsigned int index, _In_opt_ TType item)      {          try          {              m_vector[index] = item;          }          catch (const std::out_of_range& /*ex*/)          {              return E_BOUNDS;          }          return S_OK;      }  ```    If `TType` were to throw an exception during copy construction that isn't `std::out_of_range`, it would escape this function.  Since it is unlikely that `TType` will ever be anything that would throw in this case, it should be safe to make the function noexcept and have the application terminate if this unexpected behavior ever occurred.  It's highly unlikely that there is code catching whatever the copy constructor would be throwing anyway.    **Requested Assignment**  If possible, I would like to implement this.	gsfreema	null	null	null	null	null	null	
2019-10-18 13:31:42.0	2019-10-21 19:47:10.0	2020-12-03 00:00:58.0	closed	[codebase quality, approved]	2	719	CalculatorHistory shouldn't call ClearHistory in its destructor	https://api.github.com/repos/microsoft/calculator/issues/719	https://github.com/microsoft/calculator/issues/719	**Proposal**  CalculatorHistory's descructor is currently implemented as  ```  CalculatorHistory::~CalculatorHistory(void)  {      ClearHistory();  }    void CalculatorHistory::ClearHistory()  {      m_historyItems.clear();  }  ```  Here, `m_historyItems` is a `std::vector` which will handle cleaning up its own memory in its destructor.  This implementation was likely done at a time when CalculatorHistory wasn't using a `std::vector` and had to manage its own memory, but now that it is using a `std::vector`, having a descructor that calls `ClearHistory` is unnecessary code.    **Requested Assignment**  If possible, I would like to implement this.  	gsfreema	null	null	null	null	null	null	
2019-10-20 09:04:18.0	2019-10-20 13:23:00.0	2019-10-20 13:23:00.0	closed	[documentation, invalid]	0	720	Updated README.md	https://api.github.com/repos/microsoft/calculator/issues/720	https://github.com/microsoft/calculator/pull/720	## Fixes #.      ### Description of the changes:  -  -  -    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  -  -  -    	abelrasheed	null	null	null	null	null	null	
2019-10-21 17:09:14.0	2020-06-02 13:54:58.0	2020-12-03 00:00:57.0	closed	[Bug, Area: Test Case, won't fix, Pri: 2]	7	721	Unit tests are failing in CI builds	https://api.github.com/repos/microsoft/calculator/issues/721	https://github.com/microsoft/calculator/issues/721	In our [CI builds](https://dev.azure.com/ms/calculator/_build/results?buildId=42197&view=logs), the following four tests recently started failing for x86 (x64 is fine):    - ValidateExpressionRegExMatch  - ValidatePasteExpressionErrorStates  - ValidateScientificPasteExpressionTest  - ValidateStandardPasteExpressionTest    This started happening after #687 was merged. We didn't catch it before the PR merged because we only validate x64 for PR builds.	mcooley	null	null	null	null	null	null	
2019-10-21 17:42:27.0	2019-10-21 17:43:36.0	2019-10-21 17:43:36.0	closed	[documentation, invalid]	0	722	Changed Readme.md	https://api.github.com/repos/microsoft/calculator/issues/722	https://github.com/microsoft/calculator/pull/722	## Fixes #.      ### Description of the changes:  -  -  -    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  -  -  -    	suah0205	null	null	null	null	null	null	
2019-10-21 19:07:06.0	2019-10-21 19:47:10.0	2019-10-21 20:03:22.0	closed	[fixing approved issue, codebase quality]	2	723	Updating CalculatorHistory to use a default destructor.	https://api.github.com/repos/microsoft/calculator/issues/723	https://github.com/microsoft/calculator/pull/723	Its memory will be cleaned up by std::vector's destructor.    ## Fixes #719    ### Description of the changes:  - Removed CalculatorDestructor code so the compiler would default it.    ### How changes were validated:  - Manually tested.  - Ran existing unit tests	gsfreema	null	null	null	null	null	null	
2019-10-21 19:54:55.0	2019-10-21 21:47:33.0	2019-10-21 21:49:34.0	closed	[localization]	0	724	Update localized strings 2019-10-21	https://api.github.com/repos/microsoft/calculator/issues/724	https://github.com/microsoft/calculator/pull/724	Adding new strings from our internal localization system.	mcooley	null	null	null	null	null	null	
2019-10-21 20:46:24.0	2019-10-29 18:14:12.0	2020-12-03 00:00:56.0	closed	[Pri: 3, Area: World-Readiness, fixed, hacktoberfest]	2	725	Date of rates update does not reflect local date format	https://api.github.com/repos/microsoft/calculator/issues/725	https://github.com/microsoft/calculator/issues/725	**Description**  Date that shows when currency rates were updated does not reflect local expected format of the date for specific languages. Currently, pure American date format is used that does not fit for many languages.    **Expected behavior**  Please consider changing to reflect local date format from Windows or at least adjust to some more common date format for international markets.     **Repro steps**  1) Calculator > Conventer > Currency > Update rates > See incorrect date    ![image](https://user-images.githubusercontent.com/1414423/67446257-e1ab3600-f5c4-11e9-9245-9a4ef7d9488a.png)  	MicrosoftIssueBot	null	null	null	null	null	null	
2019-10-22 14:50:49.0	2019-10-24 06:02:14.0	2020-12-03 00:00:55.0	closed	[by design, Area: User Experience]	4	726	📌Press any 0 to 9 Numeric value and press = equal-to operator then try to clear values	https://api.github.com/repos/microsoft/calculator/issues/726	https://github.com/microsoft/calculator/issues/726	<!--  Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.  -->    **Bug description**  In standard Mode: press any [0-9] numeric value and press equal to [=] operator then try to clear values using backspace key or clear button in calculator app values is not clearing🤔.    **Steps To Reproduce**  1. Open Calculator App [Standard Mode]  2. Press 0-9 Numeric value  3. Press = Operator  4. Clear Typed values using keyboard/app      **Expected behavior**  Clearing value button should work for after pressing equal operator.    **Screenshot**    ![Calculator](https://user-images.githubusercontent.com/13504156/67455267-c551dc80-f64a-11e9-8328-9618535ab8d4.png)    **Device and Application Information**   - Application Version: Calculator 10.1908.0.0   - Region: India    <!--  Run the following commands in Powershell and copy/paste the output.  " - OS Build: $([Environment]::OSVersion.Version)"  " - Architecture: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Architecture)"  " - Application Version: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Version)"  " - Region: $((Get-Culture).Name)"  " - Dev Version Installed: $($null -ne (Get-AppxPackage -Name Microsoft.WindowsCalculator.Dev))"  -->    <!-- **Additional context** -->  <!-- Add any other context about the problem here. -->    <!-- **Requested Assignment** -->  <!--  Some people just want to report a bug and let someone else fix it.  Other people want to not only submit the bug report, but fix it as well.  Both scenarios are completely ok. We just want to know which one it is.  Please indicate which bucket you fall into by keeping one and removing the other.  -->  If possible, I would like to fix this.  I'm just reporting this problem.  I don't want to fix it.  	tamil1809	null	null	null	null	null	null	
2019-10-22 21:56:57.0	2019-10-22 22:41:27.0	2019-10-22 22:41:30.0	closed	[tooling]	0	727	Update release pipeline to use newer StoreBroker tasks	https://api.github.com/repos/microsoft/calculator/issues/727	https://github.com/microsoft/calculator/pull/727	Updating the release pipeline to use the newer StoreBroker v2 tasks for automated deployment to the Store.    It was necessary to rev the version of the internals package in order to get the latest version of the PDP files and config file.	HowardWolosky	null	null	null	null	null	null	
2019-10-23 02:06:36.0	2019-10-23 02:38:26.0	2019-10-23 13:16:03.0	closed	[tooling, invalid]	1	728	Update ccpp.yml	https://api.github.com/repos/microsoft/calculator/issues/728	https://github.com/microsoft/calculator/pull/728	Add    ## Fixes #.      ### Description of the changes:  -  -  -    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  -  -  -    	abc52090241	null	null	null	null	null	null	
2019-10-23 02:11:13.0	2019-10-23 02:38:53.0	2020-12-03 00:00:54.0	closed	[Enhancement]	1	729	Title	https://api.github.com/repos/microsoft/calculator/issues/729	https://github.com/microsoft/calculator/issues/729	<!--  See https://github.com/Microsoft/calculator/blob/master/docs/NewFeatureProcess.md for suggestions on how to write a good feature pitch. Just want to submit an idea quickly? Try Feedback Hub instead: https://insider.windows.com/en-us/fb/?contextid=130  -->    **Problem Statement**  <!--  What problem are we trying to solve? Who’s the target audience? Is there a customer need or pain point we need to remedy? Is there a business goal or metric we are trying to improve? Do we have a hypothesis we want to prove or disprove?  -->    **Evidence or User Insights**  <!--  Why should we do this? Potential sources of data: Feedback Hub, other GitHub issues, other anecdotes from listening to customers in person or online, request from another team, telemetry data, user research, market or competitive research  -->    **Proposal**  <!--  How will the solution/feature help us solve the problem? How will it meet the target audience’s needs? If there are business goals or metrics, how does this improve them?  -->    **Goals**  <!--  What you want to accomplish with this feature. Typical examples include  "User Can *perform some task*"  -->    **Non-Goals**  <!--  Things we are explicitly not doing or supporting or that are out of scope, including reasons why.  -->    **Low-Fidelity Concept**  <!--  Show as much of the experience as needed to explain the idea. This can be as simple as a napkin drawing but can also be a code prototype, or a design comp. Keep it simple at this stage, as it can be refined later during the pre-production stage.  -->    **Requested Assignment**  <!--  Some people just want to suggest a feature and let someone else implement it.  Other people want to not only suggest a feature, but implement it as well.  Both scenarios are completely ok. We just want to know which one it is.  We are likely to prioritize the review of feature requests if they already have someone who can implement them.  Please indicate which bucket you fall into by keeping one and removing the other.  -->  If possible, I would like to implement this.  I'm just suggesting this idea.  I don't want to implement it.  	abc52090241	null	null	null	null	null	null	
2019-10-23 02:14:18.0	2019-10-23 02:39:10.0	2020-12-03 00:00:53.0	closed	[Area: World-Readiness, won't fix]	1	730	[Localization] 	https://api.github.com/repos/microsoft/calculator/issues/730	https://github.com/microsoft/calculator/issues/730	<!--Localization  PLEASE NOTE:   We cannot _merge_ any suggested localization changes to our localized resources files. These files are automatically generated from an internal localization process.  Any suggestion submitted this way will be duplicated into our internal localization system, and then closed here.    Alternatively, you can launch feedback-hub://, click on the "Language Community" tab on the left-side of the app, and follow the steps to submit a localization suggestion that way.  (The "Language Community" tab currently will only be visible if your system is running a non-English language).    Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.  -->    **Describe the bug**  <!-- A clear and concise description of what the bug is. -->    **Steps To Reproduce**  <!--  Steps to reproduce the behavior:  1. Go to '...'  2. Click on '....'  3. Scroll down to '....'  4. See error  -->    **Expected behavior**  <!-- A clear and concise description of what you expected to happen. -->    **Screenshots**  <!-- If applicable, add screenshots to help explain your problem. -->    **Device and Application Information**   - OS Build:   - Architecture:   - Application Version:   - Region:    - Dev Version Installed:      <!--  Run the following commands in Powershell and copy/paste the output.  " - OS Build: $([Environment]::OSVersion.Version)"  " - Architecture: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Architecture)"  " - Application Version: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Version)"  " - Region: $((Get-Culture).Name)"  " - Dev Version Installed: $($null -ne (Get-AppxPackage -Name Microsoft.WindowsCalculator.Dev))"  -->    **Additional context**  <!-- Add any other context about the problem here. -->  	abc52090241	null	null	null	null	null	null	
2019-10-23 19:51:57.0	2019-10-23 20:23:42.0	2020-12-03 00:00:52.0	closed	[won't fix]	2	731	Redirecting process ?	https://api.github.com/repos/microsoft/calculator/issues/731	https://github.com/microsoft/calculator/issues/731	With a code like this:    ```vb  Dim ProcID As Integer  ' Start the Calculator application, and store the process id.  ProcID = Shell("CALC.EXE", AppWinStyle.NormalFocus)  ' Activate the Calculator application.  AppActivate(ProcID)  ```    The `ProcID` returned by `Shell` isn't correct. Is the process some kind of process redirection or something like that ?  That was causing a problem in a sample in the dotnet documentations.  For more information, see https://github.com/dotnet/docs/issues/7668	Youssef1313	null	null	null	null	null	null	
2019-10-25 04:45:18.0	2019-11-02 00:24:28.0	2020-12-03 00:00:51.0	closed	[Enhancement, approved]	9	732	Keyboard accelerator to switch to On-Top mode	https://api.github.com/repos/microsoft/calculator/issues/732	https://github.com/microsoft/calculator/issues/732	**Problem Statement**  Switching to On Top mode from the keyboard requires pressing the tab key many times until it focuses on the On-Top button, this is not very accessibility friendly.    **Evidence or User Insights**  This should be addressed since its very important to be accessible to all users, no matter what input they are using.    **Proposal**  Adding a simple keyboard accelerator can help solve this issue. It is important to make sure this shortcut wont clash with anything else. To increase discoverability it would make sense to have a tool-tip with the shortcut when hovering over the control.    **Goals**  The user should be able to use a keyboard shortcut to switch in to On-Top mode as well as switching out back to the regular view:  * <kbd>Alt</kbd>+<kbd>Up</kbd> = Enter Always-on-Top Mode  * <kbd>Alt</kbd>+<kbd>Down</kbd> = Exit Always-on-Top Mode    If possible, I would like to implement this idea if my proposal is accepted.  	yaichenbaum	null	null	null	null	null	null	
2019-10-25 05:08:02.0	2019-10-25 05:33:27.0	2019-10-25 05:33:31.0	closed	[tooling]	0	733	Fix release pipeline yaml	https://api.github.com/repos/microsoft/calculator/issues/733	https://github.com/microsoft/calculator/pull/733	There were two issues:    * The indentation for the PowerShell script task was off,    causing a parsing error  * The flighting task needed to be named so that the Aero    task would be able to reference its output variable.	HowardWolosky	null	null	null	null	null	null	
2019-10-25 13:28:26.0	2019-11-02 00:24:28.0	2020-12-28 19:08:13.0	closed	[Enhancement, fixing approved issue]	12	734	Add KeyboardAccelerators for AlwaysOnTop	https://api.github.com/repos/microsoft/calculator/issues/734	https://github.com/microsoft/calculator/pull/734	### Fixes #732  ### Description of the changes:  Added a keyboard accelerator to switch in and out of On-Top mode.    * <kbd>Alt</kbd>+<kbd>Up</kbd> = Enter Always-on-Top Mode    * <kbd>Alt</kbd>+<kbd>Down</kbd> = Exit Always-on-Top Mode    ### How changes were validated:  Manually.	yaichenbaum	null	null	null	null	null	null	
2019-10-26 08:26:54.0	2019-11-06 00:51:37.0	2020-12-03 00:00:50.0	closed	[Area: User Experience, fixed]	1	735	In some cases, the right arrow of CalculationResult remains visible when it should not.	https://api.github.com/repos/microsoft/calculator/issues/735	https://github.com/microsoft/calculator/issues/735	**Describe the bug**    The right arrow button doesn't become collapsed when the value changes from a long number to a short one when `Scrollviewer.HorizontalOffset = 0`    **Steps To Reproduce**  - resize the window to the minimum  - select the `Programmer` mode  - click on `Bin`  - press 1 until you see the scroll buttons  - scroll to the far left  - Do one of the following action     - press CE     - paste a short number     - click on % then `=`    **Expected behavior**  the right arrow must be collapsed    **Screenshots**  ![1A096C88-563A-45CC-9A23-C5770DE0CB3C](https://user-images.githubusercontent.com/1226538/67616582-92fdc780-f78f-11e9-9d41-67ca6b7e07e2.GIF)    **Device and Application Information**   - OS Build: 10.0.18363.0   - Architecture: X64   - Application Version: 10.1908.0.0   - Region: en-US   - Dev Version Installed: True      **Requested Assignment**  If possible, I would like to fix this.  	rudyhuyn	null	null	null	null	null	null	
2019-10-26 09:12:14.0	2019-11-06 00:51:37.0	2019-11-06 00:51:37.0	closed	[Bug, fixing approved issue]	0	736	Fix the right arrow button of CalculationResult not disappearing in some cases	https://api.github.com/repos/microsoft/calculator/issues/736	https://github.com/microsoft/calculator/pull/736	## Fixes #735     The right arrow button didn't become collapsed when the value changed from a long number to a short one when Scrollviewer.HorizontalOffset was equal to 0    ### Description of the changes:  - call UpdateScrollButtons when the size of the text changes to check if we need to display/hide the scroll buttons    ### How changes were validated:  - Tested manually  	rudyhuyn	null	null	null	null	null	null	
2019-10-26 10:15:44.0	2019-10-29 22:21:33.0	2020-12-03 00:00:49.0	closed	[fixed, codebase quality, approved]	1	737	Make ControlSizeTrigger consistent with AdaptiveTrigger + bug fix	https://api.github.com/repos/microsoft/calculator/issues/737	https://github.com/microsoft/calculator/issues/737	**Describe the bug**  Unlike AdaptiveTrigger, the visual state will never be triggered if you write the following code: `<trigger:ControlSizeTrigger MinWidth="0" />` which can be very useful for future PR.    Similarly, the current code doesn't work if the control associated is already fully loaded.    (the original control in https://github.com/microsoft/Windows-universal-samples/blob/master/Samples/XamlStateTriggers/cs/CustomTriggers/ControlSizeTrigger.cs has the same issues, which should also be fixed)    In addition to this improvement, we also need to fix a bug in the following code:  `if (Source != nullptr && MinWidth >= 0 || MinHeight >= 0)`  which is equivalent to   `if ((Source != nullptr && MinWidth >= 0) || MinHeight >= 0)`  and not   `if (Source != nullptr && (MinWidth >= 0 || MinHeight >= 0))`  which was, I suppose, the intention.    **Device and Application Information**   - OS Build: 10.0.18363.0   - Architecture: X64   - Application Version: 10.1908.0.0   - Region: en-US   - Dev Version Installed: True    **Requested Assignment**  If possible, I would like to fix this.  	rudyhuyn	null	null	null	null	null	null	
2019-10-26 10:29:42.0	2019-10-29 22:21:33.0	2019-10-29 23:49:03.0	closed	[fixing approved issue, codebase quality]	0	738	Make ControlSizeTrigger consistent with AdaptiveTrigger + fix conditional	https://api.github.com/repos/microsoft/calculator/issues/738	https://github.com/microsoft/calculator/pull/738	## Fixes #737    ### Description of the changes:  - fix conditional  - make `MinWidth` and `MinHeight` equal to -1 by default (same than AdaptiveTrigger)  - support Visual State trigger with `MinWidth="0"` or `MinHeight="0"`  - decrease the number of conditionals in `ControlSizeTrigger::UpdateIsActive`  - make ControlSizeTrigger works even if the control is already loaded (SizeChanged not called)    ### How changes were validated:  - manually with the Calculator + a test app  	rudyhuyn	null	null	null	null	null	null	
2019-10-26 11:13:53.0	2019-10-29 18:14:12.0	2019-10-29 23:49:27.0	closed	[Bug, fixing approved issue]	0	739	Use local date format from Windows in Currency converter	https://api.github.com/repos/microsoft/calculator/issues/739	https://github.com/microsoft/calculator/pull/739	## Fixes #725     Use local date format from Windows (short date) instead of the custom date format in the Currency Converter page.     Take into account the user's choice in `Settings > Region > Change date formats > short date`.    US - mm/dd/yyyy format  ![image](https://user-images.githubusercontent.com/1226538/67618595-55586900-f7a6-11e9-8aa6-ba89dce0cc82.png)    US - yyyy-mm-dd format  ![image](https://user-images.githubusercontent.com/1226538/67618613-7caf3600-f7a6-11e9-8c3a-380054d5cd8a.png)    FR - dd/mm/yyyy  ![image](https://user-images.githubusercontent.com/1226538/67618651-f0514300-f7a6-11e9-80dc-6c52175c8ed5.png)      ### How changes were validated:  - manually, with different languages and settings    	rudyhuyn	null	null	null	null	null	null	
2019-10-27 11:14:59.0	2019-10-29 19:27:56.0	2020-12-03 00:00:48.0	closed	[Enhancement, pitch declined]	3	741	[Localization] Armenian Dram not included	https://api.github.com/repos/microsoft/calculator/issues/741	https://github.com/microsoft/calculator/issues/741	The Windows Calculator does not include support for the Armenian currency (AMD). Would really appreciate to see that added. Thanks  ![image](https://user-images.githubusercontent.com/50879652/67633701-8206a080-f8cc-11e9-82a5-2108bedce0e1.png)  	papook	null	null	null	null	null	null	
2019-10-28 08:26:55.0	2019-10-28 17:17:03.0	2020-12-03 00:00:47.0	closed	[Pri: 3, Area: User Experience, fixed]	3	742	The calculator does not allow users to paste negative numbers without digits before the decimal point.	https://api.github.com/repos/microsoft/calculator/issues/742	https://github.com/microsoft/calculator/issues/742	**Describe the bug**  The Calculator doesn't accept pasted strings like:  - `-.232`  - `-.1`  - `-.1e12`    **Steps To Reproduce**  - Launch the Calculator  - Open the Standard mode  - Paste `-.232`    **Expected behavior**  The Calculator should accept this expression    **Device and Application Information**   - OS Build: 10.0.18363.0   - Architecture: X64   - Application Version: 10.1908.0.0   - Region: en-US   - Dev Version Installed: True    **Requested Assignment**  If possible, I would like to fix this.  	rudyhuyn	null	null	null	null	null	null	
2019-10-28 08:36:45.0	2019-10-28 17:17:03.0	2019-10-28 17:17:03.0	closed	[Bug, fixing approved issue]	0	743	Allow negative numbers without digits before the decimal point to be pasted + Fix unit tests	https://api.github.com/repos/microsoft/calculator/issues/743	https://github.com/microsoft/calculator/pull/743	## Fixes #742     ### Description of the changes:  - Modify the regular expression c_signedDecFloat to accept negative numbers without digits before the decimal points  - Fix all issues with unit tests       - CI doesn't run unit tests anymore :(    ### How changes were validated:  - manually + unit tests    	rudyhuyn	null	null	null	null	null	null	
2019-10-28 09:02:08.0	2020-11-06 17:03:20.0	2020-12-06 18:00:07.0	closed	[Bug, Pri: 3, triage approved, Area: User Experience, fixed]	6	744	Clicking on the History Label causes the [Shift] + [Ctrl] + [D] hotkeys to break	https://api.github.com/repos/microsoft/calculator/issues/744	https://github.com/microsoft/calculator/issues/744	**Describe the bug**  Clicking on the History Label causes the [Shift] + [Ctrl] + [D] hotkeys to break    **Steps To Reproduce**  1. Launch Windows Calculator  2. Ensure the window is sized large enough so that the History panel is viable  3. Perform a calculation      - E.g. 4*5/6=      - A history item should populate the history panel  3. Click on the "history" pivot button.  4. Try to use [Shift] + [Ctrl] + [D] to clear history.  5. See error    **Observed behavior**  Using the [Shift] + [Ctrl] + [D] hotkeys has no impact; nothing appears to happen when the keys are pressed    **Expected behavior**  Using the [Shift] + [Ctrl] + [D] hotkeys clears the history panel    **Screenshots**  ![image](https://user-images.githubusercontent.com/1414423/67671693-acd80f80-f933-11e9-8091-79d977c9f7ee.png)    **Device and Application Information**   - OS Build: 10.0.19505.0   - Architecture: X64   - Application Version: 10.1909.1.0   - Region: en-US   - Dev Version Installed: True    **Additional context**  - This caused my automated test to fail, but it took manual testing to figure out why this hotkey function broke  - Once this function breaks, it stays broken until the application closed and relaunched  - The history label is naturally clicked when navigating between Memory and History, so this issue could impact users who switch between Memory and History and then want to use the hotkeys to clear the history panel      **Requested Assignment**  I'm just reporting this problem.  I don't want to fix it.	MicrosoftIssueBot	null	null	null	null	null	null	
2019-10-28 17:31:51.0	2019-10-28 17:54:26.0	2019-10-28 17:54:27.0	closed	[build]	0	745	Remove unnecessary dependencies from UITestFramework project	https://api.github.com/repos/microsoft/calculator/issues/745	https://github.com/microsoft/calculator/pull/745	The CalculatorUITestFramework project does not need Microsoft.NET.Test.Sdk or MSTest.TestAdapter. These dependencies are needed only in the project which produces the actual test assembly (in our case, the CalculatorUITests project).    Removing these resolves a build warning, since the test adapter package does not target .NET Standard.	mcooley	null	null	null	null	null	null	
2019-10-28 22:16:14.0	2019-11-01 21:08:27.0	2019-11-01 21:08:27.0	closed	[codebase quality]	0	746	Remove AsyncHelper, Resource and Module.cpp from CalculatorUnitTests project.	https://api.github.com/repos/microsoft/calculator/issues/746	https://github.com/microsoft/calculator/pull/746	Remove dead code in the CalculatorUnitTests project.	mcooley	null	null	null	null	null	null	
2019-10-28 23:04:13.0	2020-01-06 22:36:45.0	2020-12-03 00:00:46.0	closed	[Area: User Experience, fixed, Pri: 2]	1	747	The calculator should react to changes in user settings to the enable/disable animations	https://api.github.com/repos/microsoft/calculator/issues/747	https://github.com/microsoft/calculator/issues/747	**Describe the bug**  The Calculator caches the value of the setting "Show animations in Windows" and never checks it again during the lifetime of the instance.  **Steps To Reproduce**  - step 1: Launch the Calculator  - step 2: Switch from Standard mode to Scientific mode  - step 3: Go to settings>Display, change the value and wait ~5 seconds  - step 4: Switch from Standard mode to Scientific mode  --> Animation should be played in it was not the case in step 2 (or vice-versa)    **Expected behavior**  The calculator should react to user settings and change the behavior of animations    **Screenshots**    **Device and Application Information**   - OS Build:   - Architecture:   - Application Version:   - Region:   - Dev Version Installed:    **Requested Assignment**  If possible, I would like to fix it  	rudyhuyn	null	null	null	null	null	null	
2019-10-29 00:10:19.0	2020-01-06 22:36:46.0	2020-01-06 22:36:46.0	closed	[Bug, fixing approved issue]	0	748	Taking into account Windows settings to disable/enable animations	https://api.github.com/repos/microsoft/calculator/issues/748	https://github.com/microsoft/calculator/pull/748	## Fixes #747     The Calculator caches the value of the setting "Show animations in Windows" and never checks it again during the lifetime of the instance. This PR modifies this behavior.    ### Description of the changes:  - remove all cached values of UISettings::AnimationsEnabled and check the value before playing a Storyboard.    ### How changes were validated:  - manually    	rudyhuyn	null	null	null	null	null	null	
2019-10-29 01:45:42.0	2019-11-12 00:23:31.0	2020-12-03 00:00:45.0	closed	[Area: Reliability, fixed, Pri: 2]	3	749	these actions can crash the program	https://api.github.com/repos/microsoft/calculator/issues/749	https://github.com/microsoft/calculator/issues/749	    ![xxx](https://user-images.githubusercontent.com/34236843/67730209-4fc18400-fa2f-11e9-8b46-f36838d1c0b6.gif)      	Goleven	null	null	null	null	null	null	
2019-10-29 04:26:23.0	2019-11-12 00:23:31.0	2019-11-12 00:23:31.0	closed	[Bug, fixing approved issue]	0	750	force a call to m_expressionContainer->Measure in UpdateScrollButtons	https://api.github.com/repos/microsoft/calculator/issues/750	https://github.com/microsoft/calculator/pull/750	## Fixes #749     The UpdateScrollButtons method can modify the values of `m_expressionContainer->Padding' and `m_expressionContent->Margin', these modifications can launch the event `ScrollViewer::ViewChanged' which will call UpdateScrollButtons again.     In the current version of the code, to prevent loops, first we unregister ViewChanged events, then we modify Padding and Margin and we register again afterwards.    Based on the issue reported by the user, this is obviously not enough, ViewChanged will still be called after the end of `UpdateScrollButtons' in some cases.    To solve this problem, we will call `ScrollViewer.Measure` to be sure ScrollViewer::ViewChanged will be called before we register ViewChanged event again.    ### Description of the changes:  - force a call to m_expressionContainer->Measure in UpdateScrollButtons so Scrollviewer::ViewChanged event will be called before we register again    ### How changes were validated:  - manually    	rudyhuyn	null	null	null	null	null	null	
2019-10-29 04:33:57.0	2019-11-06 23:31:58.0	2020-12-03 00:00:44.0	closed	[codebase quality, approved]	1	751	Calculator shouldn't use objects/methods from CalcEngine	https://api.github.com/repos/microsoft/calculator/issues/751	https://github.com/microsoft/calculator/issues/751	To improve our architecture, we need to fully separate Calculator and CalcEngine and only use objects/methods from `CalcViewModel` in Calculator.    **Expected behavior**  If Calculator needs to access to a method/class from CalcManager, we should use CalcViewModel as a bridge between the 2 projects.    **Requested Assignment**  If possible, I would like to fix this.  	rudyhuyn	null	null	null	null	null	null	
2019-10-29 04:38:10.0	2019-11-06 23:31:58.0	2019-11-06 23:31:58.0	closed	[fixing approved issue, codebase quality]	1	752	Fully separate Calculator and CalcManager	https://api.github.com/repos/microsoft/calculator/issues/752	https://github.com/microsoft/calculator/pull/752	## Fixes #751    The only type from CalcEngine used in Calculator is CalculatorVector. We shouldn't access/use this type of object in Calculator.    ### Description of the changes:  - Add a method `StandardCalculatorViewModel::SelectHistoryItem` to manage the selection of a history item in the CalcViewModel instead in Calculator.  - Make SetPrimaryDisplay, SetHistoryExpressionDisplay, SetExpressionDisplay and SetTokens private so CalculatorVector won't be used as a parameter of a public method.      ### How changes were validated:  - manually    	rudyhuyn	null	null	null	null	null	null	
2019-10-29 05:37:23.0	2020-01-07 21:59:52.0	2020-12-03 00:00:43.0	closed	[codebase quality, approved]	2	753	CalcViewModel contains classes related to UI + dead codes.	https://api.github.com/repos/microsoft/calculator/issues/753	https://github.com/microsoft/calculator/issues/753	**Describe the bug**  CalcViewModel contains many classes related to the UI that should be moved to the Calculator project.  - KeyboardShortcutManager  - ValidationConverter  - ViewState    And some dead codes:  - BindingBase  - UnitConverterViewModel::StartConversionResultTimer  - StandardCalculatorViewModel::ConvertIntegerToNumbersAndOperatorsEnum  - StandardCalculatorViewModel::OnPinUnpinCommand  - StandardCalculatorViewModel::SetViewPinnedState  - StandardCalculatorViewModel::KeyPressed  - StandardCalculatorViewModel::GetSelectedTokenType    In addition, CalcViewModel imports the NuGet Microsoft.UI.Xaml package that won't be required once the above methods/classes are removed.    **Requested Assignment**  If possible, I would like to fix this.  	rudyhuyn	null	null	null	null	null	null	
2019-10-29 05:44:56.0	2020-01-07 21:59:52.0	2020-01-07 21:59:52.0	closed	[fixing approved issue, codebase quality]	2	754	CalcViewModel code cleaning	https://api.github.com/repos/microsoft/calculator/issues/754	https://github.com/microsoft/calculator/pull/754	## Fixes #753      ### Description of the changes:  - move KeyboardShortcutManager, ValidationConverter and ViewState to Calculator  - remove dead code listed in #753   - remove Microsoft.UI.Xaml nuget package from CalcViewModel    ### How changes were validated:  - manually    	rudyhuyn	null	null	null	null	null	null	
2019-10-29 11:27:04.0	2019-10-29 12:58:52.0	2019-10-29 12:58:52.0	closed	[documentation, invalid]	0	755	Update README.md	https://api.github.com/repos/microsoft/calculator/issues/755	https://github.com/microsoft/calculator/pull/755	## Fixes #.      ### Description of the changes:  -  -  -    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  -  -  -    	alvin1279	null	null	null	null	null	null	
2019-10-29 15:28:16.0	2019-10-30 17:55:14.0	2019-10-30 17:55:14.0	closed	[fixing approved issue]	0	756	Replacing CalculatorVector usage with std::vector	https://api.github.com/repos/microsoft/calculator/issues/756	https://github.com/microsoft/calculator/pull/756	## Fixes #718      ### Description of the changes:  - Removes CalculatorVector and replaces usage with std::vector  - Assumption made here are that memory allocations  are not recoverable.  - If it can be proved that an index  will be in range, then the indexing operation is used.  If not (without manual checks) the std::vector::at function  is used to throw an exception in case of a programmer bug.    ### How changes were validated:  - Manual testing was done  - Currently unable to run unit tests locally with the following errors.  Any help there would be greatly appreciated just in case someone has run into this before..    PRI175: 0x80070002 - Processing Resources failed with error: The system cannot find the file specified. CalculatorUnitTests C:\Users\gsfreema\Documents\GitHub\calculator\src\CalculatorUnitTests\GENERATEPROJECTPRIFILE 1    PRI252: 0xdef00071 - File C:\Users\gsfreema\Documents\GitHub\calculator\src\CalculatorUnitTests\x64\Debug\Microsoft.VisualStudio.TestTools.CppUnitTestFramework.CppUnitTestExtension\en-US\Microsoft.VisualStudio.TestTools.CppUnitTestFramework.CppUnitTestExtension.Resources.Resources.resw not found. CalculatorUnitTests C:\Users\gsfreema\Documents\GitHub\calculator\src\CalculatorUnitTests\GENERATEPROJECTPRIFILE 1      	gsfreema	null	null	null	null	null	null	
2019-10-31 00:39:53.0	2019-11-05 01:16:16.0	2020-12-03 00:00:42.0	closed	[codebase quality, approved]	1	757	Prefer Platform::String over wstring in CalcViewModel	https://api.github.com/repos/microsoft/calculator/issues/757	https://github.com/microsoft/calculator/issues/757	**Describe the bug**  CalcViewModel currently uses wstring and Platform::String to represent strings. We should prefer Platform::String to make it easier to interact with XAML and WinRT api and reduce the number of conversions between the 2 formats in the Calculator project.    **Requested Assignment**  If possible, I would like to fix this.  	rudyhuyn	null	null	null	null	null	null	
2019-10-31 00:59:14.0	2019-11-05 01:16:17.0	2019-11-05 01:56:39.0	closed	[fixing approved issue]	0	758	Replace wstring used in public methods by Platform::String in CalcViewModel	https://api.github.com/repos/microsoft/calculator/issues/758	https://github.com/microsoft/calculator/pull/758	## Fixes #757     ### Description of the changes:  - replace all wstring from public methods to `Platform::String`    also  - replace std::task by `IAsyncOperation`  - convert `LocalizationStringUtil` and `AppResourceProvider` to "ref classes"   - use wstringstream when we concatenate many strings.    ### How changes were validated:  - manually  	rudyhuyn	null	null	null	null	null	null	
2019-10-31 16:47:27.0	2019-10-31 18:44:25.0	2020-12-03 00:00:41.0	closed	[codebase quality]	1	759	Inefficient and invalid uses of std::wstring::append	https://api.github.com/repos/microsoft/calculator/issues/759	https://github.com/microsoft/calculator/issues/759	**Describe the bug**  <!-- A clear and concise description of what the bug is. -->  There are many uses of `std::wstring::append` where a `wstring` of a single character is created for the purpose of appending to an existing string.  Creating this temporary string is inefficient compared to appending a single `wchar_t` since `wchar_t` does not require a destructor to be called.  The existing usage likely doesn't cause memory allocation for the temporary string due to small string optimization, but a destructor is still required to be called.    There are some places where a `constexpr wchar_t` is being appended to strings as a `const wchar_t*`.  This is invalid because the append function taking `const wchar_t*` requires that it is pointer to a null-terminated string.  That is not the case with a `constexpr wchar_t`.    **Steps To Reproduce**  View this sample on compiler explorer demonstrating the issue of treating `constexpr wchar_t` as a null-terminated string.  https://godbolt.org/z/oT9YF8    **Requested Assignment**  If possible, I would like to fix this.  	gsfreema	null	null	null	null	null	null	
2019-10-31 16:52:19.0	2019-10-31 18:44:26.0	2019-10-31 18:44:26.0	closed	[]	0	760	Making string concatenations more efficent by appending wchar_ts instead of wstrings	https://api.github.com/repos/microsoft/calculator/issues/760	https://github.com/microsoft/calculator/pull/760	## Fixes #759.    ### Description of the changes:  - Improve efficiency of building strings by appending `wchar_t`s instead of temporary `wstring`s.  - Fix places where `constexpr wchar_t`'s were incorrectly being treated as null-terminated strings.    ### How changes were validated:  - Manual testing    	gsfreema	null	null	null	null	null	null	
2019-11-02 00:16:05.0	2019-11-06 00:51:04.0	2020-12-03 00:00:40.0	closed	[codebase quality, approved]	1	761	DateDifference::operator== doesn't compare datetime::day values	https://api.github.com/repos/microsoft/calculator/issues/761	https://github.com/microsoft/calculator/issues/761	**Describe the bug**  DateDifference::operator== fails to compare datetime::day values    ```  bool operator==(const DateDifference^ dd) const  {      return year == dd->year && month == dd->month && week == dd->week && day == day;  }  ```    **Requested Assignment**  If possible, I would like to fix this.  	rudyhuyn	null	null	null	null	null	null	
2019-11-02 00:19:56.0	2019-11-06 00:51:04.0	2019-11-06 00:51:04.0	closed	[fixing approved issue, codebase quality]	1	762	Make sure DateDifference::operator== compares DateTime::day	https://api.github.com/repos/microsoft/calculator/issues/762	https://github.com/microsoft/calculator/pull/762	## Fixes #761    ### Description of the changes:  - Fix DateDifference::operator== and compare `day` to `dd.day`    ### How changes were validated:  - manually    	rudyhuyn	null	null	null	null	null	null	
2019-11-03 04:07:28.0	2019-11-12 06:00:12.0	2020-12-03 00:00:39.0	closed	[Enhancement, pitch declined]	8	763	Add Tau	https://api.github.com/repos/microsoft/calculator/issues/763	https://github.com/microsoft/calculator/issues/763	**Problem Statement**    Tau is missing.    **Evidence or User Insights**    [The Tau Manifesto](https://tauday.com/tau-manifesto)    The manifesto makes a strong argument and presents use cases for using Tau. Unfortunately Tau is not an option.    **Proposal**    Add a toggle so that Tau can be used instead of Pi.    **Goals**    Use the Scientific mode "2nd" button toggle to replace Pi with Tau.    **Non-Goals**    Aside from the Pi button being toggled with Tau, no other changes to functionality or default behavior.    **Low-Fidelity Concept**    This is a simple change to the Scientific mode:  The "2nd" button will toggle Pi to Tau, and vice versa    **Requested Assignment**    I have already implemented this locally and would like to contribute.    ![Win10CalculatorTau](https://user-images.githubusercontent.com/7693442/68080238-d7abe300-fdcd-11e9-83f5-d07a3df4c7d0.png)    	sgreen00	null	null	null	null	null	null	
2019-11-03 04:42:14.0	2019-12-03 21:34:16.0	2019-12-03 21:34:27.0	closed	[Enhancement]	3	764	add tau to shift toggle	https://api.github.com/repos/microsoft/calculator/issues/764	https://github.com/microsoft/calculator/pull/764	## Fixes #763       ### Description of the changes:  - Add a new Tau button and wrap it and existing Pi button in grids  - Modify shift toggle button to affect the new grids  - Add handler for new Tau button. Due to compact numbering of existing elements, needed to code an exception because outside of `IsOpInRange(wParam, IDC_FE, IDC_MMINUS)`  - Pasted in tau entry in resource files for all countries, but these may need nonEnglish translation    - am-ET, be-BY, be-BG, bn-BD, el-GR, et-EE, fa-IR, fi-FI, he-IL, hi-IN, ja-JP, kk-KZ, kn-IN, lv-LV, mk-MK, ru-RU, ta-IN, te-IN, th-TH, uk-UA, zh-CN    ### How changes were validated:  - Manually  - Click 2nd and click tau, number shows up.    	sgreen00	null	null	null	null	null	null	
2019-11-05 00:29:39.0	2019-11-13 23:15:13.0	2020-12-03 00:00:38.0	closed	[codebase quality, approved]	1	765	Convert CopyPasteManager to runtime class	https://api.github.com/repos/microsoft/calculator/issues/765	https://github.com/microsoft/calculator/issues/765	**Describe the bug**  CalcViewModel contains both standard C++ classes and runtime classes (`ref class`). In order to make our code more homogeneous, we want to convert all public classes of `CalcViewModel` into runtime classes, starting with CopyPasteManager    **Requested Assignment**  If possible, I would like to fix this.  	rudyhuyn	null	null	null	null	null	null	
2019-11-05 00:41:57.0	2019-11-13 23:15:14.0	2019-11-13 23:15:35.0	closed	[fixing approved issue, codebase quality]	1	766	Convert CopyPasteManager to runtime class	https://api.github.com/repos/microsoft/calculator/issues/766	https://github.com/microsoft/calculator/pull/766	## Fixes #765       ### Description of the changes:  - convert CopyPasteManager to `ref class`  - replace `std::vector` by `Windows::Foundation::Collections::IVector`  - replace `concurrency::task` by `Windows::Foundation::IAsyncOperation`  - replace static fields by static properties  - refactor all methods having arguments passed by reference    Also:  - code quality: use a new enum `NumberBase` to replace the int representing the number base  - add `CopyPasteManager::IsErrorMessage` to check if a message is an error message (so we don't have to expose `PasteErrorString`      ### How changes were validated:  - unit tests + manually  	rudyhuyn	null	null	null	null	null	null	
2019-11-05 01:50:21.0	2019-11-05 01:54:12.0	2020-07-14 02:29:44.0	closed	[]	0	767	Revert "Replace wstring used in public methods by Platform::String in CalcViewModel"	https://api.github.com/repos/microsoft/calculator/issues/767	https://github.com/microsoft/calculator/pull/767	Reverts microsoft/calculator#758    Temporary revert #758 to fix an issue with Narrator.	rudyhuyn	null	null	null	null	null	null	
2019-11-05 03:40:11.0	2019-11-05 21:57:49.0	2019-11-05 21:57:50.0	closed	[]	0	768	Replace wstring used in public methods by Platform::String in CalcViewModel	https://api.github.com/repos/microsoft/calculator/issues/768	https://github.com/microsoft/calculator/pull/768	## Fixes #757 (v2)    ### Description of the changes:  - replace all wstring from public methods to `Platform::String`    also  - replace std::task by `IAsyncOperation`  - convert `LocalizationStringUtil` and `AppResourceProvider` to "ref classes"   - use wstringstream when we concatenate many strings.    ### How changes were validated:  - manually  	rudyhuyn	null	null	null	null	null	null	
2019-11-05 07:28:47.0	2019-11-06 14:58:35.0	2019-11-06 14:58:35.0	closed	[fixing approved issue, codebase quality]	1	769	Convert DateCalculatorViewModel to runtime class	https://api.github.com/repos/microsoft/calculator/issues/769	https://github.com/microsoft/calculator/pull/769	## Fixes #770      ### Description of the changes:  - Convert DateDifference, DateCalculationEngine to runtime class     - update all DateCalculationEngine methods to not pass arguments by reference  - Convert DateCalculatorViewModel to runtime class  - Update DateCalculatorUnitTest    ### How changes were validated:  - manually    	rudyhuyn	null	null	null	null	null	null	
2019-11-05 07:35:44.0	2019-11-06 14:58:35.0	2020-12-03 00:00:37.0	closed	[approved]	1	770	Convert DateCalculatorViewModel to runtime class	https://api.github.com/repos/microsoft/calculator/issues/770	https://github.com/microsoft/calculator/issues/770	## Describe the bug  CalcViewModel contains both standard C++ classes and runtime classes (ref class). In order to make our code more homogeneous, we want to convert all public classes of CalcViewModel into runtime classes, including all classes associated to Date Calculator.    ## Requested Assignment  If possible, I would like to fix this.	rudyhuyn	null	null	null	null	null	null	
2019-11-05 08:32:15.0	2019-11-06 02:59:25.0	2020-12-03 00:00:36.0	closed	[]	1	771	Migrate TraceLogger to runtime class	https://api.github.com/repos/microsoft/calculator/issues/771	https://github.com/microsoft/calculator/issues/771	## Describe the bug  CalcViewModel contains both standard C++ classes and runtime classes (ref class). In order to make our code more homogeneous, we want to convert all public classes of CalcViewModel into runtime classes, this time with TraceLogger.    ## Requested Assignment  If possible, I would like to fix this.	rudyhuyn	null	null	null	null	null	null	
2019-11-05 08:37:43.0	2019-11-06 02:59:25.0	2019-11-06 02:59:25.0	closed	[]	1	772	Migrate TraceLogger to runtime class	https://api.github.com/repos/microsoft/calculator/issues/772	https://github.com/microsoft/calculator/pull/772	## Fixes #771     ### Description of the changes:  - Convert TraceLogger to runtime class      - remove all `const` modifiers (not supported by runtime classes 😟)       - split UpdateWindowCount in 2: `UpdateWindowCount` and `DecreaseWindowCount`      - replace wstring by Platform::String  - change the visibility to some methods  ### How changes were validated:  - manually + unit tests  	rudyhuyn	null	null	null	null	null	null	
2019-11-05 22:12:58.0	2019-11-05 23:26:47.0	2019-11-05 23:26:47.0	closed	[graphing calculator]	0	773	Support high contrast for color picker and fix crashing bug	https://api.github.com/repos/microsoft/calculator/issues/773	https://github.com/microsoft/calculator/pull/773	## Part of #338    ### Description of the changes:  - Allow swapping the color pallet to a different set of colors when in high contrast mode, automatically updating the equation colors on the graph  - Fixes an equation not getting a color assigned if the EquationTextBox was already loaded previously  - Keep a single reference to available colors instead of creating multiple copies    ### How changes were validated:  - Manual tests    	joseartrivera	null	null	null	null	null	null	
2019-11-06 07:59:49.0	2019-11-12 06:14:34.0	2020-12-03 00:00:35.0	closed	[Area: User Experience, duplicate]	2	774	Keep the focused position when changing converter	https://api.github.com/repos/microsoft/calculator/issues/774	https://github.com/microsoft/calculator/issues/774	I don't know if this is a clear bug.  So I want to talk to others.    **Describe the bug**  If we change modes in the converter, the focus is still the same as in the previous mode.    like this picture.  ![focus](https://user-images.githubusercontent.com/10369528/68276845-47152180-00b1-11ea-80c8-bec857c22253.jpg)    **Expected behavior**  However, the focused unit is same after change focusing position in other converter mode.  (for example Kilometer unit position changed but still focus Kilometer)  <img width="538" alt="position change" src="https://user-images.githubusercontent.com/10369528/68278623-1800af00-00b5-11ea-9d40-8bcc8ea31d03.png">    So it is Seems to be intended    But in my opinion, it is better to keep the focused position in same mode.    **Device and Application Information**   - OS Build: 10.0.18362.0   - Architecture: X64   - Application Version: 10.1908.0.0   - Region: ko-KR   - Dev Version Installed: True      **Requested Assignment**  <!--  Some people just want to report a bug and let someone else fix it.  Other people want to not only submit the bug report, but fix it as well.  Both scenarios are completely ok. We just want to know which one it is.  Please indicate which bucket you fall into by keeping one and removing the other.  -->  If possible, I would like to fix this.  	Lee-WonJun	null	null	null	null	null	null	
2019-11-06 12:56:57.0	2019-11-06 20:07:24.0	2020-12-03 00:00:34.0	closed	[codebase quality]	1	775	StandardCalculatorViewModel code can be simplified with the use of standard algorithms	https://api.github.com/repos/microsoft/calculator/issues/775	https://github.com/microsoft/calculator/issues/775	**Problem Statement**  There many instances where a find or a count is being done manually in StandardCalculatorViewModel instead of using existing algorithms in the STL.    **Evidence or User Insights**  In more object oriented focused language, people tend to use find and count algorithms because they are easily discovered through the collection object being used.  C++ has a different philosophy on algorithms in order to make them more generic and have better performance, but since they aren't part of collection classes, people tend to forget to use them.    **Proposal**  Start using std::find, std::count, etc. where appropriate to simplify code.    **Goals**  Simplify code base to make it easier to read and maintain.    **Requested Assignment**  If possible, I would like to implement this.  	gsfreema	null	null	null	null	null	null	
2019-11-06 13:01:33.0	2019-11-06 20:07:24.0	2019-11-06 20:07:25.0	closed	[]	0	776	Updating StandardCalculatorViewModel to use algorithms	https://api.github.com/repos/microsoft/calculator/issues/776	https://github.com/microsoft/calculator/pull/776	## Fixes #775.    ### Description of the changes:  - Using default wstring constructor instead of taking empty string literal  - Updated to for range-for where appropriate  - Used std::find for IsOp* code that was doing it by hand  - Used std::count to calculate LengthWithoutPadding  - Used existing wstring constructor to pad a string    ### How changes were validated:  - Manual Testing    	gsfreema	null	null	null	null	null	null	
2019-11-06 16:50:53.0	2019-11-11 17:23:35.0	2020-12-03 00:00:33.0	closed	[codebase quality, approved]	1	777	Use wchar_t instead of const wchar_t* when appending a single character to wstrings	https://api.github.com/repos/microsoft/calculator/issues/777	https://github.com/microsoft/calculator/issues/777	**Problem Statement**  Calculator has many instances where it builds strings a single character at a time.  However, there are many instances where that single character is appended using a `const char*` which is not as efficient as appending just a `char` since using a `const char*` assumes there could be 0 or more characters where using a `char` will always be a single character.    **Evidence or User Insights**  Compiler explorer example showing inefficiency of using `const char*` version over `char` version of `wstring`'s operator `+=`.    **Proposal**  Update these instances to use the `char` overload.    **Goals**  Simple way to reduce binary size and get a small performance win.    **Requested Assignment**  If possible, I would like to implement this.  	gsfreema	null	null	null	null	null	null	
2019-11-06 16:58:34.0	2019-11-11 17:23:35.0	2019-11-11 17:23:35.0	closed	[]	0	778	Updating code to append a wchar_t instead of const wchar_t	https://api.github.com/repos/microsoft/calculator/issues/778	https://github.com/microsoft/calculator/pull/778	## Fixes #777.    ### Description of the changes:  - In places where a wstring was appending a single character, updated the code to use wchar_t instead of const wchar_t*.  - I also found a couple of places where a range-for could be used.  I hope it's ok to include that here.  - In COpndCommand::GetString, I found a small performance win by returning early vs. creating a return variable.  This win comes from the fact that the old code default constructed a wstring and then potentially called the assignment operator on top of that leading to the temporary string needing a destructor call.  Not using a return variable gets rid of the temporary.    ### How changes were validated:  - Manual Testing    	gsfreema	null	null	null	null	null	null	
2019-11-06 20:09:50.0	2020-04-28 17:54:56.0	2020-04-28 17:54:56.0	closed	[fixing approved issue, needs author feedback]	5	779	Scientific and Programmer tests	https://api.github.com/repos/microsoft/calculator/issues/779	https://github.com/microsoft/calculator/pull/779	## Resolves #608 Automated UI Tests for the Scientific Calculator Mode and #609 Automated UI Tests for the Programmer Calculator Mode    ### Description of the changes:  - Added basic functional tests for Scientific mode to be run with every test pass    ### How changes were validated:  - I ran all tests consecutively in many different orders to ensure they always pass    	Daniel-Parker	null	null	null	null	null	null	
2019-11-06 22:52:05.0	2019-11-06 23:45:32.0	2020-12-03 00:00:32.0	closed	[fixed, approved]	1	780	StandardCalculatorViewModel should use "Command" instead of int to represent commands.	https://api.github.com/repos/microsoft/calculator/issues/780	https://github.com/microsoft/calculator/issues/780	**Describe the bug**    _Following a discussion in #776_    Many methods in StandardCalculatorViewModel use `int` to represent a command:  ```  bool IsUnaryOp(int nOpCode);  bool IsBinOp(int nOpcode);  bool IsTrigOp(int nOpCode);  bool IsOpnd(int nOpCode);  bool IsRecoverableCommand(int nOpCode);  ```    This force us to cast Command to int before calling these methods and then cast back the int value to Command in these methods.    **Requested Assignment**  If possible, I would like to fix this.  	rudyhuyn	null	null	null	null	null	null	
2019-11-06 23:02:58.0	2019-11-06 23:45:32.0	2019-11-06 23:45:32.0	closed	[]	0	781	use Command instead of int to represent a command id	https://api.github.com/repos/microsoft/calculator/issues/781	https://github.com/microsoft/calculator/pull/781	## Fixes #780     ### Description of the changes:  - replace all `int nOpcode` by `Command command` in StandardCalculatorViewModel    ### How changes were validated:  - manually + unit tests    	rudyhuyn	null	null	null	null	null	null	
2019-11-06 23:24:19.0	2019-11-19 23:54:25.0	2019-11-19 23:54:25.0	closed	[graphing calculator]	3	782	Update share output	https://api.github.com/repos/microsoft/calculator/issues/782	https://github.com/microsoft/calculator/pull/782	## Part of #338    ### Description of the changes:  - Convert MathML to linear for sharing until we find a better way to share MathML  - Tweak the share output to be closer to the comps  - Remove the call to SetBitmap since it is just adding a duplicate image to the payload    ### How changes were validated:  - Manual tests  	joseartrivera	null	null	null	null	null	null	
2019-11-07 01:55:58.0	2020-04-08 00:08:03.0	2020-12-03 00:00:31.0	closed	[Pri: 2, codebase quality, approved]	1	783	Refactor HistoryTest.cpp to use HistoryViewModel (from CalcViewModel) instead of CalculatorHistory (from CalcManager)	https://api.github.com/repos/microsoft/calculator/issues/783	https://github.com/microsoft/calculator/issues/783	**Describe the bug**    All our unit tests related to the History function use `CalculatorHistory` while we should use HistoryViewModel to also detect bugs and regressions in our view models (some difference between the 2, the order is different for example). This modification will bring our unit tests closer to how we actually manage the history in the Calculator project.    **Requested Assignment**  If possible, I would like to fix this.  	rudyhuyn	null	null	null	null	null	null	
2019-11-07 08:49:44.0	2020-04-08 00:08:03.0	2020-04-08 00:08:03.0	closed	[fixing approved issue, codebase quality]	2	784	refactor HistoryTest.cpp to test the history using HistoryViewModel	https://api.github.com/repos/microsoft/calculator/issues/784	https://github.com/microsoft/calculator/pull/784	## Fixes #783     ### Description of the changes:  - Modify HistoryTest.cpp to use `HistoryViewModel` instead of `CalculatorHistory`. in order to test the full stack and not only the CalcManager part.     - ⚠ one of the big difference is how the history items collection is ordered.    Also:  - Expose some methods from CalcManager (a native library) via StandardCalcViewModel, making them accessible from another windows runtime library.  - make PropertyNames public instead of internal so other (dynamic) libraries can use them.  - move `Utils::GetStringValue` from CalcViewModel to CalculatorUnitTests    ### How changes were validated:  - Manually    	rudyhuyn	null	null	null	null	null	null	
2019-11-08 08:11:50.0	2019-11-08 08:13:03.0	2019-11-08 08:23:02.0	closed	[off-topic, invalid]	0	785	Merge pull request #1 from microsoft/master	https://api.github.com/repos/microsoft/calculator/issues/785	https://github.com/microsoft/calculator/pull/785	update    ## Fixes #.      ### Description of the changes:  -  -  -    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  -  -  -    	chenweibin910	null	null	null	null	null	null	
2019-11-08 19:44:56.0	2019-11-11 19:44:30.0	2021-09-28 18:09:01.0	closed	[tooling]	0	786	Update build version to 1910	https://api.github.com/repos/microsoft/calculator/issues/786	https://github.com/microsoft/calculator/pull/786	updating minor versioning to 1910 release	volkcor	null	null	null	null	null	null	
2019-11-08 20:43:00.0	2019-11-13 21:10:06.0	2019-11-13 21:10:06.0	closed	[graphing calculator]	0	787	Fix focus for EquationTextBox	https://api.github.com/repos/microsoft/calculator/issues/787	https://github.com/microsoft/calculator/pull/787	## Part of #338    ### Description of the changes:  - After submitting an equation with the enter key we should move focus away from the EquationTextBox . Previously this would happen anytime the equation was submitted, now it only occurs if it was submitted and the EquationTextBox has focus, allowing the user to tab away to submit and keep focus flowing to the next element as normal.    ### How changes were validated:  - Manual tests  	joseartrivera	null	null	null	null	null	null	
2019-11-09 03:47:03.0	2020-02-13 22:42:44.0	2020-02-14 00:11:23.0	closed	[fixing approved issue, codebase quality]	2	788	Update Standard Mode Calculator UI Tests	https://api.github.com/repos/microsoft/calculator/issues/788	https://github.com/microsoft/calculator/pull/788	### Description of the changes:  - I'm working on updating standard calculator test with the end goal to have most repeated manual tests automated  - This work addresses resolves #610 "Make Automated UI Tests for the Standard Calculator, faster, reliable, and AoT tests and Error Tests"    ### Description test coverage:  - Standard Mode Functional Tests      - Basic UI Functionality via Mouse Input Tests          - These automated tests verify mouse input in the Calculator UI, while simultaneously verify standard calculator functionality          - These test cases are P0      - Basic Calculator Functionality via Keyboard Input Tests          - These automated tests verify the functionality of all hotkeys, that are common for all calculator modes, as well as the all keyboard input used in standard mode on the Standard Calculator              - Note: Active issue "Bug 23811901: Clicking on the History Label causes the [Shift] + [Ctrl] + [D] hotkeys to break" causes KeyboardInput_HistoryHotkeys() to fail. It is currently commented out until the active bug is fixed.          - These test cases are are P1      - Arithmetic Operators Functionality via Mixed Input          - These automated tests not only verify each operator individually, but they also simultaneously verify mixed user input.          - These test cases are mostly P2 with one P0 test case      - AoT (Always on top) Tests          - These automated tests verify basic AoT calculator UI functionality          - These test cases are a mix of P0, P1, and P2      - Error Tests          - These automated tests verify errors display gracefully          - These test cases are are P1  - History Functional Tests      - Standard History Tests          - These automated tests verify using history related button/keyboard actions in the History Panel, and in the History flyout while in standard mode          - These test cases are P2  - Memory Functional Tests      - Standard History Tests          - These automated tests verify using memory related button/keyboard actions in the Memory Panel, and in the Memory flyout while in standard mode          - These test cases are P2    ### How changes were validated:  - I locally ran all the tests as whole  - I locally ran the P0 tests as group 10 times repeatedly using a for loop  - I locally ran each P0 test 100 times repeatedly using a for loop      	edwcry	null	null	null	null	null	null	
2019-11-11 18:51:32.0	2019-12-17 12:00:39.0	2020-12-03 00:00:30.0	closed	[question]	6	789	Missing Frame.NavigationFailed event	https://api.github.com/repos/microsoft/calculator/issues/789	https://github.com/microsoft/calculator/issues/789	I was trying to use your activation code as a way to check that I'm handling multi-view activation correctly in my own app. I notice that you check the return value of Frame.Navigate and throw if false. However, according to the docs - https://docs.microsoft.com/en-us/uwp/api/windows.ui.xaml.controls.frame.navigate#Windows_UI_Xaml_Controls_Frame_Navigate_Windows_UI_Xaml_Interop_TypeName_System_Object_ - this method always returns true unless you add a NavigationFailed handler and set Handled to true, and you don't seem to have added a NavigationFailed handler. So my question is, am I misinterpreting the docs, are the docs wrong, or did you forget to add the handler? Also, is it actually possible for the navigation to fail? Do you know of any way to force it to fail in such as way that NavigationFailed is invoked (without simply throwing an unhandled exception) in order to test it?	benstevens48	null	null	null	null	null	null	
2019-11-12 00:02:11.0	2019-11-12 00:18:14.0	2019-11-12 00:18:42.0	closed	[graphing calculator]	0	790	Copyright headers	https://api.github.com/repos/microsoft/calculator/issues/790	https://github.com/microsoft/calculator/pull/790	Copyright headers were added to .cpp and .h files.	marcomontoya	null	null	null	null	null	null	
2019-11-12 00:51:32.0	2019-11-20 22:28:33.0	2019-11-20 22:28:33.0	closed	[graphing calculator]	2	791	Refactor Equation to be treated as a model and update Key Graph Features	https://api.github.com/repos/microsoft/calculator/issues/791	https://github.com/microsoft/calculator/pull/791	## Part of #338.      ### Description of the changes:  The current way we transfer data from the EquationViewModel -> Equation is through duplicated dependency properties that are connected via two-way bindings in xaml. This is because the GraphControl was initially designed to receive a DataTemplate where the Equation FrameworkElement was supposed to be used. This isn't an ideal design since a DataTemplate should be able to accept any type of UI but currently would only work when used with the Equation FrameworkElement.    This PR refactors the code so that the GraphControl works more like the [MapControl ](https://docs.microsoft.com/en-us/uwp/api/windows.ui.xaml.controls.maps.mapcontrol)and the [MapRouteView ](https://docs.microsoft.com/en-us/uwp/api/windows.ui.xaml.controls.maps.maprouteview)class. The GraphControl has a collection of Equations. To add an Equation to the Graph, we would append the equation to that collection and then call the PlotGraph() function.    This PR also updated Key Graph Features to use the new refactored way of transferring data. It was also updated to analyze an equation when the user clicks the button instead of analyzing them all at once.    ### How changes were validated:  - Manual tests    	joseartrivera	null	null	null	null	null	null	
2019-11-12 10:02:44.0	2020-03-25 11:20:14.0	2020-12-03 00:00:29.0	closed	[Area: User Experience, fixed, Pri: 1]	3	792	Date Calculator showing wrong result in some instances when only one field is changed	https://api.github.com/repos/microsoft/calculator/issues/792	https://github.com/microsoft/calculator/issues/792	The calculator app shows difference between yesterday and today as same    1. Open calculator and change to date calculation.  2. By default, From and To are populated to Today's date.  3. Change From to yesterday.    You will notice that the date difference is still "Same dates" which is incorrect. See screenshot. It looks like the bug repros when you change only one of the fields - either From or To. When both are changed, it appears to be working correctly.    ![image](https://user-images.githubusercontent.com/1414423/68886524-3cb7e080-06cc-11ea-8e0e-4274997e1088.png)  	MicrosoftIssueBot	null	null	null	null	null	null	
2019-11-13 00:20:38.0	2019-11-20 19:41:22.0	2019-11-20 19:41:22.0	closed	[graphing calculator]	0	793	Update styles for buttons on Graph and ListView	https://api.github.com/repos/microsoft/calculator/issues/793	https://github.com/microsoft/calculator/pull/793	## Part of #338    ### Description of the changes:  - Updates graph button styles to be consistent/cleaner  - Updates margins on Equation ListView  - Updates Add New Equation button to be more like a sticky footer    ### How changes were validated:  - Manual tests    	joseartrivera	null	null	null	null	null	null	
2019-11-13 01:18:32.0	2019-11-13 01:36:24.0	2019-11-13 01:36:24.0	closed	[tooling]	0	794	Run localization pipeline on the Hosted Windows 2019 pool	https://api.github.com/repos/microsoft/calculator/issues/794	https://github.com/microsoft/calculator/pull/794		mcooley	null	null	null	null	null	null	
2019-11-13 18:58:30.0	2019-11-13 19:07:00.0	2020-12-03 00:00:28.0	closed	[]	2	795	Kill the Calculator	https://api.github.com/repos/microsoft/calculator/issues/795	https://github.com/microsoft/calculator/issues/795	Remove this "Calculator" and add the Windows 7 Stile Calculator.	Stefan-comkmits	null	null	null	null	null	null	
2019-11-13 22:42:23.0	2019-11-14 15:09:18.0	2020-12-03 00:00:27.0	closed	[fixed, codebase quality, approved]	1	796	CalcViewModel should only use one type to represent radix 	https://api.github.com/repos/microsoft/calculator/issues/796	https://github.com/microsoft/calculator/issues/796	**Describe the bug**  CalcViewModel currently uses 3 different types to represent a radix: RADIX_TYPE (enum in CalcManager), NumberBase (enum class in CalcViewModel) and int.    Calculator and CalcViewModel should use only 1 type so we will limit the number of static_cast and makes our code more robust (this is why we should use NumberBase, an enum class, instead of RADIX_TYPE, a standard enum.    **Requested Assignment**  If possible, I would like to fix this.  	rudyhuyn	null	null	null	null	null	null	
2019-11-14 00:21:02.0	2019-11-14 15:09:18.0	2019-11-14 15:09:18.0	closed	[]	0	797	Use only NumberBase to represent radix in CalcViewModel	https://api.github.com/repos/microsoft/calculator/issues/797	https://github.com/microsoft/calculator/pull/797	## Fixes #796     ### Description of the changes:  - simply replace RADIX_TYPE and int types used to represent radix by NumberBase     ### How changes were validated:  - manually    	rudyhuyn	null	null	null	null	null	null	
2019-11-14 07:21:38.0	2019-11-14 16:08:04.0	2020-12-03 00:00:26.0	closed	[fixed, codebase quality, approved]	1	798	Many properties from StandardCalculatorViewModel should be read-only and can be declared using macros	https://api.github.com/repos/microsoft/calculator/issues/798	https://github.com/microsoft/calculator/issues/798	**Describe the bug**  Almost all properties of StandardCalcViewModel are read-write while most of them should be read-only. Similarly, `IsBinaryBitFlippingEnabled`, `IsAlwaysOnTop`, `TokenPosition`, `SelectedExpressionLastData`, `KeyPressed`, `IsOperandUpdatedUsingViewModel` and `IsOperandTextCompletelySelected` declarations can be replaced by macros like `OBSERVABLE_PROPERTY_R(W)` or `PROPERTY_R(W)`    **Requested Assignment**  If possible, I would like to fix this.  	rudyhuyn	null	null	null	null	null	null	
2019-11-14 08:18:43.0	2019-11-14 16:08:04.0	2019-11-14 16:08:05.0	closed	[]	0	799	Modify the declaration of some properties of StandardCalculatorViewModel to make them read-only and use macros	https://api.github.com/repos/microsoft/calculator/issues/799	https://github.com/microsoft/calculator/pull/799	## Fixes #798     ### Description of the changes:  - Make many properties of StandardCalcViewModel read-only  - Replace declarations of `IsBinaryBitFlippingEnabled`, `IsAlwaysOnTop`, `TokenPosition`, `SelectedExpressionLastData`, `KeyPressed`, `IsOperandUpdatedUsingViewModel` and `IsOperandTextCompletelySelected` by macros    Also:  - modify the prototype of `MapCharacterToButtonId` to avoid using parameters by reference in public/internal methods    ### How changes were validated:  - manually  	rudyhuyn	null	null	null	null	null	null	
2019-11-14 18:46:21.0	null	2021-07-22 09:03:05.0	open	[Bug, Area: Accessibility, Pri: 3, triage approved]	5	800	When text scaling is applied, text is not getting resized in Length Converter pane	https://api.github.com/repos/microsoft/calculator/issues/800	https://github.com/microsoft/calculator/issues/800	When text scaling is applied, text is not getting resized in Length Converter pane    **Repro steps:**  1.Launch the calculator application from start menu.  2.Navigate to  menu navigation button present in left corner if the app and invoke it.  3.Now select the length option under Converter pane and invoke it.  4.Length Converter page, select “kilometers” as the unit type in the input field and input “5”  and navigate to the Output values now observe the "about equals to values" text size in Textscaling 200%. mode.    **Actual Results**  In Length converter pane "About equals text" and "Displayed value" text is not enlarged after applying 200 % textscaling.    **Expected Results**  Text size should be increased when Text scaling is applied    **User Impact**  Users with low vision will face difficulty if the text is not getting increased.    ![image](https://user-images.githubusercontent.com/1414423/68886642-70930600-06cc-11ea-9065-69f9c5f384f6.png)  	MicrosoftIssueBot	null	null	null	null	null	null	
2019-11-14 18:46:24.0	2020-04-24 17:03:05.0	2020-12-03 00:00:25.0	closed	[Bug, Area: Accessibility, fixed, Pri: 1]	3	801	In Programmer calculator pane, text is not getting resized for "Hex,Dec,OCT,Bin" value text	https://api.github.com/repos/microsoft/calculator/issues/801	https://github.com/microsoft/calculator/issues/801	In Programmer calculator pane, text is not getting resized for "Hex,Dec,OCT,Bin" value text    **Repro steps**  1.Launch the calculator application from start menu.  2.Navigate to  menu navigation button present in left corner if the app and invoke it.  3.Now select the Programmer calculator  and invoke it.  4.Give some input value and observed the resulted Hex,Dec,OCT,Bin value text  size in Textscaling 200%. mode.    **Actual Results**  In programmer calculator pane "Hex, Dec, OCT, Bin value text size is  not enlarged after applying 200 % textscaling.    **Expected Results**  Text size should be increased when Text scaling is applied    **User Impact**  Users with low vision will face difficulty if the text is not getting increased.    ![image](https://user-images.githubusercontent.com/1414423/68886736-991b0000-06cc-11ea-9f94-9ead3fd75dbc.png)  	MicrosoftIssueBot	null	null	null	null	null	null	
2019-11-15 00:23:00.0	2019-11-20 10:06:42.0	2019-12-10 22:22:38.0	closed	[documentation, graphing calculator]	1	802	Update ManualTests.md	https://api.github.com/repos/microsoft/calculator/issues/802	https://github.com/microsoft/calculator/pull/802	Added manual test cases for Graphing mode in Calculator.    - Added 4 cases to the hot keys section  - Added 1 case to the UI scaling section  - Added all manual functional tests for graphing mode, including special cases verifying each Key Graph Feature category  - Had to renumber all the cases for hot keys to put Graphing mode cases in an orderly location	Daniel-Parker	null	null	null	null	null	null	
2019-11-15 09:10:47.0	2019-11-22 18:36:37.0	2019-11-22 18:36:37.0	closed	[graphing calculator]	0	803	Added support for small windows in the graphing calculator	https://api.github.com/repos/microsoft/calculator/issues/803	https://github.com/microsoft/calculator/pull/803	## Part of #338     Add support for small windows in the graphing calculator    ### Description of the changes:  - Add toggle button to switch between the equation and the graph mode  - Only display one mode at a time  - Full support of accessibility     - high contrast mode     - Narrator + announcememnt    Also:  - some code cleaning    TODO:  - modify the icon once we receive the final assets.    ### How changes were validated:  - manually with light and dark theme + high contrast  - tested with narrator too    	rudyhuyn	null	null	null	null	null	null	
2019-11-15 19:08:36.0	2019-11-21 23:07:46.0	2020-01-16 18:28:07.0	closed	[graphing calculator]	0	804	Equation button updates: Enable/Disable on click, button content f1, f2, f3..., visibility icon on hover	https://api.github.com/repos/microsoft/calculator/issues/804	https://github.com/microsoft/calculator/pull/804	## Fixes Part of #338.      ### Description of the changes:  - Implemented the graph line enabling/disabling when the equation button is clicked  - Replaced the x in the button content fx with the number for the equation.  - Added a hover state to show clicking the icon sets the visibility of the line    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - manually  -  -    	sanderl	null	null	null	null	null	null	
2019-11-15 23:57:11.0	2019-12-03 17:43:49.0	2020-01-16 18:28:06.0	closed	[needs author feedback, graphing calculator]	3	805	Merge master with feature/GraphingCalculator	https://api.github.com/repos/microsoft/calculator/issues/805	https://github.com/microsoft/calculator/pull/805	## Fixes Part of #338.      ### Description of the changes:  - Merge with master to get latest calculator changes into the feature/GraphingCalculator  -  -    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Used PRs to find missing code  - Manual smoke testing  -    	sanderl	null	null	null	null	null	null	
2019-11-18 03:32:04.0	null	2021-09-30 09:05:10.0	open	[Enhancement, Pri: 2, needs spec review]	14	806	Support basic interest rate calculations	https://api.github.com/repos/microsoft/calculator/issues/806	https://github.com/microsoft/calculator/issues/806	I was really surprised that there is no support for basic financial formulas in standard Windows calculator. I tried to look for any relevant Github issues but couldn't find any.    **Proposal**  Create a basic "compound interest rate calculator" with or without payments.    **Goals**  In a basic case, allow the user to compute one of principal/interest rate/term/total given the other three values.    **Requested Assignment**  I would like to help implementing this feature.    If there is an interest in this, I can create a normal spec with wireframes.  	nissan18	null	null	null	null	null	null	
2019-11-18 16:43:40.0	2019-11-19 03:02:46.0	2020-12-03 00:00:24.0	closed	[codebase quality, approved]	1	807	RemoveUnwantedCharsFromString uses C-style API	https://api.github.com/repos/microsoft/calculator/issues/807	https://github.com/microsoft/calculator/issues/807	RemoveUnwantedCharsFromString accepts a `wchar_t*` and an `unsigned int` for size.  This type of API makes it easy for a developer to pass in a size that goes beyond the valid range of data pointed to by `wchar_t*` which has lead to security vulnerabilities in many applications over the years.    Ideally, this could be updated by using a `std::span<wchar_t>` but that feature won't officially be in until C++20.  There are other techniques that can be used such as using a template function that takes a `size_t` as the template parameter.	gsfreema	null	null	null	null	null	null	
2019-11-18 16:46:33.0	2019-11-19 03:02:46.0	2019-11-19 15:21:03.0	closed	[fixing approved issue, codebase quality]	0	808	Updating RemoveUnwantedCharsFromString to be a template	https://api.github.com/repos/microsoft/calculator/issues/808	https://github.com/microsoft/calculator/pull/808	## Fixes #807.    ### Description of the changes:  - Updating RemoveUnwantedCharsFromString to be a template accepting an array with a known size.  - Using a range-for to loop through unwanted characters thanks to the change above.  - Updated call sites so they no longer need to explicitly specify the number of characters in the array.    ### How changes were validated:  - Manual testing    	gsfreema	null	null	null	null	null	null	
2019-11-18 20:54:12.0	2019-11-19 15:08:05.0	2020-12-03 00:00:23.0	closed	[codebase quality, approved]	1	809	StandardCalculatorViewModel::UpdatecommandsInRecordingMode has typo	https://api.github.com/repos/microsoft/calculator/issues/809	https://github.com/microsoft/calculator/issues/809	The function StandardCalculatorViewModel::UpdatecommandsInRecordingMode is currently spelled with a lowercase `c` for `Commands`.    Some other things that could be refactored in this function is that it is creating a copy of the saved commands vector.  It also uses a raw for loop for iterating over those saved commands.	gsfreema	null	null	null	null	null	null	
2019-11-18 21:01:53.0	2019-11-19 15:08:05.0	2019-11-19 15:21:30.0	closed	[fixing approved issue, codebase quality]	0	810	Fixing typo in StandardCalculatorViewModel::UpdatecommandsInRecording…	https://api.github.com/repos/microsoft/calculator/issues/810	https://github.com/microsoft/calculator/pull/810	## Fixes #809.    ### Description of the changes:  - Capitalizing `Commands`  - Removing unnecessary copy of vector in StandardCalculatorViewModel::UpdateCommandsInRecordingMode  - Using range-for in StandardCalculatorViewModel::UpdateCommandsInRecordingMode	gsfreema	null	null	null	null	null	null	
2019-11-19 17:53:53.0	2019-11-22 05:50:27.0	2020-12-03 00:00:22.0	closed	[fixed, codebase quality]	1	811	CalculatorManager::GetSavedCommands returns a copy of commands	https://api.github.com/repos/microsoft/calculator/issues/811	https://github.com/microsoft/calculator/issues/811	This could be changed to return a const reference to the underlying vector and remove an unnecessary copy for callers who only need a const references of the commands.  Callers who need a copy, can still use vector's copy constructor.	gsfreema	null	null	null	null	null	null	
2019-11-19 17:55:34.0	2019-11-22 05:50:27.0	2019-11-22 05:50:27.0	closed	[triage needed, codebase quality]	0	812	Changing CalculatorManager::GetSavedCommands to return a const ref	https://api.github.com/repos/microsoft/calculator/issues/812	https://github.com/microsoft/calculator/pull/812	## Fixes #811.    ### Description of the changes:  - Changing GetSavedCommands to be a const function returning a const reference to the underlying vector	gsfreema	null	null	null	null	null	null	
2019-11-20 19:50:30.0	2019-11-20 19:51:07.0	2019-11-20 19:51:07.0	closed	[]	0	813	Feature/graphing calculator	https://api.github.com/repos/microsoft/calculator/issues/813	https://github.com/microsoft/calculator/pull/813	Added manual test cases for Graphing mode in Calculator.    - Added 4 cases to the hot keys section  - Added 1 case to the UI scaling section  - Added all manual functional tests for graphing mode, including special cases verifying each Key Graph Feature category  - Had to renumber all the cases for hot keys to put Graphing mode cases in an orderly location	Daniel-Parker	null	null	null	null	null	null	
2019-11-20 19:57:03.0	2019-11-20 19:57:48.0	2019-12-10 22:22:39.0	closed	[]	0	814	Manual Test Cases for Graphing Mode	https://api.github.com/repos/microsoft/calculator/issues/814	https://github.com/microsoft/calculator/pull/814	Added manual test cases for Graphing mode in Calculator.    - Added 4 cases to the hot keys section  - Added 1 case to the UI scaling section  - Added all manual functional tests for graphing mode, including special cases verifying each Key Graph Feature category  - Had to renumber all the cases for hot keys to put Graphing mode cases in an orderly location	Daniel-Parker	null	null	null	null	null	null	
2019-11-20 21:16:19.0	2019-12-04 19:02:09.0	2019-12-04 19:02:09.0	closed	[graphing calculator]	2	815	Update ManualTests.md	https://api.github.com/repos/microsoft/calculator/issues/815	https://github.com/microsoft/calculator/pull/815	Added manual test cases for Graphing mode in Calculator.    - Added 4 cases to the hot keys section  - Added 1 case to the UI scaling section  - Added all manual functional tests for graphing mode, including special cases verifying each Key Graph Feature category  - Had to renumber all the cases for hot keys to put Graphing mode cases in an orderly location	Daniel-Parker	null	null	null	null	null	null	
2019-11-20 23:04:42.0	2019-12-04 21:59:50.0	2019-12-04 21:59:50.0	closed	[graphing calculator]	1	816	Graphing mode continue	https://api.github.com/repos/microsoft/calculator/issues/816	https://github.com/microsoft/calculator/pull/816	Add the graph mode settings dialog and required plumbing.    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  -  -  -    	DavidShoe	null	null	null	null	null	null	
2019-11-21 20:26:07.0	2020-01-03 10:21:12.0	2020-12-03 00:00:21.0	closed	[Pri: 3, Area: User Experience, fixed]	5	817	Standard and Scientific modes allow multiple zeros to be prefixed	https://api.github.com/repos/microsoft/calculator/issues/817	https://github.com/microsoft/calculator/issues/817	<!--  Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.  -->    **Describe the bug**  <!-- A clear and concise description of what the bug is. -->  When using the standard or scientific mode, the calculator allows multiple zeros to be prefixed inside the input field.  While it doesn't change the calculation results, this is weird behavior.    **Steps To Reproduce**  1. Enable 'Standard' or 'Scientific' mode.  2. Click the decimal point '.'  3. Press the backspace key to remove the decimal point.  4. Press the zero key multiple times. Other digits can be pressed too.  5. See error.      **Expected behavior**  <!-- A clear and concise description of what you expected to happen. -->  After removing the decimal point (step 3 above), the initial zero should be replaced with the first non-zero digit typed.    **Screenshots**  <!-- If applicable, add screenshots to help explain your problem. -->  ![image](https://user-images.githubusercontent.com/12100397/69373210-0110ae00-0cac-11ea-99f9-5657c41355c5.png)    ![image](https://user-images.githubusercontent.com/12100397/69373271-200f4000-0cac-11ea-95f6-ef33d70d0d6b.png)        **Device and Application Information**   - OS Build: 10.0.18362.0   - Architecture: x64   - Application Version: 10.1908.0.0   - Region: en-US   - Dev Version Installed: False    <!--  Run the following commands in Powershell and copy/paste the output.  " - OS Build: $([Environment]::OSVersion.Version)"  " - Architecture: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Architecture)"  " - Application Version: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Version)"  " - Region: $((Get-Culture).Name)"  " - Dev Version Installed: $($null -ne (Get-AppxPackage -Name Microsoft.WindowsCalculator.Dev))"  -->    **Additional context**  <!-- Add any other context about the problem here. -->  N/A    **Requested Assignment**  <!--  Some people just want to report a bug and let someone else fix it.  Other people want to not only submit the bug report, but fix it as well.  Both scenarios are completely ok. We just want to know which one it is.  Please indicate which bucket you fall into by keeping one and removing the other.  -->  I'm just reporting this problem.  I don't want to fix it.  	fjoshuajr	null	null	null	null	null	null	
2019-11-22 00:19:17.0	2019-12-01 17:02:34.0	2020-12-03 00:00:20.0	closed	[fixed, codebase quality, approved]	2	818	HistoryViewModel::SaveHistory creates a copy of history item shared pointers	https://api.github.com/repos/microsoft/calculator/issues/818	https://github.com/microsoft/calculator/issues/818	Since history items are being stored in std::shared_ptr, this doesn't actually create copies of the items.  Instead, all of the shared_ptr reference counts have to be incremented and then upon destruction of the copied vector, they would all need to be decremented again.  This isn't terribly big deal, but given that shared_ptr reference counting is thread safe, it doesn't require those increments and decrements to be atomic operations.    This can all be avoided by taking advantage of the fact that CalculatorManager::GetHistoryItems returns a const reference to its vector.	gsfreema	null	null	null	null	null	null	
2019-11-22 00:22:48.0	2019-12-01 17:02:34.0	2019-12-01 17:02:35.0	closed	[]	0	819	Updating HistoryViewModel::SaveHistory so it does not copy the history item vector	https://api.github.com/repos/microsoft/calculator/issues/819	https://github.com/microsoft/calculator/pull/819	## Fixes #818.    ### Description of the changes:  - Taking a const ref of history items vector in HistoryViewModel::SaveHistory  - Iterating over those items using a range for loop	gsfreema	null	null	null	null	null	null	
2019-11-22 07:29:23.0	2019-11-23 00:22:54.0	2020-12-03 00:00:19.0	closed	[Area: User Experience, fixed, Pri: 2]	1	820	The History button is visible in Programmer mode when the window is small	https://api.github.com/repos/microsoft/calculator/issues/820	https://github.com/microsoft/calculator/issues/820	**Describe the bug**  The History button is visible in Programmer mode when the windows is small.    **Steps To Reproduce**  - Launch the Programmer mode  - Decrease the size of the window (if necessary)      **Expected behavior**  The button should not be visible    **Device and Application Information**   - OS Build: 10.0.19013.0   - Architecture: X64   - Application Version: 10.1910.0.0   - Region: en-US   - Dev Version Installed: True    **Requested Assignment**  If possible, I would like to fix this.  	rudyhuyn	null	null	null	null	null	null	
2019-11-22 07:33:52.0	2019-11-23 00:22:54.0	2019-11-23 01:15:37.0	closed	[]	0	821	Modify how we manage the visibility of the history button	https://api.github.com/repos/microsoft/calculator/issues/821	https://github.com/microsoft/calculator/pull/821	## Fixes #820     FIx issue with Programmer mode    ### Description of the changes:  - Use a binding function instead of visual states to manage the visibility of the History button    ### How changes were validated:  - Manually    	rudyhuyn	null	null	null	null	null	null	
2019-11-22 17:53:15.0	2019-11-22 23:08:24.0	2019-11-22 23:08:24.0	closed	[graphing calculator]	2	822	Add tooltips to buttons in graphing calculator	https://api.github.com/repos/microsoft/calculator/issues/822	https://github.com/microsoft/calculator/pull/822	## Fixes part of #338.    ### Description of the changes:  - Added tooltips to buttons in graphing calculator    ### How changes were validated:  manually    	EriWong	null	null	null	null	null	null	
2019-11-22 23:26:10.0	2019-11-23 01:49:58.0	2019-11-26 20:17:19.0	closed	[graphing calculator]	1	823	Hide the Edit Variables button when no variables are available	https://api.github.com/repos/microsoft/calculator/issues/823	https://github.com/microsoft/calculator/pull/823	### Description of the changes:  - Hide the `Edit Variables` button when no variables are set.    ### How changes were validated:  - manually    	rudyhuyn	null	null	null	null	null	null	
2019-11-23 11:38:01.0	2019-12-02 01:56:42.0	2020-12-03 00:00:18.0	closed	[Enhancement]	2	824	Default calculator mode	https://api.github.com/repos/microsoft/calculator/issues/824	https://github.com/microsoft/calculator/issues/824	<!--  See https://github.com/Microsoft/calculator/blob/master/docs/NewFeatureProcess.md for suggestions on how to write a good feature pitch. Just want to submit an idea quickly? Try Feedback Hub instead: https://insider.windows.com/en-us/fb/?contextid=130  -->  The other day I was trying to calculate some decimal points number with the app and figured out the standard mode doesn't have prioritization of operators like scientific mode. Most of the calculators out there by default support operator prioritization ( 5 - 5 * 2 should evaluate to (-5) instead of 0).     **Proposal**  <!--  How will the solution/feature help us solve the problem? How will it meet the target audience’s needs? If there are business goals or metrics, how does this improve them?  -->  Change the default mode of calculation to scientific or change the way standard mode works. It can be very confusing to people that don't really use windows calculator before and have to deal with standard mode    **Requested Assignment**  <!--  Some people just want to suggest a feature and let someone else implement it.  Other people want to not only suggest a feature, but implement it as well.  Both scenarios are completely ok. We just want to know which one it is.  We are likely to prioritize the review of feature requests if they already have someone who can implement them.  Please indicate which bucket you fall into by keeping one and removing the other.  -->  I'm just suggesting this idea.  I don't want to implement it.  	auditt98	null	null	null	null	null	null	
2019-11-23 13:27:06.0	2020-01-03 10:21:13.0	2020-01-03 14:10:44.0	closed	[Bug, fixing approved issue]	1	825	Fix prefix 0s after deleting decimal point	https://api.github.com/repos/microsoft/calculator/issues/825	https://github.com/microsoft/calculator/pull/825	## Fixes #817 .      ### Description of the changes:  - Added a verification if the remaining data is 0 only, and then pop this 0 out.  - 2 Tests corresponding    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Added an `UITest` and an `UnitTest`    Additional note: My respond may delay because I can't use git(hub) on weekdays.	dovisutu	null	null	null	null	null	null	
2019-11-25 07:55:25.0	2019-12-10 19:06:38.0	2019-12-10 19:06:38.0	closed	[graphing calculator]	3	826	[Graph] Replace the Add button by a EquationTextBlock	https://api.github.com/repos/microsoft/calculator/issues/826	https://github.com/microsoft/calculator/pull/826	## Description of the changes:  - Replace the Add button by a "ghost" EquationTextBlock  - Automatically create a new equation when       - the user presses Enter when the last EquationTextBox is focused      - the last EquationTextBox loses the focus and the value has been modified  - Give the focus to the next equation when users press enter    Also  - Make sure the background of the `RichEditBox` is aligned with the Function Button  - Prevent the user to remove the `fake` `EquationTextBlock`     ### How changes were validated:  - Manually with all themes and high contrast    	rudyhuyn	null	null	null	null	null	null	
2019-11-25 20:43:16.0	2019-12-03 22:41:40.0	2019-12-03 22:41:40.0	closed	[graphing calculator]	2	827	Add error handling to graph and equations	https://api.github.com/repos/microsoft/calculator/issues/827	https://github.com/microsoft/calculator/pull/827	## Part of #338    ### Description of the changes:  - Updates graph control to flag equations if they fail to graph  - Updates graph control to flag equations if they successfully graph  - Graph control will not try to graph any equations that have previously failed, unless their expression has changed  - When graphing an equation that was previously successful, if the graphing fails, we will flag that equation and try graphing again without it  - Added UI to indicate that an equation has failed to graph  - Some other code tweaks    ### How changes were validated:  - Manual tests    	joseartrivera	null	null	null	null	null	null	
2019-11-25 21:12:06.0	2019-12-01 16:59:51.0	2020-12-03 00:00:17.0	closed	[fixed, codebase quality, approved]	1	828	CCalcEngine::s_engineStrings uses wstring for keys when it could use wstring_view	https://api.github.com/repos/microsoft/calculator/issues/828	https://github.com/microsoft/calculator/issues/828	All of the keys for CCalcEngine::s_engineStrings come from string views that point to string literals in EngineStrings.h.  These string literals will be in memory for the life of the program so it should be safe to have CCalcEngine::s_engineStrings use wstring_view for its keys.  This will take up less memory and make loading the engine strings faster since it would no longer need to create new wstrings and copy the characters into them for the current 152 wstring_views that exist in `g_sids` from EngineStrings.h.	gsfreema	null	null	null	null	null	null	
2019-11-25 21:15:14.0	2019-12-01 16:59:51.0	2019-12-01 16:59:51.0	closed	[]	0	829	Changing CCalcEngine::s_engineStrings to use wstring_view for keys	https://api.github.com/repos/microsoft/calculator/issues/829	https://github.com/microsoft/calculator/pull/829	## Fixes #828.    ### Description of the changes:  - Changed CalcEngine::s_engineStrings to unordered_map<wstring_view, wstring>  - Updated CCalcEngine::LoadEngineStrings to use wstring_view directly since it no longer needs to copy into a string  - Updated EngineResourceProvider::GetCEngineString to take a wstring_view as an argument    	gsfreema	null	null	null	null	null	null	
2019-11-26 04:34:43.0	2019-11-26 04:35:33.0	2019-11-26 04:35:33.0	closed	[]	0	830	Graphing mode continue rebase	https://api.github.com/repos/microsoft/calculator/issues/830	https://github.com/microsoft/calculator/pull/830	## Fixes #.      ### Description of the changes:  -  -  -    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  -  -  -    	DavidShoe	null	null	null	null	null	null	
2019-11-27 04:04:16.0	2019-12-14 00:33:09.0	2019-12-14 00:33:09.0	closed	[graphing calculator]	1	831	GraphControl: refactoring and optimizations	https://api.github.com/repos/microsoft/calculator/issues/831	https://github.com/microsoft/calculator/pull/831	### Description of the changes:    Full refactoring of `Equation` to use only normal properties instead of dependency properties    Refactor GraphingControl  - The EquationViewModel used for KeyGraphFeatures is now hosted by `GraphingCalculatorViewModel` instead of `GraphControl`    Refactor VariableViewModel to not use PropertyChanged as an internal event    - modify Min and Max even when Value is modified using the property    - remove OBSERVABLE_OBJECT_CALLBACK(OnPropertyChanged)    - replace the property `Value` and the method `SetValue`    - replace OBSERVABLE_PROPERTY_RW_ALWAYS_NOTIFY by OBSERVABLE_PROPERTY_RW    - extract `VariableViewModel` from `GraphingCalculatorViewModel.cpp`    Also  - use a `Color` instead of a `SolidColorBrush` for LineColor allowing us to remove the workaround using a blankBrush in `EquationInputArea`          equationViewModel->LineColor = AvailableColors->GetAt(m_lastLineColorIndex);  - extract `KeyGraphFeatures` from `Equation`  - made many properties read-only  - rename `EquationInputAreaControl.EquationVM` as `EquationInputAreaControl.SelectedEquation`  - replace `GraphControl::PropertyChangedEventHandler` by the standard `PropertyChangedEventHandler`    ### How changes were validated:  - manually    	rudyhuyn	null	null	null	null	null	null	
2019-11-27 08:55:23.0	2019-12-18 07:46:00.0	2019-12-18 07:46:01.0	closed	[graphing calculator]	1	832	High contrast	https://api.github.com/repos/microsoft/calculator/issues/832	https://github.com/microsoft/calculator/pull/832	Set the colors for the elements of Graphing Calculator in high contrast mode.	marcomontoya	null	null	null	null	null	null	
2019-11-28 02:19:00.0	2019-12-17 07:00:06.0	2019-12-17 07:00:32.0	closed	[codebase quality, graphing calculator]	2	833	Remove EquationTextBox from KeyGraphFeaturesPanel	https://api.github.com/repos/microsoft/calculator/issues/833	https://github.com/microsoft/calculator/pull/833	### Description of the changes:  - Replace the templatized EquationTextBox in KeyGraphFeaturesPanel with a MathTextBox    Also:  - Give focus to the back button when the user opens the panel  - move styles only used by Graph Calculator from App.xaml.cs to EquationInputArea/GraphingCalculator to improve startup time  - NIT: make the names of events used by the EquationInputArea control uniform.  - simplify KeyGraphFeaturesPanel  - simplify the XAML code of the toggle button used in EquationTextBox    ### How changes were validated:  - manually    	rudyhuyn	null	null	null	null	null	null	
2019-11-30 03:21:46.0	2020-03-25 11:20:14.0	2020-03-25 11:20:14.0	closed	[Bug, fixing approved issue]	2	834	Remove adjustment from local time	https://api.github.com/repos/microsoft/calculator/issues/834	https://github.com/microsoft/calculator/pull/834	## Fixes #792.      ### Description of the changes:  It looks like the CalendarDatePicker control now provides a UTC Date as the value, making it so the conditions in #557 do not apply anymore. The conversion from local time actually pushes the date forward a day. Changes due to #557 are reverted here.    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  Tested Manually  	j-windsor	null	null	null	null	null	null	
2019-11-30 07:54:26.0	2019-11-30 08:32:40.0	2020-12-03 00:00:16.0	closed	[off-topic]	1	835	add a validated dynamic type	https://api.github.com/repos/microsoft/calculator/issues/835	https://github.com/microsoft/calculator/issues/835	deleted!deleted!deleted!deleted!deleted!deleted!deleted!	nutix56	null	null	null	null	null	null	
2019-12-01 10:00:04.0	2019-12-03 03:49:49.0	2019-12-03 03:49:55.0	closed	[Bug, graphing calculator]	1	836	Fix calculators in features/GraphingCalculator	https://api.github.com/repos/microsoft/calculator/issues/836	https://github.com/microsoft/calculator/pull/836	The current branch `features/GraphingCalculator` has a major issue with the standard/scientific/programmer calculators, `1+1 =` displaying 3 for example.    The reason is a faulty merge with origin/master ~5 months ago that added an extra call to `RunFirstEnabledButtonCommand(buttons);` in `KeyboardShortcutManager.cpp`.    Because of that, the CalcManager receives 2 `EQU` commands when users type <kbd>Enter</kbd>.     ### Description of the changes:  - fix merge issues    ### How changes were validated:  - manually    	rudyhuyn	null	null	null	null	null	null	
2019-12-02 12:31:26.0	2019-12-03 03:48:29.0	2019-12-03 03:48:29.0	closed	[graphing calculator]	6	837	Merge origin/master onto feature/GraphingCalculator	https://api.github.com/repos/microsoft/calculator/issues/837	https://github.com/microsoft/calculator/pull/837	### Description of the changes:  - Merge origin/master onto feature/GraphingCalculator    The number of files changed is because we used `git pull` instead of `git merge` in the past.    ### How changes were validated:  - Manually checked each file  - Verified if all changes/new files in Features/GraphingCalculator have been retained     - also used the following commands to double-check:          - `git diff upstream/feature/graphingcalculator -- *Graph*.*`          - `git diff upstream/feature/graphingcalculator -- *Equ*.*`          - `git diff upstream/feature/graphingcalculator -- src/Calculator\Resources\en-US`  - Verified if all changes in origin/master have been retained     - The simplest way to check is it create a Pull Request of this branch and select origin/master as the target.  - `origin/master` uses winUI 2.2, while feature/GraphingCalculator used winUI 2.1. No bugs detected.	rudyhuyn	null	null	null	null	null	null	
2019-12-02 21:35:52.0	2019-12-02 21:53:50.0	2019-12-02 21:53:50.0	closed	[tooling]	0	838	Enable PR and CI builds for feature branches	https://api.github.com/repos/microsoft/calculator/issues/838	https://github.com/microsoft/calculator/pull/838	Enable PR and CI builds for feature branches, like the graphing calculator feature branch.	mcooley	null	null	null	null	null	null	
2019-12-02 22:01:33.0	2019-12-02 22:01:55.0	2019-12-02 22:01:55.0	closed	[]	0	839	[cherry-pick to GraphingCalculator] Enable PR and CI builds for feature branches	https://api.github.com/repos/microsoft/calculator/issues/839	https://github.com/microsoft/calculator/pull/839	Cherry-pick #838 to the feature/GraphingCalculator branch to unblock PRs into that branch.	mcooley	null	null	null	null	null	null	
2019-12-02 22:19:16.0	2019-12-02 22:24:00.0	2019-12-02 22:24:00.0	closed	[]	0	840	Merge master into GraphingCalculator	https://api.github.com/repos/microsoft/calculator/issues/840	https://github.com/microsoft/calculator/pull/840		mcooley	null	null	null	null	null	null	
2019-12-03 00:37:10.0	2019-12-03 21:28:49.0	2019-12-03 21:28:49.0	closed	[graphing calculator]	4	841	Build GraphingCalculator against SDK 18362	https://api.github.com/repos/microsoft/calculator/issues/841	https://github.com/microsoft/calculator/pull/841	Allow the feature/GraphingCalculator branch to build without having a pre-release SDK installed on the build machines.  - Retarget projects back to 18362  - For the few APIs we need to use which are newer than 18362, use COM interop to call the methods directly    This change can be reverted once the Windows 10 version 2004 SDK is released and installed on the Azure Pipelines hosted build agents.	mcooley	null	null	null	null	null	null	
2019-12-03 17:58:20.0	2019-12-04 19:00:07.0	2019-12-04 19:00:08.0	closed	[needs author feedback, graphing calculator]	2	842	Adding automation names to buttons	https://api.github.com/repos/microsoft/calculator/issues/842	https://github.com/microsoft/calculator/pull/842	### Description of the changes:  Added automation names to buttons in graphing calculator    ### How changes were validated:  Manually with narrator  	EriWong	null	null	null	null	null	null	
2019-12-03 21:33:08.0	2019-12-03 21:59:11.0	2019-12-03 21:59:11.0	closed	[build, graphing calculator]	0	843	Change GraphingCalculator package identity back to WindowsCalculator.Dev	https://api.github.com/repos/microsoft/calculator/issues/843	https://github.com/microsoft/calculator/pull/843	In the feature/GraphingCalculator branch, the app's package identity was set to Microsoft.WindowsCalculator.Graphing. Set it back to Microsoft.WindowsCalculator.Dev (same as the master branch), since we do not intend to keep this change when development is completed.    This change is required to get UI tests running on the feature/GraphingCalculator branch.	mcooley	null	null	null	null	null	null	
2019-12-03 22:34:16.0	2019-12-03 22:53:18.0	2019-12-03 22:53:18.0	closed	[]	0	844	Update navigation unit tests for graphing	https://api.github.com/repos/microsoft/calculator/issues/844	https://github.com/microsoft/calculator/pull/844	At some point, the design of the navigation menu changed such that graphing calculator now appears above date calculator. The unit tests need to be updated to account for this change.    With this update, unit tests should pass in the CI builds for the graphing calculator feature branch.	mcooley	null	null	null	null	null	null	
2019-12-03 22:43:45.0	2019-12-04 00:02:46.0	2019-12-04 00:02:47.0	closed	[graphing calculator]	0	845	Add icons for show, hide and switch to equation mode	https://api.github.com/repos/microsoft/calculator/issues/845	https://github.com/microsoft/calculator/pull/845	### Description of the changes:  - updates calculator font file  - puts in correct show, hide and switch to equation mode icons    ### How changes were validated:  manually  	EriWong	null	null	null	null	null	null	
2019-12-04 16:46:54.0	2019-12-04 18:02:58.0	2019-12-04 18:02:58.0	closed	[]	0	846	Build and test x86 in PR builds	https://api.github.com/repos/microsoft/calculator/issues/846	https://github.com/microsoft/calculator/pull/846	Currently, our unit tests aren't running properly in x64 because of a VSTest issue (#721).    Until we can get this fixed, run x86 builds and tests for PR builds.	mcooley	null	null	null	null	null	null	
2019-12-04 22:08:29.0	2019-12-12 23:56:06.0	2019-12-12 23:56:06.0	closed	[graphing calculator]	0	847	Add Graph Settings	https://api.github.com/repos/microsoft/calculator/issues/847	https://github.com/microsoft/calculator/pull/847	Adds a settings button which controls a flyout panel allowing the user to control the graph extents and the trig unit mode.      ### Description of the changes:  New control    -  -    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  Manual, build debug/release.	DavidShoe	null	null	null	null	null	null	
2019-12-05 04:24:38.0	2019-12-06 23:03:08.0	2019-12-06 23:03:13.0	closed	[graphing calculator]	0	848	Hide or Disable graphing calculator menu item when necessary	https://api.github.com/repos/microsoft/calculator/issues/848	https://github.com/microsoft/calculator/pull/848	Hide the graphing calculator menu item when the OS doesn't support the feature or disable it when a group policy is set.    ## Description of the changes:  - Hide the Graphing Calculator menu when running Windows versions prior to Vibranium  - Disable the Graphing Calculator menu when a group policy is set   - Switch to the default view (Standard mode) when Graphing Calculator was the last used feature but the feature was disable later by the group policy  - modify accelerator keys of Programmer mode and Date Calculation if the Graphing Calculator menu item is visible or not (`3 and 4` or `4 and 5`)    Also:  - simplify `NavCategory` class  - remove NavCategory::Position (never used)    ### How changes were validated:  - manually  	rudyhuyn	null	null	null	null	null	null	
2019-12-05 17:36:36.0	2019-12-10 03:28:44.0	2020-12-03 00:00:15.0	closed	[codebase quality]	1	849	LocalizationSettings.h could use code clean up and unit tests	https://api.github.com/repos/microsoft/calculator/issues/849	https://github.com/microsoft/calculator/issues/849	- LocalizationSettings.h doesn't currently have unit tests.  - There are many instances where an algorithm such as find or copy can be used instead of manual implementations.  - m_resolvedName can be changed to be a Platform::String to prevent the need to create a new one each time GetLocaleName is called.  - GetDecimalSeparatorStr and GetNumberGroupingSeparatorStr could be made more efficient by using the constructor taking a wchar_t instead of default constructing a string and pushing back a character.	gsfreema	null	null	null	null	null	null	
2019-12-05 17:37:43.0	2019-12-10 03:28:44.0	2019-12-10 03:28:44.0	closed	[]	0	850	Refactoring LocalizationSettings	https://api.github.com/repos/microsoft/calculator/issues/850	https://github.com/microsoft/calculator/pull/850	## Fixes #849.    ### Description of the changes:  - Provided public constructor taking a DecimalFormatter for unit testing specific locales.  - Changed m_resolvedName to be a Platform::String ^ so it doesn't need to create a new one each time.  - Used algorithms over raw loops.  - Return strings of a single character created by constructor instead of constructor and push_back call.    ### How changes were validated:  - Added unit tests for much of LocalizatonSettings.	gsfreema	null	null	null	null	null	null	
2019-12-05 23:17:30.0	2020-04-03 17:35:00.0	2020-12-03 00:00:14.0	closed	[Bug, Area: User Experience, fixed, Pri: 2]	3	851	Inconsistent operand order for logarithm to base x	https://api.github.com/repos/microsoft/calculator/issues/851	https://github.com/microsoft/calculator/issues/851	- Behavior of logarithm to base x  The first operand entered (or previous result) is the base, the second operator is the anti-logarithm (i.e. the number of which the logarithm is calculated).  e.g.: "16   base log   2" yields 0.25 instead of the expected value 4.    - Behavior of similar operators  For exponentiation (x<sup>y</sup>) the first operand is the base and the second operand is the exponent.  For the n-th root (x<sup>1/y</sup>) the first operand is the radicand and the second operand is the index.    The behavior of the logarithm (log<sub>x</sub>(y)) is inconsistent to similar binary operators and also to the GUI, which shows log<sub>y</sub>(x). Furthermore this behavior does not allow to take the logarithm to base x of a previous result.	tom8210	null	null	null	null	null	null	
2019-12-06 00:23:10.0	2019-12-11 00:15:50.0	2020-01-16 18:28:03.0	closed	[graphing calculator]	0	852	Update GraphingCalculator Projects to allow official builds	https://api.github.com/repos/microsoft/calculator/issues/852	https://github.com/microsoft/calculator/pull/852	## Fixes part of #338 .      ### Description of the changes:  - Updated the MockGraphingImpl project to be called GraphingImpl  - Updated the nuget.config to include the WindowsApps Microsoft feed  -    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Tested manually    	sanderl	null	null	null	null	null	null	
2019-12-06 10:51:57.0	2019-12-07 01:02:46.0	2019-12-07 01:02:47.0	closed	[graphing calculator]	0	853	Fix crash with MathRichEditBox on x86	https://api.github.com/repos/microsoft/calculator/issues/853	https://github.com/microsoft/calculator/pull/853	  ![image](https://user-images.githubusercontent.com/1226538/70317279-4ec00700-17d2-11ea-810d-29e58e8f148a.png)    x86 uses the wrong calling convention when calling SetMath, GetMath, SetMathMode, making the application crash when it tries to clean the stack (already cleaned by the function).    ### Description of the changes:  - Add `__stdcall` to functions from `ITextDocument4` to force the calling convention.    Note: other modifications aren't necessary but it makes the code a little closer to the SDK.    ### How changes were validated:  - manually    	rudyhuyn	null	null	null	null	null	null	
2019-12-06 18:48:49.0	2019-12-09 21:18:07.0	2019-12-09 21:18:07.0	closed	[graphing calculator]	0	854	Add context menu to rich edit to allow for keyboard support	https://api.github.com/repos/microsoft/calculator/issues/854	https://github.com/microsoft/calculator/pull/854	## Fixes part of #338.    ### Description of the changes:  - Adds context menu for rich edit that allows for showing key graph features, changing colors of equations, removing equations.    ### How changes were validated:  manually tested keyboard only interactions  manually tested mouse interactions  	EriWong	null	null	null	null	null	null	
2019-12-06 19:21:20.0	2019-12-09 20:52:11.0	2019-12-09 21:13:50.0	closed	[graphing calculator]	3	855	Add graph mode keyboard UI	https://api.github.com/repos/microsoft/calculator/issues/855	https://github.com/microsoft/calculator/pull/855	## Fixes part of #338       ### Description of the changes:  - Adds the graphing mode keyboard UI, does not yet function, that will be added in a separate PR  - Added Trigonometry, Inequality, and Function operator panels  - Added visual states for small, medium, and large screens  - Updated icons, tab order, and enabled xy navigation    ### How changes were validated:  - Manual testing    	joseartrivera	null	null	null	null	null	null	
2019-12-09 20:48:01.0	2019-12-09 21:30:40.0	2019-12-09 21:30:40.0	closed	[graphing calculator]	0	856	Fix graph rendering of inequalities	https://api.github.com/repos/microsoft/calculator/issues/856	https://github.com/microsoft/calculator/pull/856	## Fixes part of #338       ### Description of the changes:  - Use command plotIneq2D instead of plotEq2d when the equation contains an inequality    ### How changes were validated:  - Manual test    	joseartrivera	null	null	null	null	null	null	
2019-12-10 15:36:53.0	2019-12-10 22:32:01.0	2020-12-03 00:00:13.0	closed	[codebase quality, approved]	1	857	CalculatorManager has unused and untested static Serialize/Deserialize functions	https://api.github.com/repos/microsoft/calculator/issues/857	https://github.com/microsoft/calculator/issues/857	**Describe the change request**  It appears as if CalculatorManager still contains unused serialization code similar to those described in #370.    If this is intentional due to code outside of the git repo using the serialization code, feel free to close this issue.    **Potentially unused functions**  - CalculatorManager::SerializeRational  - CalculatorManager::DeSerializeRational  - CalculatorManager::SerializeNumber  - CalculatorManager::DeSerializeNumber    **Requested Assignment**  If possible, I would like to fix this.  	gsfreema	null	null	null	null	null	null	
2019-12-10 21:51:35.0	2019-12-10 22:32:01.0	2019-12-10 22:32:01.0	closed	[]	0	858	Removing unused serialization code in CalculatorManager	https://api.github.com/repos/microsoft/calculator/issues/858	https://github.com/microsoft/calculator/pull/858	## Fixes #857.    ### Description of the changes:  - Removed SerializeRational, DeSerializeRational, SerializeNumber, and DeSerializeNumber from CalculatorManager    ### How changes were validated:  - Tested that code still compiles and unit tests run.    ### Note  I went ahead and created this PR in case it is OK to remove the functions.  That way there is less back and forth and time waiting.  If the issue is closed because these functions are needed, then this PR can be closed as well.	gsfreema	null	null	null	null	null	null	
2019-12-11 10:24:00.0	2019-12-12 22:52:37.0	2019-12-12 22:52:37.0	closed	[]	0	859	Move variables to the right column	https://api.github.com/repos/microsoft/calculator/issues/859	https://github.com/microsoft/calculator/pull/859	### Description of the changes:  - Remove the variable popup + button  - Display variables in the right column  - Polish design of variable editor    Also:  - Fix tab navigation when there is more than one equation listed    ### How changes were validated:  - Manually with light, dark and high contrast themes    	rudyhuyn	null	null	null	null	null	null	
2019-12-11 13:07:30.0	2020-03-03 18:52:49.0	2020-12-03 00:00:12.0	closed	[Area: User Experience, fixed]	19	860	Pressing enter in scientific mode opens navigation instead of displaying the result	https://api.github.com/repos/microsoft/calculator/issues/860	https://github.com/microsoft/calculator/issues/860	In scientific mode, after pressing the Enter button, navigation menu opens instead of displaying the result.    **Steps To Reproduce**    1. Go to Scientific mode.  2. Click on C.  3. Enter 2+2 on keyboard.  4. Press Enter on keyboard.    **Expected behavior**  Result is displayed.    **Actual behavior**  Navigation menu is opened.    **Device and Application Information**   - OS Build: 10.0.17134.0   - Architecture: X64   - Application Version: 10.1910.0.0   - Region: en-US   - Dev Version Installed: -    **Requested Assignment**  I'm just reporting this problem.  I don't want to fix it.  	milos321	null	null	null	null	null	null	
2019-12-11 22:23:12.0	2019-12-11 22:43:57.0	2019-12-11 23:14:15.0	closed	[]	0	861	Update Standard Mode Calculator UI Tests and Create Scientific Mode Calculator UI Tests	https://api.github.com/repos/microsoft/calculator/issues/861	https://github.com/microsoft/calculator/pull/861	### Description of the changes:  -  The work in this pull request is a combination of the work completed in       - #788  [Update Standard Mode Calculator UI Tests](https://github.com/microsoft/calculator/pull/788)          - Standard calculator tests were updated; the end goal to have most of the repeated, manual tests automated      - #779  [Scientifictests](https://github.com/microsoft/calculator/pull/779)          - Scientific calculator test were created   - This work:      - Resolves #610 "Make Automated UI Tests for the Standard Calculator, faster, reliable, and AoT tests and Error Tests"      - Resolves #608 "Automated UI Tests for the Scientific Calculator Mode"    ### Description test coverage:  See original pull requests for details about the test coverage    ### How changes were validated:  - The tests were run on multiple devices          	edwcry	null	null	null	null	null	null	
2019-12-12 00:03:58.0	2019-12-12 20:58:29.0	2019-12-12 21:02:53.0	closed	[graphing calculator]	1	862	Fix some UI bugs in graph mode	https://api.github.com/repos/microsoft/calculator/issues/862	https://github.com/microsoft/calculator/pull/862	## Fixes part of #338       ### Description of the changes:  - Removes style option when an equation has an error  - Always displays red border when an equation has an error  - Fixes alignment issues in KeyGraphFeatures panel  - Makes all body text copyable in KeyGraphFeatures panel  - Makes equation box background consistent in KeyGraphFeatures panel  - Dot color when tracing an equation now matches the color of the line  - Coordinates for trace pop-up rounds to 1 decimal for now  - Fixes Graph control not getting focus on Active Trace button click  - Removes tool tip from Active Trace Cursor when not near an equation line      ### How changes were validated:  - Manual tests    	joseartrivera	null	null	null	null	null	null	
2019-12-12 01:19:34.0	2019-12-19 17:56:04.0	2019-12-19 17:56:04.0	closed	[graphing calculator]	0	863	Wire up keyboard in graphing calculator	https://api.github.com/repos/microsoft/calculator/issues/863	https://github.com/microsoft/calculator/pull/863	## Fixes part of #338.      ### Description of the changes:  Wires up on screen keyboard to behave like a SIP for the last focused equation text box.    ### How changes were validated:  manually    	EriWong	null	null	null	null	null	null	
2019-12-12 01:51:07.0	2019-12-12 17:38:11.0	2019-12-12 17:38:11.0	closed	[graphing calculator]	0	864	Redesign graph buttons + replace ActiveTracing button by a ToggleButton	https://api.github.com/repos/microsoft/calculator/issues/864	https://github.com/microsoft/calculator/pull/864	### Description of the changes:  - Modify design of Graph buttons (border added, thinner, circles removed, pointerover/press states modified)  - Replace ActiveTracing button by a ToggleButton  - Leave the active tracing mode using the Escape key  - Simplify how we manage the tooltip of the ActiveTracing button    ![image](https://user-images.githubusercontent.com/1226538/70675501-3589e100-1c3e-11ea-8669-f163cf41ab11.png)      ### How changes were validated:  - Manually with light, dark and high contrast themes with batter saver on and off.    	rudyhuyn	null	null	null	null	null	null	
2019-12-12 23:50:22.0	2019-12-18 19:56:12.0	2020-01-16 18:28:02.0	closed	[graphing calculator]	1	865	Add Graph options and add setting for enabling Key graph features for variables	https://api.github.com/repos/microsoft/calculator/issues/865	https://github.com/microsoft/calculator/pull/865	## Fixes Part of #338.      ### Description of the changes:  - Add the graph options panel  - Add the graph option to analyze functions with variables  -    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - manually  -  -    	sanderl	null	null	null	null	null	null	
2019-12-13 11:51:59.0	2019-12-14 00:42:13.0	2019-12-14 00:42:13.0	closed	[graphing calculator]	1	866	Save and restore the value of EquationInputArea when users scroll	https://api.github.com/repos/microsoft/calculator/issues/866	https://github.com/microsoft/calculator/pull/866	The current implementation never saved/restored the value of EquationInputAreas when users scrolled the list and DataTemplate where recycled by the list virtualization    ### Description of the changes:  - Refactor MathRichEditBox and add a (real) dependency property (the existing one were used a regular property) we can use for bindings.  - Move submission detection from EquationInputArea to MathRichEditBox    Also:   - Because the submission detection is faster, other items don't get the focus when users press many times Enter.    ### How to test?      - Enter 4-5 equations  - Type `Enter` many times to add more than 16 'empty' equations  **Before**: Because of the virtualization, new equations will be initialized with some of the first equations you typed (and vice-versa, the first equations will disappear if you scroll up)  **After**: The equations won't be mixed up    ### How changes were validated:  - manually    	rudyhuyn	null	null	null	null	null	null	
2019-12-13 12:14:55.0	2019-12-16 18:41:35.0	2019-12-16 18:41:35.0	closed	[graphing calculator]	2	867	Update graph tooltip design and content	https://api.github.com/repos/microsoft/calculator/issues/867	https://github.com/microsoft/calculator/pull/867	### Description of the changes:  - Rollback text formatting change:      - Before: `x=22, y=32`      - After: `(22, 32)`  - Update design of the tooltip    ![image](https://user-images.githubusercontent.com/1226538/70799637-0ae37980-1d5f-11ea-9b20-a7d6e3c9594c.png)      ### How changes were validated:  - manually, with all themes  	rudyhuyn	null	null	null	null	null	null	
2019-12-14 01:01:41.0	2019-12-16 18:13:35.0	2019-12-16 18:13:35.0	closed	[graphing calculator]	0	868	Fix some focus issues in Graphing Calculator	https://api.github.com/repos/microsoft/calculator/issues/868	https://github.com/microsoft/calculator/pull/868	### Description of the changes:  -  Fix issue with bringing the new equation to the view (scrolling)  - Prevent the app to give the focus to the next equation when users modify an equation and click somewhere else      ### How changes were validated:  - manually	rudyhuyn	null	null	null	null	null	null	
2019-12-14 04:40:35.0	2019-12-14 04:42:11.0	2019-12-15 04:40:11.0	closed	[invalid]	1	869	Added from a slave	https://api.github.com/repos/microsoft/calculator/issues/869	https://github.com/microsoft/calculator/pull/869	## Fixes #.      ### Description of the changes:  -  -  -    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  -  -  -    	mouna-slave	null	null	null	null	null	null	
2019-12-14 07:07:33.0	2019-12-14 07:37:12.0	2020-12-03 00:00:11.0	closed	[Enhancement]	3	870	Currency converter - add a swap currency button/link	https://api.github.com/repos/microsoft/calculator/issues/870	https://github.com/microsoft/calculator/issues/870	**Problem Statement**  Most users will use the same 2 currencies in their calculations, but the direction will change. It would be much easier to just swap the currencies than to have to pick them out of a list.    **Evidence or User Insights**  Well in a lot of European countries we deal with different currencies and swapping between them is common. But you're either receiving or paying, usually the same 2 currencies.    There is also no memory in the list of currencies, so trying to find the same 2 currencies just to swap them is an excercise in patience.    **Proposal**  By giving a swap button a person would cut out the time of even having to open the list, let alove get aggrivated trying to find their specific currency. (memorising last used would also help here)    **Goals**  Quicker and more painless use of currency conversion.      **Requested Assignment**  I'm just suggesting this idea.  I don't want to implement it.  	mika76	null	null	null	null	null	null	
2019-12-14 14:09:33.0	2020-08-11 04:24:10.0	2020-12-03 00:00:10.0	closed	[Enhancement, Pri: 2]	4	871	Scientific notation	https://api.github.com/repos/microsoft/calculator/issues/871	https://github.com/microsoft/calculator/issues/871	<!--  See https://github.com/Microsoft/calculator/blob/master/docs/NewFeatureProcess.md for suggestions on how to write a good feature pitch. Just want to submit an idea quickly? Try Feedback Hub instead: https://insider.windows.com/en-us/fb/?contextid=130  -->    **Problem Statement**  <!--  What problem are we trying to solve? Who’s the target audience? Is there a customer need or pain point we need to remedy? Is there a business goal or metric we are trying to improve? Do we have a hypothesis we want to prove or disprove?  -->    **Evidence or User Insights**  <!--  Why should we do this? Potential sources of data: Feedback Hub, other GitHub issues, other anecdotes from listening to customers in person or online, request from another team, telemetry data, user research, market or competitive research  -->    **Proposal**  <!--  How will the solution/feature help us solve the problem? How will it meet the target audience’s needs? If there are business goals or metrics, how does this improve them?  -->    **Goals**  <!--  What you want to accomplish with this feature. Typical examples include  "User Can *perform some task*"  -->    **Non-Goals**  <!--  Things we are explicitly not doing or supporting or that are out of scope, including reasons why.  -->    **Low-Fidelity Concept**  <!--  Show as much of the experience as needed to explain the idea. This can be as simple as a napkin drawing but can also be a code prototype, or a design comp. Keep it simple at this stage, as it can be refined later during the pre-production stage.  -->    **Requested Assignment**  <!--  Some people just want to suggest a feature and let someone else implement it.  Other people want to not only suggest a feature, but implement it as well.  Both scenarios are completely ok. We just want to know which one it is.  We are likely to prioritize the review of feature requests if they already have someone who can implement them.  Please indicate which bucket you fall into by keeping one and removing the other.  -->  If possible, I would like to implement this.  I'm just suggesting this idea.  I don't want to implement it.  	TheCoderAS	null	null	null	null	null	null	
2019-12-14 21:50:37.0	null	2021-09-30 09:05:20.0	open	[Enhancement, Pri: 2, needs more info]	11	872	Request: Have an option to open the conversion panel on the side	https://api.github.com/repos/microsoft/calculator/issues/872	https://github.com/microsoft/calculator/issues/872	**Problem Statement**  - Doing a multiple conversions than using those in calculations requires switching back and forth between "calculator mode" and "conversion mode." This wastes a lot of time, especially when one needs to frequently do calculations using mixed units.     For instance, regularly working in feet+inches while needing to do calculations with metric formulae.     **Evidence or User Insights**  My personal use involves heavy use of the conversion panel, which usually eventually entails doing calculations with those numbers. Typically, converting imperial measurements into metric, then using those converted values in various formulas or comparing to standards.    **Proposal**  Have an option that opens the conversion panel on the side instead of in place of the calculator. The fact that the old windows calculator did this was one of the reasons I used it for so long.     **Goals**  User can perform conversions and keep them visible while doing other calculator tasks that may or may not involve those comparisons.     **Low-Fidelity Concept**  This calculator, and the conversion panel, have some strong improvements over the old calculator. Especially the fact that conversions can go both ways. I really appreciate that. However the fact that the conversion panel and the calculation panel are now mutually exclusive is a downgrade.    **Requested Assignment**  I'm just suggesting this idea.  I don't have the ability to implement it.  	Zitchas	null	null	null	null	null	null	
2019-12-15 02:04:01.0	2020-03-13 06:43:58.0	2020-12-03 00:00:09.0	closed	[Enhancement, pitch declined]	6	873	Promote Bitwise Operations in Programmer Mode	https://api.github.com/repos/microsoft/calculator/issues/873	https://github.com/microsoft/calculator/issues/873	<!--  See https://github.com/Microsoft/calculator/blob/master/docs/NewFeatureProcess.md for suggestions on how to write a good feature pitch. Just want to submit an idea quickly? Try Feedback Hub instead: https://insider.windows.com/en-us/fb/?contextid=130  -->    **Problem Statement**  <!--  What problem are we trying to solve? Who’s the target audience? Is there a customer need or pain point we need to remedy? Is there a business goal or metric we are trying to improve? Do we have a hypothesis we want to prove or disprove?  -->  In Programmer mode, the bitwise operations have all been moved under the "Bitwise" flyout.  This doubles the number of clicks and introduces more mouse movement to perform the same operation when compared to previous versions.  In addition, the likely seldom used percent operation remains as a first class operation and the MOD operation was removed entirely.  The AND, OR and XOR operations are highly used in this mode and should be returned to first class GUI elements.    The Bitwise flyout as currently implemented reduces productivity when working with logical number operations which is a primary use case for programmer mode.    **Evidence or User Insights**  <!--  Why should we do this? Potential sources of data: Feedback Hub, other GitHub issues, other anecdotes from listening to customers in person or online, request from another team, telemetry data, user research, market or competitive research  -->  All bitwise operations now require 2 mouse clicks and a mouse over to complete when not using the keyboard.  Seldom used operations, like percent, remain and the MOD function was removed entirely.    **Proposal**  <!--  How will the solution/feature help us solve the problem? How will it meet the target audience’s needs? If there are business goals or metrics, how does this improve them?  -->  Return the Bitwise operations to the primary button layout to reduce the number of mouse clicks required to accomplish frequent operations.    **Goals**  <!--  What you want to accomplish with this feature. Typical examples include  "User Can *perform some task*"  -->  Returning the Bitwise operations to the primary layout will improve operation efficiency by removing a mouse click and mouse over that are now required.    Returning the MOD operation will bring back functionality that was removed.    **Non-Goals**  <!--  Things we are explicitly not doing or supporting or that are out of scope, including reasons why.  -->      **Low-Fidelity Concept**  <!--  Show as much of the experience as needed to explain the idea. This can be as simple as a napkin drawing but can also be a code prototype, or a design comp. Keep it simple at this stage, as it can be refined later during the pre-production stage.  -->  Add the Bitwise operations as an additional column or row.  Potentially replace lesser used operations (like percent).      **Requested Assignment**  <!--  Some people just want to suggest a feature and let someone else implement it.  Other people want to not only suggest a feature, but implement it as well.  Both scenarios are completely ok. We just want to know which one it is.  We are likely to prioritize the review of feature requests if they already have someone who can implement them.  Please indicate which bucket you fall into by keeping one and removing the other.  -->  I'm just suggesting this idea.  I don't want to implement it.  	LucAce	null	null	null	null	null	null	
2019-12-17 15:35:03.0	2019-12-18 09:19:29.0	2020-12-02 18:01:52.0	closed	[fixed, codebase quality]	1	874	UnitConverter has many instances where code can be simiplified ore made more efficient	https://api.github.com/repos/microsoft/calculator/issues/874	https://github.com/microsoft/calculator/issues/874	- Some raw loops could be made to be range-for loops.  - wstringstream is often used for building a string which has lots of overhead compared to appending to a wstring.  - Some functions take a `wstring` or `const wchar_t*` where a `wstring_view` would be more appropriate.    - `wstring_view` does not require constructing a string if a `const wchar_t*` is passed in.    - `wstring_view` is constexpr constructable so it does not have to calculate its size at runtime when using string literals.  	gsfreema	null	null	null	null	null	null	
2019-12-17 15:39:21.0	2019-12-18 09:19:29.0	2019-12-18 09:19:29.0	closed	[]	0	875	Cleaning up some UnitConverter code and making some of it more efficient	https://api.github.com/repos/microsoft/calculator/issues/875	https://github.com/microsoft/calculator/pull/875	## Fixes #874.    ### Description of the changes:  - Using range-for loops where appropriate  - Stop using wstringstream where a wstring could be used instead  - Take advantage of wstring_view where appropriate      ### How changes were validated:  - Manual testing  - Ran existing unit tests	gsfreema	null	null	null	null	null	null	
2019-12-17 19:45:06.0	2019-12-18 10:02:05.0	2020-12-02 18:01:51.0	closed	[fixed, codebase quality]	1	876	Dereferencing nullptr possible in StringToNumber	https://api.github.com/repos/microsoft/calculator/issues/876	https://github.com/microsoft/calculator/issues/876	**Describe the bug**  If the the number of digits is 0, then the returned number is nulled out.  Then it is passed to `stripzeroesnum` where a non-null value is expected to be passed in and the value is dereferenced.    **Requested Assignment**  If possible, I would like to fix this.    **Issue located here**  https://github.com/microsoft/calculator/blob/b6f9634e346e746517792367d8065d06d3900e82/src/CalcManager/Ratpack/conv.cpp#L745	gsfreema	null	null	null	null	null	null	
2019-12-17 19:47:14.0	2019-12-18 10:02:05.0	2019-12-18 10:02:05.0	closed	[]	0	877	Removing call to stripzeroesnum if no number exists.	https://api.github.com/repos/microsoft/calculator/issues/877	https://github.com/microsoft/calculator/pull/877	## Fixes #876.    ### Description of the changes:  - Removing call to stripzeroesnum if no number exists.    ### Note  It could be possible that `stripzeroesnum` was supposed to be called before checking if a number exists.  I'm not very familiar with this code so I simply kept the logic the same except for skipping the `stripzeroesnum` if the number was nulled out.	gsfreema	null	null	null	null	null	null	
2019-12-18 07:55:50.0	2019-12-20 18:56:02.0	2019-12-20 18:56:02.0	closed	[Enhancement, graphing calculator]	0	878	High Contrast support for Graphing Calculator	https://api.github.com/repos/microsoft/calculator/issues/878	https://github.com/microsoft/calculator/pull/878	  ### Description of the changes:  - Add high contrast support to GraphControl  - Add high contrast support to EquationInputTextArea    Also:  - Rewrite button styles used in EquationInputTextArea to only modify their brushes instead of fully modify their templates (easier to maintain + less verbose)  - Make EquationInputTextArea buttons more fluent.  - localize the string "Enter an equation"  - slighly modify the error state of EquationInputTextArea (display all 4 borders instead of only 3)  - move all resources only used by Graphing Calculator from App.xaml to GraphingCalculator.xaml    Note: we want to keep the graph white background, black lines with dark theme for the moment.    ### How changes were validated:  - Manually    	rudyhuyn	null	null	null	null	null	null	
2019-12-18 08:48:20.0	2020-01-03 23:06:15.0	2020-01-03 23:06:15.0	closed	[graphing calculator]	1	879	Add Graph Settings	https://api.github.com/repos/microsoft/calculator/issues/879	https://github.com/microsoft/calculator/pull/879	Taking over @sanderl's PR.    ### Description of the changes:  - Add Graph Settings  - Add GraphSettingsViewModel to simplify the UI part of the control and manage all the logic  - Support error states (when minimum is higher than maximum)  - Disable keyboard when the flyout is opened  - Only load GraphSettings after the user clicks on the button to improve launch performance    ### How changes were validated:  - Manually    	rudyhuyn	null	null	null	null	null	null	
2019-12-18 21:12:37.0	2019-12-19 09:50:32.0	2020-12-02 18:01:50.0	closed	[fixed, codebase quality]	1	880	Added overhead of using wstringstream when wstring would work	https://api.github.com/repos/microsoft/calculator/issues/880	https://github.com/microsoft/calculator/issues/880	Throughout the codebase, wstringstream is often used for building a result string.  This is useful if you're trying to do special formatting/localization, but most of the use cases are simply building strings by appending characters or other strings so no special formatting/localization is happening.  Unlike Platform::String, wstring is mutable and will grow its internal array as needed.  This would be optimal in many cases over using wstringstream.	gsfreema	null	null	null	null	null	null	
2019-12-18 21:20:19.0	2019-12-19 09:50:32.0	2019-12-19 09:50:32.0	closed	[]	0	881	Using wstring instead of wstringstream where appropriate	https://api.github.com/repos/microsoft/calculator/issues/881	https://github.com/microsoft/calculator/pull/881	## Fixes #880.    ### Description of the changes:  - Replaced most wstringstream usage with wstring.  - In a couple of places, used if...else instead of ternary operator since the later requires the true and false parts to be of the same type.  This resulted in extra wstring instances to be created which isn't necessary.  - In one pace, used Platform:String's constructor taking a character and a count.  This seems more clear and (should be more efficient) than the prior code of `L"" + c`.  That code seems confusing to a C++ developer since it is normally something a compiler would warn about.  I'm assuming it's a special C++/CX feature.    ### How changes were validated:  - Ran existing unit tests.  - Manual testing.    	gsfreema	null	null	null	null	null	null	
2019-12-18 22:52:12.0	2019-12-19 00:06:14.0	2019-12-19 00:06:14.0	closed	[]	0	882	Graphing Calculator - Add Shortcuts to zoom in/out 	https://api.github.com/repos/microsoft/calculator/issues/882	https://github.com/microsoft/calculator/pull/882	### Description of the changes:  - Support <kbd>Ctrl</kbd> + <kbd>-/+</kbd> (in addition to the existing <kbd>Ctrl</kbd> + <kbd>Numpad -/+</kbd>)    ⚠ Important change:  - We use the new RS3+ UWP api to manage shortcuts instead of our own implementation. The UWP being more powerful and supporting multi-shortcuts. We should plan to migrate all other shortcuts in the future  - The current shortcut was localized, not this implementation, but I don't think it's something we need.    Also:   - simplify KeyboardShortcutManager  - fix a bug in KeyboardShortcutManager (s_VirtualKeyControlInverseChordsForButtons were used instead of s_VirtualKeyInverseChordsForButtons)    ### How changes were validated:  - Manually, English and French keyboard layout.    	rudyhuyn	null	null	null	null	null	null	
2019-12-19 14:50:12.0	2020-01-06 21:44:41.0	2020-12-02 18:01:49.0	closed	[fixed, codebase quality, approved]	1	883	Potential buffer overrun in CCalcEngine::DigitGroupingStringToGroupingVector	https://api.github.com/repos/microsoft/calculator/issues/883	https://github.com/microsoft/calculator/issues/883	**Describe the bug**  CCalcEngine::DigitGroupingStringToGroupingVector takes in a wstring_view and then iterates over its characters until it reaches a null terminating character.  The problem is that wstring_view isn't guaranteed to have a null terminating character within the range that the wstring_view is supposed to represent.    https://github.com/microsoft/calculator/blob/a21b4a2d1a2e57e8c2807e3d780ef05a541013f5/src/CalcManager/CEngine/scidisp.cpp#L221    **Steps To Reproduce**  Here is an example of how you can go past the end of a string_view with this approach.  https://godbolt.org/z/c2W3Lp    **Requested Assignment**  If possible, I would like to fix this.	gsfreema	null	null	null	null	null	null	
2019-12-19 15:22:50.0	2020-01-06 21:44:41.0	2020-01-06 21:44:41.0	closed	[]	0	884	Wstring view overrun	https://api.github.com/repos/microsoft/calculator/issues/884	https://github.com/microsoft/calculator/pull/884	## Fixes #883.    ### Description of the changes:  - Updated loop inside CCalcEngine::DigitGroupingStringToGroupingVector to compare against an end point set to the beginning plus size of the wstring_view.    ### How changes were validated:  - Manual testing.  - Added a unit test to confirm that the grouping is based on the wstring_view passed in.	gsfreema	null	null	null	null	null	null	
2019-12-19 21:01:29.0	2020-01-06 21:19:05.0	2020-01-06 21:19:05.0	closed	[graphing calculator]	1	885	Update equation colors	https://api.github.com/repos/microsoft/calculator/issues/885	https://github.com/microsoft/calculator/pull/885	## Fixes part of #338.      ### Description of the changes:  - Updates equation colors and order of assignment  - Fixes KGF header background/margin  - Change error icon to warning  - Other style clean up    ### How changes were validated:  - manual tests    	joseartrivera	null	null	null	null	null	null	
2019-12-20 20:45:20.0	2020-01-03 18:45:52.0	2020-01-03 18:45:52.0	closed	[graphing calculator]	0	886	Minor changes to share output	https://api.github.com/repos/microsoft/calculator/issues/886	https://github.com/microsoft/calculator/pull/886	## Fixes part of #338      ### Description of the changes:  - Addresses UI issues identified in UX review for share output    ### How changes were validated:  - Manual tests    	joseartrivera	null	null	null	null	null	null	
2019-12-20 23:54:33.0	2019-12-28 17:44:26.0	2020-12-02 18:01:48.0	closed	[won't fix]	4	887	Inconsistency of precedence of operators between Standard and Scientific 	https://api.github.com/repos/microsoft/calculator/issues/887	https://github.com/microsoft/calculator/issues/887	  **Describe the bug**  There is an inconsistency of precedence between the standard and scientific view and may be prone to errors. I understand that the standard version are tryin to mimic a small portable table calculator, but the behavior may be considered inconsistent in terms o UX.  Please refer to the screenshot.    **Steps To Reproduce**  Calculate 3 * 164 + 6 * 137 in standard mode and in scientific mode. The results differ.    **Expected behavior**  Both methods should take in consideration precedence of operators in both modes and total should be 1314      **Screenshots**  ![image](https://user-images.githubusercontent.com/147530/71299105-78a52c00-2383-11ea-865b-7d9cd3074e08.png)    **Device and Application Information**   - OS Build: 10.0.18363.0   - Architecture: X64   - Application Version: 10.1910.0.0   - Region: pt-PT   - Dev Version Installed: False    I'm just reporting this problem.  I don't want to fix it.  Thanks :)	Semogj	null	null	null	null	null	null	
2019-12-21 14:49:51.0	2019-12-29 16:09:40.0	2020-12-02 18:01:47.0	closed	[Enhancement]	4	888	new function	https://api.github.com/repos/microsoft/calculator/issues/888	https://github.com/microsoft/calculator/issues/888	Dear developer: When will the Microsoft calculator come out with a conversion function similar to the base conversion that is convenient for developers, I really hope that this function will be online, so that I do n’t have to go online to convert, saving a lot of time!	Evilrabbit520	null	null	null	null	null	null	
2019-12-21 18:08:32.0	2020-01-06 09:29:57.0	2020-12-02 18:01:46.0	closed	[Enhancement]	3	889	Move over current number when changing calculator modes	https://api.github.com/repos/microsoft/calculator/issues/889	https://github.com/microsoft/calculator/issues/889	<!--  See https://github.com/Microsoft/calculator/blob/master/docs/NewFeatureProcess.md for suggestions on how to write a good feature pitch. Just want to submit an idea quickly? Try Feedback Hub instead: https://insider.windows.com/en-us/fb/?contextid=130  -->    **Problem Statement**  <!--  What problem are we trying to solve? Who’s the target audience? Is there a customer need or pain point we need to remedy? Is there a business goal or metric we are trying to improve? Do we have a hypothesis we want to prove or disprove?  -->  The problem is that if a user switches calculator mode, they are always greeted with "0". Whatever number they had entered in other modes, for example programmer, won't carry over if they switch to for instance basic mode. It is a major bummer, because user needs to copy/remember the number each time.    **Evidence or User Insights**  <!--  Why should we do this? Potential sources of data: Feedback Hub, other GitHub issues, other anecdotes from listening to customers in person or online, request from another team, telemetry data, user research, market or competitive research  -->  I do a lot of calculations using Microsoft's Calculator. The most frequent use case is when I want to go from programmer mode into basic mode to do a non-integer division. Other times I do some simple calculations in basic mode, and would like to see what's the resultant number in hexadecimal system. The fact that the current number is cleared when switching operation mode is making my life much harder and program experience much less pleasant.    **Proposal**  <!--  How will the solution/feature help us solve the problem? How will it meet the target audience’s needs? If there are business goals or metrics, how does this improve them?  -->  Just carry over the current number when switching mode!  Basic mode calculations are always decimal, so if switching to programmer mode, move that number into decimal value, and vice-versa, if switching from programmer into basic, copy the decimal number there.  In case user doesn't need that number after switching the mode (what would be, in my opinion and experience, much more care), they could just press Esc on keyboard, or C in the UI, which is what they need to do anyways, if they wanted to clean the number without switching the mode.    **Goals**  <!--  What you want to accomplish with this feature. Typical examples include  "User Can *perform some task*"  -->  User can save time and limit the hassle while working, and be more productive    **Non-Goals**  <!--  Things we are explicitly not doing or supporting or that are out of scope, including reasons why.  -->      **Low-Fidelity Concept**  <!--  Show as much of the experience as needed to explain the idea. This can be as simple as a napkin drawing but can also be a code prototype, or a design comp. Keep it simple at this stage, as it can be refined later during the pre-production stage.  -->  Example:    1. I'm in programmer mode and have this number. I want to divide it by 2, but get the full value, including what's after the comma  ![image](https://user-images.githubusercontent.com/5182588/71311881-a55d5000-2424-11ea-97b0-3df632cb0554.png)    2. Let's switch to standard mode then  ![image](https://user-images.githubusercontent.com/5182588/71311885-b1491200-2424-11ea-8654-609e99d495b9.png)    3. Oh, the number was reset? What was it...?  ![image](https://user-images.githubusercontent.com/5182588/71311888-b8702000-2424-11ea-872a-d32e21aab664.png)    4. (now if I don't remember the number and go back into programmer mode, I would learn that the number was completely lost)    **Requested Assignment**  <!--  Some people just want to suggest a feature and let someone else implement it.  Other people want to not only suggest a feature, but implement it as well.  Both scenarios are completely ok. We just want to know which one it is.  We are likely to prioritize the review of feature requests if they already have someone who can implement them.  Please indicate which bucket you fall into by keeping one and removing the other.  -->  If possible, I would like to implement this.  I'm just suggesting this idea.  I don't want to implement it.  	p0358	null	null	null	null	null	null	
2019-12-23 22:35:00.0	2020-01-03 20:08:02.0	2020-01-03 20:08:03.0	closed	[graphing calculator]	0	890	Change active tracing to use correct glyph instead of dot	https://api.github.com/repos/microsoft/calculator/issues/890	https://github.com/microsoft/calculator/pull/890	## Fixes part of #338.  Replaces the red dot used in active tracing with a red cursor icon    ### How changes were validated:  manually  	EriWong	null	null	null	null	null	null	
2019-12-24 11:49:17.0	2020-01-21 18:00:21.0	2020-12-02 18:01:45.0	closed	[question]	4	891	Change Number Pad to Other Symbols	https://api.github.com/repos/microsoft/calculator/issues/891	https://github.com/microsoft/calculator/issues/891	<!--  See https://github.com/Microsoft/calculator/blob/master/docs/NewFeatureProcess.md for suggestions on how to write a good feature pitch. Just want to submit an idea quickly? Try Feedback Hub instead: https://insider.windows.com/en-us/fb/?contextid=130  -->    **Problem Statement**  Hi all, is there any possibility to change number pad values in microsoft windows calculator. i need exact file name either XAML or CPP in src folder.	karthigces	null	null	null	null	null	null	
2019-12-26 20:44:26.0	2020-01-07 05:47:11.0	2020-12-02 18:01:44.0	closed	[duplicate]	6	892	First numbers of a long calculation result in "Keep on top" mode are hidden	https://api.github.com/repos/microsoft/calculator/issues/892	https://github.com/microsoft/calculator/issues/892	<!--  Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.  -->    **Describe the bug**  <!-- A clear and concise description of what the bug is. -->  When making a calculation with long result in "Keep on Top" mode, the first few numbers of it are hidden and can't be revealed with the "scroll back" button as it's disabled.  To reveal these first numbers you have to scroll the result to the right and then to the left, which is annoying.  **Steps To Reproduce**  <!--  Steps to reproduce the behavior:  1. Go to '...'  2. Click on '....'  3. Scroll down to '....'  4. See error  -->  1. Open Calculator and activate the "Keep on top" mode  2. Make a calculation that will make a long result, for example 898/998.  3. Notice that the first part (0.89) is hidden  **Expected behavior**  <!-- A clear and concise description of what you expected to happen. -->  The calculated result should be displayed correctly, starting from the first number.  **Screenshots**  <!-- If applicable, add screenshots to help explain your problem. -->  ![image](https://user-images.githubusercontent.com/28688352/71489784-9d881c00-2827-11ea-8adf-1443abddf0c9.png)  ![image](https://user-images.githubusercontent.com/28688352/71489795-b264af80-2827-11ea-957b-9b1b0595e7a2.png)  ![image](https://user-images.githubusercontent.com/28688352/71489796-b55fa000-2827-11ea-8483-5b4abab90a20.png)    **Device and Application Information**   - OS Build:  ```  Major  Minor  Build  Revision  -----  -----  -----  --------  10     0      19041  0  ```   - Architecture: X64   - Application Version: 10.1910.0.0   - Region: en-GB   - Dev Version Installed: False    <!--  Run the following commands in Powershell and copy/paste the output.  " - OS Build: $([Environment]::OSVersion.Version)"  " - Architecture: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Architecture)"  " - Application Version: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Version)"  " - Region: $((Get-Culture).Name)"  " - Dev Version Installed: $($null -ne (Get-AppxPackage -Name Microsoft.WindowsCalculator.Dev))"  -->    **Requested Assignment**  <!--  Some people just want to report a bug and let someone else fix it.  Other people want to not only submit the bug report, but fix it as well.  Both scenarios are completely ok. We just want to know which one it is.  Please indicate which bucket you fall into by keeping one and removing the other.  -->  I'm just reporting this problem.  I don't want to fix it.  	rico-et22	null	null	null	null	null	null	
2019-12-26 23:32:39.0	null	2021-10-22 11:02:08.0	open	[Enhancement, Pri: 1]	25	893	Migrate codebase to C#	https://api.github.com/repos/microsoft/calculator/issues/893	https://github.com/microsoft/calculator/issues/893	Calculator is a great project for developers starting with UWP. However, it is implemented in C++ with managed extensions which I would consider rather a niche language with a niche features in a niche area of UI development. It is a niche within a niche within a niche.    I know C++ but would never consider this language for UI development. This ship has sailed around year 2000. On the other hand if Microsoft would pay me a huge salary to develop UI apps in C++ I would seriously consider it. Then I would say no.     Having calculator project in  C# would make this project accessible to a much wider audience and maybe would help adoption of UWP somewhat.     Please consider converting this project to C#. Future generations would thank you for it.   	PaulDotNet	null	null	null	null	null	null	
2020-01-03 09:36:19.0	2020-01-03 10:21:32.0	2020-12-02 18:01:43.0	closed	[fixed, build]	2	894	Change the build year in Aboutflyout	https://api.github.com/repos/microsoft/calculator/issues/894	https://github.com/microsoft/calculator/issues/894	It's 2020 now, and according to #320 the `BUILD_YEAR` remains 2019.  Although none of the pending PR is merged until now, it's better to let the `BUILD_YEAR` be 2020 now so we don't need to force someone to change it in an unrelated PR.  *possibly we can have an automatic script that changes this macro to next year every Jan. 1st, but manually change it is also OK.*    **Requested Assignment**  If possible, I would like to fix this.	dovisutu	null	null	null	null	null	null	
2020-01-03 09:42:34.0	2020-01-03 10:21:32.0	2020-01-03 10:24:27.0	closed	[]	1	895	Update build year in Aboutflyout	https://api.github.com/repos/microsoft/calculator/issues/895	https://github.com/microsoft/calculator/pull/895	## Fixes #894.      ### Description of the changes:  - Update `BUILD_YEAR` in `src/Calculator/Aboutflyout.xaml.cpp` according to #320    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - manual    *typo in branch name, don't mind*    	dovisutu	null	null	null	null	null	null	
2020-01-03 23:24:54.0	2020-03-03 18:52:49.0	2020-03-03 18:52:49.0	closed	[fixing approved issue]	0	896	Focus ClearEntry button after Clear button is used and vice versa	https://api.github.com/repos/microsoft/calculator/issues/896	https://github.com/microsoft/calculator/pull/896	## Fixes #860.      ### Description of the changes:  - In scientific and programmer modes we hide/show either the Clear or ClearEntry button depending on if there is input to clear. When focus is lost, focus can go to the backspace button or as shown in #860 perhaps the navigation button. This PR fixes the focus issue, which will hopefully also fix the bug reported in #860.    ### How changes were validated:  - Manual tests    	joseartrivera	null	null	null	null	null	null	
2020-01-04 12:06:04.0	2020-01-06 21:10:54.0	2020-01-06 21:10:54.0	closed	[]	0	897	Prevent the graph to pan/zoom in some cases	https://api.github.com/repos/microsoft/calculator/issues/897	https://github.com/microsoft/calculator/pull/897	### Description of the changes:  Prevent the graph to pan/zoom when we    - hide/show an equation    - select a different trigonometric unit    ### How changes were validated:  - manually	rudyhuyn	null	null	null	null	null	null	
2020-01-06 16:41:45.0	2020-01-06 21:36:59.0	2020-01-06 21:36:59.0	closed	[]	0	898	Using wstring::find_last_not_of in CalcManager::NumberFormattingUtils::TrimTrailingZeroes	https://api.github.com/repos/microsoft/calculator/issues/898	https://github.com/microsoft/calculator/pull/898	### Description of the changes:  - Updating CalcManager::NumberFormattingUtils::TrimTrailingZeroes to use wstring::find_last_not_of instead of manually implementing the find algorithm.    ### How changes were validated:  - There are existing unit tests for this function which all still pass.    	gsfreema	null	null	null	null	null	null	
2020-01-06 22:46:26.0	2020-01-07 22:56:31.0	2020-01-08 21:46:52.0	closed	[graphing calculator]	1	899	Merge graphing calculator into master	https://api.github.com/repos/microsoft/calculator/issues/899	https://github.com/microsoft/calculator/pull/899	## Fixes #338 .    ### Description of the changes:  Adds graphing calculator feature.     ### How changes were validated:  Manually    New test cases are added as part of this merge.	EriWong	null	null	null	null	null	null	
2020-01-06 23:36:15.0	2020-01-07 00:07:22.0	2020-01-16 18:27:59.0	closed	[graphing calculator]	0	900	Updated internal build version to 0.0.31	https://api.github.com/repos/microsoft/calculator/issues/900	https://github.com/microsoft/calculator/pull/900	Update the internals version to match the latest in the internal repo.  	sanderl	null	null	null	null	null	null	
2020-01-07 05:27:59.0	2020-02-15 01:39:02.0	2020-12-02 18:01:42.0	closed	[Bug, Area: User Experience, external]	8	901	Window size change unintentionally	https://api.github.com/repos/microsoft/calculator/issues/901	https://github.com/microsoft/calculator/issues/901	Hello, I am a user who is using Windows in South Korea. I'd like to let you know about this because I found a bug while using the calculator.    First of all, I use 4K monitor as a 200% scale main monitor and FHD monitor as a 100%.    Below are the situations in which bugs occur:  1. Place the Calculator window on the sub-monitor and make sure that the aero-peak (this name may not be correct) occupies all or part of the screen.  2. Drag the window top bar back to its original size. (A bug occurs at this stage)    In step 2, the Calculator window is twice its original size. This may be caused by using a different scale monitor.    I'm not sure if this bug is from the calculator or from an explorer of Windows 10. But I want you to be aware of this.    I'm not good enough to fix this bug, so I want you to fix it.    Thank you.	grayroom	null	null	null	null	null	null	
2020-01-07 17:33:32.0	2020-01-07 18:06:37.0	2020-01-16 18:27:57.0	closed	[graphing calculator]	0	902	Update internals version for feature/GraphingCalculator	https://api.github.com/repos/microsoft/calculator/issues/902	https://github.com/microsoft/calculator/pull/902	  	sanderl	null	null	null	null	null	null	
2020-01-07 20:47:39.0	2020-01-07 22:09:40.0	2020-01-16 18:27:55.0	closed	[graphing calculator]	0	903	Remove ARM64 from the package since Graphing mode does not support AR…	https://api.github.com/repos/microsoft/calculator/issues/903	https://github.com/microsoft/calculator/pull/903	Update the package yaml to remove ARM64 from the package since Graphing mode does not support ARM64.    	sanderl	null	null	null	null	null	null	
2020-01-07 23:19:46.0	2020-01-08 23:06:27.0	2020-01-08 23:06:27.0	closed	[graphing calculator]	1	904	Fix crash when setting graph options to very large numbers	https://api.github.com/repos/microsoft/calculator/issues/904	https://github.com/microsoft/calculator/pull/904	## Fixes #905    ### Description of the changes:  - Update the API to the new API that uses doubles instead of floats    ### How changes were validated:  - Manual tests  	joseartrivera	null	null	null	null	null	null	
2020-01-07 23:22:00.0	2020-01-08 23:06:27.0	2020-12-02 18:01:41.0	closed	[fixed, approved]	1	905	Graphing mode crashes when large numbers are used in the graph settings	https://api.github.com/repos/microsoft/calculator/issues/905	https://github.com/microsoft/calculator/issues/905	**Describe the bug**  Graphing mode crashes when large numbers are used in the graph settings    **Steps To Reproduce**  1. Go to graph mode  2. Put in large numbers for graph settings  3. Hover over a graphed line  4. Crashes    **Expected behavior**  Crash does not happen      **Requested Assignment**  If possible, I would like to fix this.  	joseartrivera	null	null	null	null	null	null	
2020-01-07 23:32:21.0	2020-01-31 21:45:17.0	2020-12-02 18:01:40.0	closed	[Area: User Experience, fixed]	1	906	Fix UI Issues in Graphing Mode	https://api.github.com/repos/microsoft/calculator/issues/906	https://github.com/microsoft/calculator/issues/906	Fix the UI issues identified in the UX Review:  - Graph Options button and flyout should be theme aware  - Active Tracing:      - Fill in cursor       - Update the cursor to be a path instead of a font icon      - Change cursor color to black  - Add Ctrl+0 shortcut key for zoom reset   - "Preview" badge  - When navigating to Graphing mode using keyboard shortcuts, focus should land on:       - Large layout: first ghost equation box       - Small layout: the layout change button  - KGF Back Button should not have rounded corners  - Ghost Equation box style updates  - Don't show scrollbar in equation list when there is nothing to scroll  - Graph Options font styles should make KGF font styles   - Small State: layout toggle button styling	sanderl	null	null	null	null	null	null	
2020-01-08 00:20:29.0	2020-01-08 18:34:05.0	2020-01-08 18:34:06.0	closed	[graphing calculator]	1	907	Add preview tag to Graphing feature	https://api.github.com/repos/microsoft/calculator/issues/907	https://github.com/microsoft/calculator/pull/907	## Fixes part of #906     ### Description of the changes:  - Add PreviewTagControl (supporting high contrast)  - Add an extra field to NavCategory    ### How changes were validated:  - manually    	rudyhuyn	null	null	null	null	null	null	
2020-01-08 14:13:08.0	2020-01-08 22:35:06.0	2020-01-08 22:35:06.0	closed	[]	0	908	Removing wstringstream usage since it adds unnecessary overhead	https://api.github.com/repos/microsoft/calculator/issues/908	https://github.com/microsoft/calculator/pull/908	### Description of the changes:  - Removing wstringstream usage since it adds unnecessary overhead.  - Limited scope of `graphExpression` inside `Grapher::GetGraph`  - Used a `wstring_view` for performing `find` operations in `Equation::GetRequest`	gsfreema	null	null	null	null	null	null	
2020-01-08 22:31:56.0	2020-01-08 22:56:45.0	2020-01-16 18:27:52.0	closed	[graphing calculator]	0	909	Change Calculator app name back to Calculator and add spacing to Preview tag	https://api.github.com/repos/microsoft/calculator/issues/909	https://github.com/microsoft/calculator/pull/909	## Fixes part of #906.      ### Description of the changes:  - Change the calculator app name back to Calculator (from Graphing Calculator)  - Add 10px spacing between Graphing and the Preview tag instead of 6px  -    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Manually  -  -    	sanderl	null	null	null	null	null	null	
2020-01-08 23:07:14.0	2020-01-11 00:42:56.0	2020-01-11 00:48:42.0	closed	[graphing calculator]	0	910	Use path instead of glyph for active tracing	https://api.github.com/repos/microsoft/calculator/issues/910	https://github.com/microsoft/calculator/pull/910	## Fixes part of #906.    ### Description of the changes:  - Updates the glyph in active tracing to use a path instead.  - Moves the initial position closer to the center of the graph surface  - Resets the position of the pointer when the calculator is resized    ### How changes were validated:  Manually  	EriWong	null	null	null	null	null	null	
2020-01-08 23:29:04.0	2020-01-09 22:02:50.0	2020-12-02 18:01:39.0	closed	[duplicate]	3	911	History pane in Standard mode doesn't respect order of operations	https://api.github.com/repos/microsoft/calculator/issues/911	https://github.com/microsoft/calculator/issues/911	<!--  Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.  -->    **Describe the bug**  <!-- A clear and concise description of what the bug is. -->  The history pane can be misleading while using the Standard view on the calculator, specifically when it comes to chained operations such as 5+5x5. The calculator handles this in Standard by doing 5+5, then 10x5 to get a result of 50. However if this is done in one series the history view will display this as 5+5x5=50 which is incorrect. Instead the history pane should either break the calculations out into the individual sequences and display that, or add parenthesis to show the proper order of operations.  **Steps To Reproduce**  <!--  Steps to reproduce the behavior:  1. Go to '...'  2. Click on '....'  3. Scroll down to '....'  4. See error  -->  1. Go to the standard view and type 5+5*5 and hit enter.  **Expected behavior**  <!-- A clear and concise description of what you expected to happen. -->  The history view displays one of the following:  * (5+5)x5=50  * 5+5=10, 10*5 = 50  * 5+5 = 10  10*5 = 50  **Screenshots**  <!-- If applicable, add screenshots to help explain your problem. -->  ![image](https://user-images.githubusercontent.com/1965742/72024850-54729780-322b-11ea-9591-bcc12353fed8.png)        **Device and Application Information**   - OS Build: 10.0.18363.0   - Architecture: X64   - Application Version: 10.1910.0.0   - Region: en-US   - Dev Version Installed: False    <!--  Run the following commands in Powershell and copy/paste the output.  " - OS Build: $([Environment]::OSVersion.Version)"  " - Architecture: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Architecture)"  " - Application Version: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Version)"  " - Region: $((Get-Culture).Name)"  " - Dev Version Installed: $($null -ne (Get-AppxPackage -Name Microsoft.WindowsCalculator.Dev))"  -->    **Additional context**  <!-- Add any other context about the problem here. -->    **Requested Assignment**  <!--  Some people just want to report a bug and let someone else fix it.  Other people want to not only submit the bug report, but fix it as well.  Both scenarios are completely ok. We just want to know which one it is.  Please indicate which bucket you fall into by keeping one and removing the other.  -->  If possible, I would like to fix this.	InstyleVII	null	null	null	null	null	null	
2020-01-08 23:46:44.0	2020-01-09 17:44:47.0	2020-01-09 17:44:47.0	closed	[]	0	912	Update toggle to switch from graph to equations	https://api.github.com/repos/microsoft/calculator/issues/912	https://github.com/microsoft/calculator/pull/912	## Partially Fixes #906      ### Description of the changes:  - Modify the design of the toggle used to switch from graph to equations  - Base the new control on ToggleSwitch instead of ToggleButton    Also:  - remove 2 orphan method declarations    ### How changes were validated:  - manually in light, dark , high contrast mode and with LtoR and RtoL languages    	rudyhuyn	null	null	null	null	null	null	
2020-01-08 23:49:51.0	2020-01-09 21:33:10.0	2020-12-02 18:01:38.0	closed	[fixed, approved]	1	913	Function symbols aren' t correctly formatted with RtoL languages	https://api.github.com/repos/microsoft/calculator/issues/913	https://github.com/microsoft/calculator/issues/913	**Describe the bug**  ![image](https://user-images.githubusercontent.com/1226538/72025822-3195b280-322e-11ea-96f9-006f594699cd.png)    **Steps To Reproduce**  - Change the language of the device to a RtoL language  - Launch the graph calculator    **Expected behavior**  Numbers should be on the right side of the `ƒ' character     **Device and Application Information**   - OS Build: 10.0.19536.0   - Architecture: X64   - Application Version: 10.1910.0.0   - Region: en-US   - Dev Version Installed: True    **Requested Assignment**  If possible, I would like to fix this.  	rudyhuyn	null	null	null	null	null	null	
2020-01-08 23:59:41.0	2020-01-09 21:33:10.0	2020-01-09 21:33:10.0	closed	[graphing calculator]	0	914	Fix function symbols in RtoL	https://api.github.com/repos/microsoft/calculator/issues/914	https://github.com/microsoft/calculator/pull/914	## Fixes #913      ### Description of the changes:  - Update EquationInputArea and KeyFeaturePanel to correctly display function symbols in RtoL    ![image](https://user-images.githubusercontent.com/1226538/72026264-c220c280-322f-11ea-8733-2382883eeb36.png)    ![image](https://user-images.githubusercontent.com/1226538/72026279-c9e06700-322f-11ea-8354-d313a42f99a4.png)      ### How changes were validated:  - manually    	rudyhuyn	null	null	null	null	null	null	
2020-01-09 00:09:15.0	2020-01-09 20:05:17.0	2020-01-09 20:05:17.0	closed	[graphing calculator]	0	915	Removing unnecessary string copies when iterating vectors and maps in KeyGraphFeaturesInfo.	https://api.github.com/repos/microsoft/calculator/issues/915	https://github.com/microsoft/calculator/pull/915	### Description of the changes:  - Using const refs when iterating vectors and maps in KeyGraphFeaturesInfo to keep from copying strings unnecessarily.	gsfreema	null	null	null	null	null	null	
2020-01-09 01:52:17.0	2020-01-13 18:08:24.0	2020-01-13 18:08:24.0	closed	[graphing calculator]	0	916	Make variable boxes collapsible on click	https://api.github.com/repos/microsoft/calculator/issues/916	https://github.com/microsoft/calculator/pull/916	## Fixes part of #906      ### Description of the changes:  - Make variable boxes collapsible on click    ### How changes were validated:  - Manual tests  	joseartrivera	null	null	null	null	null	null	
2020-01-09 15:19:37.0	2020-01-09 20:05:50.0	2020-01-09 20:05:50.0	closed	[codebase quality, graphing calculator]	0	917	Inferring std::array template params for featureLevels	https://api.github.com/repos/microsoft/calculator/issues/917	https://github.com/microsoft/calculator/pull/917	### Description of the changes:  - Inferring std::array template params for featureLevels removing the need to manually update the size template parameter for the array    	gsfreema	null	null	null	null	null	null	
2020-01-09 19:10:18.0	2020-01-10 23:48:08.0	2020-01-16 18:27:50.0	closed	[graphing calculator]	0	918	Update group policy check to look in HKCU instead of HKLM for allowing graphing mode	https://api.github.com/repos/microsoft/calculator/issues/918	https://github.com/microsoft/calculator/pull/918	## Fixes #919.      ### Description of the changes:  - Update the registry path to HKCU instead of HKLM when it checks the group policy for allowing graphing mode    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Manually tested using the Group Policy editor to set the AllowGraphingMode policy.    	sanderl	null	null	null	null	null	null	
2020-01-09 19:31:24.0	2020-01-10 23:48:08.0	2020-12-02 18:01:37.0	closed	[Area: User Experience, fixed]	1	919	Graphing Calculator can still be accessed on desktop after disabling it via Group Policy and/or InTune policy	https://api.github.com/repos/microsoft/calculator/issues/919	https://github.com/microsoft/calculator/issues/919	A team member will update this issue with more details soon.	MicrosoftIssueBot	null	null	null	null	null	null	
2020-01-09 19:38:36.0	2020-01-09 22:10:49.0	2020-01-09 22:10:49.0	closed	[graphing calculator]	0	920	Make some tweaks to the graphing mode UI	https://api.github.com/repos/microsoft/calculator/issues/920	https://github.com/microsoft/calculator/pull/920	## Fixes part of #906      ### Description of the changes:  -Add Ctrl+0 shortcut key for zoom reset  -Don't show scrollbar in equation list when there is nothing to scroll  -Rearrange color order to be blue -> green -> red    ### How changes were validated:  -Manual tests    	joseartrivera	null	null	null	null	null	null	
2020-01-09 20:14:08.0	2020-01-10 23:46:56.0	2020-01-10 23:46:56.0	closed	[graphing calculator]	0	921	Remove LimitedAccessFeatures check for old package name	https://api.github.com/repos/microsoft/calculator/issues/921	https://github.com/microsoft/calculator/pull/921	The check is no longer necessary due to #843.	mcooley	null	null	null	null	null	null	
2020-01-09 23:54:59.0	2020-01-15 17:36:31.0	2020-01-15 17:36:32.0	closed	[graphing calculator]	0	922	Making a few improvements in Grapher	https://api.github.com/repos/microsoft/calculator/issues/922	https://github.com/microsoft/calculator/pull/922	### Description of the changes:  - Removed unused variable  - Used copy_if in GetGraphableEquations  - Using ArrayReference in GetGraphBitmapStream so bytes aren't copied an extra time	gsfreema	null	null	null	null	null	null	
2020-01-10 00:19:38.0	2020-01-10 23:56:13.0	2020-01-16 18:27:46.0	closed	[graphing calculator]	0	923	Update Font Sizes for Graph Settings and Key Graph Features to be aligned	https://api.github.com/repos/microsoft/calculator/issues/923	https://github.com/microsoft/calculator/pull/923	## Fixes #906 .      ### Description of the changes:  - Update both Graph Settings and KGF so that the font sizes are the same for each type of text.  -  -    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Manually  -  -    	sanderl	null	null	null	null	null	null	
2020-01-10 01:09:47.0	2020-01-11 00:41:24.0	2020-01-11 00:41:24.0	closed	[graphing calculator]	3	924	Adjustments to ghost textbox	https://api.github.com/repos/microsoft/calculator/issues/924	https://github.com/microsoft/calculator/pull/924	## Fixes part of #906      ### Description of the changes:  - Makes ghost textbox gray until text is typed  - Removes all buttons from ghost text box  - Fixes counting of the function number  - Fixes a bug where clicking the 'x button' would not clear text  - Fixes bug where 'x' button would not appear when typing text  - Fixes Equation Box cursor alignment with hint area.     ### How changes were validated:  - Manual tests    	joseartrivera	null	null	null	null	null	null	
2020-01-10 20:16:44.0	2020-01-11 02:06:22.0	2020-01-11 02:06:22.0	closed	[]	0	925	Removing useless code from VisualTree::FindDescendantByName	https://api.github.com/repos/microsoft/calculator/issues/925	https://github.com/microsoft/calculator/pull/925	### Description of the changes:  - Removing unusual code that accessed a String's Data property and then sets it to itself (maybe it was once added for debugging?)	gsfreema	null	null	null	null	null	null	
2020-01-10 22:49:50.0	2020-01-10 23:17:36.0	2020-01-11 11:18:57.0	closed	[graphing calculator]	0	926	Format MathML equations before submission to the GraphControl	https://api.github.com/repos/microsoft/calculator/issues/926	https://github.com/microsoft/calculator/pull/926	## Fixes part of #906       ### Description of the changes:  - Fixes the issue when typing 'x^2' and immediately submitting would result in a linear format equation  - Run user input through the MathSolver parser so that the user gets a correctly formatted equation upon submission and to display how the MathSolver interpreted the user input. With this change, if for some reason the MathSolver/Grapher graphs an equation differently because it interpreted the equation differently than the user intended, this will now be visible to the user.    ### How changes were validated:  - Manual Tests    	joseartrivera	null	null	null	null	null	null	
2020-01-10 23:15:34.0	2020-01-13 23:09:46.0	2020-01-16 18:27:44.0	closed	[graphing calculator]	2	927	Update KGF Back Button Styling	https://api.github.com/repos/microsoft/calculator/issues/927	https://github.com/microsoft/calculator/pull/927	## Fixes #906.      ### Description of the changes:  - Removed rounded corners  - Updated the styling to match the equation button      ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - manually      	sanderl	null	null	null	null	null	null	
2020-01-12 18:09:27.0	2020-01-12 18:10:13.0	2020-01-18 17:25:26.0	closed	[invalid]	1	928	Add run on repl.it badge to README	https://api.github.com/repos/microsoft/calculator/issues/928	https://github.com/microsoft/calculator/pull/928	This pull request configures this repository to be run on Repl.it.      It adds a `.replit` configuration file and a Repl.it badge to the `README`.       You can read more about running repos on Repl.it [here](https://docs.repl.it/repls/dot-replit), or view the Repl [here](https://repl.it/@GouravSingh2580/calculator).    ## Fixes #.      ### Description of the changes:  -  -  -    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  -  -  -    	GouravSingh2580	null	null	null	null	null	null	
2020-01-13 22:11:36.0	2020-01-13 22:56:55.0	2020-01-16 18:27:42.0	closed	[]	0	929	Fix release pipeline by setting provData to false	https://api.github.com/repos/microsoft/calculator/issues/929	https://github.com/microsoft/calculator/pull/929	### Description of the changes:  - Set provData to false in PkgESVPack@10 step to work around the VPack failure in the release pipeline.	sanderl	null	null	null	null	null	null	
2020-01-13 23:04:08.0	2020-01-14 00:05:40.0	2020-01-21 10:49:44.0	closed	[]	5	930	Remove ARM64 from Release builds	https://api.github.com/repos/microsoft/calculator/issues/930	https://github.com/microsoft/calculator/pull/930	### Description of the changes:  - Remove ARM64 from Release builds since Graphing mode does not support ARM64	sanderl	null	null	null	null	null	null	
2020-01-14 11:28:26.0	2020-01-14 21:01:27.0	2020-08-17 05:55:01.0	closed	[]	1	931	azure-pipelines.yml	https://api.github.com/repos/microsoft/calculator/issues/931	https://github.com/microsoft/calculator/pull/931	# Node.js    # Build a general Node.js project with npm.    # Add steps that analyze code, save build artifacts, deploy, and more:    # https://docs.microsoft.com/azure/devops/pipelines/languages/javascript        trigger:    - master        pool:      vmImage: 'ubuntu-latest'        steps:    - task: NodeTool@0      inputs:        versionSpec: '10.x'      displayName: 'Install Node.js'        - script: |        npm install        npm run build      displayName: 'npm install and build'	alkuwara	null	null	null	null	null	null	
2020-01-14 17:22:04.0	2020-01-14 23:22:51.0	2020-01-14 23:22:51.0	closed	[]	0	932	Removing Utils::Swap and using std::swap instead	https://api.github.com/repos/microsoft/calculator/issues/932	https://github.com/microsoft/calculator/pull/932	### Description of the changes:  - Removing Utils::Swap and using std::swap instead	gsfreema	null	null	null	null	null	null	
2020-01-14 20:43:04.0	2020-02-07 23:12:32.0	2020-12-02 18:01:36.0	closed	[build, approved]	1	933	Update builds to only run highest priority UI tests only.	https://api.github.com/repos/microsoft/calculator/issues/933	https://github.com/microsoft/calculator/issues/933	<!--  Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.  -->    **Describe the bug**  <!-- A clear and concise description of what the bug is. -->  Currently all the UI tests are run as part of the CI builds. With new UI tests coming online, only the highest priority and most reliable tests should be run as part of the CI builds. The remaining tests can be run locally and during monthly test passes.	sanderl	null	null	null	null	null	null	
2020-01-14 21:21:07.0	2020-01-14 21:52:58.0	2020-01-14 21:52:58.0	closed	[graphing calculator]	0	934	Fix inequalities not graphing, and other bugs	https://api.github.com/repos/microsoft/calculator/issues/934	https://github.com/microsoft/calculator/pull/934	## Fixes part of #906       ### Description of the changes:  - In #926 we format the MathML before submitting the equation, this caused the unicode symbols for inequalities to be changed into a different format. This PR updates our parsing to detect the new format. Left in the previous code since those might still potentially appear.  - Fixed a bug when graphing x^2+y^2 (or any equation with x,y) without an equal sign would result in a crash  - Fixed formatting of focused ghost textbox to have the correct focused background    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Manual tests    	joseartrivera	null	null	null	null	null	null	
2020-01-15 01:32:11.0	2020-05-08 17:32:18.0	2020-12-02 18:01:35.0	closed	[Enhancement, Pri: 2, approved]	3	935	Update Scientific and Graphing keyboard layouts to expose square root button at the top level	https://api.github.com/repos/microsoft/calculator/issues/935	https://github.com/microsoft/calculator/issues/935	**Problem Statement**  When we refreshed the keyboard, we made a change to the layout of "2nd" operations in Scientific mode to make the behavior more consistent (i.e., where possible, "2nd" exposes the "inverse" operation). However, this made the square root button harder to find.    ![image](https://user-images.githubusercontent.com/1414423/72396854-e0d0fe80-36f2-11ea-8f54-8b2447050394.png)    **Evidence or User Insights**  * As one might expect, usage data suggests that the square root function is used much more frequently than the cubed function.  * Anecdotal feedback from users and on social media    **Proposal**  Change the button layout from what we have today:    | Default | 2nd |  |---------|-----------|  | x^2 | sqrt(x) |  | x^3 | cubert(x) |    To:    | Default | 2nd |  |---------|-----------|  | x^2 | x^3 |  | sqrt(x) | cubert(x) |    This change affects Scientific and Graphing modes.    **Goals**  * Make it easier to find the more widely used square root button.    **Non-Goals**  * Make any other keyboard changes.    **Requested Assignment**  I'm just suggesting this idea.  I don't want to implement it.  	grochocki	null	null	null	null	null	null	
2020-01-16 15:10:16.0	2020-03-13 18:06:21.0	2020-03-13 18:06:21.0	closed	[codebase quality]	2	936	Reducing the number of wstring copies when constructing Unit and Category	https://api.github.com/repos/microsoft/calculator/issues/936	https://github.com/microsoft/calculator/pull/936	### Description of the changes:  - Passing in wstring_view to constructors when needing to set multiple wstring instances.  - Passing in wstring to constructors as a "sink" and moving it into wstring instances.	gsfreema	null	null	null	null	null	null	
2020-01-16 20:31:56.0	2020-11-06 23:08:13.0	2020-12-07 00:00:07.0	closed	[Bug, triage approved, Pri: 1]	3	937	Graphing Calculator can still be accessed on Windows 10X after disabling it via InTune policy	https://api.github.com/repos/microsoft/calculator/issues/937	https://github.com/microsoft/calculator/issues/937	**Repro Steps**  1. Set up an InTune group, profile, policy, and assign the policy to the profile  2. In the "Add work or school" user settings, add the profile created in step 1 with the InTune policy applied  3. Launch calculator with graphing mode  4. Try to access graphing mode    **Observed Results**  Graphing calc can still be accessed on Windows 10X    **Expected Results**  Graphing calc option is grayed out like it is on desktop	MicrosoftIssueBot	null	null	null	null	null	null	
2020-01-17 00:30:30.0	2020-01-31 21:45:17.0	2020-01-31 21:45:18.0	closed	[fixing approved issue, graphing calculator]	0	938	Fix focus bug in graphing mode and other small changes	https://api.github.com/repos/microsoft/calculator/issues/938	https://github.com/microsoft/calculator/pull/938	## Fixes #906       ### Description of the changes:  - Focus now lands on the equation text box, or switch mode button when using ALT + 3 to switch modes  - Putting in a value smaller or larger than the min/max for a variable would accept the input but would not do anything. Now the value is reset to the min/max. I debated automatically decreasing/increasing the min/max if the user manually inputs a value smaller/larger but decided against it for now.  - Fixes some coding style comments from a prev PR    ### How changes were validated:  - Manual tests    	joseartrivera	null	null	null	null	null	null	
2020-01-17 00:59:59.0	null	2021-05-26 10:05:44.0	open	[help wanted, Bug, triage approved, Area: Performance, Pri: 2]	1	939	Calculator startup time increased by 40ms after version 1906	https://api.github.com/repos/microsoft/calculator/issues/939	https://github.com/microsoft/calculator/issues/939	Calculator version 10.1906.51.0 starts up about 40ms faster than more recent versions.    The main reason for this regression is that 1906 uses WinUI version 2.0, while later versions use WinUI 2.1 or 2.2. This is convenient to verify because [the last commit in the 1906 branch](https://github.com/microsoft/calculator/commits/servicing/1906) switches to WinUI 2.0 instead of 2.1.    ### How to measure ###  - Build the Calculator app in the x64 Release configuration  - Deploy the app locally using Visual Studio  - Use my [MeasureAppStartupTime tool](https://gist.github.com/mcooley/86450e22ee0a8ffb6430ccec74317234) to repeatedly start the app and measure how much time it takes to reach the "UIResponsive" event. ```MeasureAppStartupTime.exe -n 30 Microsoft.WindowsCalculator.Dev_8wekyb3d8bbwe!App```  - Report the average time after 30 launches    ### Results ###  - Commit [5dcfdd4](https://github.com/microsoft/calculator/commit/5dcfdd4ae020ba90bdd4796953e11e22a91977e2) (WinUI 2.0): **371ms**  - Commit [9b7834f](https://github.com/microsoft/calculator/commit/9b7834fdc97d02a3cb8d4928c82b474c1146c7ea) (WinUI 2.1): **419ms**    I tested on a fairly high-end Core i7-8700 desktop running Windows 10 Insider Preview Build 19546. The absolute performance difference is different on different machines, but the relative difference is always measurable.    ### Requested assignment ###  Help wanted.	mcooley	null	null	null	null	null	null	
2020-01-17 15:04:42.0	2020-01-18 04:19:18.0	2020-01-18 04:19:18.0	closed	[]	0	940	Fixing CalculatorManagerTests by setting calculator mode so CCalcEngi…	https://api.github.com/repos/microsoft/calculator/issues/940	https://github.com/microsoft/calculator/pull/940	## Fixes #51.    ### Description of the changes:  -  Fixing CalculatorManagerTests by setting calculator mode so CCalcEngine is set.    ### How changes were validated:  - The tests now pass :)	gsfreema	null	null	null	null	null	null	
2020-01-17 15:06:06.0	2020-02-05 22:47:01.0	2020-12-02 18:01:34.0	closed	[Area: User Experience, not repro]	4	941	Glitch can occur when scrool the answer of some specific calculation to right in AoT 	https://api.github.com/repos/microsoft/calculator/issues/941	https://github.com/microsoft/calculator/issues/941	<!--  Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.  -->    **Describe the bug**  Sometimes, glitch can occur in always-on-top mode in a specific window size after calculating an specific equation then scrool to right, namely the result shakes like stucked and the cpu usage goes up.    **Steps To Reproduce**  *One possible way which I'm able to reproduce it locally, possibly more cases*  1. Go to `Always-on-Top` mode  2. Resize the window to minimum  3. Enter expression `2333 / 571`  4. Enter `=`  5. Press the right arrow on the GUI  6. See Error (You can also open the task manager to see the CPU usage)    **Expected behavior**  <!-- A clear and concise description of what you expected to happen. -->  The result(approx. 4.08581) should scrool nicely.    **Device and Application Information**   - OS Build: 10.0.18362.0   - Architecture: X64   - Application Version: 10.1910.0.0   - Region: zh-CN   - Dev Version Installed: False  <!--  Run the following commands in Powershell and copy/paste the output.  " - OS Build: $([Environment]::OSVersion.Version)"  " - Architecture: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Architecture)"  " - Application Version: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Version)"  " - Region: $((Get-Culture).Name)"  " - Dev Version Installed: $($null -ne (Get-AppxPackage -Name Microsoft.WindowsCalculator.Dev))"  -->    **Additional context**  <!-- Add any other context about the problem here. -->  Probably related to #648 ?    **Requested Assignment**  <!--  Some people just want to report a bug and let someone else fix it.  Other people want to not only submit the bug report, but fix it as well.  Both scenarios are completely ok. We just want to know which one it is.  Please indicate which bucket you fall into by keeping one and removing the other.  -->  I'm just reporting this problem.  I don't want to fix it.	dovisutu	null	null	null	null	null	null	
2020-01-17 16:43:05.0	null	2021-09-30 09:05:26.0	open	[Enhancement, Pri: 2, needs more info]	4	942	Add ability to plot polar curves	https://api.github.com/repos/microsoft/calculator/issues/942	https://github.com/microsoft/calculator/issues/942	**Problem Statement**  The graphing mode is not able to plot polar curves in the form r=f(θ)    **Goals**  Allow users to input an equation in the form r=f(θ)    **Non-Goals**  Spherical coordinates    **Requested Assignment**  I'm just suggesting this idea.  I don't want to implement it.  	matthew4850	null	null	null	null	null	null	
2020-01-17 16:48:40.0	2020-03-12 08:02:47.0	2020-12-02 18:01:33.0	closed	[Enhancement]	3	943	3D surface drawing in graphical calculator	https://api.github.com/repos/microsoft/calculator/issues/943	https://github.com/microsoft/calculator/issues/943	As addition to the graphical mode  https://github.com/microsoft/calculator/issues/338  https://blogs.windows.com/windowsexperience/2020/01/16/announcing-windows-10-insider-preview-build-19546/  it would be nice, to have a 3D surface mode,    An example is NuCalc, which was part of Mac OS 7  https://en.wikipedia.org/wiki/NuCalc  http://www.pacifict.com/	theuserbl	null	null	null	null	null	null	
2020-01-17 17:01:06.0	null	2021-09-30 09:05:29.0	open	[Enhancement, Pri: 2, needs spec]	6	944	Add 3d graphing mode	https://api.github.com/repos/microsoft/calculator/issues/944	https://github.com/microsoft/calculator/issues/944	**Problem Statement**  It would be nice to have a mode that allows the plotting of graphs in 3d that would allow for the plotting of lines in the form of f(x)=g(y)=h(z) as well as the plotting of two-variable functions such as z=f(x,y).    **Evidence or User Insights**  This would help with visualisation and understanding of the 3d coordinate system as well as multivariable functions.    **Goals**  Allow the plotting of equations in the form  - f(x)=g(y)=h(z)   - z=f(x,y)    **Non-Goals**  - Spherical coordinate system  - Plotting of vector fields  - Visualisation of functions with more than two variables    **Requested Assignment**  I'm just suggesting this idea.  I don't want to implement it.  	matthew4850	null	null	null	null	null	null	
2020-01-17 17:08:16.0	null	2021-09-30 09:05:35.0	open	[Enhancement, Pri: 2, needs more info]	5	945	Add mode for plotting the complex plane	https://api.github.com/repos/microsoft/calculator/issues/945	https://github.com/microsoft/calculator/issues/945	**Problem Statement**  Allow for the plotting of complex numbers and loci in an argand diagram    **Evidence or User Insights**  This would be greatly beneficial to students learning about complex numbers. This is part of the further maths syllabus for high school students in the UK, I am not sure about other countries.    **Goals**  Allow for plotting of complex numbers and loci in the form  - x+iy  - re^iθ  - |z|=r  - |z-(a+bi)|=|z-(x+iy)|    **Non-Goals**  Non-goals include things such as visualisation of transformations of the complex plane.    **Requested Assignment**  I'm just suggesting this idea.  I don't want to implement it.  	matthew4850	null	null	null	null	null	null	
2020-01-17 17:13:49.0	null	2021-09-30 09:05:32.0	open	[Enhancement, Pri: 2, needs more info]	5	946	Add support for plotting parametric equations	https://api.github.com/repos/microsoft/calculator/issues/946	https://github.com/microsoft/calculator/issues/946	**Problem Statement**  Add support to the new graphing mode to plot parametric equations.    **Goals**  Allow for plotting equations in the form x=f(t), y=g(t)    **Requested Assignment**  I'm just suggesting this idea.  I don't want to implement it.  	matthew4850	null	null	null	null	null	null	
2020-01-17 17:29:05.0	null	2021-09-22 06:01:56.0	open	[Bug, Area: Accessibility, triage approved, Pri: 2]	1	947	Narrator announces Graph mode/Equation mode toggle switch state twice after switching modes	https://api.github.com/repos/microsoft/calculator/issues/947	https://github.com/microsoft/calculator/issues/947	<!--  Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.  -->    **Describe the bug**  When using Graphing mode with Narrator, Narrator announces the state of the graph/equation mode toggle switch twice after the switch is used to change modes.    **Steps To Reproduce**  <!--  Steps to reproduce the behavior:  1. Go to '...'  2. Click on '....'  3. Scroll down to '....'  4. See error  -->  1. Go to Graphing Mode  2. Ensure window is in the condensed form that shows either the graph or equations, but not both.  3. Turn on Narrator and navigate to the mode change toggle switch.  4. Activate the switch to change modes  5. Narrator announces, "Current mode is [Graph | Equation] mode. Switch to [Equation | Graph] mode, toggle switch [off | on]. Switch to [Equation | Graph] mode, toggle switch [off | on]."    **Expected behavior**  Narrator should only announce the "Switch to..." string once when changing formats.    **Screenshots**  <!-- If applicable, add screenshots to help explain your problem. -->    **Device and Application Information**   - OS Build: 10.0.19547.0   - Architecture: x64   - Application Version: 10.1912.4.0   - Region: en-US   - Dev Version Installed:    <!--  Run the following commands in Powershell and copy/paste the output.  " - OS Build: $([Environment]::OSVersion.Version)"  " - Architecture: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Architecture)"  " - Application Version: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Version)"  " - Region: $((Get-Culture).Name)"  " - Dev Version Installed: $($null -ne (Get-AppxPackage -Name Microsoft.WindowsCalculator.Dev))"  -->    **Additional context**  <!-- Add any other context about the problem here. -->    **Requested Assignment**  <!--  Some people just want to report a bug and let someone else fix it.  Other people want to not only submit the bug report, but fix it as well.  Both scenarios are completely ok. We just want to know which one it is.  Please indicate which bucket you fall into by keeping one and removing the other.  -->  I'm just reporting this problem.  I don't want to fix it.  	joshkoon	null	null	null	null	null	null	
2020-01-17 17:33:08.0	2020-01-30 01:55:11.0	2020-12-02 18:01:32.0	closed	[by design, Area: Accessibility]	3	948	In Graphing mode, the keypad cannot be reached via the Tab key	https://api.github.com/repos/microsoft/calculator/issues/948	https://github.com/microsoft/calculator/issues/948	<!--  Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.  -->    **Describe the bug**  In Graphing mode, users cannot use the Tab key to navigate to the keypad.    **Steps To Reproduce**  <!--  Steps to reproduce the behavior:  1. Go to '...'  2. Click on '....'  3. Scroll down to '....'  4. See error  -->  1. Go to Graphing mode  2. Switch to Equation mode if the window is too small to show all controls.  3. Use the Tab key to move focus through the app.  4. Observe that the keypad cannot be reached via the Tab key.    **Expected behavior**  Keypad should be included in the tab stops for the app. This also impacts navigation under Narrator.    **Screenshots**  <!-- If applicable, add screenshots to help explain your problem. -->    **Device and Application Information**   - OS Build: 10.0.19547.0   - Architecture: x64   - Application Version: 10.1912.4.0   - Region: en-US   - Dev Version Installed:    <!--  Run the following commands in Powershell and copy/paste the output.  " - OS Build: $([Environment]::OSVersion.Version)"  " - Architecture: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Architecture)"  " - Application Version: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Version)"  " - Region: $((Get-Culture).Name)"  " - Dev Version Installed: $($null -ne (Get-AppxPackage -Name Microsoft.WindowsCalculator.Dev))"  -->    **Additional context**  <!-- Add any other context about the problem here. -->    **Requested Assignment**  <!--  Some people just want to report a bug and let someone else fix it.  Other people want to not only submit the bug report, but fix it as well.  Both scenarios are completely ok. We just want to know which one it is.  Please indicate which bucket you fall into by keeping one and removing the other.  -->  I'm just reporting this problem.  I don't want to fix it.  	joshkoon	null	null	null	null	null	null	
2020-01-17 17:41:39.0	2020-02-27 19:54:30.0	2020-12-02 18:01:31.0	closed	[Area: Accessibility, fixed, Pri: 1]	1	949	Equation show/hide buttons provide no context via Narrator as to which equation they affect	https://api.github.com/repos/microsoft/calculator/issues/949	https://github.com/microsoft/calculator/issues/949	<!--  Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.  -->    **Describe the bug**  The equation show/hide buttons provide no additional context to Narrator to inform the user of which equation is affected, and the announced string for the buttons is misleading.    **Steps To Reproduce**  <!--  Steps to reproduce the behavior:  1. Go to '...'  2. Click on '....'  3. Scroll down to '....'  4. See error  -->  1. Go to the equation editor in Graphing mode.  2. Add an equation.  3. With Narrator on, navigate to the show/hide button.  4. Narrator reads, "[Show | Hide] button, [on | off]." No additional context is given.    **Expected behavior**  Narrator should provide more context to the user as to what the button is showing/hiding.  Additionally, "Show" is always announced as being in the "on" state, and "Hide" is always announced in the "off" state.    Button should retain the same name when toggled while communicating which equation is affected and the state. For example:    "Equation 1 Visibility Button, [Visible/Hidden]"    **Screenshots**  <!-- If applicable, add screenshots to help explain your problem. -->    **Device and Application Information**  - OS Build: 10.0.19547.0  - Architecture: x64  - Application Version: 10.1912.4.0  - Region: en-US  - Dev Version Installed:    <!--  Run the following commands in Powershell and copy/paste the output.  " - OS Build: $([Environment]::OSVersion.Version)"  " - Architecture: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Architecture)"  " - Application Version: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Version)"  " - Region: $((Get-Culture).Name)"  " - Dev Version Installed: $($null -ne (Get-AppxPackage -Name Microsoft.WindowsCalculator.Dev))"  -->    **Additional context**  <!-- Add any other context about the problem here. -->    **Requested Assignment**  <!--  Some people just want to report a bug and let someone else fix it.  Other people want to not only submit the bug report, but fix it as well.  Both scenarios are completely ok. We just want to know which one it is.  Please indicate which bucket you fall into by keeping one and removing the other.  -->  I'm just reporting this problem.  I don't want to fix it.    > Note: A team member updated this comment to clarify expected behavior.	joshkoon	null	null	null	null	null	null	
2020-01-17 17:46:16.0	2020-02-14 19:41:22.0	2020-12-02 18:01:30.0	closed	[Area: Accessibility, won't fix, Pri: 1]	6	950	Graphing mode: Contents of equation is not read by Narrator.	https://api.github.com/repos/microsoft/calculator/issues/950	https://github.com/microsoft/calculator/issues/950	<!--  Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.  -->    **Describe the bug**  Using Narrator in Graphing mode, Narrator does not announce the contents of the equations.    **Steps To Reproduce**  <!--  Steps to reproduce the behavior:  1. Go to '...'  2. Click on '....'  3. Scroll down to '....'  4. See error  -->  1. Go to Graphing mode  2. Add an equation, e.g. "x + 2"  3. Navigate to the equation edit box with Narrator.  4. Narrator always reads, "Enter an equation, Edit", regardless of the contents of the edit box.    **Expected behavior**  Users should be able to have the contents of their equations announced to them.    **Screenshots**  <!-- If applicable, add screenshots to help explain your problem. -->    **Device and Application Information**  - OS Build: 10.0.19547.0  - Architecture: x64  - Application Version: 10.1912.4.0  - Region: en-US  - Dev Version Installed:    <!--  Run the following commands in Powershell and copy/paste the output.  " - OS Build: $([Environment]::OSVersion.Version)"  " - Architecture: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Architecture)"  " - Application Version: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Version)"  " - Region: $((Get-Culture).Name)"  " - Dev Version Installed: $($null -ne (Get-AppxPackage -Name Microsoft.WindowsCalculator.Dev))"  -->    **Additional context**  <!-- Add any other context about the problem here. -->    **Requested Assignment**  <!--  Some people just want to report a bug and let someone else fix it.  Other people want to not only submit the bug report, but fix it as well.  Both scenarios are completely ok. We just want to know which one it is.  Please indicate which bucket you fall into by keeping one and removing the other.  -->  I'm just reporting this problem.  I don't want to fix it.  	joshkoon	null	null	null	null	null	null	
2020-01-17 17:54:35.0	2020-01-30 02:00:00.0	2020-12-02 18:01:29.0	closed	[by design, Area: Accessibility]	3	951	Graphing mode: Equation clear button cannot be accessed via keyboard	https://api.github.com/repos/microsoft/calculator/issues/951	https://github.com/microsoft/calculator/issues/951	<!--  Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.  -->    **Describe the bug**  The clear button that appears on the equation edit box is not accessible via keyboard or with Narrator.     **Steps To Reproduce**  <!--  Steps to reproduce the behavior:  1. Go to '...'  2. Click on '....'  3. Scroll down to '....'  4. See error  -->  1. Go to Graphing mode  2. Add an equation, such as "x + 2"  3. Observe that while editing the equation, a Clear (X) button appears in the edit box.  4. Attempt to navigate to the button via the Tab key on keyboard, or via screen reader shortcuts with Narrator enabled.    **Expected behavior**  Clear button should be available to users navigating via the keyboard.    **Screenshots**  <!-- If applicable, add screenshots to help explain your problem. -->    **Device and Application Information**  - OS Build: 10.0.19547.0  - Architecture: x64  - Application Version: 10.1912.4.0  - Region: en-US  - Dev Version Installed:    <!--  Run the following commands in Powershell and copy/paste the output.  " - OS Build: $([Environment]::OSVersion.Version)"  " - Architecture: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Architecture)"  " - Application Version: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Version)"  " - Region: $((Get-Culture).Name)"  " - Dev Version Installed: $($null -ne (Get-AppxPackage -Name Microsoft.WindowsCalculator.Dev))"  -->    **Additional context**  <!-- Add any other context about the problem here. -->    **Requested Assignment**  <!--  Some people just want to report a bug and let someone else fix it.  Other people want to not only submit the bug report, but fix it as well.  Both scenarios are completely ok. We just want to know which one it is.  Please indicate which bucket you fall into by keeping one and removing the other.  -->  I'm just reporting this problem.  I don't want to fix it.  	joshkoon	null	null	null	null	null	null	
2020-01-17 18:03:32.0	2020-02-14 19:41:04.0	2020-12-02 18:01:28.0	closed	[Area: Accessibility, won't fix, Pri: 1]	2	952	Graphing mode: Values of Key Graph Features are not announced by Narrator	https://api.github.com/repos/microsoft/calculator/issues/952	https://github.com/microsoft/calculator/issues/952	<!--  Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.  -->    **Describe the bug**  After using Analyze Equation, any Key Graph Features that have values are read by narrator as, "Edit, read-only"    **Steps To Reproduce**  <!--  Steps to reproduce the behavior:  1. Go to '...'  2. Click on '....'  3. Scroll down to '....'  4. See error  -->  1. Go to Graphing mode  2. Add an equation such as "x + 2"  3. Select "Analyze Equation" from hover buttons or context menu  4. With Narrator turned on, navigate through the list of key graph features using Capslock + left/right arrows  5. Observe Narrator announced many values as "Edit, read only"  6. With an "edit read only" control highlighted, use Capslock + down arrow  7. Observe Narrator reads the contents of the edit box.    **Expected behavior**  Narrator should read the contents of these controls when first navigating to them.    **Screenshots**  <!-- If applicable, add screenshots to help explain your problem. -->  ![image](https://user-images.githubusercontent.com/45607479/72634960-9036ec80-3910-11ea-875f-3605dc3938ea.png)    **Device and Application Information**  - OS Build: 10.0.19547.0  - Architecture: x64  - Application Version: 10.1912.4.0  - Region: en-US  - Dev Version Installed:    <!--  Run the following commands in Powershell and copy/paste the output.  " - OS Build: $([Environment]::OSVersion.Version)"  " - Architecture: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Architecture)"  " - Application Version: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Version)"  " - Region: $((Get-Culture).Name)"  " - Dev Version Installed: $($null -ne (Get-AppxPackage -Name Microsoft.WindowsCalculator.Dev))"  -->    **Additional context**  <!-- Add any other context about the problem here. -->    **Requested Assignment**  <!--  Some people just want to report a bug and let someone else fix it.  Other people want to not only submit the bug report, but fix it as well.  Both scenarios are completely ok. We just want to know which one it is.  Please indicate which bucket you fall into by keeping one and removing the other.  -->  I'm just reporting this problem.  I don't want to fix it.  	joshkoon	null	null	null	null	null	null	
2020-01-17 18:08:19.0	2020-03-07 00:25:51.0	2020-12-02 18:01:27.0	closed	[Area: Accessibility, fixed, Pri: 2]	1	953	With Narrator, Zoom in/out and Reset view buttons provide no feedback to user when pressed	https://api.github.com/repos/microsoft/calculator/issues/953	https://github.com/microsoft/calculator/issues/953	<!--  Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.  -->    **Describe the bug**  The zoom and reset view buttons on the graph do not provide any feedback to the user when they are pressed.    **Steps To Reproduce**  <!--  Steps to reproduce the behavior:  1. Go to '...'  2. Click on '....'  3. Scroll down to '....'  4. See error  -->  1. Go to Graphing mode  2. Add an equation  3. With narrator on, navigate to the graph control's zoom buttons  4. Invoke the buttons.  5. Observe no feedback is provided to the user    **Expected behavior**  Narrator should provide feedback that the graph view has changed based on the user's action.    Changing the view via shortcuts or on-screen buttons when screen readers are active should trigger description from #954.    **Screenshots**  <!-- If applicable, add screenshots to help explain your problem. -->    **Device and Application Information**  - OS Build: 10.0.19547.0  - Architecture: x64  - Application Version: 10.1912.4.0  - Region: en-US  - Dev Version Installed:    <!--  Run the following commands in Powershell and copy/paste the output.  " - OS Build: $([Environment]::OSVersion.Version)"  " - Architecture: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Architecture)"  " - Application Version: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Version)"  " - Region: $((Get-Culture).Name)"  " - Dev Version Installed: $($null -ne (Get-AppxPackage -Name Microsoft.WindowsCalculator.Dev))"  -->    **Additional context**  <!-- Add any other context about the problem here. -->    **Requested Assignment**  <!--  Some people just want to report a bug and let someone else fix it.  Other people want to not only submit the bug report, but fix it as well.  Both scenarios are completely ok. We just want to know which one it is.  Please indicate which bucket you fall into by keeping one and removing the other.  -->  I'm just reporting this problem.  I don't want to fix it.    > Note: A team member updated this comment to clarify expected behavior.	joshkoon	null	null	null	null	null	null	
2020-01-17 18:11:25.0	2020-03-07 00:25:51.0	2020-12-02 18:01:26.0	closed	[Area: Accessibility, fixed, Pri: 1]	1	954	Graph control is a silent tab stop in Narrator	https://api.github.com/repos/microsoft/calculator/issues/954	https://github.com/microsoft/calculator/issues/954	<!--  Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.  -->    **Describe the bug**  With Narrator on, navigating to the Graph control provides no announcement.    **Steps To Reproduce**  <!--  Steps to reproduce the behavior:  1. Go to '...'  2. Click on '....'  3. Scroll down to '....'  4. See error  -->  1. Go to Graphing mode with Narrator turned on.  2. Navigate to the Graph control  3. Observe that the control has focus, but the screen reader focus remains on the hamburger button and no announcement is made.    **Expected behavior**  Narrator should provide feedback to the user to inform them they are focused on the graph control.    At the very least, we should convey some basic information about the graph. For example:    "Graph viewing window, x-axis bounded by [xmin] and [xmax], y-axis bounded by [ymin] and [ymax], displaying 3 equations"    **Screenshots**  <!-- If applicable, add screenshots to help explain your problem. -->    **Device and Application Information**  - OS Build: 10.0.19547.0  - Architecture: x64  - Application Version: 10.1912.4.0  - Region: en-US  - Dev Version Installed:  <!--  Run the following commands in Powershell and copy/paste the output.  " - OS Build: $([Environment]::OSVersion.Version)"  " - Architecture: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Architecture)"  " - Application Version: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Version)"  " - Region: $((Get-Culture).Name)"  " - Dev Version Installed: $($null -ne (Get-AppxPackage -Name Microsoft.WindowsCalculator.Dev))"  -->    **Additional context**  <!-- Add any other context about the problem here. -->    **Requested Assignment**  <!--  Some people just want to report a bug and let someone else fix it.  Other people want to not only submit the bug report, but fix it as well.  Both scenarios are completely ok. We just want to know which one it is.  Please indicate which bucket you fall into by keeping one and removing the other.  -->  I'm just reporting this problem.  I don't want to fix it.    > Note: A team member updated this comment to clarify expected behavior.	joshkoon	null	null	null	null	null	null	
2020-01-17 18:16:09.0	2020-03-27 16:56:12.0	2020-12-02 18:01:25.0	closed	[Area: Accessibility, fixed, Pri: 1]	2	955	Line color selection window does not provide item names to Narrator	https://api.github.com/repos/microsoft/calculator/issues/955	https://github.com/microsoft/calculator/issues/955	<!--  Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.  -->    **Describe the bug**  When changing an equation style, the colors in the Line Color selection window are not read by Narrator.    **Steps To Reproduce**  <!--  Steps to reproduce the behavior:  1. Go to '...'  2. Click on '....'  3. Scroll down to '....'  4. See error  -->  1. Go to Graphing mode and add an equation  2. With Narrator on, open the Change Equation Style context menu item from the equation's context menu.  3. Navigate through the colors.  4. Observe Narrator reads out the index of the item in the list, but does not announce the names of the items.    **Expected behavior**  Narrator should announce the names of items in the list.    **Screenshots**  <!-- If applicable, add screenshots to help explain your problem. -->  ![image](https://user-images.githubusercontent.com/45607479/72635587-fbcd8980-3911-11ea-83e9-65d537098569.png)      **Device and Application Information**  - OS Build: 10.0.19547.0  - Architecture: x64  - Application Version: 10.1912.4.0  - Region: en-US  - Dev Version Installed:    <!--  Run the following commands in Powershell and copy/paste the output.  " - OS Build: $([Environment]::OSVersion.Version)"  " - Architecture: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Architecture)"  " - Application Version: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Version)"  " - Region: $((Get-Culture).Name)"  " - Dev Version Installed: $($null -ne (Get-AppxPackage -Name Microsoft.WindowsCalculator.Dev))"  -->    **Additional context**  <!-- Add any other context about the problem here. -->    **Requested Assignment**  <!--  Some people just want to report a bug and let someone else fix it.  Other people want to not only submit the bug report, but fix it as well.  Both scenarios are completely ok. We just want to know which one it is.  Please indicate which bucket you fall into by keeping one and removing the other.  -->  I'm just reporting this problem.  I don't want to fix it.  	joshkoon	null	null	null	null	null	null	
2020-01-17 18:32:38.0	2020-01-30 01:55:06.0	2020-12-02 18:01:24.0	closed	[by design, Area: Accessibility]	3	956	Graphing mode: Attempting to invoke keypad buttons with Narrator does not work	https://api.github.com/repos/microsoft/calculator/issues/956	https://github.com/microsoft/calculator/issues/956	<!--  Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.  -->    **Describe the bug**  With Narrator turned on, attempting to invoke buttons on the graphing mode keypad via Spacebar instead types a space into an equation.    **Steps To Reproduce**  <!--  Steps to reproduce the behavior:  1. Go to '...'  2. Click on '....'  3. Scroll down to '....'  4. See error  -->  1. Go to Graphing Mode.  2. Turn on Narrator.  3. Use Tab to navigate to the equations  4. Use Capslock + right/left arrow keys to navigate to the keypad.  Note: Navigating to keypad via Tab is blocked by Issue #948   5. With a button highlighted, attempt to invoke the button via spacebar.  6. Observe the value is not entered; instead, a space is added to an equation.    **Expected behavior**  Users should be able to enter values from the keypad by invoking buttons via the keyboard.    **Screenshots**  <!-- If applicable, add screenshots to help explain your problem. -->    **Device and Application Information**   - OS Build: 10.0.19547.0  - Architecture: x64  - Application Version: 10.1912.4.0  - Region: en-US  - Dev Version Installed:    <!--  Run the following commands in Powershell and copy/paste the output.  " - OS Build: $([Environment]::OSVersion.Version)"  " - Architecture: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Architecture)"  " - Application Version: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Version)"  " - Region: $((Get-Culture).Name)"  " - Dev Version Installed: $($null -ne (Get-AppxPackage -Name Microsoft.WindowsCalculator.Dev))"  -->    **Additional context**  <!-- Add any other context about the problem here. -->    **Requested Assignment**  <!--  Some people just want to report a bug and let someone else fix it.  Other people want to not only submit the bug report, but fix it as well.  Both scenarios are completely ok. We just want to know which one it is.  Please indicate which bucket you fall into by keeping one and removing the other.  -->  I'm just reporting this problem.  I don't want to fix it.  	joshkoon	null	null	null	null	null	null	
2020-01-17 18:49:13.0	2020-01-22 21:39:52.0	2020-12-02 18:01:23.0	closed	[Area: Reliability, fixed, Pri: 1]	1	957	Graphing mode crashes on some equations that contain errors	https://api.github.com/repos/microsoft/calculator/issues/957	https://github.com/microsoft/calculator/issues/957	**Describe the bug**  Graphing mode crashes on some equations that contain errors    **Steps To Reproduce**  Steps to reproduce the behavior:  1. Go to graphing mode  2. Type sqrt(y)  3. See error, hover mouse over graph, see crash    **Expected behavior**  No crash    If possible, I would like to fix this.	joseartrivera	null	null	null	null	null	null	
2020-01-17 18:52:04.0	2020-01-22 21:39:52.0	2020-01-22 21:39:53.0	closed	[fixing approved issue, graphing calculator]	1	958	Fix graphing crash when plotting equations with errors	https://api.github.com/repos/microsoft/calculator/issues/958	https://github.com/microsoft/calculator/pull/958	## Fixes #957      ### Description of the changes:  - The call to initialize an empty graph was replaced with a call that tries to graph the error equation    ### How changes were validated:  - Type sqrt(y) and hover mouse over graph    	joseartrivera	null	null	null	null	null	null	
2020-01-18 00:57:58.0	2020-03-31 02:20:31.0	2020-12-02 18:01:22.0	closed	[Bug, Pri: 3, Area: User Experience, fixed]	1	959	Graphing Mode equations with modulo '%' give 'domain error'	https://api.github.com/repos/microsoft/calculator/issues/959	https://github.com/microsoft/calculator/issues/959	<!--  Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.  -->    **Describe the bug**  When i enter an equation with a modulo operation it provides no output and gives a domain error  <!-- A clear and concise description of what the bug is. -->    **Steps To Reproduce**  Steps to reproduce the behavior:  1. Go to 'equations panel'  2. Click on 'function input'  3. enter 'y=x%2'  4. See error    **Expected behavior**  expected to see a graph of remainders  <!-- A clear and concise description of what you expected to happen. -->    	tacticalmelonfarmer	null	null	null	null	null	null	
2020-01-21 11:45:18.0	null	2021-07-22 09:03:07.0	open	[help wanted, Bug, Area: Accessibility, Pri: 3, triage approved, Area: User Experience]	3	960	In scan mode, focus navigates twice to "Function" button.	https://api.github.com/repos/microsoft/calculator/issues/960	https://github.com/microsoft/calculator/issues/960	**Repro Steps**  1. Launch " Calculator " app.  2. Launch Narrator.  3. Navigate to "Scientific" control in the navigation pane and activate it.  4. Turn on the scan mode of the narrator by pressing 'Caps + space" key.  5. Now navigate using down arrow key to 'Functions' button.    Observe the issue.     **Actual Result**  In scan mode, focus navigates twice to function button.    **Expected Result**  In scan mode, focus should navigate only once to function button.    **Observation**  For all the other buttons focus is navigating correctly only once.	MicrosoftIssueBot	null	null	null	null	null	null	
2020-01-21 11:45:21.0	2020-06-16 16:57:44.0	2020-12-02 18:01:21.0	closed	[Bug, Area: Accessibility, Pri: 3, triage approved]	1	961	Focus order is incorrect inside "Bitwise" pop up after "NOT" button.	https://api.github.com/repos/microsoft/calculator/issues/961	https://github.com/microsoft/calculator/issues/961	**Repro Steps**  1. Launch " Calculator " app.  2. Navigate to "Programmer" control in the navigation pane and activate it.  3. Navigate to 'Bitwise' button and press enter to activate it.  4. Navigate using tab key inside the pop up.    Observe the issue.     **Actual Result**  Focus order is incorrect inside the "Bitwise" pop up after "NOT" button. After   "NOT" button focus order is : "XOR" > "NAND" > "NOR"    **Expected Result**  Focus order should be correct inside the "Bitwise" pop up after "NOT" button as well. After "NOT" button, focus order should be : "NAND" > "NOR" > "XOR"	MicrosoftIssueBot	null	null	null	null	null	null	
2020-01-21 11:45:27.0	2020-07-20 22:05:22.0	2020-12-02 18:01:20.0	closed	[Bug, Area: Accessibility, Pri: 3, triage approved]	3	962	Narrator is not announcing the confirmation after selecting radio button.	https://api.github.com/repos/microsoft/calculator/issues/962	https://github.com/microsoft/calculator/issues/962	**Repro Steps**  1. Launch " Calculator " app.  2. Launch Narrator.  3. Navigate to "Programmer" control in the navigation pane and activate it.  4. Navigate to 'Bitshift' button and press enter to activate it. A pop up will get opened.  5. Navigate to and select any radio button.    Observe the issue.     **Actual Result**  Narrator is not announcing the confirmation after selecting radio button.    **Expected Result**  Narrator should provide the confirmation after selecting radio button.	MicrosoftIssueBot	null	null	null	null	null	null	
2020-01-21 11:45:30.0	null	2021-07-22 09:03:10.0	open	[help wanted, Bug, Area: Accessibility, Pri: 3, triage approved, Area: User Experience]	1	963	In Scan/Item mode, screen reader focus navigates to background hidden element 'Not busy...' progress bar while navigating from 'Convert From...' text to 'Main' landmark	https://api.github.com/repos/microsoft/calculator/issues/963	https://github.com/microsoft/calculator/issues/963	**Repro Steps**  1. Launch Narrator.  2. Launch Calculator app.  3. Navigate to 'Open Navigation' button and activate it.  4. Navigate to 'Temperature' menu item and activate it.  5. 'Temperature' calculator mode will open.  6. Set narrator to scan mode using 'Caps+Space' keys.  7. Navigate in the to 'Temperature' calculator mode window using 'Up/Down arrow' keys.    Observe the issue.    **Actual Result**  In Scan/Item mode, screen reader focus navigates to background hidden element 'Not busy...' progress bar while navigating from 'Convert From...' text to 'Main' landmark.    **Expected Result**  In Scan/Item mode, screen reader focus should not navigate to background hidden element 'Not busy...' progress bar while navigating from 'Convert From...' text to 'Main' landmark.	MicrosoftIssueBot	null	null	null	null	null	null	
2020-01-21 12:02:14.0	2020-02-04 21:47:44.0	2020-12-02 18:01:19.0	closed	[Area: User Experience, fixed, Pri: 1]	1	964	Equation analysis does not recognize equations of the form "y=x", but works with just "x"	https://api.github.com/repos/microsoft/calculator/issues/964	https://github.com/microsoft/calculator/issues/964	The new Graphing feature of the Calculator will render equations written in the form "y = x" but won't perform analysis on them. If the equation is written as simply "x" then both render and analysis works.    **Expected**  Analysis should work in both cases.	MicrosoftIssueBot	null	null	null	null	null	null	
2020-01-21 22:16:39.0	2020-01-29 03:21:20.0	2020-12-02 18:01:18.0	closed	[Area: User Experience, fixed]	6	965	Tooltip for the buttons to open and close compact overlay are not showing the keyboard accelerator	https://api.github.com/repos/microsoft/calculator/issues/965	https://github.com/microsoft/calculator/issues/965	**Describe the bug**  The buttons to open and close compact overlay have a tooltip that says "Keep on top", the tooltips should include the keyboard accelerator `alt + up` and `alt + down`    **Steps To Reproduce**  Hover over the buttons.    **Screenshots**  ![image](https://user-images.githubusercontent.com/39923744/72847899-7596a780-3c71-11ea-81a6-cda75afaab6a.png)      **Device and Application Information**   - OS Build: 18363   - Architecture: x64   - Application Version: 10.1910.0.0   - Region: US    **Requested Assignment**  If possible, I would like to fix this, but I would need to know if localization is involved.	yaichenbaum	null	null	null	null	null	null	
2020-01-22 14:57:31.0	2020-01-27 07:29:51.0	2020-12-02 18:01:17.0	closed	[won't fix, question]	2	966	Graphing feature not available	https://api.github.com/repos/microsoft/calculator/issues/966	https://github.com/microsoft/calculator/issues/966	Hello!  I ran the source code on my PC (VS 2019 16.4.3, Windows 10 1909 18363.592 x64, Windows 10 SDK 10.1.18362.1) but I can't see the graphing feature, because the IsGraphingModeAvailable() function in Common/NavCategory.cpp returns always false.  What are the minimum requirements to test this functionality?	bludev	null	null	null	null	null	null	
2020-01-22 19:33:13.0	2020-02-06 23:15:29.0	2020-02-06 23:15:45.0	closed	[codebase quality, graphing calculator]	1	967	Update mocks to allow for more UI to appear	https://api.github.com/repos/microsoft/calculator/issues/967	https://github.com/microsoft/calculator/pull/967	# Description of the changes:  - Currently the community cannot access a lot of the features for the Graphing UI because most equations will return as errors, this change fleshes out the mocks so that more of the UI can be accessed (analyzer, equation colors, variables).  - Would be nice in the future to add mock data to the analyzer for a full view instead of an error page    ### How changes were validated:  - Manual tests    	joseartrivera	null	null	null	null	null	null	
2020-01-23 18:04:23.0	2020-01-29 03:21:20.0	2020-12-28 19:10:42.0	closed	[fixing approved issue]	1	968	Always on top tool tip	https://api.github.com/repos/microsoft/calculator/issues/968	https://github.com/microsoft/calculator/pull/968	## Fixes #965 .      ### Description of the changes:  - I added the KeyboardAccelerator in the en-us resource file.    ### How changes were validated:  Manually  	yaichenbaum	null	null	null	null	null	null	
2020-01-24 14:37:23.0	2020-05-21 21:08:17.0	2020-12-02 18:01:16.0	closed	[Bug, Area: World-Readiness, fixed, Pri: 2]	7	969	Remove space when we copy/paste a number	https://api.github.com/repos/microsoft/calculator/issues/969	https://github.com/microsoft/calculator/issues/969	**Describe the bug**    When we copy the result of a calc, we got a number with space character between numbers (Eg: "2 365 596")    **Steps To Reproduce**    Steps to reproduce the behavior:  1. Calc 568 * 568 * 568  2. Copy the result  3. Clic on "C"  4. Paste the previous number  5. Invalid number ("Entrée non valide" on a French app)    **Expected behavior**  Remove spaces when we copy it.    **Device and Application Information**   - OS Build: 1903   - Architecture: x64   - Application Version: ?   - Region: FR_fr    I'm just reporting this problem.  I don't want to fix it.  	Maxou44	null	null	null	null	null	null	
2020-01-25 00:31:28.0	2020-01-27 19:25:34.0	2020-12-02 18:01:15.0	closed	[fixed]	1	970	Update Expired Unit Test Certificate 	https://api.github.com/repos/microsoft/calculator/issues/970	https://github.com/microsoft/calculator/issues/970	<!--  Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.  -->    **Describe the bug**  The CalculatorUnitTest_Temporary.pfx has expired and needs to be updated.      	sanderl	null	null	null	null	null	null	
2020-01-25 00:34:49.0	2020-01-27 19:25:34.0	2020-05-26 21:47:17.0	closed	[]	0	971	Updated unit tests certificate	https://api.github.com/repos/microsoft/calculator/issues/971	https://github.com/microsoft/calculator/pull/971	## Fixes #970.      ### Description of the changes:  - Updates the unit test certificate to a valid one.  -  -    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - manually  -  -    	sanderl	null	null	null	null	null	null	
2020-01-28 05:42:10.0	2020-01-28 18:05:39.0	2020-01-28 18:05:53.0	closed	[design]	0	972	Refresh the Compact mode icon	https://api.github.com/repos/microsoft/calculator/issues/972	https://github.com/microsoft/calculator/pull/972	### Description of the changes:  - Update CalcMDL2.tff to v3.66    ![image](https://user-images.githubusercontent.com/1226538/73238425-cca6eb80-414d-11ea-84fd-d015ba35ba30.png)    ### How changes were validated:  - Manually    	rudyhuyn	null	null	null	null	null	null	
2020-01-28 13:13:22.0	2020-02-26 00:34:19.0	2021-06-02 00:00:10.0	closed	[Bug, triage approved, Area: User Experience, Pri: 1]	4	973	Other converter modes stop working if we open 'Currency' in offline mode	https://api.github.com/repos/microsoft/calculator/issues/973	https://github.com/microsoft/calculator/issues/973	**Describe the bug**    If we switch from the Currency Mode to any other converter mode while we are offline, the input box is either not visible or is unavailable.    **Steps To Reproduce**    Steps to reproduce the behavior:  1. Go to the 'Currency' mode of the calculator while you are offline. Make sure that the 'Currency' Mode doesn't have any previously fetched rates (You may reset this app from App Settings to clear its data). It should only show:        > Offline. Please check your Network Settings.    2. Then switch to any other mode in the 'Converter' section.  3. Notice that the input box is not available.    **Expected behavior**    The other modes should have been working even while we are offline.    **Screenshots**    ![Issue](https://user-images.githubusercontent.com/55381546/73266655-519d0e00-41fd-11ea-8e2e-f0cd1a3cd42c.JPG)    ![Issue (2)](https://user-images.githubusercontent.com/55381546/73266671-5b267600-41fd-11ea-8482-9458c605b27c.JPG)    See that no input panel is available.    **Device and Application Information**     - OS Build: 10.0.17134.619   - Architecture: x64   - Application Version: 10.1910.0.0   - Region: New Delhi, India    I'm just reporting this problem.  I don't want to fix it.  	ghost	null	null	null	null	null	null	
2020-01-29 14:39:48.0	2020-05-07 07:30:31.0	2021-03-01 04:23:56.0	closed	[]	4	974	Feat/programmer signedness	https://api.github.com/repos/microsoft/calculator/issues/974	https://github.com/microsoft/calculator/pull/974	## Fixes #66       ### Description of the changes:  - Added signedness toggle to UI  - Updated max values in CalcEngine when in unsigned mode  - Updated max values in CopyPasteManager when in unsigned mode  - Disabled ability to paste negative numbers when in unsigned mode  - Disabled negate button when in unsigned mode    ### How changes were validated:  - Manually tested  - Entered values outside of signed int range while in signed and unsigned modes for all bit lengths  - Pasted values outside of signed int range while in signed and unsigned modes for all bit lengths  - Pasted negative numbers while in signed and unsigned modes    Attempted to run automated testing to ensure no functionality was broken but it appears some element IDs have changed and the tests do not work at the moment.    	timlassiter11	null	null	null	null	null	null	
2020-01-30 07:13:55.0	null	2021-05-26 10:05:18.0	open	[Bug, triage approved, Area: User Experience, Pri: 1]	1	975	MathML buildup broken when editing an equation and adding parenthesis	https://api.github.com/repos/microsoft/calculator/issues/975	https://github.com/microsoft/calculator/issues/975	**Summary**  Rich editing for exponents becomes broken following a close parenthesis when parentheses are added later while input an equation    **Repro Steps**  1) Launch calculator in graphing mode.  2) In a function data entry field, start to input an equation such as: x^2+y^2−1. To input an exponent: press [Shift] + [6] > press exponent number of choice > then press spacebar  3) Add an open parenthesis in front of the x: (x2+y2−1  4) Add a closed parenthesis in behind the 1: (x2+y2−1)  5) Add an exponent to closed parenthesis  6) Observe the exponent    **Observed results**  The rich text edited version of the exponent is not added to the closed parenthesis.  As the function is written out more, the rich text version any additional exponents is broken as well.  E.g. (x2+y2−1)^3 -x^2 y^3 = 0    **Expected results**  E.g.  ![image](https://user-images.githubusercontent.com/1414423/73490031-8675a600-4360-11ea-9879-439d6c6f534b.png)    **Note**  Exponents might be a red herring. I think it has to do with the adding parenthesis after the fact	MicrosoftIssueBot	null	null	null	null	null	null	
2020-01-30 07:14:01.0	2020-03-11 16:41:38.0	2020-12-02 18:01:13.0	closed	[Area: User Experience, fixed, Pri: 2]	1	976	Context menu function analysis should be disabled for equations with errors	https://api.github.com/repos/microsoft/calculator/issues/976	https://github.com/microsoft/calculator/issues/976	**Describe the bug**  Function analysis is enabled on context menu when in error state.    **Expected behavior**  Function analysis should be disabled until we can confirm a valid equation.    **Screenshots**  ![image](https://user-images.githubusercontent.com/1414423/73488556-00f0f680-435e-11ea-9db0-37854d39336b.png)	MicrosoftIssueBot	null	null	null	null	null	null	
2020-01-30 07:14:04.0	null	2021-05-26 10:05:29.0	open	[help wanted, Bug, Pri: 3, triage approved, Area: User Experience]	1	977	Context menu style picker should show up as a nested context menu	https://api.github.com/repos/microsoft/calculator/issues/977	https://github.com/microsoft/calculator/issues/977	**Describe the bug**  There is a disconnect between the style picker popup and the context menu for equations.    **Expected behavior**  Context menu should appear as a cascading menu flyout:  ![image](https://user-images.githubusercontent.com/1414423/73488447-cedf9480-435d-11ea-9478-d07637b7f17a.png)    **Screenshots**  ![image](https://user-images.githubusercontent.com/1414423/73488396-b53e4d00-435d-11ea-98ac-bf9db4387a5f.png)	MicrosoftIssueBot	null	null	null	null	null	null	
2020-01-30 07:14:07.0	2020-03-12 01:38:13.0	2020-12-02 18:01:12.0	closed	[Area: User Experience, fixed, Pri: 2]	1	978	Equation input textbox should support cut/copy/paste in context menu	https://api.github.com/repos/microsoft/calculator/issues/978	https://github.com/microsoft/calculator/issues/978	**Describe the bug**  Common text actions are missing from context menu.    **Expected behavior**  Cut/copy/paste are available.    ![image](https://user-images.githubusercontent.com/1414423/73488771-62b16080-435e-11ea-953f-652f3475f40b.png)    **Screenshots**  ![image](https://user-images.githubusercontent.com/1414423/73488661-309ffe80-435e-11ea-8ff4-96e1d6e1b8aa.png)	MicrosoftIssueBot	null	null	null	null	null	null	
2020-01-30 07:14:10.0	null	2021-09-30 09:05:12.0	open	[Enhancement, Pri: 2, needs more info]	1	979	Function analysis should have a checkbox to display key graph features on the graph	https://api.github.com/repos/microsoft/calculator/issues/979	https://github.com/microsoft/calculator/issues/979	A team member will update this issue with more details soon.	MicrosoftIssueBot	null	null	null	null	null	null	
2020-01-30 07:14:13.0	2020-02-04 23:02:43.0	2020-12-02 18:01:11.0	closed	[Area: Performance, fixed, Pri: 0]	1	980	Graphing engine rendering should occur on background thread	https://api.github.com/repos/microsoft/calculator/issues/980	https://github.com/microsoft/calculator/issues/980	**Describe the bug**  There are known performance issues with rendering equations on the graph due to how we currently process input.    **Expected behavior**  We should move graphing engine rendering to a background thread.	MicrosoftIssueBot	null	null	null	null	null	null	
2020-01-30 07:14:15.0	null	2021-09-30 09:05:15.0	open	[Enhancement, Pri: 2, needs pitch review]	5	981	Graph should support plotting (x,y) coordinate pairs as points	https://api.github.com/repos/microsoft/calculator/issues/981	https://github.com/microsoft/calculator/issues/981	**Problem Statement**  Users cannot plot points on the graph today, only expressions.    **Proposal**  Add support for plotting coordinate pairs as points (e.g., `P1 = (3,5)`)    **Goals**  Users can plot (x,y) coordinate pairs.    **Low-Fidelity Concept**  ![image](https://user-images.githubusercontent.com/1414423/92310824-b9bb8b80-ef66-11ea-965c-e081021c9ec4.png)      **Requested Assignment**  I'm just suggesting this idea.  I don't want to implement it.  	MicrosoftIssueBot	null	null	null	null	null	null	
2020-01-30 07:14:18.0	null	2021-09-30 09:05:18.0	open	[Enhancement, Pri: 2, needs more info]	1	982	Graph should support bounded step functions	https://api.github.com/repos/microsoft/calculator/issues/982	https://github.com/microsoft/calculator/issues/982	A team member will update this issue with more details soon.	MicrosoftIssueBot	null	null	null	null	null	null	
2020-01-30 07:14:21.0	2020-03-27 16:56:12.0	2020-12-02 18:01:10.0	closed	[Area: User Experience, fixed, Pri: 2]	1	983	Users can change the line style of equations in the style picker	https://api.github.com/repos/microsoft/calculator/issues/983	https://github.com/microsoft/calculator/issues/983	**Describe the bug**  User does not currently have the ability to change line style.    **Expected behavior**  ![9](https://user-images.githubusercontent.com/1414423/76728017-c0cdb380-6712-11ea-8522-7a2918c847c9.png)  ![10](https://user-images.githubusercontent.com/1414423/76728024-c2977700-6712-11ea-88a2-4763061d964d.png)  	MicrosoftIssueBot	null	null	null	null	null	null	
2020-01-30 07:14:25.0	null	2021-05-26 10:05:38.0	open	[help wanted, Bug, triage approved, Area: User Experience, Pri: 2]	3	984	Share output should render equations in rich MathML styling instead of linear	https://api.github.com/repos/microsoft/calculator/issues/984	https://github.com/microsoft/calculator/issues/984	**Describe the bug**  Share output shows equations in linear math output format.    **Expected behavior**  Math expressions should be rendered richly as MathML style.    **Screenshots**  ![image](https://user-images.githubusercontent.com/1414423/73488881-82488900-435e-11ea-8ffc-f7413b81bb40.png)	MicrosoftIssueBot	null	null	null	null	null	null	
2020-01-30 07:14:27.0	2020-03-25 22:18:35.0	2020-12-02 18:01:09.0	closed	[Area: User Experience, fixed, Pri: 1]	1	985	Improve error handling for equation input to help users understand what is wrong with their input	https://api.github.com/repos/microsoft/calculator/issues/985	https://github.com/microsoft/calculator/issues/985	A team member will update this issue with more details soon.	MicrosoftIssueBot	null	null	null	null	null	null	
2020-01-30 07:14:30.0	2020-04-09 23:58:20.0	2020-12-02 18:01:08.0	closed	[Bug, Pri: 3, Area: User Experience, fixed]	1	986	Add shadow elements to graphing calculator wherever we have custom popups	https://api.github.com/repos/microsoft/calculator/issues/986	https://github.com/microsoft/calculator/issues/986	**Describe the bug**  Some custom popups do not have shadows.    **Expected behavior**  Audit all custom popups added for graphing mode and ensure shadows are enabled for consistency with platform.    **Screenshots**  ![image](https://user-images.githubusercontent.com/1414423/73490235-f08e4b00-4360-11ea-8896-ababaa1a78e1.png)	MicrosoftIssueBot	null	null	null	null	null	null	
2020-01-30 07:14:52.0	null	2021-05-26 10:05:56.0	open	[Bug, Pri: 3, triage approved, Area: User Experience]	1	987	We shouldn't be able to paste pictures in when entering equations in graphing mode	https://api.github.com/repos/microsoft/calculator/issues/987	https://github.com/microsoft/calculator/issues/987	**Describe the bug**  You can paste images into equation input.    **Expected behavior**  Shouldn't be able to do that.    **Screenshots**  ![image](https://user-images.githubusercontent.com/1414423/73489766-0a7b5e00-4360-11ea-9617-95523e0c08b5.png)	MicrosoftIssueBot	null	null	null	null	null	null	
2020-01-30 07:14:55.0	2020-03-26 21:15:45.0	2020-12-02 18:01:07.0	closed	[Area: User Experience, fixed, Pri: 2]	1	988	Users can change the line thickness globally in graph options	https://api.github.com/repos/microsoft/calculator/issues/988	https://github.com/microsoft/calculator/issues/988	**Describe the bug**  Graph options does not currently support ability to change line thickness.    **Expected behavior**  ![6](https://user-images.githubusercontent.com/1414423/76727935-94199c00-6712-11ea-942c-a13e1d517290.png)  ![7](https://user-images.githubusercontent.com/1414423/76727939-95e35f80-6712-11ea-95ef-e0d622832cdb.png)  ![8](https://user-images.githubusercontent.com/1414423/76727946-9aa81380-6712-11ea-8bd9-7e6f40941156.png)  	MicrosoftIssueBot	null	null	null	null	null	null	
2020-01-30 07:14:59.0	2020-03-16 18:54:20.0	2020-12-02 18:01:06.0	closed	[Area: User Experience, fixed, Pri: 2]	1	989	Mouse gestures should be supported when active tracing is enabled	https://api.github.com/repos/microsoft/calculator/issues/989	https://github.com/microsoft/calculator/issues/989	A team member will update this issue with more details soon.	MicrosoftIssueBot	null	null	null	null	null	null	
2020-01-30 07:15:02.0	2020-02-04 21:43:01.0	2020-12-02 18:01:05.0	closed	[Area: User Experience, fixed, Pri: 1]	1	990	Function analysis is not working for equations with variables	https://api.github.com/repos/microsoft/calculator/issues/990	https://github.com/microsoft/calculator/issues/990	**Describe the bug**  Function analysis is not working for equations with variables.    **Expected behavior**  Function analysis should work for equations with variables, leveraging the value of the variable at the time of analysis.    **Screenshots**  ![image](https://user-images.githubusercontent.com/1414423/73489539-9a6cd800-435f-11ea-83cb-c8588d47b25e.png)  	MicrosoftIssueBot	null	null	null	null	null	null	
2020-01-30 07:15:05.0	2020-04-09 23:58:09.0	2020-12-02 18:01:04.0	closed	[Bug, Area: User Experience, fixed, Pri: 2]	1	991	Equation colors should be recycled as soon as they are no longer in use to maximize contrast	https://api.github.com/repos/microsoft/calculator/issues/991	https://github.com/microsoft/calculator/issues/991	**Describe the bug**  Equation colors have a specified priority to maximize contrast between lines, but when removing an equation, the color is not recycled, leading to less than optimal contrast when entering new equations.    **Expected behavior**  Equation colors should be recycled as soon as they are no longer in use to maximize contrast	MicrosoftIssueBot	null	null	null	null	null	null	
2020-01-30 07:15:08.0	2020-02-27 00:21:39.0	2020-12-02 18:01:03.0	closed	[Area: User Experience, fixed, Pri: 1]	1	992	X/Y-min/max values in graph options should not change automatically when manually setting	https://api.github.com/repos/microsoft/calculator/issues/992	https://github.com/microsoft/calculator/issues/992	**Describe the bug**  In attempting to lock aspect ratio of the graph window, we are adjusting X/Y-min/max values automatically. This behavior is not straightforward to users attempting to set a specific window.    **Expected behavior**  Users can edit all values without others changing automatically, even if that breaks aspect ratio.    **Screenshots**  ![tILdCPWS9A](https://user-images.githubusercontent.com/1414423/73489204-187caf00-435f-11ea-9a82-b85e3b5d326c.gif)  	MicrosoftIssueBot	null	null	null	null	null	null	
2020-01-30 07:15:11.0	2020-03-26 21:05:46.0	2020-12-02 18:01:02.0	closed	[help wanted, Pri: 3, Area: User Experience, won't fix, needs more info]	1	993	Equation input caret misaligned from hint text	https://api.github.com/repos/microsoft/calculator/issues/993	https://github.com/microsoft/calculator/issues/993	A team member will update this issue with more details soon.	MicrosoftIssueBot	null	null	null	null	null	null	
2020-01-30 07:15:13.0	2020-03-11 19:19:15.0	2020-12-02 18:01:01.0	closed	[Area: User Experience, fixed, Pri: 2]	1	994	Divider line between equations and variables not adequately theme aware (should be lighter on dark theme)	https://api.github.com/repos/microsoft/calculator/issues/994	https://github.com/microsoft/calculator/issues/994	**Describe the bug**  The divider line between equations and variables is not visible on dark theme.    **Expected behavior**  All UI should be theme-aware.    **Screenshots**  ![image](https://user-images.githubusercontent.com/1414423/73488980-ab691980-435e-11ea-8882-632e6818ab59.png)	MicrosoftIssueBot	null	null	null	null	null	null	
2020-01-30 07:15:16.0	2020-04-14 19:37:24.0	2020-12-02 18:01:00.0	closed	[Bug, Area: User Experience, fixed, Pri: 2]	1	995	Refresh select graphing mode iconography	https://api.github.com/repos/microsoft/calculator/issues/995	https://github.com/microsoft/calculator/issues/995	**Describe the bug**  Some graphing mode iconography is not as clear as we would like.    **Expected behavior**  Refresh the following icons:  * Hide Equation --> Explore "Closed Eye" instead  ![image](https://user-images.githubusercontent.com/1414423/73484016-6391c480-4355-11ea-800a-91c66dd2f066.png)  * Function Analysis --> Explore just lighting bolt instead  ![image](https://user-images.githubusercontent.com/1414423/73484067-7dcba280-4355-11ea-81e7-da723c8241b1.png)  * Negate is not accurate for this mode --> switch to negative sign "(-)" instead  ![image](https://user-images.githubusercontent.com/1414423/73484125-976cea00-4355-11ea-98df-4aa479e25f5f.png)  * Reset view icon could be clearer  ![image](https://user-images.githubusercontent.com/1414423/73484174-ac497d80-4355-11ea-8ad4-2db56673af91.png)    	MicrosoftIssueBot	null	null	null	null	null	null	
2020-01-30 07:15:19.0	2020-03-05 00:25:51.0	2020-12-02 18:00:59.0	closed	[Area: User Experience, fixed, Pri: 1]	1	996	Verify select graphing mode strings	https://api.github.com/repos/microsoft/calculator/issues/996	https://github.com/microsoft/calculator/issues/996	**Describe the bug**  Some strings are not as clear/accurate as we would like.    **Expected behavior**  Update the following strings:  * "Enter an equation" -> "Enter an expression"  * "Analyze equation" -> "Analyze function"  * "Key Graph Features" -> "Function analysis"  * "Grid" -> "Window" (in graph options flyout)	MicrosoftIssueBot	null	null	null	null	null	null	
2020-01-30 07:15:22.0	2020-03-28 00:20:36.0	2020-12-02 18:00:58.0	closed	[Area: User Experience, fixed, Pri: 1]	1	997	Graph display should support dark theme with theme option in graph options	https://api.github.com/repos/microsoft/calculator/issues/997	https://github.com/microsoft/calculator/issues/997	**Describe the bug**  Graph currently does not support dark theme.    **Expected behavior**  * Graph remains light theme by default (even when the rest of the app is dark theme).  * Graph options allows users to specify graph theme. This setting should be persistent. between sessions.  * Colors in style picker all need dark theme adjustments  * We may need to explore the button styling for graph buttons (e.g., zoom in) to ensure we meet contrast requirements.    **Design Details**  ![1](https://user-images.githubusercontent.com/1414423/76727785-3c7b3080-6712-11ea-9329-3d6f2f369954.png)  ![2](https://user-images.githubusercontent.com/1414423/76727813-47ce5c00-6712-11ea-92cd-db6b06a087ed.png)  ![3](https://user-images.githubusercontent.com/1414423/76727817-4ac94c80-6712-11ea-96d3-16d55f768833.png)  ![4](https://user-images.githubusercontent.com/1414423/76727819-4d2ba680-6712-11ea-90f7-c0e276ccf048.png)  ![5](https://user-images.githubusercontent.com/1414423/76727820-4ef56a00-6712-11ea-8881-1c87df18408c.png)  	MicrosoftIssueBot	null	null	null	null	null	null	
2020-01-30 07:15:24.0	2020-06-30 21:05:31.0	2020-12-02 18:00:57.0	closed	[Bug, Area: User Experience, fixed, Pri: 2]	2	998	Tracing coordinates should round dynamically based on graph scale	https://api.github.com/repos/microsoft/calculator/issues/998	https://github.com/microsoft/calculator/issues/998	**Describe the bug**  We always round coordinates to one decimal place, which is problematic depending on graph scale.    **Expected behavior**  To ensure a great default experience, we should scale the precision of coordinates based on the graph viewing window. For this initial change, we want to avoid adding a setting, but may consider this in the future based on feedback.    * Desired precision for any one axis should be determined by: ![image](https://user-images.githubusercontent.com/1414423/77210450-44debd00-6abe-11ea-8e95-a7d78012dc63.png)  * This effectively produces the following results:      | Range         | Precision |  |---------------|-----------|  | -0.1 to 0.1   | 10<sup>-4</sup>    |  | -1 to 1       | 10<sup>-3</sup>     |  | -10 to 10     | 10<sup>-2</sup>      |  | -100 to 100   | 10<sup>-1</sup>       |  | -1000 to 1000 | 10<sup>1</sup>         |  | -10000 to 10000 | 10<sup>2</sup>         |    * Note that we transition from one level of precision to the next based on range, not the value of min/max, so -500 to 500 is treated the same as -1000 to 1000 and has a precision of 10<sup>1</sup>.  * For prevision is very large (greater than 10<sup>7</sup>) or very small (less than 10<sup>-7</sup>), we should switch to scientific notation.  * For disproportional magnitudes (e.g., x is -1 to 1, but y is -1000 to 1000), take the higher precision between all axes.    **Screenshots**  ![image](https://user-images.githubusercontent.com/1414423/73484305-ea46a180-4355-11ea-87d3-5109e6cb70fe.png)  	MicrosoftIssueBot	null	null	null	null	null	null	
2020-01-30 07:15:27.0	2020-03-12 17:12:02.0	2020-12-02 18:00:56.0	closed	[Area: User Experience, fixed, Pri: 2]	1	999	Equations that have focus or are being analyzed should be bolded on the graph display	https://api.github.com/repos/microsoft/calculator/issues/999	https://github.com/microsoft/calculator/issues/999	A team member will update this issue with more details soon.	MicrosoftIssueBot	null	null	null	null	null	null	
2020-01-30 07:15:30.0	2020-02-27 19:54:30.0	2020-12-02 18:00:55.0	closed	[Area: User Experience, fixed, Pri: 2]	1	1000	Zoom in/Zoom out/Reset tooltips missing shortcut keys	https://api.github.com/repos/microsoft/calculator/issues/1000	https://github.com/microsoft/calculator/issues/1000	**Describe the bug**  Graph view buttons missing shortcut keys in tooltips.    **Expected behavior**  * Zoom In: "Zoom in (Ctrl+plus)"  * Zoom Out: "Zoom out (Ctrl+minus)"  * Reset View: "Reset view (Ctrl+0)"    * Shortcut is not working	MicrosoftIssueBot	null	null	null	null	null	null	
2020-01-30 07:15:33.0	2020-02-25 19:05:06.0	2020-12-02 18:00:54.0	closed	[help wanted, Area: User Experience, not repro, Pri: 1, needs more info]	1	1001	Error state in graph options is not theme aware (is currently always light theme)	https://api.github.com/repos/microsoft/calculator/issues/1001	https://github.com/microsoft/calculator/issues/1001	A team member will update this issue with more details soon.	MicrosoftIssueBot	null	null	null	null	null	null	
2020-01-30 07:15:36.0	null	2021-05-26 10:05:59.0	open	[help wanted, Bug, Pri: 3, triage approved, Area: User Experience]	1	1002	Buttons on top of the graph should appear on graph hover/interaction before fading away after inactivity	https://api.github.com/repos/microsoft/calculator/issues/1002	https://github.com/microsoft/calculator/issues/1002	**Describe the bug**  Buttons on top of the graph can be distracting.    **Expected behavior**  Buttons on top of the graph should appear on graph hover/interaction before fading away after inactivity. Should not be too aggressive.	MicrosoftIssueBot	null	null	null	null	null	null	
2020-01-30 07:15:39.0	2020-03-31 20:46:25.0	2020-12-02 18:00:53.0	closed	[Bug, Area: User Experience, won't fix, Pri: 2]	1	1003	When activating tracing, cursor should appear close to the first visible equation on the graph instead of always showing up in the center	https://api.github.com/repos/microsoft/calculator/issues/1003	https://github.com/microsoft/calculator/issues/1003	**Describe the bug**  When tracing is activated, the cursor always appears at the center of the screen, which is not ideal for keyboard users.    **Expected behavior**  When activating tracing, cursor should appear close to (but not _on_) the first visible equation.	MicrosoftIssueBot	null	null	null	null	null	null	
2020-01-30 07:15:42.0	null	2021-09-30 09:05:37.0	open	[Enhancement, Pri: 2, needs more info]	1	1004	Introduce first-run experience for graphing mode to help students and teachers discover functionality	https://api.github.com/repos/microsoft/calculator/issues/1004	https://github.com/microsoft/calculator/issues/1004	A team member will update this issue with more details soon.	MicrosoftIssueBot	null	null	null	null	null	null	
2020-01-30 07:15:45.0	2020-03-24 16:42:31.0	2020-12-02 18:00:52.0	closed	[Area: User Experience, fixed, Pri: 1]	1	1005	Jumplist and Start menu quick icons are missing for graphing mode	https://api.github.com/repos/microsoft/calculator/issues/1005	https://github.com/microsoft/calculator/issues/1005	**Describe the bug**  Jumplist and Start menu quick icons are missing for graphing mode    **Expected behavior**  Graphing mode icon should be used.    **Screenshots**  ![image](https://user-images.githubusercontent.com/1414423/73481830-76a29580-4351-11ea-8c78-0d82959692c8.png)    ![image](https://user-images.githubusercontent.com/1414423/73481889-8a4dfc00-4351-11ea-9587-e2d4b4f71e7a.png)  	MicrosoftIssueBot	null	null	null	null	null	null	
2020-01-30 07:15:48.0	null	2021-05-26 10:06:02.0	open	[Bug, triage approved, Area: User Experience, Pri: 2, needs more info]	1	1006	HTML share output should have a link to open the graph in Calculator	https://api.github.com/repos/microsoft/calculator/issues/1006	https://github.com/microsoft/calculator/issues/1006	A team member will update this issue with more details soon.	MicrosoftIssueBot	null	null	null	null	null	null	
2020-01-30 07:15:51.0	2020-03-05 00:25:51.0	2020-12-02 18:00:51.0	closed	[Area: User Experience, fixed, Pri: 1]	1	1007	Graph display should support copy via context menu	https://api.github.com/repos/microsoft/calculator/issues/1007	https://github.com/microsoft/calculator/issues/1007	A team member will update this issue with more details soon.	MicrosoftIssueBot	null	null	null	null	null	null	
2020-01-30 07:15:54.0	2020-02-24 18:27:23.0	2020-12-02 18:00:50.0	closed	[Area: User Experience, fixed, Pri: 1]	1	1008	Image should be added to share package to support more share targets	https://api.github.com/repos/microsoft/calculator/issues/1008	https://github.com/microsoft/calculator/issues/1008	**Describe the bug**  We are only sharing HTML, which is not supported by many share targets.    **Expected behavior**  Image is included, so more share targets are available.	MicrosoftIssueBot	null	null	null	null	null	null	
2020-01-30 07:15:57.0	2020-03-10 19:45:36.0	2020-12-02 18:00:49.0	closed	[Area: World-Readiness, fixed, Pri: 1]	1	1009	'Alt' key on French keyboard has conflicts in graphing mode	https://api.github.com/repos/microsoft/calculator/issues/1009	https://github.com/microsoft/calculator/issues/1009	**Describe the bug**  When using azerty (French) keyboard layout, the right "Alt" key is replaced with an "Alt Gr" key, which is used to type some special chars such as '\~', '#', etc. when combined with other keys, typically the digit keys. When typing an equation in the graphing window, if you type a special character with Alt Gr and a digit key, the character will be typed, but the command will also be interpreted as using an Access Key with Alt, causing the app to navigate to the corresponding page. For example, typing '~' with Alt Gr + 4 navigates to the Scientific page.    **Expected behavior**  Alt Gr should not be mistaken with Alt and should not trigger navigation.	MicrosoftIssueBot	null	null	null	null	null	null	
2020-01-30 14:10:10.0	2020-02-06 23:13:38.0	2020-02-06 23:13:39.0	closed	[graphing calculator]	0	1010	Making Graphing::Color fully constexpr	https://api.github.com/repos/microsoft/calculator/issues/1010	https://github.com/microsoft/calculator/pull/1010	### Description of the changes:  - Making Graphing::Color fully constexpr since it is a simple type that can easily be used in a constexpr context.  	gsfreema	null	null	null	null	null	null	
2020-01-31 18:45:50.0	2020-03-12 08:16:34.0	2020-11-09 20:07:47.0	closed	[by design, Area: User Experience]	22	1011	Alt-3 accelerator key broken	https://api.github.com/repos/microsoft/calculator/issues/1011	https://github.com/microsoft/calculator/issues/1011	<!--  Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.  -->    **Describe the bug**  <!-- A clear and concise description of what the bug is. -->  The keyboard accelerator for Programmer Mode of the app no longer functions correctly and instead shows a Graphing mode.    **Steps To Reproduce**  <!--  Steps to reproduce the behavior:  1. Go to '...'  2. Click on '....'  3. Scroll down to '....'  4. See error  -->  1. Open Calculator  2. Press Alt-3  3. Observe Programmer mode is NOT shown    **Expected behavior**  <!-- A clear and concise description of what you expected to happen. -->  I expect accelerator keys to not change and for Alt-3 to always show the Programmer Mode.    **Screenshots**  <!-- If applicable, add screenshots to help explain your problem. -->    <!--  Run the following commands in Powershell and copy/paste the output.  " - OS Build: $([Environment]::OSVersion.Version)"  " - Architecture: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Architecture)"  " - Application Version: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Version)"  " - Region: $((Get-Culture).Name)"  " - Dev Version Installed: $($null -ne (Get-AppxPackage -Name Microsoft.WindowsCalculator.Dev))"  -->    **Additional context**  <!-- Add any other context about the problem here. -->    **Requested Assignment**  <!--  Some people just want to report a bug and let someone else fix it.  Other people want to not only submit the bug report, but fix it as well.  Both scenarios are completely ok. We just want to know which one it is.  Please indicate which bucket you fall into by keeping one and removing the other.  -->  I'm just reporting this problem.  	patrick-compass	null	null	null	null	null	null	
2020-01-31 20:01:11.0	2020-02-07 23:12:33.0	2020-02-07 23:12:33.0	closed	[fixing approved issue]	2	1012	Update the CI build to only run p0 UI tests for PRs and all UI tests for rolling CI builds	https://api.github.com/repos/microsoft/calculator/issues/1012	https://github.com/microsoft/calculator/pull/1012	## Fixes #933.      ### Description of the changes:  - Updated the CI build yaml to conditionally run UI tests that are not P0  - Added a new UI tests template for the PR UI tests.    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Tested using a private pipeline to ensure the right tests were being picked up through private PR and rolling build.  -  -    	sanderl	null	null	null	null	null	null	
2020-01-31 21:37:18.0	2020-02-04 03:00:53.0	2020-12-02 18:00:47.0	closed	[Area: User Experience, duplicate]	2	1013	Programmer mode should have bitwise operations and bit toggling in main view	https://api.github.com/repos/microsoft/calculator/issues/1013	https://github.com/microsoft/calculator/issues/1013	Right now those buttons are in separate menus/screens. This is extremely hard to use. Imagine doing an accounting exam and the number keys are on the front of the calculator and the addition button is on the back of the calculator and you have to flip back and forth to do the most basic operation.     I think this used to be old design in Windows 7. What do other people think?	ironyman	null	null	null	null	null	null	
2020-01-31 23:28:16.0	2020-02-04 23:02:43.0	2020-02-04 23:02:43.0	closed	[graphing calculator]	0	1014	Allow rendering the graph on a background thread	https://api.github.com/repos/microsoft/calculator/issues/1014	https://github.com/microsoft/calculator/pull/1014	## Fixes #980.      ### Description of the changes:  - Move graph rendering to the background thread  - Allow variable values larger than the min/max to change the min/max instead of resetting  - Fix a bug where the equation box was no longer clearing bold/underline formatting    ### How changes were validated:  - Manual tests  -Render m*sin(x*m)+m and drag the variable slider. Notice that the graph renders while the slider moves without stuttering.    	joseartrivera	null	null	null	null	null	null	
2020-02-02 22:22:20.0	2020-02-02 22:26:08.0	2020-12-02 18:00:47.0	closed	[duplicate]	2	1015	2+2*2 =/= 8	https://api.github.com/repos/microsoft/calculator/issues/1015	https://github.com/microsoft/calculator/issues/1015	**Describe the bug**  No.    **Steps To Reproduce**  1. type 2 + 2 * 2  2. See 8    **Expected behavior**  6    **Screenshots**  ![obraz](https://user-images.githubusercontent.com/43583695/73616332-4e958980-4612-11ea-9574-ce4ca0dd2db9.png)    **Device and Application Information**   - OS Build: 10.0.18363.0   - Architecture: X64   - Application Version: 10.1812.10048.0   - Region: pl-PL   - Dev Version Installed: False    <!--  Run the following commands in Powershell and copy/paste the output.  " - OS Build: $([Environment]::OSVersion.Version)"  " - Architecture: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Architecture)"  " - Application Version: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Version)"  " - Region: $((Get-Culture).Name)"  " - Dev Version Installed: $($null -ne (Get-AppxPackage -Name Microsoft.WindowsCalculator.Dev))"  -->    **Additional context**  Just 2+2*2 = 8    **Requested Assignment**  <!--  Some people just want to report a bug and let someone else fix it.  Other people want to not only submit the bug report, but fix it as well.  Both scenarios are completely ok. We just want to know which one it is.  Please indicate which bucket you fall into by keeping one and removing the other.  -->  I'm just reporting this problem.  I don't want to fix it.  	IgorDrozniak	null	null	null	null	null	null	
2020-02-03 21:21:18.0	2020-02-03 23:22:35.0	2020-02-03 23:22:35.0	closed	[tooling, approved]	1	1016	Update build version to 2001	https://api.github.com/repos/microsoft/calculator/issues/1016	https://github.com/microsoft/calculator/pull/1016	Update build version to 2001	joseartrivera	null	null	null	null	null	null	
2020-02-04 04:37:14.0	2020-03-17 18:27:01.0	2020-12-02 18:00:46.0	closed	[Area: User Experience, fixed, Pri: 1]	1	1017	Graphing mode equation variables reset if you modify equation list	https://api.github.com/repos/microsoft/calculator/issues/1017	https://github.com/microsoft/calculator/issues/1017	**Describe the bug**  After entering an equation with variables, if you add/edit/remove an equation from the list, variable value + settings (min/max/step) reset.    **Expected behavior**  Any changes a user makes to variables should persist unless the variable is removed from use entirely.    **Screenshots**  ![S1FNtqGyZA](https://user-images.githubusercontent.com/1414423/73714157-e358bf80-46c4-11ea-9157-48dd9e4f1e51.gif)	grochocki	null	null	null	null	null	null	
2020-02-04 04:41:57.0	2020-04-09 23:58:20.0	2020-12-02 18:00:45.0	closed	[Bug, Pri: 3, Area: User Experience, fixed]	1	1018	Graph window options x/y min/max textbox styling does not match variable min/max styling	https://api.github.com/repos/microsoft/calculator/issues/1018	https://github.com/microsoft/calculator/issues/1018	**Describe the bug**  Graph window options x/y min/max textbox styling does not match variable min/max styling.    **Expected behavior**  Styling should be consistent with variable editing. As we add more graph options, we will also benefit from the reduced visual footprint of this styling.  ![image](https://user-images.githubusercontent.com/1414423/73714253-2f0b6900-46c5-11ea-9934-ad95cf58cc84.png)    **Screenshots**  ![image](https://user-images.githubusercontent.com/1414423/73714227-2155e380-46c5-11ea-9c14-3f965cd3149f.png)	grochocki	null	null	null	null	null	null	
2020-02-04 04:44:58.0	2020-02-27 00:21:39.0	2020-12-02 18:00:44.0	closed	[Area: User Experience, fixed, Pri: 2]	1	1019	Graph options error state should not prevent flyout closure	https://api.github.com/repos/microsoft/calculator/issues/1019	https://github.com/microsoft/calculator/issues/1019	**Describe the bug**  When there is an error in graph options, the flyout is not light-dismissible.    **Expected behavior**  Flyout should always be dismissible. If in error, we should revert to previous good values (this is the behavior today, if you click outside of Calculator window).    **Screenshots**  ![image](https://user-images.githubusercontent.com/1414423/73714522-e7391180-46c5-11ea-98a1-b0aa0342fb09.png)  	grochocki	null	null	null	null	null	null	
2020-02-04 15:28:26.0	2020-02-04 20:39:56.0	2020-12-02 18:00:43.0	closed	[duplicate]	3	1020	Graph shows a point that isn't part of a function	https://api.github.com/repos/microsoft/calculator/issues/1020	https://github.com/microsoft/calculator/issues/1020	When we try to represent a function that is missing a point, the calculator create the line like it is inside.    Steps to reproduce the behavior:  1. Select Graphing Mode  2. Add this function ![Function](https://latex.codecogs.com/gif.latex?\inline&space;y=\frac{x^{2}-2x}{x-2}) Sorry but quality, you have it down  3. If you see the printed line, you'll see a line, but in this equation x=2 isn't inside the function, but the printed lines shows it.    **Expected behavior**  Be able to know when a point is outside of a function    **Screenshots**  ![Graphing Mode ()](https://user-images.githubusercontent.com/34861788/73757877-291b9380-476a-11ea-97f7-691b9e0dcccb.png)    **Device and Application Information**   - OS Build: Windows 19041.21   - Architecture: x64   - Application Version: 10.1912.4.0   - Region: es-ES   - Dev Version Installed: False      I'm just reporting this problem.  Maybey one day, but know I don't know how to fix it.  	Acelator	null	null	null	null	null	null	
2020-02-04 18:43:12.0	2020-02-04 21:43:02.0	2020-05-26 21:47:12.0	closed	[fixing approved issue, graphing calculator]	0	1021	Enables analysis on functions with variables	https://api.github.com/repos/microsoft/calculator/issues/1021	https://github.com/microsoft/calculator/pull/1021	## Fixes #990.      ### Description of the changes:  - Set the graph option to allow analysis for functions with variables to true      ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - manually     	sanderl	null	null	null	null	null	null	
2020-02-06 06:30:56.0	2020-02-26 00:34:19.0	2020-02-26 03:46:02.0	closed	[Area: Reliability, fixing approved issue]	3	1022	Make unit converters stil working when users opened 'Currency' while offline	https://api.github.com/repos/microsoft/calculator/issues/1022	https://github.com/microsoft/calculator/pull/1022	## Fixes #973      ### Description of the changes:  - Modify how `UnitConverter.xaml` manages its visual state  - Modify how `UnitConverterViewModel` manages `IsCurrencyCurrentCategory` to be sure to always match be up to date  - Fix crashes related to SelectedUnitTemplate when no units are selected.    ### How changes were validated:  - manually    	rudyhuyn	null	null	null	null	null	null	
2020-02-10 14:14:49.0	2020-02-11 23:01:37.0	2020-02-14 18:40:11.0	closed	[codebase quality]	1	1023	Make it clear to both compilers and programmers the end result of ResolveRuntimeWindowService is to return a service object	https://api.github.com/repos/microsoft/calculator/issues/1023	https://github.com/microsoft/calculator/pull/1023	## Fixes #.      ### Description of the changes:  - Stylistic change to match the fact the other functions have throw in the if block, not outside of it.    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Manual, automatic    	ghost	null	null	null	null	null	null	
2020-02-10 14:59:43.0	2020-02-11 20:43:45.0	2020-02-11 20:43:52.0	closed	[duplicate]	1	1024	Make it clear the point of the ResolveRuntimeWindowService is to return a service by returning at the end.	https://api.github.com/repos/microsoft/calculator/issues/1024	https://github.com/microsoft/calculator/pull/1024	  ## Fixes #.  Unit test errors    ### Description of the changes:  - Stylistic changes    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Manual  - Automatic    	ghost	null	null	null	null	null	null	
2020-02-11 14:45:18.0	2020-04-10 09:27:24.0	2020-12-02 18:00:42.0	closed	[Bug, Area: Reliability, won't fix, Pri: 2]	2	1025	AltGr + E causes unhandled exception 0x40080201	https://api.github.com/repos/microsoft/calculator/issues/1025	https://github.com/microsoft/calculator/issues/1025	Calculator crashes when using the [`AltGr` key](https://en.wikipedia.org/wiki/AltGr_key) in combination with the `E` key.    **Steps To Reproduce**  1. Open calculator in any mode (for example `Standard`).  2. Type nothing or anything you want.  3. Press at least once or hold the `AltGr` key on a physical or virtual keyboard.  4. Type nothing or anything you want, except the `E` key.  5. Press the `E` key.  6. Calculator terminates with unhandled exception code `0x40080201`.    Pseudo-regex for the key presses after opening calc: `[^AltGr]* AltGr+ [^E]* E`.    **Device and Application Information**   - OS Build: 10.0.16299.0   - Architecture: x64   - Application Version: 10.1706.2406.0   - Region: de-DE   - Dev Version Installed: False    **Additional context**  - Stacktrace:      ```      KERNELBASE.dll!RaiseException+0x68      combase.dll!ObjectStublessClient32+0x5b443      combase.dll!RoOriginateError+0x51      vccorlib140_app.DLL!Platform::Details::EventSourceRemove+0x1239      vccorlib140_app.DLL!__abi_WinRTraiseInvalidCastException+0x17      vccorlib140_app.DLL!Platform::String::<Dispose>+0x1e8      vccorlib140_app.DLL!Platform::Details::ResolveWeakReference+0x98      Calculator.exe+0x3bd4e      Calculator.exe+0x42b61      Windows.UI.dll!Ordinal1689+0x6e21      Windows.UI.dll!Ordinal1689+0x489e      windows.ui.core.textinput.dll!Ordinal1501+0x31d0      windows.ui.core.textinput.dll!Ordinal1501+0x2a2b      TextInputFramework.dll!TextInputHostSiteCreate+0x5dc1      TextInputFramework.dll!TextInputHostSiteCreate+0x82b0      TextInputFramework.dll!TextInputHostSiteCreate+0x5681      msctf.dll+0x3131      TextInputFramework.dll+0x18dc      TextInputFramework.dll!TextInputHostCreateEx+0x1499f      TextInputFramework.dll!TextInputHostCreateEx+0x14847      CoreMessaging.dll!CoreUICreateEx+0x2a8e      CoreMessaging.dll!CoreUICallReceive+0x499      CoreMessaging.dll!CoreUICreateEx+0x12eef      CoreMessaging.dll!CoreUICreateEx+0x1321a      CoreMessaging.dll!CoreUICreateEx+0x1077b      CoreMessaging.dll!CoreUICreateEx+0xbcc      CoreMessaging.dll!CoreUICallReceive+0xca99      CoreMessaging.dll!CoreUICallReceive+0xcc88      CoreMessaging.dll!CoreUICallReceive+0xd186      CoreMessaging.dll!CoreUICallReceive+0xd4d4      CoreMessaging.dll!CoreUICreateEx+0x10a6a      CoreMessaging.dll!CoreUICreateEx+0xffdc      CoreMessaging.dll!CoreUICreateEx+0x7fbd      CoreMessaging.dll!CoreUICreateEx+0x6527      CoreMessaging.dll!CoreUICreateEx+0x2d39      CoreMessaging.dll!CoreUICreateEx+0x2b19      user32.dll!CallWindowProcW+0x4dd      user32.dll!CallWindowProcW+0x1cc      user32.dll!GetTopWindow+0x153      ntdll.dll!KiUserCallbackDispatcher+0x24      win32u.dll!NtUserPeekMessage+0x14      user32.dll!PeekMessageW+0x88      Windows.UI.dll!Ordinal1500+0xd9f6      Windows.UI.dll!Ordinal1500+0xbbee      Windows.UI.dll!Ordinal1500+0xd89b      Windows.UI.Xaml.dll!DllGetActivationFactory+0x1856bc      Windows.UI.Xaml.dll!DllGetActivationFactory+0x185660      twinapi.appcore.dll!Ordinal7+0x306a      twinapi.appcore.dll!DllGetActivationFactory+0x146c      shcore.dll!Ordinal247+0x1b5      KERNEL32.DLL!BaseThreadInitThunk+0x14      ntdll.dll!RtlUserThreadStart+0x21      ```    **Requested Assignment**    I'm just reporting this problem. I don't want to fix it.	MauriceKayser	null	null	null	null	null	null	
2020-02-11 21:06:12.0	2020-02-11 22:03:43.0	2020-02-11 22:03:44.0	closed	[]	0	1026	Fix ARM64 build	https://api.github.com/repos/microsoft/calculator/issues/1026	https://github.com/microsoft/calculator/pull/1026	Fixes the ARM64 build by using consistent build flags across all architectures.	mcooley	null	null	null	null	null	null	
2020-02-12 02:40:14.0	2020-03-24 18:40:00.0	2020-03-24 18:40:01.0	closed	[graphing calculator]	1	1027	Add dual-screen support to Calculator	https://api.github.com/repos/microsoft/calculator/issues/1027	https://github.com/microsoft/calculator/pull/1027	## Fixes #1029    Support Dual-landscape and Dual-portrait modes.    ![image](https://user-images.githubusercontent.com/1226538/74298131-b5473100-4cfd-11ea-9046-4cad6d901c54.png)  ![image](https://user-images.githubusercontent.com/1226538/74298184-d7d94a00-4cfd-11ea-902a-2d27f46fdb1a.png)  ![image](https://user-images.githubusercontent.com/1226538/76372388-7e633b80-62fa-11ea-8d04-ab9128152540.png)  ![image](https://user-images.githubusercontent.com/1226538/76372477-c08c7d00-62fa-11ea-9ddb-893cf633dfd1.png)      ### Description of the changes:  - Add new StateTrigger detecting the different view modes  - Add a fork of TwoPaneView in C++CX for 2 reasons:     - The fix for C++ apps (crash when navigating) isn't available for the moment     - Add `Pane1MinLength`, `Pane1MaxLength`, `Pane2MinLength`, `Pane2MaxLength` properties  - Merge Visual State Group of Unit Converter, causing some issues due to conflicts  - Add `DeviceFamilyHelper`    ### Other changes  Visual states of `Calculator.xaml` had some collisions, the states related to AOT (https://github.com/microsoft/calculator/blob/master/src/Calculator/Views/Calculator.xaml#L521) and the states related to CalculationResult (https://github.com/microsoft/calculator/blob/master/src/Calculator/Views/Calculator.xaml#L544) were both triggered by the same type of trigger (window resizing), without checking if the app was AOT or not, and were modifying the same properties which caused some layouts issues.    In order to solve this problem, which also affects dual screens, we have replaced the StateTriggers used in AOT visual states with `ApplicationViewModeTrigger` in order to activate them only when the application is actually AOT.    ### How changes were validated:  - manually with 10X 10.0.19563  	rudyhuyn	null	null	null	null	null	null	
2020-02-12 19:53:54.0	2020-02-12 22:35:29.0	2020-02-12 22:35:29.0	closed	[tooling]	0	1028	Rename icons to new format and update internals package	https://api.github.com/repos/microsoft/calculator/issues/1028	https://github.com/microsoft/calculator/pull/1028	# Description of the changes:  - Renames icons to new format  - Update internals package  - Update vcxproj to add additional assets during store build    ### How changes were validated:  - Manual testing    	joseartrivera	null	null	null	null	null	null	
2020-02-12 23:29:20.0	2020-03-24 18:40:00.0	2020-12-02 18:00:41.0	closed	[Enhancement, Pri: 2, approved]	3	1029	Calculator should support dual-portrait and dual-landscape on 10X	https://api.github.com/repos/microsoft/calculator/issues/1029	https://github.com/microsoft/calculator/issues/1029	**Problem Statement**  The current graphing calculator UI isn't optimize for Windows 10X dual screens.    **Proposal**  Modify the layout to take advantage of dual-portrait and dual-landscape postures    ![Inkedpostures-overview_LI](https://user-images.githubusercontent.com/1226538/74387050-6c9a8100-4dac-11ea-8a6d-1244b7fe2b49.jpg)    **Requested Assignment**  If possible, I would like to implement this.  	rudyhuyn	null	null	null	null	null	null	
2020-02-13 04:51:52.0	2020-02-13 19:57:08.0	2020-12-02 18:00:40.0	closed	[Enhancement]	2	1030	Roadmap still says 2019	https://api.github.com/repos/microsoft/calculator/issues/1030	https://github.com/microsoft/calculator/issues/1030	<!--  See https://github.com/Microsoft/calculator/blob/master/docs/NewFeatureProcess.md for suggestions on how to write a good feature pitch. Just want to submit an idea quickly? Try Feedback Hub instead: https://insider.windows.com/en-us/fb/?contextid=130  -->    **Problem Statement**  <!--  What problem are we trying to solve? Who’s the target audience? Is there a customer need or pain point we need to remedy? Is there a business goal or metric we are trying to improve? Do we have a hypothesis we want to prove or disprove?  -->  Roadmap still says 2019  **Evidence or User Insights**  <!--  Why should we do this? Potential sources of data: Feedback Hub, other GitHub issues, other anecdotes from listening to customers in person or online, request from another team, telemetry data, user research, market or competitive research  -->  https://github.com/microsoft/calculator/blob/master/docs/Roadmap.md  **Proposal**  <!--  How will the solution/feature help us solve the problem? How will it meet the target audience’s needs? If there are business goals or metrics, how does this improve them?  -->  Change the year. If the rest of the content needs to be updated update that also.    **Requested Assignment**  <!--  Some people just want to suggest a feature and let someone else implement it.  Other people want to not only suggest a feature, but implement it as well.  Both scenarios are completely ok. We just want to know which one it is.  We are likely to prioritize the review of feature requests if they already have someone who can implement them.  Please indicate which bucket you fall into by keeping one and removing the other.  -->  Wouldn't mind changing the date just don't know if the rest of the info is up to date.  	hmumm	null	null	null	null	null	null	
2020-02-13 19:51:11.0	2020-02-28 17:34:17.0	2020-12-02 18:00:39.0	closed	[Area: User Experience, fixed, Pri: 1]	1	1031	Equation analysis doesn't update when variables change	https://api.github.com/repos/microsoft/calculator/issues/1031	https://github.com/microsoft/calculator/issues/1031	**Describe the bug**  Equation analysis doesn't update when variables change. Need to update the variables on the graph when doing analysis.    **Steps To Reproduce**  1. Graph y=mx+b  2. Change b=2  3. Click analysis equation    **Expected behavior**  y-intercept should be 2    **Screenshots**  ![image](https://user-images.githubusercontent.com/6334170/74472524-f1da7000-4e56-11ea-8970-2e5925f47d75.png)      	joseartrivera	null	null	null	null	null	null	
2020-02-13 21:49:06.0	2020-03-07 00:25:51.0	2020-03-07 00:25:51.0	closed	[graphing calculator]	1	1032	Add automation name to graph control	https://api.github.com/repos/microsoft/calculator/issues/1032	https://github.com/microsoft/calculator/pull/1032	## Fixes #954 and Fixes #953      ### Description of the changes:  - Add automation name to graph control  - Add announcement when graph control view is changed    ### How changes were validated:  - Manual testing    	joseartrivera	null	null	null	null	null	null	
2020-02-13 22:05:28.0	2020-02-14 23:01:44.0	2020-12-02 18:00:37.0	closed	[fixed]	1	1033	Tabbing through Key Graph Features with Narrator on causes crash	https://api.github.com/repos/microsoft/calculator/issues/1033	https://github.com/microsoft/calculator/issues/1033	**Describe the bug**  Tabbing through Key Graph Features with Narrator on causes crash    **Steps To Reproduce**  1. Graph an equation  2. Open narrator  3. Click analysis  4. Tab through the analysis screen    **Expected behavior**  Doesn't crash  	joseartrivera	null	null	null	null	null	null	
2020-02-13 22:06:57.0	2020-03-11 16:41:53.0	2020-12-02 18:00:37.0	closed	[Area: Reliability, fixed, Pri: 1]	2	1034	Multi instance graphing calculator causes crash	https://api.github.com/repos/microsoft/calculator/issues/1034	https://github.com/microsoft/calculator/issues/1034	**Describe the bug**  Open multiple calculators and go to Graphing Mode for all open calculators. All calculators crash.    **Steps To Reproduce**  Open multiple calculators  Go to Graphing Mode for all open calculators    **Expected behavior**  Shouldn't crash  	joseartrivera	null	null	null	null	null	null	
2020-02-14 10:33:46.0	null	2021-09-30 09:05:40.0	open	[Enhancement, Pri: 2, needs more info]	5	1035	Feature request: adding grade (slope) percentage to angle conversion	https://api.github.com/repos/microsoft/calculator/issues/1035	https://github.com/microsoft/calculator/issues/1035	<!--  See https://github.com/Microsoft/calculator/blob/master/docs/NewFeatureProcess.md for suggestions on how to write a good feature pitch. Just want to submit an idea quickly? Try Feedback Hub instead: https://insider.windows.com/en-us/fb/?contextid=130  -->    **Problem Statement**  <!--  What problem are we trying to solve? Who’s the target audience? Is there a customer need or pain point we need to remedy? Is there a business goal or metric we are trying to improve? Do we have a hypothesis we want to prove or disprove?  -->  After noticing the new features of the Calculator, I saw there are many conversion options.  The angular one got my attention, which now converts between degrees, radians and gradians.  There is another unit that is often used for angles, which is the grade (or slope).  Eventhough this is not used for all angles, it is quite common in usage and people often misinterpret the meaning. Was it 18 degrees or percent?  In addition to the earlier ideas in #243 and #515, this should in my eyes be considered as well.  While #243 will probably be absorbed in #515, the solution to this proposed feature request is much simpler and can be done swiftly without having to wait for the implementation of #515.    **Evidence or User Insights**  <!--  Why should we do this? Potential sources of data: Feedback Hub, other GitHub issues, other anecdotes from listening to customers in person or online, request from another team, telemetry data, user research, market or competitive research  -->  Yes, I dare use Wikipedia as a source:     >  In Europe and the U.S. percentage "grade" is the most commonly used unit for describing slopes.  [Source](https://en.wikipedia.org/wiki/Grade_(slope)#Nomenclature)    Of course, the unit is well known (and even used when describing linear graphs).    **Proposal**  <!--  How will the solution/feature help us solve the problem? How will it meet the target audience’s needs? If there are business goals or metrics, how does this improve them?  -->  By adding Grade (or Slope) in percent to the options for angles, it is easier to convert angles from/to grades  People can either get easier understanding of the meaning or simply convert between the units without a problem!    **Goals**  <!--  What you want to accomplish with this feature. Typical examples include  "User Can *perform some task*"  -->  User can easily and without errors convert between grade (slope) in percent and degree, radian or gradian.    **Non-Goals**  <!--  Things we are explicitly not doing or supporting or that are out of scope, including reasons why.  -->  - Including many forms of grade (percent, per mille, ratio).   As shown in the Evidence, percentage is most used in both Europe and the U.S.A.  - Including other units that are used infrequently or ill-defined, such as military mils.    **Low-Fidelity Concept**  <!--  Show as much of the experience as needed to explain the idea. This can be as simple as a napkin drawing but can also be a code prototype, or a design comp. Keep it simple at this stage, as it can be refined later during the pre-production stage.  -->  Conversion is simple and easy.  ![Example of a graphical conversion between angle and slope](https://upload.wikimedia.org/wikipedia/commons/thumb/d/dc/Grade_dimension.svg/1920px-Grade_dimension.svg.png)  d = run  Δh = rise  l = slope length  α = angle of inclination    Given this example , there is an easy way to determine the grade percentage  (Δh/d * 100)  There are also several ways to determine the angle (α), by using the cosine, sine or tangent.  The way to convert the inclination angle (α) to grade percentage would be to take the tangent of the angle (α). and multiplying with 100  For an angle greater than 90 degrees, the slope is ill-formed, but it could still be defined if the angle is taken modulo 90.     Seeing as the implementation is easily done, there is no need to wait for implementation of #515 for adding this conversion    _In short, the conversion is easily implementable by taking the tangent of the input and multiplying by 100, or dividing by 100 and then taking the arctangent. Ofcourse, an exception is 90 degrees, where the slope grade is infinity, but that can easily be filtered._    **Requested Assignment**  <!--  Some people just want to suggest a feature and let someone else implement it.  Other people want to not only suggest a feature, but implement it as well.  Both scenarios are completely ok. We just want to know which one it is.  We are likely to prioritize the review of feature requests if they already have someone who can implement them.  Please indicate which bucket you fall into by keeping one and removing the other.  -->  If possible, I would like to implement this.  	CrustaShrimp	null	null	null	null	null	null	
2020-02-14 19:09:20.0	2020-02-14 20:52:59.0	2020-02-24 14:37:50.0	closed	[codebase quality]	0	1036	No need to make an Visibility variable if it is either one of two possibilities	https://api.github.com/repos/microsoft/calculator/issues/1036	https://github.com/microsoft/calculator/pull/1036	Visibility variable holding collapsed but then turning into visible is unnecessary when one can return Visibility::Collapsed or Visibility::Visible.    ## Fixes #.      ### Description of the changes:  - Removed Visibility local variable  - Replaced with returning Visibility::Collasped or Visibility::Visible    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Manual  - Automated    	ghost	null	null	null	null	null	null	
2020-02-14 20:31:02.0	2020-02-14 23:01:44.0	2020-02-14 23:01:44.0	closed	[]	0	1037	Fix crash when tabbing through KGF	https://api.github.com/repos/microsoft/calculator/issues/1037	https://github.com/microsoft/calculator/pull/1037	## Fixes #1033      ### Description of the changes:  - Check if textbox is read only before trying to submit an equation on focus lost    ### How changes were validated:  - Manual test    	joseartrivera	null	null	null	null	null	null	
2020-02-14 22:34:26.0	2020-02-14 22:56:54.0	2020-02-14 22:56:55.0	closed	[tooling]	0	1038	Remove unneeded assets	https://api.github.com/repos/microsoft/calculator/issues/1038	https://github.com/microsoft/calculator/pull/1038	### Description of the changes:  - Remove assets that are no longer needed    ### How changes were validated:  - Manual    	joseartrivera	null	null	null	null	null	null	
2020-02-14 23:49:32.0	2020-02-24 18:27:23.0	2020-02-24 18:27:23.0	closed	[]	0	1039	Include image in graph share package	https://api.github.com/repos/microsoft/calculator/issues/1039	https://github.com/microsoft/calculator/pull/1039	## Fixes #1008      ### Description of the changes:  - Include image in graph share package    ### How changes were validated:  - Manual testing    	joseartrivera	null	null	null	null	null	null	
2020-02-15 00:31:29.0	2020-03-12 21:05:48.0	2020-12-02 18:00:36.0	closed	[Area: Diagnostic Data, fixed]	1	1040	Refreshing Diagnostic Data to Include Graphing Mode	https://api.github.com/repos/microsoft/calculator/issues/1040	https://github.com/microsoft/calculator/issues/1040	Updated diagnostic data to account for the new graphing mode.	MicrosoftIssueBot	null	null	null	null	null	null	
2020-02-18 18:32:21.0	2020-03-12 21:05:48.0	2020-05-26 21:46:54.0	closed	[graphing calculator]	2	1041	Graphing Calculator Diagnostics Instrumentation	https://api.github.com/repos/microsoft/calculator/issues/1041	https://github.com/microsoft/calculator/pull/1041	## Fixes #1040.      ### Description of the changes:  - Add diagnostic data for graphing mode    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Manually, ensured diagnostic data is uploaded as expected    	sanderl	null	null	null	null	null	null	
2020-02-18 22:24:26.0	2020-02-26 21:28:30.0	2020-02-26 21:28:31.0	closed	[graphing calculator]	0	1042	Delay loading some unused UI elements	https://api.github.com/repos/microsoft/calculator/issues/1042	https://github.com/microsoft/calculator/pull/1042	### Description of the changes:  - Delay loading some unused UI elements until they are needed during user interaction  - Remove some unused x:Name    ### How changes were validated:  - Manually tested  - Used the [App Startup Time Test Tool](https://gist.github.com/mcooley/86450e22ee0a8ffb6430ccec74317234) by @mcooley to measure a very slight <4ms increase in launch perf on my dev machine    	joseartrivera	null	null	null	null	null	null	
2020-02-19 03:13:03.0	2020-03-13 06:31:45.0	2020-12-02 18:00:35.0	closed	[Enhancement, pitch declined]	5	1043	How to make Calc a persistent screensaver?	https://api.github.com/repos/microsoft/calculator/issues/1043	https://github.com/microsoft/calculator/issues/1043	Perhaps this is gilding the lily.  But if you process the start arguments, and if you respond in your keyboard handler appropriately, there is no reason I can see that Calc could not be made into a Screensaver. Which you could use immediately upon encounter, not needing to launch anything.  Examples of screensavers I have seen do not comport with the code as is.  One needs an Escape (or combo) key to close the screensaver, but otherwise, why would this not work?There are multiple issues with Calc as screensaver, but solve them one at a time.	craigsc42	null	null	null	null	null	null	
2020-02-23 16:17:50.0	2020-02-23 16:24:50.0	2020-12-02 18:00:34.0	closed	[won't fix]	3	1044	The worst calculating calculator (sorry)	https://api.github.com/repos/microsoft/calculator/issues/1044	https://github.com/microsoft/calculator/issues/1044	**Device and Application Information**   - OS Build: 18363   - Architecture:  X64   - Application Version: 10.1910.0.0   - Region: de-DE   - Dev Version Installed: False    What are you doing with my beloved calculator?!  ![image](https://user-images.githubusercontent.com/260343/75115136-3981a880-565c-11ea-9da8-05a63e1c48d6.png)    The Result is 1.583.103.599 NOT 37.996.473.576    In Calculator: 10 - 5 * 2 = 10  Correct result is 0    ![image](https://user-images.githubusercontent.com/260343/75115680-291ffc80-5661-11ea-81fa-27d7a1933d26.png)    I'm just reporting this problem.  I don't want to fix it.    EDIT: With mode "Wissenschaftlich" (not standard) its working  ![image](https://user-images.githubusercontent.com/260343/75115675-186f8680-5661-11ea-99c4-2d2680520264.png)    	Daijobou	null	null	null	null	null	null	
2020-02-24 02:02:34.0	2020-03-03 18:53:28.0	2020-12-02 18:00:32.0	closed	[by design]	3	1045	1 divided by 6 will result in 0.1666666666666667 (what's with the 7)	https://api.github.com/repos/microsoft/calculator/issues/1045	https://github.com/microsoft/calculator/issues/1045	I calculated it on paper and I got 0.16666666666... (I also checked online) but both results didn't have the 7 at the end. It was only until I used the Windows calculator that this bug occurred.  ![calcshot](https://user-images.githubusercontent.com/53895123/75124827-c6cd0780-5705-11ea-8581-9e6c32dc20e8.jpg)  	caelwithcats	null	null	null	null	null	null	
2020-02-24 14:47:03.0	2020-02-24 19:22:06.0	2020-02-24 19:22:06.0	closed	[]	1	1046	No need for else after break	https://api.github.com/repos/microsoft/calculator/issues/1046	https://github.com/microsoft/calculator/pull/1046	## Fixes #.      ### Description of the changes:  - There is no need to have an else statement after an if statement that only contains a break command.    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Manual  - Automated	ghost	null	null	null	null	null	null	
2020-02-25 00:17:04.0	2020-02-27 19:54:30.0	2020-02-27 19:54:30.0	closed	[graphing calculator]	0	1047	Fix some accessibility bugs	https://api.github.com/repos/microsoft/calculator/issues/1047	https://github.com/microsoft/calculator/pull/1047	## Fixes #1000, Fixes #949      ### Description of the changes:  - Updates resw files to fix linked bugs    ### How changes were validated:  - Manual tests    	joseartrivera	null	null	null	null	null	null	
2020-02-25 06:39:24.0	null	2021-09-30 09:05:43.0	open	[Enhancement, Pri: 2, needs spec]	4	1048	Allow for defining new functions in terms of previously defined functions in graphing mode	https://api.github.com/repos/microsoft/calculator/issues/1048	https://github.com/microsoft/calculator/issues/1048	<!--  See https://github.com/Microsoft/calculator/blob/master/docs/NewFeatureProcess.md for suggestions on how to write a good feature pitch. Just want to submit an idea quickly? Try Feedback Hub instead: https://insider.windows.com/en-us/fb/?contextid=130  -->    **Problem Statement**  <!--  What problem are we trying to solve? Who’s the target audience? Is there a customer need or pain point we need to remedy? Is there a business goal or metric we are trying to improve? Do we have a hypothesis we want to prove or disprove?  -->  A major use in defining functions is for using them to define further functions. This would be useful for visualising, explaining and manipulating composite functions, a major concept in mathematics that spans all disciplines, and is often a barrier for students. Currently, we cannot refer to previously defined functions when defining new ones in graphing mode; the function names are treated as constants.    **Evidence or User Insights**  <!--  Why should we do this? Potential sources of data: Feedback Hub, other GitHub issues, other anecdotes from listening to customers in person or online, request from another team, telemetry data, user research, market or competitive research  -->  Implementing this would enable students and users of the graphing calculator to define functions in terms of other existing functions. This is presently a feature on most, if not all, competitor apps, such as Desmos, GeoGebra and handheld graphing calculators, and is an important way to quickly define families of functions and view them simultaneously.    Currently, if we define the function with rule <img src="https://render.githubusercontent.com/render/math?math=f_1(x) = \sin(x)"> and attempt to define <img src="https://render.githubusercontent.com/render/math?math=f_2(x) = 3f_1(e^x)">,  we get a slider for "f_1" appearing, set to 1, which means it is treated as a constant, and what is displayed for <img src="https://render.githubusercontent.com/render/math?math=f_2"> is really the graph of <img src="https://render.githubusercontent.com/render/math?math=f_2(x) = 3f_1 \times e^x = 3e^x">, where <img src="https://render.githubusercontent.com/render/math?math=f_1 = 1">. This would not be expected behaviour. See this for current behaviour:    ![image](https://user-images.githubusercontent.com/49895442/75221557-3d493280-57f6-11ea-87b0-f9124be5b642.png)    **Proposal**  <!--  How will the solution/feature help us solve the problem? How will it meet the target audience’s needs? If there are business goals or metrics, how does this improve them?  -->  Say we have defined, as above, the function with rule <img src="https://render.githubusercontent.com/render/math?math=f_1(x) = \sin(x)">. Then if we define <img src="https://render.githubusercontent.com/render/math?math=f_2(x) = 3f_1(e^x)">, the calculator realises that <img src="https://render.githubusercontent.com/render/math?math=3f_1(e^x)"> refers to "3 times <img src="https://render.githubusercontent.com/render/math?math=f_1"> composed with the exponential function" is the intended interpretation.    Then the result that is graphed is that of <img src="https://render.githubusercontent.com/render/math?math=f_2(x) = 3f_1(e^x) = 3\sin(e^x)">, as one would expect.    To help achieve this, it would also be good to allow for functions to be named something other than just <img src="https://render.githubusercontent.com/render/math?math=f_k"> for positive integers k; for instance, the letters f, g, h, p, q, r etc. could be interpreted as function names in the right context, where they haven't been previously assigned as a constant.    Functions could also be renamed by clicking on the function name after entry. (Another wish is that you would be able to save/share a graphing screen for later use to an editable file, but that's for another suggestion.)    **Goals**  <!--  What you want to accomplish with this feature. Typical examples include  "User Can *perform some task*"  -->  * The user should be able to define new functions in terms of existing functions, and they should be treated as function compositions, as expected.  * These function names should be treated as such, and not as constants when used in defining new functions. However, existing/new constants should still work when defining functions in this new way, and graphs should update as required.  * Allow for usage of different letters for function names, so that it is easier to refer to previously defined functions.  * (Eventually, for better sharing capabilities, it should be possible to export a graphing screen to a format that can later be edited again in the Calculator app, so that complicated graph visualisations can be retained, interacted with and shared.)    **Low-Fidelity Concept**  <!--  Show as much of the experience as needed to explain the idea. This can be as simple as a napkin drawing but can also be a code prototype, or a design comp. Keep it simple at this stage, as it can be refined later during the pre-production stage.  -->  See the Desmos implementation:    ![image](https://user-images.githubusercontent.com/49895442/75220779-5a7d0180-57f4-11ea-8eef-de972e7cdca5.png)    Of course, the existing Calculator UI would be retained, but with the graphing output as in the screenshot. This is a mock-up in the Calculator app, but with the desired output of <img src="https://render.githubusercontent.com/render/math?math=f_2"> defined manually in <img src="https://render.githubusercontent.com/render/math?math=f_3">:    ![image](https://user-images.githubusercontent.com/49895442/75221618-610c7880-57f6-11ea-9221-7a3e6e1fe73e.png)    **Requested Assignment**  <!--  Some people just want to suggest a feature and let someone else implement it.  Other people want to not only suggest a feature, but implement it as well.  Both scenarios are completely ok. We just want to know which one it is.  We are likely to prioritize the review of feature requests if they already have someone who can implement them.  Please indicate which bucket you fall into by keeping one and removing the other.  -->  I'm just suggesting this idea.  I don't want to implement it.  	SubjunctiveQuaver	null	null	null	null	null	null	
2020-02-25 18:58:27.0	2020-02-27 00:21:39.0	2020-02-27 00:21:39.0	closed	[graphing calculator]	0	1049	Fix usability issues with settings flyout	https://api.github.com/repos/microsoft/calculator/issues/1049	https://github.com/microsoft/calculator/pull/1049	## Fixes #1019, Fixes #992      ### Description of the changes:  - Set ForceProportionalAxes to false  - Remove not being able to close flyout when there is an error    ### How changes were validated:  - Manual tests    	joseartrivera	null	null	null	null	null	null	
2020-02-25 20:14:38.0	2020-02-28 19:01:57.0	2020-12-02 18:00:32.0	closed	[Bug, Area: User Experience, fixed, Pri: 1]	4	1050	Currency converter broken/doesn't update rates	https://api.github.com/repos/microsoft/calculator/issues/1050	https://github.com/microsoft/calculator/issues/1050	![image](https://user-images.githubusercontent.com/49873649/75283783-887a3a00-5824-11ea-92b8-b8923c12079b.png)  	stockfx0	null	null	null	null	null	null	
2020-02-26 23:02:49.0	2020-03-05 00:25:51.0	2020-03-05 00:25:51.0	closed	[graphing calculator]	0	1051	Allow copying graph as image from context menu	https://api.github.com/repos/microsoft/calculator/issues/1051	https://github.com/microsoft/calculator/pull/1051	## Fixes #1007, Fixes #996      ### Description of the changes:  - Allows copying the graph as an image from the context menu  - Update some strings per #996    ### How changes were validated:  - Manual tests    	joseartrivera	null	null	null	null	null	null	
2020-02-26 23:46:19.0	2020-03-04 23:15:19.0	2020-12-02 18:00:31.0	closed	[Bug, Area: World-Readiness, fixed, Pri: 1]	1	1052	Graphing mode needs to support commas as decimals for different locales	https://api.github.com/repos/microsoft/calculator/issues/1052	https://github.com/microsoft/calculator/issues/1052	**Describe the bug**  Graphing mode needs to be able to use commas as decimals in locales where that is appropriate	joseartrivera	null	null	null	null	null	null	
2020-02-26 23:48:02.0	2020-04-03 18:00:15.0	2020-12-02 18:00:29.0	closed	[by design, Bug, Area: User Experience, Pri: 2]	2	1053	On screen keyboard covers graph mode keyboard	https://api.github.com/repos/microsoft/calculator/issues/1053	https://github.com/microsoft/calculator/issues/1053	**Describe the bug**  When on touch screen the on screen keyboard covers the calculator keyboard. We should not show the on screen keyboard and ensure that all actions can be performed by our keyboard. Currently the biggest thing missing from the calculator keyboard is the ability to insert variables  **Steps To Reproduce**  Steps to reproduce the behavior:  1. Go to calculator on a touch screen device  2. Tap into equation box  3. Notice on screen keyboard  	joseartrivera	null	null	null	null	null	null	
2020-02-27 18:51:04.0	2020-03-10 19:45:36.0	2020-03-10 19:45:37.0	closed	[graphing calculator]	0	1054	Check for ctrl when navigating to handle AltGr	https://api.github.com/repos/microsoft/calculator/issues/1054	https://github.com/microsoft/calculator/pull/1054	## Fixes #1009 .    Detect Ctrl when handling accelerator shortcuts to avoid Alt Gr triggering navigation  ### Description of the changes:  - Checks for ctlr being pressed when handling nav bar shortcut    ### How changes were validated:  manually  	EriWong	null	null	null	null	null	null	
2020-02-27 21:06:39.0	2020-03-17 18:27:02.0	2020-03-17 18:27:02.0	closed	[graphing calculator]	1	1055	Persist variable settings after graph is plotted	https://api.github.com/repos/microsoft/calculator/issues/1055	https://github.com/microsoft/calculator/pull/1055	## Fixes #1017    ### Description of the changes:  - Creates a model for the variable that stores the values after the graph is re-plotted  - Updated VariableViewModel and other code to contain the model    ### How changes were validated:  - Manual tests    	joseartrivera	null	null	null	null	null	null	
2020-02-27 21:58:13.0	2020-02-28 17:34:17.0	2020-05-26 21:47:10.0	closed	[]	0	1056	Update Analysis after variables change	https://api.github.com/repos/microsoft/calculator/issues/1056	https://github.com/microsoft/calculator/pull/1056	## Fixes #1031.      ### Description of the changes:  - Updates the variable values for the variables in the function being analyzed when the analysis button is clicked    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - manually  -  -    	sanderl	null	null	null	null	null	null	
2020-02-27 22:07:39.0	2020-02-27 22:28:19.0	2020-02-27 22:28:19.0	closed	[graphing calculator]	0	1057	Pass EquationButtonContentIndex for show equation tooltip	https://api.github.com/repos/microsoft/calculator/issues/1057	https://github.com/microsoft/calculator/pull/1057	## Fixes #949      ### Description of the changes  - Accidentally left this out when quickly addressing PR feedback in #1047     ### How changes were validated:  - Manual tests    	joseartrivera	null	null	null	null	null	null	
2020-02-27 23:12:54.0	2020-03-11 16:41:53.0	2020-03-11 16:41:53.0	closed	[graphing calculator]	0	1058	Work around crash by replacing ItemRepeater with ListView	https://api.github.com/repos/microsoft/calculator/issues/1058	https://github.com/microsoft/calculator/pull/1058	## Fixes #1034     ### Description of the changes:  - Reverts the change that introduced an ItemRepeater in place of a ListView because of a crashing bug when used with the ApplicationView API. See microsoft/microsoft-ui-xaml#2011.    It is worth noting that I tried to use an ItemsControl instead of a ListView but ran into StackOverflow errors for some reason. If anyone can figure out the root cause I think using an ItemsControl would be preferred.    ### How changes were validated:  - Launch 2 instances of calculator in Graphing Mode, ensure that the second instance does not crash on launch  - Make sure Equation list and Variable list still function as expected    	joseartrivera	null	null	null	null	null	null	
2020-02-28 00:21:25.0	2020-03-03 18:53:04.0	2020-03-03 18:53:05.0	closed	[graphing calculator]	0	1059	Parse each individual equation	https://api.github.com/repos/microsoft/calculator/issues/1059	https://github.com/microsoft/calculator/pull/1059	## Part of #985.      ### Description of the changes:  - Fixes some parsing issues that are not detected when parsing the entire concatenated string  - In the future we should hook this up to an equation specific error message to improve usability    ### How changes were validated:  - Manual tests    	joseartrivera	null	null	null	null	null	null	
2020-02-28 20:14:36.0	2020-03-04 23:15:19.0	2020-03-04 23:15:19.0	closed	[graphing calculator]	0	1060	Support other locales for decimal and list separators	https://api.github.com/repos/microsoft/calculator/issues/1060	https://github.com/microsoft/calculator/pull/1060	## Fixes #1052      ### Description of the changes:  - Updates our logic to account for locales that use a comma as a decimal and semi-colon as a list separator     ### How changes were validated:  - Manual tests    	joseartrivera	null	null	null	null	null	null	
2020-02-28 22:26:43.0	2020-03-11 16:41:39.0	2020-03-11 16:41:39.0	closed	[graphing calculator]	0	1061	Fix analyze button being enabled when an equation has an error	https://api.github.com/repos/microsoft/calculator/issues/1061	https://github.com/microsoft/calculator/pull/1061	## Fixes #976      ### Description of the changes:  - Disable the menu button if there is an error    ### How changes were validated:  - Manual tests    	joseartrivera	null	null	null	null	null	null	
2020-03-02 15:59:05.0	2020-03-03 21:47:27.0	2020-03-09 13:56:43.0	closed	[]	0	1062	Push back if the vector is a whimsical	https://api.github.com/repos/microsoft/calculator/issues/1062	https://github.com/microsoft/calculator/pull/1062	## Fixes #.      ### Description of the changes:  Inverted branches so that the statement underneath the if statement that checks if the vector is whimsical will run the method associated with intermediateWhimsical vector. Before, the code only checked to see if the code was not a whimsical, and if that was false, execute the whimsical code.    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Automated  - Manual  	ghost	null	null	null	null	null	null	
2020-03-03 14:27:13.0	null	2021-05-26 10:06:17.0	open	[Bug, triage approved, Area: Reliability, Pri: 2]	11	1063	Crash when copying result	https://api.github.com/repos/microsoft/calculator/issues/1063	https://github.com/microsoft/calculator/issues/1063	**Describe the bug**  crash    **Steps To Reproduce**  - open Calculator  - select programmer  - dec numbers  - calculate 1 << 63 (press 1, press LSh, press 6 and 3, press =)  - press minus  - press 1  - press =  (so, you calc (1<<63) - 1)  - select result  - right click  - select all  - right click  - copy  CRASH!    **Device and Application Information**  Microsoft Windows [Version 10.0.18363.693]    **Requested Assignment**  I'm just reporting this problem. I don't want to fix it.  	egorpugin	null	null	null	null	null	null	
2020-03-04 20:25:19.0	2020-03-16 18:54:20.0	2020-03-16 18:54:21.0	closed	[graphing calculator]	1	1064	Support mouse gestures when active tracing is enabled	https://api.github.com/repos/microsoft/calculator/issues/1064	https://github.com/microsoft/calculator/pull/1064	## Fixes #989      ### Description of the changes:  - Trace cursor should follow the mouse on the graph    ### How changes were validated:  - Manual testing    	joseartrivera	null	null	null	null	null	null	
2020-03-04 23:14:59.0	2020-03-12 01:38:13.0	2020-03-12 01:38:14.0	closed	[graphing calculator]	2	1065	Support regular textbox context menu functions in the EquationTextBox	https://api.github.com/repos/microsoft/calculator/issues/1065	https://github.com/microsoft/calculator/pull/1065	## Fixes #978      ### Description of the changes:  Since [TextCommandBarFlyout](https://docs.microsoft.com/en-us/windows/uwp/design/controls-and-patterns/command-bar-flyout#command-bar-flyouts-for-text-controls) is not customizable and we have added custom menu items, we need to manually wire up all of the basic text commands.    Added these items that are normally present in the RichEditBox context menu: cut, copy, paste, undo, select all.  ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Manual tests    	joseartrivera	null	null	null	null	null	null	
2020-03-05 16:56:55.0	2020-03-05 17:02:34.0	2020-12-02 18:00:27.0	closed	[duplicate]	2	1066	Where can I find the other calculator??	https://api.github.com/repos/microsoft/calculator/issues/1066	https://github.com/microsoft/calculator/issues/1066	Where can I find this calculator version?    ![image](https://user-images.githubusercontent.com/15637669/76004803-b8ce7200-5ecf-11ea-9d48-87d05a2a10fa.png)      	buster95	null	null	null	null	null	null	
2020-03-05 20:54:42.0	2020-03-12 17:12:02.0	2020-03-12 17:12:02.0	closed	[graphing calculator]	0	1067	Select the equation when the EquationTextBox has focus and during analysis	https://api.github.com/repos/microsoft/calculator/issues/1067	https://github.com/microsoft/calculator/pull/1067	## Fixes #999      ### Description of the changes:  - Sets the equation as selected when the EquationTextBox has focus and during analysis.    ### How changes were validated:  - Manual tests    	joseartrivera	null	null	null	null	null	null	
2020-03-05 23:01:33.0	2020-04-02 19:52:53.0	2020-12-02 18:00:25.0	closed	[Bug, Area: User Experience, fixed, Pri: 1]	1	1068	Revisit logic for determining min/max for variables	https://api.github.com/repos/microsoft/calculator/issues/1068	https://github.com/microsoft/calculator/issues/1068	Instead of defaulting to 0/0.1/2, we should default to -5/0.1/5.	MicrosoftIssueBot	null	null	null	null	null	null	
2020-03-05 23:01:37.0	2020-03-09 23:51:40.0	2020-12-02 18:00:24.0	closed	[Area: User Experience, fixed, Pri: 1]	1	1069	Graph window options should have reset button in the flyout	https://api.github.com/repos/microsoft/calculator/issues/1069	https://github.com/microsoft/calculator/issues/1069	A team member will update this issue with more details soon.	MicrosoftIssueBot	null	null	null	null	null	null	
2020-03-05 23:01:40.0	2020-04-14 19:37:24.0	2020-12-02 18:00:23.0	closed	[Bug, Area: User Experience, fixed, Pri: 1]	1	1070	Stop moving graph when adding new equation	https://api.github.com/repos/microsoft/calculator/issues/1070	https://github.com/microsoft/calculator/issues/1070	Currently, when adding or removing equations, we _always_ move the graph in an attempt to provide users a "best fit" window. However, this can be disruptive for users that have carefully crafted a custom window view from graph settings or through pointer interactions and the on-screen view buttons.    To address this, we should replace the current "Reset View" button, which currently only allows the user to reset any manual changes back to "best fit", with a toggle button that allows users to switch between "automatic" and "manual" adjustment of the widow.    **Behavior**  * When starting a new graphing calculator session, we should be in automatic mode by default. If the user clicks the toggle button when we are in automatic mode, this should be a no-op.  * If at any point the user manually manipulates the graph output (e.g., setting x/y-min or x/y-max in graph options, zooming with mouse wheel, panning with touch, etc.), we enter manual mode.  * We remain in manual mode until either (a) the user clicks the toggle button or (b) the user deletes all equations from the list (effectively starting a new session).    **Keyboard Shortcuts**  The existing keyboard shortcut (Ctrl+0) should be maintained. Effectively, it should always put the user in automatic mode.    **Tooltips + Narrator**  * For Narrator, the toggle button should be "Graph View" button with the two reported states as "Automatic Best Fit" and "Manual Adjustment".  * Tooltip: "Refresh view automatically (Ctrl + 0)"    **Design**  This design mock shows the "automatic" (filled) and "manual" (unfilled) states of the button:  ![image](https://user-images.githubusercontent.com/1414423/77199455-181eab80-6aa6-11ea-80de-b199aa460060.png)    The icon can be constructed by [layering](https://docs.microsoft.com/en-us/windows/uwp/design/style/segoe-ui-symbol-font#layering-and-mirroring) these two new font icons:  ![image](https://user-images.githubusercontent.com/1414423/77199474-2076e680-6aa6-11ea-845d-e8c72a14eed9.png) ![image](https://user-images.githubusercontent.com/1414423/77199491-25d43100-6aa6-11ea-9de5-653408590efb.png)	MicrosoftIssueBot	null	null	null	null	null	null	
2020-03-05 23:01:43.0	2020-03-31 21:05:01.0	2020-12-02 18:00:21.0	closed	[Bug, Area: User Experience, fixed, Pri: 1]	1	1071	Graphing y=sin(x)+cos(x) gives an error	https://api.github.com/repos/microsoft/calculator/issues/1071	https://github.com/microsoft/calculator/issues/1071	**Describe the bug**  Graphing y=sin(x)+cos(x) gives an error    **Steps To Reproduce**  1. Enter "y=sin(x)+cos(x)"  2. Receive error    **Expected behavior**  Trig functions should be fully supported.    **Additional context**  Can also repro with "1=sin(x)+cos(x)" or:  1. Type cos(x) in first equation  2. In second equation type cos(  3. See crash	MicrosoftIssueBot	null	null	null	null	null	null	
2020-03-05 23:01:46.0	2020-04-01 16:12:15.0	2020-12-02 18:00:21.0	closed	[Bug, Area: User Experience, fixed, Pri: 2]	1	1072	After panning or zooming with touch, tracing does not always work	https://api.github.com/repos/microsoft/calculator/issues/1072	https://github.com/microsoft/calculator/issues/1072	**Describe the bug**  After panning or zooming with touch, tracing does not always work    **Steps To Reproduce**  1. Graph an equation  2. Move mouse over line to trace (i.e., analyze points along the line)  3. Pan or zoom with touch  4. Notice how tracing is broken    Note: Moving mouse off the graph and then back on seems to fix the issue.    **Expected behavior**  Tracing should work regardless of graph manipulations.	MicrosoftIssueBot	null	null	null	null	null	null	
2020-03-06 01:44:44.0	2020-03-09 23:51:40.0	2020-03-09 23:51:40.0	closed	[graphing calculator]	0	1073	Add reset button to settings flyout	https://api.github.com/repos/microsoft/calculator/issues/1073	https://github.com/microsoft/calculator/pull/1073	## Fixes #1069      ### Description of the changes:  - Add reset button to settings flyout    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Manual tests    	joseartrivera	null	null	null	null	null	null	
2020-03-06 21:21:25.0	2020-03-30 22:23:23.0	2020-03-30 22:23:23.0	closed	[codebase quality]	0	1074	Fix some code analysis warnings in CalcManager	https://api.github.com/repos/microsoft/calculator/issues/1074	https://github.com/microsoft/calculator/pull/1074	Contributes to #693. Trying to reduce the noise from code analysis warnings in the build.    This change is mostly just converting unscoped enums to "enum class".	mcooley	null	null	null	null	null	null	
2020-03-07 01:23:43.0	2020-03-25 22:18:35.0	2020-04-05 18:23:46.0	closed	[graphing calculator]	1	1075	Improve error handling by displaying an error message	https://api.github.com/repos/microsoft/calculator/issues/1075	https://github.com/microsoft/calculator/pull/1075	## Fixes #985      ### Description of the changes:  - Displays an error message when hovering over the error icon.    ### How changes were validated:  - Manual tests, currently some of the errors do not seem to get returned by the graph engine.    	joseartrivera	null	null	null	null	null	null	
2020-03-07 01:30:45.0	2020-03-09 19:00:21.0	2020-03-09 19:00:21.0	closed	[tooling]	0	1076	Update internal package version	https://api.github.com/repos/microsoft/calculator/issues/1076	https://github.com/microsoft/calculator/pull/1076	  ### Description of the changes:  - Update internal package version    	joseartrivera	null	null	null	null	null	null	
2020-03-09 21:49:51.0	2020-04-10 08:44:38.0	2020-12-02 18:00:19.0	closed	[Bug, Area: User Experience, won't fix, Pri: 2]	3	1077	The custom titlebar isn't correctly displayed on Windows 10X	https://api.github.com/repos/microsoft/calculator/issues/1077	https://github.com/microsoft/calculator/issues/1077	**Describe the bug**  Windows 10X preview has currently an issue with custom titlebars (`CoreApplicationViewTitleBar` returns `Height = 0px` and `IsVisible = Collapsed` instead of `32px` and `True`)    **Expected behavior**    A future preview of Windows 10X will fix this problem, but in the meantime, we should display the title bar correctly on Windows 10X.    **Requested Assignment**  If possible, I would like to fix this.  	rudyhuyn	null	null	null	null	null	null	
2020-03-09 22:01:52.0	2020-03-24 20:43:23.0	2020-03-24 20:43:23.0	closed	[fixing approved issue]	1	1078	Patch TitleBar to be correctly displayed on Windows 10X Preview	https://api.github.com/repos/microsoft/calculator/issues/1078	https://github.com/microsoft/calculator/pull/1078	## Fixes #1077     ### Description of the changes:  - Force the visibility (visible) and the height (32px) of the Titlebar when running on Windows 10X  - Update `MaxVersionTested` to get access to the real DeviceFamily    ### How changes were validated:  - Tested with 10X Emulators    	rudyhuyn	null	null	null	null	null	null	
2020-03-09 22:36:57.0	2020-04-09 23:58:20.0	2020-04-09 23:58:20.0	closed	[graphing calculator]	0	1079	Update styling of graph settings textbox and add shadow	https://api.github.com/repos/microsoft/calculator/issues/1079	https://github.com/microsoft/calculator/pull/1079	## Fixes #1018, Fixes #986       ### Description of the changes:  - Updates text boxes in settings flyout to be consistent with variable text boxes  - Adds shadow to trace value pop up    ### How changes were validated:  - Manual tests    	joseartrivera	null	null	null	null	null	null	
2020-03-10 01:14:23.0	2020-03-16 19:52:30.0	2020-12-02 18:00:19.0	closed	[Bug, Area: User Experience, fixed]	1	1080	History button can be visible in some conditions when in AOT mode.	https://api.github.com/repos/microsoft/calculator/issues/1080	https://github.com/microsoft/calculator/issues/1080	  ![image](https://user-images.githubusercontent.com/1226538/76270214-a5a20600-6231-11ea-875d-031b0cf81c06.png)    **Describe the bug**  In some conditions, the history button can still be visible when entering compact-overlay mode.    **Requested Assignment**  If possible, I would like to fix this.  	rudyhuyn	null	null	null	null	null	null	
2020-03-10 01:23:21.0	2020-03-16 19:52:30.0	2020-03-16 20:01:06.0	closed	[]	0	1081	Don't display the history button when the panel disappears	https://api.github.com/repos/microsoft/calculator/issues/1081	https://github.com/microsoft/calculator/pull/1081	## Fixes #1080       ### Description of the changes:  - Don't force the visibility of the History button when the history panel is closed      ### How changes were validated:  - manually    	rudyhuyn	null	null	null	null	null	null	
2020-03-10 16:22:07.0	2020-03-12 17:52:05.0	2020-03-12 17:52:05.0	closed	[build]	0	1082	Delete unused build config files	https://api.github.com/repos/microsoft/calculator/issues/1082	https://github.com/microsoft/calculator/pull/1082	Delete config files for internal FCIB and test processes which are no longer in use.	mcooley	null	null	null	null	null	null	
2020-03-11 16:54:53.0	2020-03-13 06:29:14.0	2021-06-02 00:00:09.0	closed	[Enhancement, pitch declined]	7	1083	Add ‘Reverse’ button in unit converters	https://api.github.com/repos/microsoft/calculator/issues/1083	https://github.com/microsoft/calculator/issues/1083	**Problem Statement**:   We find the unit converters very useful in our daily lives when we have to convert a measurement from one reference unit to another. But sometimes we find it a little limited when we want to study the relationship between two different systems of units. I live in India. We normally use the MKS (metre, kilogram and second) system of units. So I am a little unfamiliar with system followed in the US which consists of yards, miles, gallons etc. When I use the unit converter to know how much a yard measures (in terms of metres), it says:  1 yard = 0.9144 metres  Now I wonder how much a metre measures in terms of yards. For this, I have to manually change the reference unit to yards and the required unit to metres in order to have it display:  1 metres = 1.093613 yards  I think that there should be a ‘Reverse’ button which would allow us to quickly switch between the reference unit and the required unit.    **Evidence or User Insights**:   This button has already been implemented by many of the calculators and allows quick inter-conversions between the units (one has been shown below). This allows us to have us a quick idea of a new unit by representing a measurement in a given unit in terms of another unit.    ![image](https://user-images.githubusercontent.com/55381546/76442262-acbe4500-63e6-11ea-8846-693909a9b837.png)     The above figure shows the ‘Reverse’ button feature in the unit converter of a very old Samsung GT-E1282T phone.    **Proposal**:  I want a ‘Reverse’ button to be implemented in the Windows Calculator which allows quick switching between the reference unit and the required unit.  If the unit converter shows the conversion:  1 inch = 2.54 cm  On pressing the ‘Reverse’ button, it should display:  1 cm = 0.393701 inches  Similarly for 81 cm = 31.88976, it should display 81 inches = 205.74 cm    **Goals**:  • Implementation of ‘Reverse’ button to switch between units of conversion    **Low Fidelity Concept**:    ![image](https://user-images.githubusercontent.com/55381546/76442296-bd6ebb00-63e6-11ea-9c7a-0cb872792623.png)    On pressing the ‘Reverse’ button, it should display:     ![image](https://user-images.githubusercontent.com/55381546/76442314-c5c6f600-63e6-11ea-8f2d-e09a040c3611.png)    **Requested Assignment**:  I am just suggesting this feature. I don’t want to implement it.  	ghost	null	null	null	null	null	null	
2020-03-11 18:38:57.0	2020-03-11 19:19:15.0	2020-05-26 21:46:54.0	closed	[]	0	1084	Fixed Divider Line Between Equations and Variables Not Being Theme Aware	https://api.github.com/repos/microsoft/calculator/issues/1084	https://github.com/microsoft/calculator/pull/1084	## Fixes #994.      ### Description of the changes:  - Added a resource dictionary to the StackPanel that contains the divider rectangle.  - Updated the divider rectangle to be bound to the resource dictionary brush.    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Manually validated the color changes appropriately.    	sanderl	null	null	null	null	null	null	
2020-03-12 07:47:11.0	2020-03-12 19:48:59.0	2020-03-12 19:48:59.0	closed	[documentation]	0	1085	Roadmap Update for 2020	https://api.github.com/repos/microsoft/calculator/issues/1085	https://github.com/microsoft/calculator/pull/1085	Updating the Windows Calculator project roadmap for 2020. Our roadmap for this year It primarily focuses on unblocking and accelerating community contributions and addressing top user pain points.	grochocki	null	null	null	null	null	null	
2020-03-13 16:26:17.0	2020-03-13 19:40:57.0	2020-03-13 19:40:57.0	closed	[]	0	1086	Remove CMakeLists for now	https://api.github.com/repos/microsoft/calculator/issues/1086	https://github.com/microsoft/calculator/pull/1086	Removing CMake support since we don't have a good plan for keeping it up-to-date over time.	mcooley	null	null	null	null	null	null	
2020-03-15 19:56:31.0	2020-03-15 22:07:33.0	2020-03-15 22:07:33.0	closed	[]	1	1087	Change service URL to expression body instead of property	https://api.github.com/repos/microsoft/calculator/issues/1087	https://github.com/microsoft/calculator/pull/1087	### Description of the changes:  - The change to an expression body best shows the ServiceURL as being an expression, instead of an object with no get but a set.    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Automated tests  - Manual Tests  - Compiler refactor    	ghost	null	null	null	null	null	null	
2020-03-15 20:44:02.0	2020-03-16 22:52:49.0	2020-03-17 14:12:33.0	closed	[]	1	1088	Merge initializers and assignments	https://api.github.com/repos/microsoft/calculator/issues/1088	https://github.com/microsoft/calculator/pull/1088	### Description of the changes:  - In some functions, there are outer scope variables that are initialized but have no value, and only obtain a value inside an if statement or inner scope, and others that are initialized but have no value until the function is nearly over. These changes put the variables in the innermost possible scope while ensuring they go initialized even if the codebase evolves.   - Made some variables const, those variables being mostly the ones in which the initialization and assignments were conjoined.    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Compiler Refactorings  - Automated Unit tests  - Manual tests to ensure no side effects happen    	ghost	null	null	null	null	null	null	
2020-03-16 16:06:06.0	2020-03-16 16:29:59.0	2020-03-17 14:12:43.0	closed	[]	1	1089	Use static_cast instead of C-style cast in UnitConverter.cpp	https://api.github.com/repos/microsoft/calculator/issues/1089	https://github.com/microsoft/calculator/pull/1089	# Description of the changes:  - In UnitConverter, for the conversion to vector, the delimiter size is cast to an int using the C style casting, so this was changed to the c++ style.    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - ad hoc testing  - automated    On a side note, I have to ask why even cast at all, considering the variables in the equation are all size_t anyway. Nevertheless, this is the only case in the entire solution in which a c style case is used, and it is in a cpp file, so I changed it to that. Please let me know if the cast is even necessary should I be able to improve this code further by removing the case.    Thank you!  	ghost	null	null	null	null	null	null	
2020-03-16 19:53:37.0	2020-03-17 06:37:24.0	2020-03-17 06:37:24.0	closed	[]	1	1090	Unresolve call to virtual function in constructor by using the namespace.	https://api.github.com/repos/microsoft/calculator/issues/1090	https://github.com/microsoft/calculator/pull/1090	### Description of the changes:  - There is a call to a virtual function in the constructor, which will be resolved statically. Because we do not want that, I put the namespace name so the compiler does not do that.    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Manual  - Automated    	ghost	null	null	null	null	null	null	
2020-03-16 20:59:19.0	2020-03-16 23:02:52.0	2020-03-17 14:12:19.0	closed	[]	0	1091	No need to invoke the compare method when we have an overloaded == operator.	https://api.github.com/repos/microsoft/calculator/issues/1091	https://github.com/microsoft/calculator/pull/1091	### Description of the changes:  - Changed the compare method calls in UnitConverter to use the overloaded == operator.    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Manual  - Compiler fixes  - Automated    	ghost	null	null	null	null	null	null	
2020-03-16 21:39:40.0	2020-05-19 03:14:41.0	2020-05-19 03:15:27.0	closed	[]	5	1092	Change precision and variables regarding the number of digits to be unsigned instead of signed	https://api.github.com/repos/microsoft/calculator/issues/1092	https://github.com/microsoft/calculator/pull/1092	### Description of the changes:  - For number formatting and the UnitConverter, the prevision is important, and its results are based on functions that return a counted number, which is an unsigned integer. However, some functions were assigned the result to a signed variable, and so I changed them to be unsigned without any consequence.  - Changed the C style int cast into a static unsigned int cast    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Ad-Hoc  - Compiler refactorings  - Automated testing    	ghost	null	null	null	null	null	null	
2020-03-17 15:33:41.0	2020-03-17 15:35:25.0	2021-07-14 16:03:40.0	closed	[]	0	1093	Remove unused 	https://api.github.com/repos/microsoft/calculator/issues/1093	https://github.com/microsoft/calculator/pull/1093		ghost	null	null	null	null	null	null	
2020-03-17 15:36:00.0	2020-03-17 16:56:55.0	2020-03-17 16:56:55.0	closed	[]	0	1094	Remove unused "this" in async lamba expression	https://api.github.com/repos/microsoft/calculator/issues/1094	https://github.com/microsoft/calculator/pull/1094	### Description of the changes:  - The qualifier "this" serves no purpose in the async lambda expression, so we should just remove it for simplicity's sake.    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Compiler refactoring  - Automated Testing  - Manual Testing	ghost	null	null	null	null	null	null	
2020-03-17 23:02:48.0	2020-04-02 21:46:35.0	2020-12-02 18:00:18.0	closed	[Area: Accessibility, fixed, Pri: 1]	1	1095	Variable editing panel does not expand on keyboard focus	https://api.github.com/repos/microsoft/calculator/issues/1095	https://github.com/microsoft/calculator/issues/1095	Repro Steps:   Launch 'Calculator'.  Home screen will be displayed.​  Navigate through Menu using keyboard and select 'Graphing'. 'Graphing' Calculator opens.​  Navigate to the  expand/collapsed icon below sliders.  Observe the issue.     Actual Result:  "Expand/Collapse" icon button which is present below slider is not accessible via keyboard.     Expected Result:  Expand/collapsed icon button which is present below slider should be accessible via keyboard. 	MicrosoftIssueBot	null	null	null	null	null	null	
2020-03-17 23:07:36.0	2020-03-31 02:43:10.0	2020-03-31 02:49:54.0	closed	[graphing calculator]	0	1096	Make variable chevron focusable	https://api.github.com/repos/microsoft/calculator/issues/1096	https://github.com/microsoft/calculator/pull/1096	## Fixes #1095.      ### Description of the changes:  - Makes variable chevron focusable and gives it an automation name    ### How changes were validated:  - manual tests    	joseartrivera	null	null	null	null	null	null	
2020-03-18 22:56:08.0	2020-03-27 16:56:12.0	2020-03-27 16:56:12.0	closed	[graphing calculator]	0	1097	Allow line style to be changed	https://api.github.com/repos/microsoft/calculator/issues/1097	https://github.com/microsoft/calculator/pull/1097	## Fixes #983 and Fixes #955      ### Description of the changes:  - Adds drop down in style picker to change line style  - Fixes bug where colors did not have automation names    ### How changes were validated:  - Manual tests    	joseartrivera	null	null	null	null	null	null	
2020-03-19 23:03:10.0	2020-03-26 21:15:45.0	2020-03-26 21:15:45.0	closed	[graphing calculator]	0	1098	Add line width option	https://api.github.com/repos/microsoft/calculator/issues/1098	https://github.com/microsoft/calculator/pull/1098	## Fixes #988      ### Description of the changes:  - Adds ability to change line width in graph options    ### How changes were validated:  - Manual tests  	joseartrivera	null	null	null	null	null	null	
2020-03-22 22:17:32.0	2020-03-23 15:44:07.0	2020-03-23 15:50:24.0	closed	[]	2	1099	Replace old C headers with the C++ ones	https://api.github.com/repos/microsoft/calculator/issues/1099	https://github.com/microsoft/calculator/pull/1099	### Description of the changes:  - Replaced math.h with math and assert.h with assert.  ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Followed the instructions of the ISO draft 2005  - Unit testing	ghost	null	null	null	null	null	null	
2020-03-23 14:18:58.0	2020-03-23 14:42:55.0	2020-03-23 14:42:55.0	closed	[]	3	1100	Update TemporaryKey.pfx	https://api.github.com/repos/microsoft/calculator/issues/1100	https://github.com/microsoft/calculator/pull/1100	Updated with new self-signed certificate since the old one has expired.    The certificate was generated following the same procedure as in #354    ```  New-SelfSignedCertificate -Type Custom -Subject "CN=Microsoft Corporation, O=Microsoft Corporation, L=Redmond, S=Washington, C=US" -KeyUsage DigitalSignature -FriendlyName "Calculator (Dev)" -CertStoreLocation "Cert:\LocalMachine\My" -TextExtension @("2.5.29.37={text}1.3.6.1.5.5.7.3.3", "2.5.29.19={text}")  Export-PfxCertificate -cert "Cert:\LocalMachine\My\<thumbprint>" -FilePath C:\TemporaryKey.pfx -Password (new-object System.Security.SecureString)  ```	mcooley	null	null	null	null	null	null	
2020-03-23 17:41:29.0	2020-04-09 20:16:06.0	2020-12-02 18:00:17.0	closed	[Bug, Area: Accessibility, fixed, Pri: 1]	1	1101	Name property of a focusable element must not be null (Equation input)	https://api.github.com/repos/microsoft/calculator/issues/1101	https://github.com/microsoft/calculator/issues/1101	**Repro Steps**  Launch "Calculator " app.  Navigate to "Graphing" control in the navigation pane and activate it.  Navigate to "Enter equation" edit field and Run accessibility insights tool.   Observe the issue.     **Actual Result**  The Name property of a focusable element is null.    **Expected Result**  The Name property of a focusable element must not be null.  	MicrosoftIssueBot	null	null	null	null	null	null	
2020-03-23 17:41:32.0	2020-04-09 20:16:06.0	2020-12-02 18:00:16.0	closed	[Bug, Area: Accessibility, fixed, Pri: 1]	1	1102	The Name property of a focusable element must not be null (Variable Editing)	https://api.github.com/repos/microsoft/calculator/issues/1102	https://github.com/microsoft/calculator/issues/1102	**Repro Steps**  Launch "Calculator " app.  Navigate to "Graphing" control in the navigation pane and activate it.  Run accessibility insights tool.   Observe the issue.     **Actual Result**  The Name property of a focusable element is null.    **Expected Result**  The Name property of a focusable element must not be null.	MicrosoftIssueBot	null	null	null	null	null	null	
2020-03-23 17:47:09.0	2020-04-09 20:16:06.0	2020-12-02 18:00:15.0	closed	[Bug, Area: Accessibility, fixed, Pri: 2]	1	1103	Name property of a focusable element must not be null (Variable Slider)	https://api.github.com/repos/microsoft/calculator/issues/1103	https://github.com/microsoft/calculator/issues/1103	**Repro Steps**  Launch "Calculator" app.  Navigate to "Graphing" control in the navigation pane and activate it.  Run accessibility insights tool.   Observe the issue.     **Actual Result**  The Name property of a focusable element is null.    **Expected Result**  The Name property of a focusable element must not be null.	MicrosoftIssueBot	null	null	null	null	null	null	
2020-03-23 22:27:34.0	2020-04-21 20:03:55.0	2020-12-02 18:00:14.0	closed	[Bug, triage approved, Area: User Experience, not repro, Pri: 2]	1	1104	Min size of the programmer operator panel buttons are too small	https://api.github.com/repos/microsoft/calculator/issues/1104	https://github.com/microsoft/calculator/issues/1104	<!--  Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.  -->    **Describe the bug**  <!-- A clear and concise description of what the bug is. -->  Min size of the programmer operator panel buttons are too small    **Steps To Reproduce**  Steps to reproduce the behavior:  1. Go to programmer mode  2. Make the window small  3. Notice the small size of the operator panel buttons    **Expected behavior**  Operator panel buttons have the expected min size (see scientific mode)    **Screenshots**  <!-- If applicable, add screenshots to help explain your problem. -->  ![image](https://user-images.githubusercontent.com/6334170/77368976-b87d0600-6d1a-11ea-94f5-5a2e37704c9e.png)    	joseartrivera	null	null	null	null	null	null	
2020-03-23 22:36:30.0	2020-03-24 00:37:23.0	2020-03-24 01:32:59.0	closed	[build, approved]	0	1105	Make the certificate compatible with remote device/emulator deployment	https://api.github.com/repos/microsoft/calculator/issues/1105	https://github.com/microsoft/calculator/pull/1105	### Description of the changes:  The current certificate (this was also the case with the previous one) contains an empty password string, which is not supported when VS tries to deploy the application on another device. Adding `<PackageCertificatePassword></PackageCertificatePassword>` to the vcproj file doesn't solve this issue.     ![image](https://user-images.githubusercontent.com/1226538/77369484-f9c1e580-6d1b-11ea-92ff-52093d7fd9a9.png)    There are many ways to generate a temporary certificate :  - using Visual Studio but it doesn't accept `,` in the common name of the publisher, which is our case  - `New-SelfSignedCertificate`/`Export-PfxCertificate` can't generate a pfx without a password  - `makecert.exe` can generate a certificate without a password but does not provide a way to specify a user-friendly name.    The solution adopted here was to continue to use  `New-SelfSignedCertificate`/`Export-PfxCertificate` and then use `openssl` to remove the password using the following command line:    `openssl pkcs12 -in TemporaryKey.pfx -nodes | openssl pkcs12 -export -keypbe NONE -certpbe NONE -name "<friendly name>" -out NewTemporaryKey.pfx`    ### How changes were validated:  -manually    	rudyhuyn	null	null	null	null	null	null	
2020-03-23 23:54:20.0	2020-03-28 00:20:36.0	2020-05-26 21:46:41.0	closed	[graphing calculator]	0	1106	Dark Theme For Graph Control	https://api.github.com/repos/microsoft/calculator/issues/1106	https://github.com/microsoft/calculator/pull/1106	## Fixes #997.      ### Description of the changes:  - Adds the them setting options  - Enables Dark theme on the graph control  - Adds diagnostics for the theme settings  - updated the internal build version and the calculator app version    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - manually using both the always light and match app options  - manually tested changing the app theme in settings updates the graph control theme per the setting in graph settings    	sanderl	null	null	null	null	null	null	
2020-03-23 23:58:03.0	2020-03-24 16:42:31.0	2020-05-26 21:46:50.0	closed	[]	0	1107	Added Graphing Mode Jumplist Icons	https://api.github.com/repos/microsoft/calculator/issues/1107	https://github.com/microsoft/calculator/pull/1107	## Fixes #1005.      ### Description of the changes:  - Added the Graphing mode icon files to the assets folder    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Manually confirmed the icons populate into the nav menu and jumplists      	sanderl	null	null	null	null	null	null	
2020-03-24 16:46:21.0	2020-03-24 17:40:33.0	2020-05-26 21:46:51.0	closed	[]	0	1108	Update Calculator version to 2002	https://api.github.com/repos/microsoft/calculator/issues/1108	https://github.com/microsoft/calculator/pull/1108		sanderl	null	null	null	null	null	null	
2020-03-25 01:27:07.0	2020-03-27 23:37:23.0	2020-03-27 23:37:23.0	closed	[]	0	1109	Check in localized strings 2020-03-24	https://api.github.com/repos/microsoft/calculator/issues/1109	https://github.com/microsoft/calculator/pull/1109	Check in localized strings from the internal localization system.	mcooley	null	null	null	null	null	null	
2020-03-25 09:02:19.0	2020-03-25 11:22:12.0	2020-12-02 18:00:13.0	closed	[Bug, Pri: 3, triage approved]	2	1110	Calculator date difference is off one day	https://api.github.com/repos/microsoft/calculator/issues/1110	https://github.com/microsoft/calculator/issues/1110	  Open calculator and place into date calculation  select two dates  Expected results: Date calculation is correct   Actual results: (see attachments)    1/27 /2020 - 1/27/2020 : Same Date (correct, Diff1.png)  1/27/2020 - 1/28/2020 : 1 day (incorrect, shows 2 days in Diff2.png)  1/27/2020 - 1/27/2020 : Same Date (incorrect after changing date back from step two, Shows 1 day in Diff3)  1/27/2020 - 1/27/2021: 1 year 1 day (shows 1 year 1 day but 367 days, incorrect, Diff4)  	MicrosoftIssueBot	null	null	null	null	null	null	
2020-03-26 03:11:02.0	2020-04-01 06:09:13.0	2020-12-02 18:00:12.0	closed	[question]	2	1111	Where is the core code of this calculator (core code for processing expression strings), can it be independent?	https://api.github.com/repos/microsoft/calculator/issues/1111	https://github.com/microsoft/calculator/issues/1111		yehaike	null	null	null	null	null	null	
2020-03-26 21:05:25.0	2020-04-09 19:24:26.0	2020-12-02 18:00:11.0	closed	[Bug, Area: Reliability, fixed, Pri: 2]	2	1112	Crash when clicking "C" to clear an equation	https://api.github.com/repos/microsoft/calculator/issues/1112	https://github.com/microsoft/calculator/issues/1112	**Describe the bug**  1. Graph an equation  2. In the second blank equation that appeared, click into the textbox to give it focus  3. Click the 'C' clear button  4. App crashes (Sometimes requires multiple clicks to repro)      **Expected behavior**  App doesn't crash  	joseartrivera	null	null	null	null	null	null	
2020-03-27 18:53:34.0	2020-03-27 19:17:12.0	2020-05-26 21:46:49.0	closed	[]	0	1113	Revert WinUI version back to 2.2	https://api.github.com/repos/microsoft/calculator/issues/1113	https://github.com/microsoft/calculator/pull/1113	### Description of the changes:  - Revert the change that update the WinUI version to 2.3  -  -    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Manually smoke tested the app  -  -    	sanderl	null	null	null	null	null	null	
2020-03-27 19:22:28.0	2020-03-27 19:55:36.0	2020-05-26 21:46:50.0	closed	[]	0	1114	Update the internals package to the latest version	https://api.github.com/repos/microsoft/calculator/issues/1114	https://github.com/microsoft/calculator/pull/1114	Update the build pipeline internal templates to use the latest build number  	sanderl	null	null	null	null	null	null	
2020-03-28 14:00:25.0	2020-04-03 17:35:00.0	2020-04-04 02:29:42.0	closed	[]	0	1115	Fix the operand order of logbasex for consistency	https://api.github.com/repos/microsoft/calculator/issues/1115	https://github.com/microsoft/calculator/pull/1115	## Fixes #851.      ### Description of the changes:  - Edited scioper.cpp to let logbasex calculate log_y(x).  - Edited a test to fit the change  - Renamed all the occurence of LogBaseX to LogBaseY, without the localization for narrator. <br>*Not required; if not preferrd I can revert this commit*    Note: I think the display should be `log x base b`, but the current implementation made this a little hard, so I simply changed into `x log base y`.    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - manual	dovisutu	null	null	null	null	null	null	
2020-03-28 22:02:34.0	2020-04-02 17:20:18.0	2020-04-02 17:20:18.0	closed	[codebase quality]	0	1116	Simplify bools.	https://api.github.com/repos/microsoft/calculator/issues/1116	https://github.com/microsoft/calculator/pull/1116	### Description of the changes:  - No need to do a compare to true when we can just use a not operator...  	ghost	null	null	null	null	null	null	
2020-03-29 13:43:28.0	2020-03-29 13:45:05.0	2020-03-29 13:45:05.0	closed	[]	0	1117	Update	https://api.github.com/repos/microsoft/calculator/issues/1117	https://github.com/microsoft/calculator/pull/1117	## Fixes #.      ### Description of the changes:  -  -  -    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  -  -  -    	ibhushanbhoir	null	null	null	null	null	null	
2020-03-29 19:27:28.0	2020-04-02 18:53:39.0	2020-12-02 18:00:10.0	closed	[won't fix, Pri: 2]	4	1118	Arithmetic bit shift right result is incorrect in hex mode	https://api.github.com/repos/microsoft/calculator/issues/1118	https://github.com/microsoft/calculator/issues/1118	<!--  Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.  -->    **Describe the bug**  When performing an arithmetic shift right the "holes" in the result should be filled by the value of the MSb of the input. The observed behavior is that they are filled with zero when in hex mode. I'm guessing because internally the value is unsigned.    ![image](https://user-images.githubusercontent.com/13527007/77858249-47cd6200-71d0-11ea-8a08-7f1787e9b9b3.png)    **Steps To Reproduce**    1. Switch to Programmer mode.  2. Switch to Hexadecimal input.  3. Enter "FF"  4. Open "Bit Shift" dropdown to verify that "Arithmetic" is selected.  5. Click ">>" to shift right, Press "1", Press "=".    Observe result is 0x7F.    **Expected behavior**  Expect result to be 0xFF.    **Regarding ambiguity:**  With the current UI it's not possible to know what the user intended bit-width of the input is. My suggestion regarding this is either assume nibble granularity as the UI does, assume the most significant high bit is the start bit, or (short of adding new UI elements) disable arithmetic shifting when in hex entry mode.    **Device and Application Information**   - OS Build: Windows 10.0.18362   - Architecture: x64   - Application Version: 10.1910.0.0   - Region: en-US   - Dev Version Installed: False      **Requested Assignment**  <!--  Some people just want to report a bug and let someone else fix it.  Other people want to not only submit the bug report, but fix it as well.  Both scenarios are completely ok. We just want to know which one it is.  Please indicate which bucket you fall into by keeping one and removing the other.  -->  I'm just reporting this problem.  I don't want to fix it.  	John-Brooks	null	null	null	null	null	null	
2020-03-30 10:11:09.0	2020-04-14 04:51:55.0	2020-12-02 18:00:09.0	closed	[Enhancement, pitch declined]	4	1119	Put the calculator in the tray / size between monitors	https://api.github.com/repos/microsoft/calculator/issues/1119	https://github.com/microsoft/calculator/issues/1119	**Problem Statement**  Every time I need a calculator I start the calculator from start-menu. And It rescales the size each time I use a different monitor, which happens a lot. I work at multiple office locations, with different docking situations.  My laptop has a 4K screen and most of the office locations don't  have 4K monitors.     **Evidence or User Insights**  ?    **Proposal**  I would find it useful to be able to keep the calculator running as a tray icon, or as part of the info-center(?). Do that I would not have to restart and resize it every time. Also it would be helpful if the calculator resizes DPI dependent to the same size.     	hdijkema	null	null	null	null	null	null	
2020-03-30 23:32:19.0	2020-04-01 16:12:15.0	2020-04-01 16:12:15.0	closed	[graphing calculator]	0	1120	Fix trace value not appearing after touch input	https://api.github.com/repos/microsoft/calculator/issues/1120	https://github.com/microsoft/calculator/pull/1120	## Fixes #1072      ### Description of the changes:  DrawNearestPoint gets set to false on PointerExited, which fires on touch input, this caused the bug as another PointerEntered is not fired until the mouse actually leave the graph area and comes back. To fix this we remove the unneeded render in the DrawNearestPoint setter, and set it to true when PointerMoved is fired.    ### How changes were validated:  Manual tests  	joseartrivera	null	null	null	null	null	null	
2020-03-31 00:02:28.0	2020-03-31 02:20:32.0	2020-05-26 21:46:41.0	closed	[graphing calculator]	0	1121	Update the internal version to get Graphing Engine bug fixes	https://api.github.com/repos/microsoft/calculator/issues/1121	https://github.com/microsoft/calculator/pull/1121	## Fixes #959, #1071.      ### Description of the changes:  - Updated the internal version, to get the latest graphing engine fixes    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Manually tested modulo functions and sin(x)+cos(x) variations to verify those bugs were fixed.    	sanderl	null	null	null	null	null	null	
2020-03-31 00:14:06.0	2020-04-03 18:02:59.0	2020-12-02 12:01:47.0	closed	[Bug, Area: User Experience, duplicate, Pri: 1]	2	1122	Function button is not legible in graph dark mode with white color	https://api.github.com/repos/microsoft/calculator/issues/1122	https://github.com/microsoft/calculator/issues/1122	  **Describe the bug**  Function button is not legible in graph dark mode with white color    **Steps To Reproduce**  Go to graph in dark mode, graph the function and set the color to white    **Screenshots**  ![image](https://user-images.githubusercontent.com/6334170/77973685-cc3fe380-72a9-11ea-931d-4699c848e23d.png)    	joseartrivera	null	null	null	null	null	null	
2020-03-31 19:48:05.0	2020-06-16 16:58:21.0	2020-12-02 12:01:46.0	closed	[Bug, Area: Accessibility, triage approved, Pri: 2]	1	1123	Keyboard focus is getting lost after activating "Remove equation" button in the context menu	https://api.github.com/repos/microsoft/calculator/issues/1123	https://github.com/microsoft/calculator/issues/1123	**Repro Steps:**   1. Launch 'Calculator'.  2. Home screen will be displayed.​  3. Navigate through Menu using keyboard and select 'Graphing'. 'Graphing' Calculator opens.​  4. Navigate to "equation" edit field and context menu key.  5. Context menu pop up will open.  6. Navigate to 'Remove equation' button in the context menu and activate it  7. Observe the issue.    **Actual Result:**  Keyboard focus is getting lost after activating "Remove equation" button in the context menu.    **Expected Result:**  Keyboard focus should not get lost after activating "Remove equation" button in the context menu. Keyboard focus should land on the next equation after activating "Remove equation" button in the context menu.	MicrosoftIssueBot	null	null	null	null	null	null	
2020-03-31 19:48:08.0	2020-04-09 20:16:06.0	2020-12-02 12:01:45.0	closed	[Bug, Area: Accessibility, fixed, Pri: 2]	1	1124	Name is not descriptively defined for "Back" button	https://api.github.com/repos/microsoft/calculator/issues/1124	https://github.com/microsoft/calculator/issues/1124	**Repro Steps:**   1. Launch 'Calculator'. Launch Narrator.  2. Home screen will be displayed.​  3. Navigate through Menu using keyboard and select 'Graphing'. 'Graphing' Calculator opens.​  4. Navigate to equation edit filed and pressed context menu key.  5. Navigate to "Analyze equation" button and activate it.  6. Navigate to "Back" button and activate it.  7. Observe the issue.    **Actual Result:**  Name is not descriptively defined for "Back" button.    **Expected Result:**  Name should be defined more descriptive as "Back to equation list" button for "Back" button.	MicrosoftIssueBot	null	null	null	null	null	null	
2020-03-31 19:48:13.0	2020-04-02 19:53:22.0	2020-12-02 12:01:44.0	closed	[Bug, Area: Accessibility, fixed, Pri: 2]	1	1125	Keyboard focus lands on "Open navigation" button on activating "Back" button	https://api.github.com/repos/microsoft/calculator/issues/1125	https://github.com/microsoft/calculator/issues/1125	**Repro Steps:**   1. Launch 'Calculator'.  2. Home screen will be displayed.​  3. Navigate through Menu using keyboard and select 'Graphing'. 'Graphing' Calculator opens.​  4. Navigate to equation edit filed and pressed context menu key.  5. Navigate to "Analyze equation" button and activate it.  6. Navigate to "Back" button and activate it.  7. Observe the issue.    **Actual Result:**  Keyboard focus lands on "Open navigation" button on activating "Back" button.    **Expected Result:**  Keyboard focus should land on "Equation edit field" on activating "Back" button.	MicrosoftIssueBot	null	null	null	null	null	null	
2020-03-31 19:48:16.0	2020-05-26 16:34:46.0	2020-12-02 12:01:43.0	closed	[Bug, Area: Accessibility, Pri: 3, fixed]	1	1126	Name of ‘Analyze equation' pane is not defined	https://api.github.com/repos/microsoft/calculator/issues/1126	https://github.com/microsoft/calculator/issues/1126	**Repro Steps:**   1. Launch 'Calculator' and turn on narrator.   2. Home screen will be displayed.​  3. Navigate through Menu using keyboard and select 'Graphing'. 'Graphing' Calculator opens.​  4. Navigate to equation edit filed and pressed context key.  5. Navigate to "Analyze equation" button and activate it.  6. “Key graph feature” pop up will open.   7. Observe the issue.    **Actual Result:**  Name of ‘Analyze equation' pane is not defined. Narrator does read the name of “Key graph feature” pane when it opens after activating “Analyze equation” button.    **Expected Result:**  Name of ‘Analyze equation' pane should be defined. Narrator should read the name of “Key graph feature” pane when it opens after activating “Analyze equation” button.	MicrosoftIssueBot	null	null	null	null	null	null	
2020-03-31 19:48:20.0	2020-04-14 19:37:01.0	2020-12-02 12:01:42.0	closed	[Bug, Area: Accessibility, fixed, Pri: 1]	1	1127	Name property is not defined for “Inequalities” button in graphing mode	https://api.github.com/repos/microsoft/calculator/issues/1127	https://github.com/microsoft/calculator/issues/1127	**Repro Steps:**   1. Launch 'Calculator' and turn on narrator.   2. Home screen will be displayed.​  3. Navigate through Menu using keyboard and select 'Graphing'. 'Graphing' Calculator opens.​  4. Navigate to "Inequalities" combo box.  5. Observe the issue.    **Actual Result:**  Name property is not defined for “Inequalities” button.    **Expected Result:**  Name property should be defined for “Inequalities” button.	MicrosoftIssueBot	null	null	null	null	null	null	
2020-03-31 19:48:23.0	null	2021-07-22 09:03:13.0	open	[Bug, Area: Accessibility, Pri: 3, triage approved, Area: User Experience]	1	1128	Narrator focus goes twice on 'Inequalities' and 'Function' combo boxes in scan mode in Graphing Mode	https://api.github.com/repos/microsoft/calculator/issues/1128	https://github.com/microsoft/calculator/issues/1128	**Repro Steps:**   1. Launch 'Calculator' and turn on narrator.   2. Home screen will be displayed.​  3. Navigate through Menu using keyboard and select 'Graphing'. 'Graphing' Calculator opens.​  4. Navigate to 'Inequalities' and 'Function' combo boxes.  5. Observe the issue.    **Actual Result:**  Narrator focus goes twice on 'Inequalities' and 'Function' combo boxes in scan mode.    **Expected Result:**  Narrator focus should go once on 'Inequalities' and 'Function' combo boxes in scan mode.     **Note:**  Issue is repro throughout the app. Same issue is repro in item mode.	MicrosoftIssueBot	null	null	null	null	null	null	
2020-03-31 19:48:27.0	2020-04-14 19:37:01.0	2020-12-02 12:01:41.0	closed	[Bug, Area: Accessibility, fixed, Pri: 1]	1	1129	Name property is not defined for all the controls which are present in "Inequalities" and "Function" panes in graphing mode	https://api.github.com/repos/microsoft/calculator/issues/1129	https://github.com/microsoft/calculator/issues/1129	**Repro Steps:**   1. Launch 'Calculator' and turn on narrator.   2. Home screen will be displayed.​  3. Navigate through Menu using keyboard and select 'Graphing'. 'Graphing' Calculator opens.​  4. Navigate to 'Inequalities' and 'Function' combo boxes and activate it.  5. Verify the name property via accessibility insights tool.   6. Observe the issue.    **Actual Result:**  Name property is not defined for all controls which are present in "Inequalities" and "Function" panes.    **Expected Result:**  Name property should defined for all controls which are present in "Inequalities" and "Function" panes. 	MicrosoftIssueBot	null	null	null	null	null	null	
2020-03-31 19:48:30.0	null	2021-07-22 09:03:15.0	open	[Bug, Area: Accessibility, Pri: 3, triage approved, Area: User Experience]	1	1130	Luminosity ratio for edit field boundary is 2.8:1 which is less than 3:1 after filling incorrect value in edit field	https://api.github.com/repos/microsoft/calculator/issues/1130	https://github.com/microsoft/calculator/issues/1130	**Repro Steps:**     1. Launch 'Calculator'.  2. Home screen will be displayed.​  3. Navigate through Menu using keyboard and select 'Graphing'. 'Graphing' Calculator opens.​  4. Navigate to 'Grid Options' button and activate it.  5. Graph options pop up will open.   6. Navigate to edit field and fill incorrect value.  7. Verify the luminosity of edit field using color contrast analyzer tool.  8. Observe the issue.    **Actual Result:**  Luminosity ratio for edit field boundary is 2.8:1 which is less than 3:1 after filling incorrect value in edit field.    **Expected Result:**  Luminosity ratio for edit field boundary should be minimum 3:1 after filling incorrect value in edit field. To achieve this, we should not update the background color of the textbox and leverage ```SystemControlErrorTextForegroundBrush``` as the border color.    ![image](https://user-images.githubusercontent.com/1414423/78102795-0b506080-73a0-11ea-8b9f-f617147dd3b5.png)	MicrosoftIssueBot	null	null	null	null	null	null	
2020-03-31 19:48:34.0	null	2021-05-26 10:06:20.0	open	[Bug, Area: Accessibility, Pri: 3, triage approved]	4	1131	Luminosity ratio for 'Expand' icon button is 2.4:1 which is less than 3:1	https://api.github.com/repos/microsoft/calculator/issues/1131	https://github.com/microsoft/calculator/issues/1131	**Repro Steps:**     1. Launch 'Calculator'.  2. Home screen will be displayed.​  3. Navigate through Menu using keyboard and select 'Graphing'. 'Graphing' Calculator opens.​  4. Navigate to the Expand icon button below sliders.  5. Verify the luminosity of the Expand icon button using color contrast analyzer tool.  6. Observe the issue.     **Actual Result:**  Luminosity ratio for 'Expand' icon button is 2.4:1 which is less than 3:1.    **Expected Result:**  Luminosity ratio for 'Expand' icon button should be minimum 3:1.    ![image](https://user-images.githubusercontent.com/1414423/78102697-caf0e280-739f-11ea-9d61-f8dfedaefdd0.png)	MicrosoftIssueBot	null	null	null	null	null	null	
2020-03-31 19:48:37.0	2020-05-05 17:20:06.0	2020-12-02 12:01:40.0	closed	[Bug, Area: Accessibility, won't fix, Pri: 2]	1	1132	Luminosity ratio for "Hide" button is 2.5:1 which is less than 3:1	https://api.github.com/repos/microsoft/calculator/issues/1132	https://github.com/microsoft/calculator/issues/1132	**Repro Steps**  1. Launch 'Calculator'.  2. Home screen will be displayed.​  3. Navigate through Menu using keyboard and select 'Graphing'.   4. Navigate to hide button.  5. Check luminosity ratio for hide button using color contrast analyzer tool. ​  6. Observe the issue.     **Actual Result:**  Luminosity ratio for "Hide" button is 2.5:1 which is less than 3:1.    **Expected Result:**  Luminosity ratio for "Hide" button should be minimum 3:1.    ![image](https://user-images.githubusercontent.com/1414423/78102533-63d32e00-739f-11ea-95ab-3e278d62a1e6.png)	MicrosoftIssueBot	null	null	null	null	null	null	
2020-03-31 22:23:44.0	2020-04-09 20:16:06.0	2020-05-26 21:46:30.0	closed	[graphing calculator]	0	1133	Add Automation Names to UI Elements in EquationInputArea and KGF Panel	https://api.github.com/repos/microsoft/calculator/issues/1133	https://github.com/microsoft/calculator/pull/1133	## Fixes #1124, Fixes #1103, Fixes #1101, Fixes #1102.      ### Description of the changes:  - Added automation names for the EquationInputPanel and the elements inside it  - Added automation names to the Variable area including the textboxes and slider  - Added the automation name for the KGF Equation Edit Box and updated the back button automation name and tooltip to be more descriptive.    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - manually tested using accessibility insights and narrator    	sanderl	null	null	null	null	null	null	
2020-03-31 22:45:18.0	2020-04-01 18:18:05.0	2020-04-01 18:18:05.0	closed	[]	1	1134	Revert dual screen	https://api.github.com/repos/microsoft/calculator/issues/1134	https://github.com/microsoft/calculator/pull/1134	## Revert #1029      ### Description of the changes:  - Temporary revert the dual screen experiment (will be added back with new patches in a couple of days)    ### How changes were validated:  - Manually    	rudyhuyn	null	null	null	null	null	null	
2020-03-31 22:47:33.0	2020-04-07 18:20:15.0	2020-12-02 12:01:39.0	closed	[Bug, Area: Accessibility, fixed, Pri: 2]	1	1135	Remove Equation Button needs a confirmation announcement when the button is clicked	https://api.github.com/repos/microsoft/calculator/issues/1135	https://github.com/microsoft/calculator/issues/1135	**Repro Steps: ​​**  1. Launch "Calculator" app and turn on narrator.  2. Home screen will be displayed.​  3. Navigate to menu button and activate it.​  4. Navigate to "Graphing" calculator and activate it.​  5. Navigate to "Remove equation" button in the context menu and activate it.  6. Observe the issue.    **Actual Result:​**  Narrator does not provide the confirmation feedback on activating "Remove equation" button in the context menu.    **Expected Result:​**  Narrator should provide the confirmation as "Equation removed" on activating "Remove equation" button in the context menu.	MicrosoftIssueBot	null	null	null	null	null	null	
2020-03-31 23:03:55.0	2020-04-07 18:20:15.0	2020-05-26 21:46:37.0	closed	[graphing calculator]	0	1136	Function Remove Narrator Announcement Added	https://api.github.com/repos/microsoft/calculator/issues/1136	https://github.com/microsoft/calculator/pull/1136	## Fixes #1135.      ### Description of the changes:  - Added a narrator announcement when the remove function button is clicked      ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - manually with narrator      	sanderl	null	null	null	null	null	null	
2020-04-01 06:50:34.0	2020-04-01 06:53:42.0	2020-12-02 12:01:38.0	closed	[won't fix]	1	1137	Uncertainty	https://api.github.com/repos/microsoft/calculator/issues/1137	https://github.com/microsoft/calculator/issues/1137	<!--  See https://github.com/Microsoft/calculator/blob/master/docs/NewFeatureProcess.md for suggestions on how to write a good feature pitch. Just want to submit an idea quickly? Try Feedback Hub instead: https://insider.windows.com/en-us/fb/?contextid=130  -->    **Problem Statement**  <!--  What problem are we trying to solve? Who’s the target audience? Is there a customer need or pain point we need to remedy? Is there a business goal or metric we are trying to improve? Do we have a hypothesis we want to prove or disprove?  -->    **Evidence or User Insights**  <!--  Why should we do this? Potential sources of data: Feedback Hub, other GitHub issues, other anecdotes from listening to customers in person or online, request from another team, telemetry data, user research, market or competitive research  -->    **Proposal**  <!--  How will the solution/feature help us solve the problem? How will it meet the target audience’s needs? If there are business goals or metrics, how does this improve them?  -->    **Goals**  <!--  What you want to accomplish with this feature. Typical examples include  "User Can *perform some task*"  -->    **Non-Goals**  <!--  Things we are explicitly not doing or supporting or that are out of scope, including reasons why.  -->    **Low-Fidelity Concept**  <!--  Show as much of the experience as needed to explain the idea. This can be as simple as a napkin drawing but can also be a code prototype, or a design comp. Keep it simple at this stage, as it can be refined later during the pre-production stage.  -->    **Requested Assignment**  <!--  Some people just want to suggest a feature and let someone else implement it.  Other people want to not only suggest a feature, but implement it as well.  Both scenarios are completely ok. We just want to know which one it is.  We are likely to prioritize the review of feature requests if they already have someone who can implement them.  Please indicate which bucket you fall into by keeping one and removing the other.  -->  If possible, I would like to implement this.  I'm just suggesting this idea.  I don't want to implement it.  	Adam2611	null	null	null	null	null	null	
2020-04-01 06:58:31.0	2020-04-01 06:59:31.0	2020-12-02 12:01:37.0	closed	[won't fix]	1	1138	Uncertainty in Certain Calculations	https://api.github.com/repos/microsoft/calculator/issues/1138	https://github.com/microsoft/calculator/issues/1138	<!--  See https://github.com/Microsoft/calculator/blob/master/docs/NewFeatureProcess.md for suggestions on how to write a good feature pitch. Just want to submit an idea quickly? Try Feedback Hub instead: https://insider.windows.com/en-us/fb/?contextid=130  -->    **Problem Statement**  <!--  We can add uncertainties to certain scientific calculations that require precise calculations, such as physics.  -->    **Evidence or User Insights**  <!--  This would help scientists/researchers that take precise measurements.  -->    **Proposal**  <!--  Create a function/mode that allows users to input uncertainties for values (absolute/relative)  -->        **Low-Fidelity Concept**  <!--  For example:   When multiplying absolute uncertainties:                   (A A)  (B B) = (AB)  (AA100%+BB100%)   (0.050  0.001)  (9.81  0.01) = (0.050 9.81)  (0.0010.050100% + 0.019.81100%)                                                           = (0.050 9.81)  (2.0000% + 0.10194%)                                                           = (0.050 9.81)  (2.10194%)                                                           = (0.4905)  (2.10194%)                                                           = (0.4905)  (0.010310)                                                           = (0.49) (N)  (0.01)      **Requested Assignment**  I'm just suggesting this idea.  I don't want to implement it.  	Adam2611	null	null	null	null	null	null	
2020-04-01 07:06:31.0	null	2021-09-30 09:05:45.0	open	[Enhancement, Pri: 2, needs spec]	8	1139	Uncertainty Calculations Within Precise Calculations	https://api.github.com/repos/microsoft/calculator/issues/1139	https://github.com/microsoft/calculator/issues/1139	<!--  See https://github.com/Microsoft/calculator/blob/master/docs/NewFeatureProcess.md for suggestions on how to write a good feature pitch. Just want to submit an idea quickly? Try Feedback Hub instead: https://insider.windows.com/en-us/fb/?contextid=130  -->    **Problem Statement**  This calculator does not have ability to compute uncertainties in precise measurements. Scientists/researchers need these to compute very precise measurements.  <!--  What problem are we trying to solve? Who’s the target audience? Is there a customer need or pain point we need to remedy? Is there a business goal or metric we are trying to improve? Do we have a hypothesis we want to prove or disprove?  -->    **Evidence or User Insights**  This would help scientists/researchers/even high school science students with their measurements.   <!--  Why should we do this? Potential sources of data: Feedback Hub, other GitHub issues, other anecdotes from listening to customers in person or online, request from another team, telemetry data, user research, market or competitive research  -->    **Proposal**  Create a function/mode that will allow users to input the uncertainties needed for the calculations (absolute/relative)  <!--  How will the solution/feature help us solve the problem? How will it meet the target audience’s needs? If there are business goals or metrics, how does this improve them?  -->      <!--  What you want to accomplish with this feature. Typical examples include  "User Can *perform some task*"  -->      <!--  Things we are explicitly not doing or supporting or that are out of scope, including reasons why.  -->    **Low-Fidelity Concept**  <!--  Show as much of the experience as needed to explain the idea. This can be as simple as a napkin drawing but can also be a code prototype, or a design comp. Keep it simple at this stage, as it can be refined later during the pre-production stage.  -->  For example:  When multiplying absolute uncertainties:                   (A +- deltaA)  (B+-deltaB) = (A timesB) +- (deltaA/Atimes100%+deltaB/Btimes100%)   (0.050 +-0.001)  (9.81 +-0.01) = (0.050+- 9.81)  (0.001/0.050 times100% + 0.01/9.81 times100%)                                                           = (0.050+- 9.81) +-(2.0000% + 0.10194%)                                                           = (0.050 9.81) +- (2.10194%)                                                           = (0.4905) +- (2.10194%)                                                           = (0.4905) +- (0.010310)                                                           = (0.49) +-  (0.01)    This feature would also have to be linked with significant digits, because uncertainties and sigfigs are closely related.     **Requested Assignment**  <!--  Some people just want to suggest a feature and let someone else implement it.  Other people want to not only suggest a feature, but implement it as well.  Both scenarios are completely ok. We just want to know which one it is.  We are likely to prioritize the review of feature requests if they already have someone who can implement them.  Please indicate which bucket you fall into by keeping one and removing the other.  -->    I'm just suggesting this idea.  I don't want to implement it.  	Adam2611	null	null	null	null	null	null	
2020-04-01 07:41:05.0	2020-04-01 14:39:16.0	2020-12-02 12:01:36.0	closed	[Enhancement]	3	1140	Another button to Help with Log Calculations	https://api.github.com/repos/microsoft/calculator/issues/1140	https://github.com/microsoft/calculator/issues/1140	<!--  See https://github.com/Microsoft/calculator/blob/master/docs/NewFeatureProcess.md for suggestions on how to write a good feature pitch. Just want to submit an idea quickly? Try Feedback Hub instead: https://insider.windows.com/en-us/fb/?contextid=130  -->    **Problem Statement**  Currently, I believe that the calculator can only do log questions assuming a base of 10. However, this is often not the case, as other bases can be used, such as 2 for example.     <!--  What problem are we trying to solve? Who’s the target audience? Is there a customer need or pain point we need to remedy? Is there a business goal or metric we are trying to improve? Do we have a hypothesis we want to prove or disprove?  -->    **Evidence or User Insights**  This would help users solve more questions and use this calculator, instead of a physical scientific one.   <!--  Why should we do this? Potential sources of data: Feedback Hub, other GitHub issues, other anecdotes from listening to customers in person or online, request from another team, telemetry data, user research, market or competitive research  -->    **Proposal**  Perhaps there could be a log (base) a (argument) b, as in log (a in the subscript area) b. This would give more diversity to the log function, as base 10 is not the only base needed.   <!--  How will the solution/feature help us solve the problem? How will it meet the target audience’s needs? If there are business goals or metrics, how does this improve them?  -->      **Low-Fidelity Concept**  old: log(16) = log base 10 (16)  = about 1.204  new: log base 2 (16) = 4    <!--  Show as much of the experience as needed to explain the idea. This can be as simple as a napkin drawing but can also be a code prototype, or a design comp. Keep it simple at this stage, as it can be refined later during the pre-production stage.  -->      **Requested Assignment**  <!--  Some people just want to suggest a feature and let someone else implement it.  Other people want to not only suggest a feature, but implement it as well.  Both scenarios are completely ok. We just want to know which one it is.  We are likely to prioritize the review of feature requests if they already have someone who can implement them.  Please indicate which bucket you fall into by keeping one and removing the other.  -->    I'm just suggesting this idea.  I don't want to implement it.  	Adam2611	null	null	null	null	null	null	
2020-04-01 23:00:03.0	2020-04-02 19:53:22.0	2020-05-26 21:46:40.0	closed	[graphing calculator]	0	1141	Set focus on EquationTextBox when KGF Back Button Pressed	https://api.github.com/repos/microsoft/calculator/issues/1141	https://github.com/microsoft/calculator/pull/1141	## Fixes #1125.      ### Description of the changes:  - Set the focus on the equation text box of the analyzed function when the back button is clicked.    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - manually    	sanderl	null	null	null	null	null	null	
2020-04-02 16:36:53.0	2020-04-02 17:27:41.0	2020-05-26 21:46:33.0	closed	[]	0	1142	Update calculator version to 2003	https://api.github.com/repos/microsoft/calculator/issues/1142	https://github.com/microsoft/calculator/pull/1142	### Description of the changes:  - Updates the calculator version to 2003    	sanderl	null	null	null	null	null	null	
2020-04-02 17:18:31.0	2020-04-02 22:02:03.0	2020-12-02 12:01:35.0	closed	[Area: Reliability, not repro, Pri: 1]	2	1143	Crash when clicking F-E button in scientific mode	https://api.github.com/repos/microsoft/calculator/issues/1143	https://github.com/microsoft/calculator/issues/1143	**Describe the bug**  Crash when clicking F-E button in scientific mode    **Steps To Reproduce**  1. Open scientific mode  2. Press F-E button    	joseartrivera	null	null	null	null	null	null	
2020-04-02 17:19:31.0	2020-05-26 17:59:07.0	2020-12-02 12:01:34.0	closed	[Bug, Area: User Experience, fixed, Pri: 2]	2	1144	Alt Key shortcuts still work in AoT mode	https://api.github.com/repos/microsoft/calculator/issues/1144	https://github.com/microsoft/calculator/issues/1144	**Describe the bug**  Alt Key shortcuts still work in AoT mode, allowing users to switch to different modes while in AoT, resulting in broken UI.    **Steps To Reproduce**  1. Toggle AoT  2. Press Alt + 2, 3, or 4  	joseartrivera	null	null	null	null	null	null	
2020-04-02 17:23:15.0	2020-04-14 19:37:01.0	2020-05-26 21:46:28.0	closed	[graphing calculator]	0	1145	Add Automation Names to the GraphNumPad	https://api.github.com/repos/microsoft/calculator/issues/1145	https://github.com/microsoft/calculator/pull/1145	## Fixes #1127, Fixes #1129.      ### Description of the changes:  - Adds automation names to all of the buttons in the GraphNumPad  - Disables KeyboardShortCuts when entering graphing mode    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - manually testing the shortcuts are active on non-graphing modes  - manually using accessibility insights  	sanderl	null	null	null	null	null	null	
2020-04-02 19:00:29.0	2020-04-02 19:52:53.0	2020-05-26 21:46:32.0	closed	[graphing calculator]	0	1146	Update default min/max values for variables	https://api.github.com/repos/microsoft/calculator/issues/1146	https://github.com/microsoft/calculator/pull/1146	## Fixes #1068.      ### Description of the changes:  - Update default min/max values to -5 and 5.    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - manually    	sanderl	null	null	null	null	null	null	
2020-04-02 21:16:21.0	2020-04-06 21:23:25.0	2020-07-14 02:29:45.0	closed	[]	0	1147	Revert "Revert WinUI version back to 2.2"	https://api.github.com/repos/microsoft/calculator/issues/1147	https://github.com/microsoft/calculator/pull/1147	Reverts microsoft/calculator#1113    We can now use WinUI 2.3 in Calculator, let's revert this temporary PR.	rudyhuyn	null	null	null	null	null	null	
2020-04-02 23:09:23.0	2020-04-22 00:44:09.0	2020-04-22 00:44:09.0	closed	[graphing calculator]	2	1148	Change trace point value precision to be dynamic based on graph scale	https://api.github.com/repos/microsoft/calculator/issues/1148	https://github.com/microsoft/calculator/pull/1148	## Fixes #998    ### Description of the changes:  Change trace point value to be dynamic based on display range    ### How changes were validated:  Manual tests  	joseartrivera	null	null	null	null	null	null	
2020-04-03 15:28:30.0	2020-04-14 19:37:24.0	2020-05-26 21:46:32.0	closed	[graphing calculator]	0	1149	Update Icons Implement the Graph View Button	https://api.github.com/repos/microsoft/calculator/issues/1149	https://github.com/microsoft/calculator/pull/1149	## Fixes #1070, Fixes #995.      ### Description of the changes:  - Updated the icon font and updated the function analysis and negate icons  - Changed the zoom reset button to graph view with automatic best fit and manual adjustment  - Fixed bug where the window ranges in graph settings didn't update after panning or zooming    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - manual    	sanderl	null	null	null	null	null	null	
2020-04-03 16:58:35.0	2020-04-16 20:37:28.0	2020-12-02 12:01:33.0	closed	[Area: Reliability, fixed, Pri: 2]	1	1150	Graphing mode crashes when switching to high contrast after deleting an equation	https://api.github.com/repos/microsoft/calculator/issues/1150	https://github.com/microsoft/calculator/issues/1150	**Describe the bug**  Graphing mode crashes when switching to high contrast after deleting an equation    **Steps To Reproduce**  1. Open graph mode  2. Graph 2 equations  2. Delete one  3. Switch to high contrast  	joseartrivera	null	null	null	null	null	null	
2020-04-05 18:04:04.0	null	2021-05-26 10:06:25.0	open	[Bug, triage approved, Area: User Experience, Pri: 2]	1	1151	When in Tablet Mode, the Calculator's interface slides down to show titlebar instead of overlaying the titlebar on top.	https://api.github.com/repos/microsoft/calculator/issues/1151	https://github.com/microsoft/calculator/issues/1151	<!--  Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.  -->    **Describe the bug**  When in Tablet Mode, the Calculator's interface slides down to show titlebar instead of overlaying the titlebar on top.    **Steps To Reproduce**  Start Calculator in Tablet Mode, try to access the Title bar at the top of the screen, when the title bar appears, the entire interface slides down.  Steps to reproduce the behavior:    1. Star Calculator while in Tablet Mode'  2. Access the Title Bar which is hidden at the top the screen.  3. See the entire interface slide down.    **Expected behavior**  The interface should display the Title Bar over the interface.    **Screenshots**  <!-- If applicable, add screenshots to help explain your problem. -->  ![Calculator-2020-04-05-13-50-17](https://user-images.githubusercontent.com/51347950/78506104-6e961600-7745-11ea-84e5-add393d6d651.gif)    **Device and Application Information**   - OS Build: 10.0.19592.0   - Architecture: X64   - Application Version: 10.2001.41.0   - Region: en-US     - Dev Version Installed: False   - OS Build: 10.0.19592.0   - Architecture: X64   - Application Version: 10.2001.41.0   - Region: en-US   - Dev Version Installed: False  **Additional context**  <!-- Add any other context about the problem here. -->    **Requested Assignment**  <!--  Some people just want to report a bug and let someone else fix it.  Other people want to not only submit the bug report, but fix it as well.  Both scenarios are completely ok. We just want to know which one it is.  Please indicate which bucket you fall into by keeping one and removing the other.  -->    I'm just reporting this problem.  I don't want to fix it.  	shaheedmalik	null	null	null	null	null	null	
2020-04-06 17:24:22.0	2020-04-09 19:24:26.0	2020-04-09 19:24:26.0	closed	[graphing calculator]	0	1152	Fix crash when using "C" key to clear equation	https://api.github.com/repos/microsoft/calculator/issues/1152	https://github.com/microsoft/calculator/pull/1152	## Fixes #1112      ### Description of the changes:  - Prevent submitting empty equations besides the initial clear to erase the equation    ### How changes were validated:  - Manual tests    	joseartrivera	null	null	null	null	null	null	
2020-04-07 23:05:06.0	2020-05-09 01:50:23.0	2020-12-02 12:01:32.0	closed	[Bug, Area: User Experience, fixed, Pri: 1]	1	1153	Navigating back from function analysis or right-clicking an unfocused EquationEditbox results in invisible text on dark mode	https://api.github.com/repos/microsoft/calculator/issues/1153	https://github.com/microsoft/calculator/issues/1153	When navigating back from function analysis in dark theme, equation text is invisible until you click into the text edit area.    or     Right-click on an equation edit box that does not currently have focus, the text is no longer visible.	MicrosoftIssueBot	null	null	null	null	null	null	
2020-04-07 23:36:40.0	2020-04-09 23:58:09.0	2020-04-09 23:58:09.0	closed	[graphing calculator]	0	1154	Recycle equation colors when no longer in use	https://api.github.com/repos/microsoft/calculator/issues/1154	https://github.com/microsoft/calculator/pull/1154	## Fixes #991      ### Description of the changes:  - Assign equation colors starting with the first unused color    ### How changes were validated:  - Manual tests    	joseartrivera	null	null	null	null	null	null	
2020-04-08 00:07:00.0	2020-05-05 17:20:06.0	2020-05-26 21:46:28.0	closed	[graphing calculator]	0	1155	Updated EquationButton contrast fixed dark mode foreground color bugs	https://api.github.com/repos/microsoft/calculator/issues/1155	https://github.com/microsoft/calculator/pull/1155	## Fixes #1132    ### Description of the changes:  - Updates the foreground color on the equation button using a luminosity algorithm to create the correct contrast    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - manually  	sanderl	null	null	null	null	null	null	
2020-04-08 05:26:04.0	2020-08-12 16:27:41.0	2020-08-12 16:27:41.0	closed	[]	1	1156	Add dual-screen support to all views	https://api.github.com/repos/microsoft/calculator/issues/1156	https://github.com/microsoft/calculator/pull/1156	Add dual screen support to all views.    ![image](https://user-images.githubusercontent.com/1226538/78747633-b9b75100-791e-11ea-9864-f0d99032efd2.png)  ![image](https://user-images.githubusercontent.com/1226538/78747637-bc19ab00-791e-11ea-864a-843900af5720.png)    ![image](https://user-images.githubusercontent.com/1226538/78747628-b1f7ac80-791e-11ea-97f0-106da4819ce1.png)  ![image](https://user-images.githubusercontent.com/1226538/78747630-b754f700-791e-11ea-802d-671ba64e0944.png)      ### Description of the changes:  - Cherry-pick of #1027 (first commit)  - Replace all enums from WinUI with enums declared locally ([second commit](https://github.com/microsoft/calculator/pull/1156/commits/8b5fcae3427cc2ea6e352052163d2c5bf407e318))    ### Original Description    - Add new StateTrigger detecting the different view modes  - Add a fork of TwoPaneView in C++CX for 2 reasons:       - The fix for C++ apps (crash when navigating) isn't available for the moment       - Add Pane1MinLength, Pane1MaxLength, Pane2MinLength, Pane2MaxLength properties  - Merge Visual State Group of Unit Converter, causing some issues due to conflicts  - Add DeviceFamilyHelper    **Other changes**  Visual states of Calculator.xaml had some collisions, the states related to AOT (https://github.com/microsoft/calculator/blob/master/src/Calculator/Views/Calculator.xaml#L521) and the states related to CalculationResult (https://github.com/microsoft/calculator/blob/master/src/Calculator/Views/Calculator.xaml#L544) were both triggered by the same type of trigger (window resizing), without checking if the app was AOT or not, and were modifying the same properties which caused some layouts issues.    In order to solve this problem, which also affects dual screens, we have replaced the StateTriggers used in AOT visual states with ApplicationViewModeTrigger in order to activate them only when the application is actually AOT.    ### How changes were validated:  - manually on 10 and 10X     	rudyhuyn	null	null	null	null	null	null	
2020-04-08 20:02:42.0	2020-04-24 17:03:05.0	2020-04-24 17:03:05.0	closed	[]	2	1157	Set IsTextScaleFactorEnabled to true for HEX, DEC, OCT, BIN buttons	https://api.github.com/repos/microsoft/calculator/issues/1157	https://github.com/microsoft/calculator/pull/1157	## Fixes #801      ### Description of the changes:  - Set IsTextScaleFactorEnabled to true for HEX, DEC, OCT, BIN buttons      ### How changes were validated:  - Manual tests    	joseartrivera	null	null	null	null	null	null	
2020-04-08 21:24:30.0	2020-04-14 22:51:18.0	2020-12-02 12:01:31.0	closed	[Bug, Area: User Experience, fixed, Pri: 1]	1	1158	In graphing mode, hidden equations become visible after losing focus	https://api.github.com/repos/microsoft/calculator/issues/1158	https://github.com/microsoft/calculator/issues/1158	**Steps To Reproduce**  1. Open graphing mode and graph y=x in f(1)  2. Click f(1) to hide the equation  3. Click into the f(1) text box  4. Click into the f(2) text box below  5. Upon f(1) losing focus it becomes visible, and the toggled state is inversed.  	joseartrivera	null	null	null	null	null	null	
2020-04-09 22:58:41.0	2020-04-15 19:42:32.0	2020-05-26 21:46:28.0	closed	[graphing calculator]	0	1159	Fixed crash when in high contrast	https://api.github.com/repos/microsoft/calculator/issues/1159	https://github.com/microsoft/calculator/pull/1159	## Fixes ##1150.      ### Description of the changes:  - Fixed the issue where the colors were not being reassigned when switching to high contrast, which caused a crash.    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - manually  	sanderl	null	null	null	null	null	null	
2020-04-10 00:06:22.0	2020-05-07 23:36:53.0	2020-12-02 12:01:30.0	closed	[Bug, Area: User Experience, fixed, Pri: 2]	1	1160	Update tooltips for the EquationButton and add them to the Color picker colors	https://api.github.com/repos/microsoft/calculator/issues/1160	https://github.com/microsoft/calculator/issues/1160	Update the equation button automation name and tooltip to use different resource items and add tooltips to the colors in the style picker.	MicrosoftIssueBot	null	null	null	null	null	null	
2020-04-10 06:01:54.0	2020-04-30 19:04:34.0	2020-04-30 19:04:34.0	closed	[]	0	1161	Remove LRE/LRO characters from results and error messages	https://api.github.com/repos/microsoft/calculator/issues/1161	https://github.com/microsoft/calculator/pull/1161	## Fixes #504   Calculation results, Memory items, History items and error messages should be displayed LtoR whatever the current culture.    To this end, the current version of the code relies on ViewModels to format the string and add special characters (0x202a, 0x202c or 0x202d) to force Xaml to display the text left-to-right.    This implementation isn't ideal and case many issues with the clipboard when users try to copy-paste the result of a calculation.    This PR will move the management of the direction of the text-flow from the data (strings in view-models) to the UI renderer using the XAML property `FlowDirection`.    Now that the strings are exempt of special characters, copy-paste will work correctly, whatever the application destination.    ### Description of the changes:  - remove all special characters to force a flow direction from all strings in view-models.  - force controls displaying these strings to render the data left-to-right    _Example of the UI when we only remove the special characters_  ![image](https://user-images.githubusercontent.com/1226538/78966886-cd48f000-7ab5-11ea-9924-d927cfca993d.png)    _After we force Xaml to render controls left-to-right_  ![image](https://user-images.githubusercontent.com/1226538/78966917-e5207400-7ab5-11ea-9bac-345ec1f420c3.png)      ### How changes were validated:  - tested in English, arabian and hebrew.    	rudyhuyn	null	null	null	null	null	null	
2020-04-10 08:04:00.0	2020-04-10 18:23:43.0	2020-04-10 18:23:43.0	closed	[]	0	1162	Fix bug preventing the app to launch from the start menu when compiled in debug	https://api.github.com/repos/microsoft/calculator/issues/1162	https://github.com/microsoft/calculator/pull/1162	Also remove the `Assert` at launch when debugging with VS.    ![image](https://user-images.githubusercontent.com/1226538/78974264-77307880-7ac6-11ea-8e27-ca6cd8955a3d.png)    ### Reason  The lock in `LocalizationService::GetInstance` was blocking the launch of the app because called too early during the initialization of the app.    This call was made by the static map `GraphingNumPad:buttonOutput` initialized during the launch, even when Graphing Calculator wasn't the selected mode.     ### Description of the changes:  - load the map just-in-time, only when users will click on one of the button    ### Impact    It should improve the performance of the application launch.    ### How changes were validated:  - manually    	rudyhuyn	null	null	null	null	null	null	
2020-04-10 18:36:22.0	2020-05-07 23:36:53.0	2020-05-26 21:46:09.0	closed	[graphing calculator]	3	1163	Update tooltips for the Equation Button and Style Picker	https://api.github.com/repos/microsoft/calculator/issues/1163	https://github.com/microsoft/calculator/pull/1163	## Fixes #1160.      ### Description of the changes:  - Updates the equation button automation name and tooltip to use different resource items  - Add tooltips to the colors in the style picker  - Fixed the issue where the white color has the wrong automation name    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - manually with narrator and validated the tooltips  	sanderl	null	null	null	null	null	null	
2020-04-10 22:20:29.0	2020-05-08 17:31:02.0	2020-12-02 12:01:29.0	closed	[Bug, Area: User Experience, fixed, Pri: 1]	1	1164	Cannot graph sin(x) when sin is used from the graph keyboard	https://api.github.com/repos/microsoft/calculator/issues/1164	https://github.com/microsoft/calculator/issues/1164	  **Describe the bug**  Cannot graph sin(x) when sin is used from the graph keyboard. Seems like the graph engine recognizes the i in this case as a variable instead of a sin function.    **Steps To Reproduce**  1. Go to graphing mode  2. Go to trig flyout, select Sin  3. Click the X button to fill in sin(x)  4. Hit enter    **Expected behavior**  sin(x) graphs same as typing it in manually    **Screenshots**  ![image](https://user-images.githubusercontent.com/6334170/79026778-c0bcaa00-7b3e-11ea-9b04-25a0a049c304.png)  	joseartrivera	null	null	null	null	null	null	
2020-04-12 11:03:41.0	2020-04-14 05:03:01.0	2020-12-02 12:01:28.0	closed	[Area: User Experience, duplicate, Pri: 2]	2	1165	The history button got stacked with the status bar	https://api.github.com/repos/microsoft/calculator/issues/1165	https://github.com/microsoft/calculator/issues/1165	**Describe the bug**  The history button got stacked with the status bar.    **Steps To Reproduce**  Not pretty sure how to reproduce, but there is one way:  1. My keyboard is Microsoft 900 or something, it has the Calculator key on the right side of F12.  2. Press the Calculator key twice and press the Delete/Backspace key.  3. The history button of the Calculator interface show at first stacked and then moved down, but if you press the Delete/Backspace key, it would not go down.    **Screenshots**  ![calc](https://user-images.githubusercontent.com/19504567/79067090-aece3900-7cef-11ea-85aa-b7aa615a9285.PNG)      **Device and Application Information**   - OS Build: 10.0.18363.0   - Architecture: X64   - Application Version: 10.1910.0.0   - Region: zh-CN   - Dev Version Installed: False    **Additional context**  This is a strange bug I found when I am using VSCode and accidentally press the Calculator key instead of the Backspace key(they are pretty close). Then this bug happened.    **Requested Assignment**  I'm just reporting this problem.  I don't want to fix it.  	ZsgsDesign	null	null	null	null	null	null	
2020-04-13 06:48:00.0	2020-06-02 02:00:30.0	2020-06-02 02:00:30.0	closed	[]	2	1166	Replace the short-life certificate with long-life one	https://api.github.com/repos/microsoft/calculator/issues/1166	https://github.com/microsoft/calculator/pull/1166	### Description of the changes:  - Replace the short-life certificate (1 year) with a long-life one (2075), also used by other Microsoft apps.  - Update `CalculatorUnitTests` to use the same certificate than `Calculator Dev`     ### How changes were validated:  - manually    	rudyhuyn	null	null	null	null	null	null	
2020-04-13 23:01:42.0	2020-04-14 22:51:18.0	2020-04-14 22:51:18.0	closed	[graphing calculator]	2	1167	Fix equation automatically becoming enabled on focus lost	https://api.github.com/repos/microsoft/calculator/issues/1167	https://github.com/microsoft/calculator/pull/1167	## Fixes #1158    ### Description of the changes:  - Hook up IsEquationLineDisabled to the view model  - Only enable equations on submit from enter key     ### How changes were validated:  - Manual tests    	joseartrivera	null	null	null	null	null	null	
2020-04-14 05:02:07.0	null	2021-05-26 10:06:05.0	open	[Bug, Pri: 3, triage approved, Area: User Experience]	1	1168	Calculator window can be re-sized off screen when in Always-on-Top mode, making it impossible to interact with the window	https://api.github.com/repos/microsoft/calculator/issues/1168	https://github.com/microsoft/calculator/issues/1168	**Repro Steps:**  1. Launch Calculator  2. Set to Standard mode  3. Select AoT button  4. Make AoT window as large as it can be  5. Move Calc window to one side of the monitor  6. Resize diagonally off screen    **Observed Results:**  Calc window can be moved off screen, hovering over the icon in the task bar shows a black screen    **Expected Results:**  Calc window can't be re-sized into a state where the window cannot be interacted with	MicrosoftIssueBot	null	null	null	null	null	null	
2020-04-14 05:02:10.0	null	2021-05-26 10:06:12.0	open	[Bug, Area: Accessibility, triage approved, Pri: 2]	1	1169	Narrator focus goes thrice on "Graphing" list item in scan mode	https://api.github.com/repos/microsoft/calculator/issues/1169	https://github.com/microsoft/calculator/issues/1169	**Repro Steps:**   1. Launch "Calculator " app and turn on narrator.  2. Home screen will be displayed.  3. Navigate to menu button and activate it.  4. Navigate to "Graphing" list item in scan mode.  5. Observe the issue.     **Actual Result:**  Narrator focus goes thrice on "Graphing" list item in scan mode.    **Expected Result:**  Narrator focus should go once on "Graphing" list item in scan mode just as other list items.   	MicrosoftIssueBot	null	null	null	null	null	null	
2020-04-14 05:02:12.0	2020-06-16 16:58:03.0	2020-12-02 12:01:27.0	closed	[Bug, Area: Accessibility, Pri: 3, triage approved]	1	1170	Keyboard focus does not land on "Start tracing" button on closing "Start tracing" using Esc key	https://api.github.com/repos/microsoft/calculator/issues/1170	https://github.com/microsoft/calculator/issues/1170	**Repro Steps: ​​**  1. Launch "Calculator" app.  2. Home screen will be displayed.​  3. Navigate to Menu button and activate it.​  4. Navigate to "Graphing" calculator and activate it.​  5. Navigate to start tracing button and activate it.  6. Press Esc key and observe the issue. ​    **Actual Result:​**  Keyboard focus does not land on "Start tracing" button on closing "Start tracing" using Esc key.    **Expected Result:​**  Keyboard focus should land on "Start tracing" button on closing "Start tracing" using Esc key.	MicrosoftIssueBot	null	null	null	null	null	null	
2020-04-14 05:02:15.0	null	2021-09-22 06:01:58.0	open	[Bug, Area: Accessibility, Pri: 3, triage approved]	1	1171	Name is not defined for "Grid options" pop up	https://api.github.com/repos/microsoft/calculator/issues/1171	https://github.com/microsoft/calculator/issues/1171	**Repro Steps: ​​**  1. Launch "Calculator" app and turn on narrator.  2. Home screen will be displayed.​  3. Navigate to Menu button and activate it.​  4. Navigate to "Graphing" calculator and activate it.​  5. Navigate to "Grid options" button and activate it.  6. Check the name property via "Accessibility insights" tool.  7. Observe the issue. ​    **Actual Result:​**  Name is not defined for the Grid options pop up.    **Expected Result:​**  Name should be defined for the Grid options pop up.	MicrosoftIssueBot	null	null	null	null	null	null	
2020-04-14 05:02:18.0	2020-07-14 17:08:58.0	2020-12-02 12:01:26.0	closed	[Bug, Area: Accessibility, Pri: 3, triage approved]	2	1172	Narrator does not provide the confirmation when user deleted one history from the history list items	https://api.github.com/repos/microsoft/calculator/issues/1172	https://github.com/microsoft/calculator/issues/1172	**Repro Steps:**   1. Launch 'Calculator'.  2. Home screen will be displayed.​  3. Navigate through Menu using keyboard and Choose either 'Standard' or 'Scientific Calculator'.  4. Navigate to History button and activate it.  5. Navigate to any list item and press context menu button.  6. Context menu will open.  7. Navigate to delete button and activate it.   8. Observe the issue.     **Actual Result:**  Narrator does not provide the confirmation when user deleted one history from the history list items.    **Expected Result:**  Narrator should provide the confirmation when user deleted one history from the history list items.	MicrosoftIssueBot	null	null	null	null	null	null	
2020-04-14 05:02:20.0	2020-07-14 00:02:09.0	2020-12-02 12:01:25.0	closed	[Bug, Area: Accessibility, Pri: 3, investigate]	3	1173	Narrator is not providing any confirmation after activating "Keep on top" button	https://api.github.com/repos/microsoft/calculator/issues/1173	https://github.com/microsoft/calculator/issues/1173	**Repro Steps:**   1. Launch Calculator app. Launch Narrator.  2. Navigate to 'Open Navigation' button and activate it.  3. Navigate to 'Standard' menu item and activate it.  4. 'Standard' calculator mode will open.  5. Navigate to "Keep on top" button and activate it.  6. Observe the issue.    **Actual Result:**  Narrator is not providing any confirmation after activating "Keep on top" button.    **Expected Result:**  Narrator should provide confirmation after activating "Keep on top" button.	MicrosoftIssueBot	null	null	null	null	null	null	
2020-04-14 05:02:23.0	2020-06-26 21:38:43.0	2020-12-02 12:01:24.0	closed	[Bug, Area: Accessibility, triage approved, Pri: 2]	3	1174	Narrator reads incorrect information as “History and Memory list” in Programmer Calculator	https://api.github.com/repos/microsoft/calculator/issues/1174	https://github.com/microsoft/calculator/issues/1174	**Repro Steps:**   1. Launch 'Calculator' and turn on narrator.  2. Home screen will be displayed.​  3. Navigate through Menu using keyboard and select 'Programmer'. 'Programmer' calculator opens.​  4. Navigate to memory tab item and observe the issue.  5. Observe the issue.     **Actual Result:**  Narrator reads incorrect information as “History and memory list” in programmer calculator.    **Expected Result:**  Narrator should not read incorrect information as “History and memory list” in programmer calculator. It should read "Memory list”.    **Note:**  Also narrator does not provide the information about the message "There's nothing saved in memory".	MicrosoftIssueBot	null	null	null	null	null	null	
2020-04-14 05:02:31.0	2020-06-23 20:06:24.0	2020-12-02 12:01:23.0	closed	[Bug, triage approved, Area: User Experience, Pri: 2]	1	1175	Drop preview tag for Graphing Mode	https://api.github.com/repos/microsoft/calculator/issues/1175	https://github.com/microsoft/calculator/issues/1175	Issue tracking removal of "preview" tag for graphing mode once blocking issues are addressed.	MicrosoftIssueBot	null	null	null	null	null	null	
2020-04-14 05:02:34.0	null	2021-05-26 10:06:28.0	open	[Bug, Area: Accessibility, Pri: 3, triage approved]	1	1176	Luminosity ratio for "Reset view" link text is 3.7:1 which is less than 4.5:1	https://api.github.com/repos/microsoft/calculator/issues/1176	https://github.com/microsoft/calculator/issues/1176	**Repro Steps:**   1. Launch "Calculator" app.  2. Home screen will be displayed.  3. Navigate to menu button and activate it.  4. Navigate to "Graphing" list item and activate it.  5. Navigate to "Graph options" button and activate it.  6. Navigate to "Reset view" link.  7. Verify the luminosity ratio of "Reset view" link via Colour Contrast Analyser tool.  8. Observe the issue.     **Actual Result:**  Luminosity ratio for "Reset view" link text is 3.7:1 which is less than 4.5:1.    **Expected Result:**  Luminosity ratio for "Reset view" link text should be minimum 4.5:1. Due to the background of the flyout, we should leverage a darker accent color variant on light theme and a lighter variant on dark theme.	MicrosoftIssueBot	null	null	null	null	null	null	
2020-04-14 05:02:40.0	null	2021-08-25 18:21:26.0	open	[Bug, Area: Accessibility, Pri: 3, triage approved, Area: User Experience]	1	1177	Narrator does not read the position number of the equation when user navigates to equation in Tab mode	https://api.github.com/repos/microsoft/calculator/issues/1177	https://github.com/microsoft/calculator/issues/1177	**Repro Steps:**   1. Launch "Calculator" app.  2. Home screen will be displayed.  3. Navigate to Menu button and activate it.  4. Navigate to "Graphing" list item and activate it.  5. Navigate to "Equations" list items.  6. Observe the issue.     **Actual Result:**  Narrator does not read the position number of the equation when user navigates to equation in tab mode.    **Expected Result:**  Narrator should read the position number of the equation list item when user navigates to equation in tab mode.	MicrosoftIssueBot	null	null	null	null	null	null	
2020-04-14 05:02:42.0	2020-05-21 09:08:30.0	2020-12-02 12:01:22.0	closed	[Area: Accessibility, fixed, Pri: 2]	1	1178	‘Theme’ label is not associated with radio buttons	https://api.github.com/repos/microsoft/calculator/issues/1178	https://github.com/microsoft/calculator/issues/1178	**Repro Steps:**   1. Launch "Calculator" app and turn on narrator.   2. Home screen will be displayed.  3. Navigate to menu button and activate it.  4. Navigate to "Graphing" list item and activate it.  5. Navigate to "Grid options" button and activate it.  6. Graph options pop up will open.  7. Navigate to 'theme' radio buttons.  8. Observe the issue.    **Actual Result:**  ‘Theme’ label is not associated with radio buttons.    **Expected Result:**  ‘Theme’ label should be associated with radio buttons.  	MicrosoftIssueBot	null	null	null	null	null	null	
2020-04-14 05:02:45.0	2020-05-20 17:34:15.0	2020-12-02 12:01:21.0	closed	[Area: Accessibility, Pri: 3, fixed]	1	1179	Tooltip is not defined for ‘Variable options’ button	https://api.github.com/repos/microsoft/calculator/issues/1179	https://github.com/microsoft/calculator/issues/1179	**Repro Steps:**   1. Launch "Calculator" app.   2. Home screen will be displayed.  3. Navigate to menu button and activate it.  4. Navigate to "Graphing" list item and activate it.  5. Navigate to "Variable options" button.  6. Observe the issue.    **Actual Result:**  Tooltip is not defined for ‘Variable options’ button.    **Expected Result:**  Tooltip should be defined for ‘Variable options’ button.	MicrosoftIssueBot	null	null	null	null	null	null	
2020-04-14 05:02:48.0	2020-05-20 17:34:19.0	2020-12-02 12:01:20.0	closed	[Area: Accessibility, fixed, Pri: 2]	1	1180	Narrator does not read the state as ‘Expanded/Collapsed’ of "Variable options" button	https://api.github.com/repos/microsoft/calculator/issues/1180	https://github.com/microsoft/calculator/issues/1180	**Repro Steps:**   1. Launch "Calculator" app and turn on narrator.   2. Home screen will be displayed.  3. Navigate to menu button and activate it.  4. Navigate to "Graphing" list item and activate it.  5. Navigate to 'Enter an expression" edit box any fill any equation.  6. Navigate to 'Variable options' button and activate it.  7. Observe the issue.    **Actual Result:**  Narrator stays silent on activating 'Variable options' button. Narrator does not read the state as ‘Expanded/Collapsed’ of "Variable options" button.    **Expected Result:**  Narrator should read the state as ‘Expanded/Collapsed’ of "Variable options" button on activate "Variable options" button.	MicrosoftIssueBot	null	null	null	null	null	null	
2020-04-14 05:02:51.0	null	2021-07-22 09:03:20.0	open	[Bug, Pri: 3, Area: User Experience, investigate]	3	1181	"Cut", "Copy", "Paste" and "Select all" buttons are not disabled even if user is unable to perform action on them	https://api.github.com/repos/microsoft/calculator/issues/1181	https://github.com/microsoft/calculator/issues/1181	**Repro Steps:**   1. Launch "Calculator" app.   2. Home screen will be displayed.  3. Navigate to menu button and activate it.  4. Navigate to "Graphing" list item and activate it.  5. Navigate to 'Enter an expression" edit box.  6. Open the context menu.  7. Observe the issue.    **Actual Result:**  "Cut", "Copy", "Paste" and "Select all" buttons are not disabled even if user is unable to perform action on them.    **Expected Result:**  "Cut", "Copy", "Paste" and "Select all" buttons should be disabled if user is unable to perform action on them.	MicrosoftIssueBot	null	null	null	null	null	null	
2020-04-14 05:02:54.0	2020-05-26 16:34:46.0	2020-12-02 12:01:19.0	closed	[Bug, Area: Accessibility, Pri: 3, fixed]	1	1182	Narrator does not provide proper information on activating 'Reset View' button	https://api.github.com/repos/microsoft/calculator/issues/1182	https://github.com/microsoft/calculator/issues/1182	**Repro Steps:**   1. Launch "Calculator" app and turn on narrator.   2. Home screen will be displayed.  3. Navigate to menu button and activate it.  4. Navigate to "Graphing" list item and activate it.  5. Navigate to "Reset view" buttons and activate it.  6. Observe the issue.    **Actual Result:**  Narrator does not provide proper information on activating 'Reset View' button. Narrator reads the graph value on activating 'Reset view' button.    **Expected Result:**  Narrator should provide proper information on activating 'Reset View' button. Narrator should first read "Graph view reset", after that it should read the graph value on activating 'Reset view' button.	MicrosoftIssueBot	null	null	null	null	null	null	
2020-04-14 22:44:11.0	2020-05-11 23:33:54.0	2020-05-26 21:46:28.0	closed	[graphing calculator]	3	1183	Fixes the issues the focus state issues when users open the context menu on EquationEditBoxes	https://api.github.com/repos/microsoft/calculator/issues/1183	https://github.com/microsoft/calculator/pull/1183	## Fixes #1153.      ### Description of the changes:  - Updated the AddNewEquation method to only set the focus state to the new equation if the submission source was not lost focus  - Updated the EquationEditBox focus states to also give focus to the RichEditBox when m_hasFocus is true.    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - manually  	sanderl	null	null	null	null	null	null	
2020-04-16 21:43:49.0	2020-04-24 22:46:38.0	2020-12-02 12:01:18.0	closed	[Bug, Area: User Experience, fixed, Pri: 2]	1	1184	Shortcut keys are enabled in Graphing Mode	https://api.github.com/repos/microsoft/calculator/issues/1184	https://github.com/microsoft/calculator/issues/1184	**Describe the bug**  When typing digit letters 1-9, or any other shortcut keys enabled in other calc keyboards, the keys light up in graphing mode, giving the impression that input is given when it is not.    This is a bigger issue when typing 'p' into the equation box, as the PI key will light up but PI is not being inserted into the textbox.    Also the variable s_shortcutsDisabled that should control this is static, which means if it were functioning shortcuts would be disabled in all instances of calculator even if they were not in graphing mode.    **Steps To Reproduce**  1. Go to graphing mode  2. Type digits 1-9  3. Notice the keys lighting up, when they shouldn't    ![image](https://user-images.githubusercontent.com/6334170/79509563-98c2c000-7ff0-11ea-95e0-31ca7199d201.png)  	joseartrivera	null	null	null	null	null	null	
2020-04-16 22:26:41.0	2020-04-23 22:54:05.0	2020-12-02 12:01:17.0	closed	[Bug, Area: Reliability, fixed, Pri: 1]	1	1185	Pressing Enter key to submit equations can trigger multiple submits at once causing crash	https://api.github.com/repos/microsoft/calculator/issues/1185	https://github.com/microsoft/calculator/issues/1185	**Describe the bug**  Pressing Enter key to submit equations can trigger multiple submits at once causing crash    **Steps To Reproduce**  1. Open graphing mode  2. Type cbrt(3)  3. Press ENTER key to submit  4. OnKeyUp is triggered submits equation, while rendering is happening, LostFocus event also fires, submitting equation again instantly.  5. Because these two submits happen at the same time, the graph renderer throws an exception causing a crash, likely because graph options is updated while rendering is occurring.    This is easier to reproduce in debug mode since graphing is slower on debug builds, but could still potentially repro on a slow machine on retail builds.    It is easiest to repro this with cbrt() on my machine as that triggers the timing issue.    We can either add locks to the TryUpdateGraph function (but will need to ensure this doesn't block UI in other workflows) or fix the bug to not allow double submission, which would also improve performance when submitting an equation.	joseartrivera	null	null	null	null	null	null	
2020-04-17 17:05:46.0	null	2021-05-26 10:06:33.0	open	[Bug, Pri: 3, triage approved, Area: User Experience]	1	1186	Line color recycling broken for first color when adding a new equation	https://api.github.com/repos/microsoft/calculator/issues/1186	https://github.com/microsoft/calculator/issues/1186	**Describe the bug**  Line color recycling broken for first color when adding a new equation    **Steps To Reproduce**  1. Add a couple equations in graphing mode  2. Delete all equations  3. Enter a new equation and notice that the color is not the default equation color (blue)    **Expected behavior**  If all equations are removed, the next equation that is entered should have the default value of blue.	MicrosoftIssueBot	null	null	null	null	null	null	
2020-04-17 17:05:49.0	2020-06-17 19:30:20.0	2020-12-02 12:01:16.0	closed	[Bug, triage approved, Area: User Experience, Pri: 1]	1	1187	Turning on refresh view automatically does not update the view properly	https://api.github.com/repos/microsoft/calculator/issues/1187	https://github.com/microsoft/calculator/issues/1187	**Describe the bug**  Turning on refresh view automatically does not update the view properly.    **Steps To Reproduce**  1. Enter one or more equations and notice that the graph widow updates for "best fit"  2. Pan the graph to explore  3. Enter another equation and notice the graph window does not automatically update  4. Click the "Refresh view automatically" button in the bottom right corner  5. Notice that the graph window does not always update to the proper "best fit" view.    **Expected behavior**  Turning on refresh view automatically should update the view properly to "best fit".    **Additional context**  Does not always repro 100%.	MicrosoftIssueBot	null	null	null	null	null	null	
2020-04-17 17:05:51.0	2020-05-08 19:14:02.0	2020-12-02 12:01:15.0	closed	[Bug, Area: User Experience, fixed, Pri: 1]	1	1188	In graph options, x/y min/max should revert to the box style	https://api.github.com/repos/microsoft/calculator/issues/1188	https://github.com/microsoft/calculator/issues/1188	**Describe the bug**  In graph options, x/y min/max should revert to the box style.    **Steps To Reproduce**  1. Open graph options and notice that the textboxes for x/y min/max do not work well in flyout window with variable text edit styling.    **Expected behavior**  These textboxes should retain default system styling.	MicrosoftIssueBot	null	null	null	null	null	null	
2020-04-17 17:05:55.0	2020-05-11 21:59:28.0	2020-12-02 12:01:14.0	closed	[good first issue, Bug, Pri: 3, Area: User Experience, fixed]	5	1189	In graph options, update "Theme" to "Graph Theme"	https://api.github.com/repos/microsoft/calculator/issues/1189	https://github.com/microsoft/calculator/issues/1189	**Describe the bug**  In graph options, update "Theme" to "Graph Theme"	MicrosoftIssueBot	null	null	null	null	null	null	
2020-04-17 17:05:58.0	2020-05-08 19:14:02.0	2020-12-02 12:01:13.0	closed	[Bug, Area: User Experience, fixed, Pri: 2]	1	1190	In graph options, "Line Thickness" text should be same style as other L2 headers	https://api.github.com/repos/microsoft/calculator/issues/1190	https://github.com/microsoft/calculator/issues/1190	In graph options, "Line Thickness" text should be same style as other L2 headers.	MicrosoftIssueBot	null	null	null	null	null	null	
2020-04-17 17:06:01.0	2020-05-11 21:59:28.0	2020-12-02 12:01:12.0	closed	[Bug, Pri: 3, Area: User Experience, fixed]	1	1191	In graph options, line thickness combo box should be same width as units radio button group	https://api.github.com/repos/microsoft/calculator/issues/1191	https://github.com/microsoft/calculator/issues/1191	In graph options, line thickness combo box should be same width as units radio button group, per #988.	MicrosoftIssueBot	null	null	null	null	null	null	
2020-04-17 17:06:04.0	2020-05-26 16:34:46.0	2020-12-02 12:01:11.0	closed	[Bug, Pri: 3, Area: User Experience, fixed]	1	1192	Units radio button group should have same rounded corner treatment as canvas buttons	https://api.github.com/repos/microsoft/calculator/issues/1192	https://github.com/microsoft/calculator/issues/1192	Units radio button group should have same rounded corner treatment as canvas buttons.    ![image](https://user-images.githubusercontent.com/1414423/80559035-34f5ab00-8991-11ea-9292-f05708adb5e0.png)  	MicrosoftIssueBot	null	null	null	null	null	null	
2020-04-17 17:06:08.0	2020-05-08 19:16:50.0	2020-12-02 12:01:10.0	closed	[Bug, Area: User Experience, fixed, Pri: 2]	1	1193	Equation style spacing does not match desired design	https://api.github.com/repos/microsoft/calculator/issues/1193	https://github.com/microsoft/calculator/issues/1193	Equation style spacing does not match desired design per #983.	MicrosoftIssueBot	null	null	null	null	null	null	
2020-04-17 17:06:10.0	2020-05-08 19:14:02.0	2020-12-02 12:01:09.0	closed	[Bug, Pri: 3, Area: User Experience, fixed]	1	1194	If you edit an equation to set an expression that does not support line style (e.g., inequality), the line option setting is still available	https://api.github.com/repos/microsoft/calculator/issues/1194	https://github.com/microsoft/calculator/issues/1194	**Describe the bug**  If you edit an equation to set an expression that does not support line style (e.g., inequality), the line option setting is still available    **Steps To Reproduce**  1. Add a non-inequality expression as an equation (e.g., y = x)  2. Once submitted, edit the same equation to an inequality (e.g., x + y < 1)  3. Open up line style options, and notice that line style is still available, even though this setting should be disabled for inequalities.    **Expected behavior**  Line style option should be disable for inequalities (color should still work!).	MicrosoftIssueBot	null	null	null	null	null	null	
2020-04-21 17:46:43.0	2020-04-23 22:54:05.0	2020-04-23 22:54:05.0	closed	[graphing calculator]	0	1195	Fix equation submitting twice when submitted via enter key	https://api.github.com/repos/microsoft/calculator/issues/1195	https://github.com/microsoft/calculator/pull/1195	## Fixes #1185      ### Description of the changes:  - The equation gets submitted twice in a row because inserting it into the RichTextBox can slightly change the formatting, so when we compare it a second time the text is different.  - The fix is to set put the text into the textbox, and then retrieve it from the textbox before storing it in the MathText property    ### How changes were validated:  - Manual testing    	joseartrivera	null	null	null	null	null	null	
2020-04-21 18:12:23.0	2020-04-24 22:46:38.0	2020-05-26 21:46:11.0	closed	[graphing calculator]	0	1196	Fixed issue where Shortcuts were still enabled in Graphing Mode	https://api.github.com/repos/microsoft/calculator/issues/1196	https://github.com/microsoft/calculator/pull/1196	## Fixes #1184.      ### Description of the changes:  - Updated DisableShortcuts to track if shortcuts were disabled per view id  - Updated HonorShortcuts to use the disable shortcuts value conditionally    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - manually with standard and graphing modes  - manually with multiple windows    	sanderl	null	null	null	null	null	null	
2020-04-21 23:44:43.0	2020-04-24 17:02:45.0	2020-04-24 17:02:45.0	closed	[codebase quality, graphing calculator]	0	1197	Don't create a new flyout every time the graph settings button is clicked	https://api.github.com/repos/microsoft/calculator/issues/1197	https://github.com/microsoft/calculator/pull/1197	### Description of the changes:  - We've seen some crashes in this area indicating that the content of this flyout is trying to be used in more than one place. My guess is that a UI test is able to invoke the button without closing the flyout resulting this issue. A regular user would never see this.    ### How changes were validated:  - Manual test  	joseartrivera	null	null	null	null	null	null	
2020-04-22 00:09:14.0	2020-04-27 04:48:39.0	2020-12-02 12:01:08.0	closed	[by design, Area: User Experience, Pri: 2]	4	1198	Calculator Has A ButtonMovment Issue	https://api.github.com/repos/microsoft/calculator/issues/1198	https://github.com/microsoft/calculator/issues/1198	<!--  Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.  -->    **Describe the bug**  Button Movement With Cursor Isn't Smooth    **Steps To Reproduce**  1, Move Your Mouse Around The Buttons    **Expected behavior**  They Should Be Smooth Like Settings    **Screenshots**  <!-- If applicable, add screenshots to help explain your problem. -->    **Device and Application Information**  " - OS Build: 10     0      19608  0"]  " - Architecture: x64  " - Application Version: 10.2003.0.0  " - Region : en-GB  " - Dev Version Installed: False      **Requested Assignment**  <!--  Some people just want to report a bug and let someone else fix it.  Other people want to not only submit the bug report, but fix it as well.  Both scenarios are completely ok. We just want to know which one it is.  Please indicate which bucket you fall into by keeping one and removing the other.  -->  - [  ] If possible, I would like to fix this.  - [ x ] I'm just reporting this problem.  I don't want to fix it.  	night-lake	null	null	null	null	null	null	
2020-04-28 00:26:45.0	2020-05-08 17:31:03.0	2020-05-08 17:31:03.0	closed	[graphing calculator]	0	1199	Fix issues with sin being parsed incorrectly	https://api.github.com/repos/microsoft/calculator/issues/1199	https://github.com/microsoft/calculator/pull/1199	## Fixes #1164.  When we try to remove bold from equations, we trigger a format change that results in mathml buildup returning incorrect mathml.  To work around this, bold is no longer removed.  Instead we are preventing from bolding the text in the first place    ### Description of the changes:  - remove the code that removes bold formatting from equations  - prevents bold text from being set via keyboard    ### How changes were validated:  manually    	EriWong	null	null	null	null	null	null	
2020-04-28 23:01:31.0	2020-05-05 15:46:42.0	2020-12-02 12:01:07.0	closed	[Bug, Area: Reliability, fixed, Pri: 1]	1	1200	hitting Enter while focused on a key graph feature crashes calculator	https://api.github.com/repos/microsoft/calculator/issues/1200	https://github.com/microsoft/calculator/issues/1200	**Describe the bug**  hitting Enter while focused on a key graph feature crashes calculator    **Steps To Reproduce**  1. Graph a function  2. Analyze the function  3. Tab into one of the analysis equations  4. hit enter    **Result**  Access denied error causes calc to crash    **Requested Assignment**  If possible, I would like to fix this.    	EriWong	null	null	null	null	null	null	
2020-04-28 23:06:15.0	2020-05-05 15:46:42.0	2020-05-05 15:46:42.0	closed	[graphing calculator]	0	1201	Do not submit equations when in read only mode	https://api.github.com/repos/microsoft/calculator/issues/1201	https://github.com/microsoft/calculator/pull/1201	## Fixes #1200  Prevents trying to set format on rich edit control that is in read only mode.    ### Description of the changes:  - Checks read only status of rich edit textbox before submitting changes    ### How changes were validated:   manual testing  	EriWong	null	null	null	null	null	null	
2020-04-29 17:46:47.0	2020-05-08 19:14:02.0	2020-05-08 19:14:02.0	closed	[graphing calculator]	4	1202	Fix styling bugs in graph settings and style panel	https://api.github.com/repos/microsoft/calculator/issues/1202	https://github.com/microsoft/calculator/pull/1202	## Fixes #1194, Fixes #1188, Fixes #1190, Fixes ##1193      ### Description of the changes:  - Reverts graph setting textbox to original style  - Fixes heading font sizes and spacing  - Hooks up line style combo box foreground color  - Make line style combo box binding mode to OneWay instead of OneTime    ### How changes were validated:  - Manual testing    	joseartrivera	null	null	null	null	null	null	
2020-04-29 20:16:47.0	2020-05-05 16:36:10.0	2020-05-05 16:36:10.0	closed	[graphing calculator]	0	1203	Catch exception when trying to share	https://api.github.com/repos/microsoft/calculator/issues/1203	https://github.com/microsoft/calculator/pull/1203	### Description of the changes:  - We've seen an exception thrown when users try to share but the application is busy, this updates the code to account for this scenario.    ### How changes were validated:  - Manual tests    	joseartrivera	null	null	null	null	null	null	
2020-04-30 06:35:49.0	2020-05-11 09:34:32.0	2020-12-02 12:01:06.0	closed	[Area: User Experience, won't fix]	3	1204	Cannot input decimals in currency converter	https://api.github.com/repos/microsoft/calculator/issues/1204	https://github.com/microsoft/calculator/issues/1204	**Describe the bug**  Cannot input decimals in currency converter    **Steps To Reproduce**  Steps to reproduce the behavior:  1. Go to Currency converter  2. Input decimals  3. Cannot input any number after floating point    **Expected behavior**  Should be able to input numbers after floating point    **Device and Application Information**   - OS Build: 10.0.19041.0   - Architecture: X64   - Application Version: 10.2003.0.0   - Region: ja-JP   - Dev Version Installed: False    **Requested Assignment**  I'm just reporting this problem.  I don't want to fix it.  	hez2010	null	null	null	null	null	null	
2020-04-30 09:01:53.0	2020-05-07 23:40:43.0	2020-12-02 12:01:05.0	closed	[Bug, Area: User Experience, won't fix, Pri: 2]	2	1205	In graphing mode, certain keys cause keyboard to flash	https://api.github.com/repos/microsoft/calculator/issues/1205	https://github.com/microsoft/calculator/issues/1205	**Describe the bug**  Graphing Mode: Pressing [R] causes the 1/X button to flash on the number pad    **Steps To Reproduce**  1. Launch Windows Calculator 102003.13.0  2. Navigate to Graphing mode  3. Ensure the window is sized large enough to display the number pad   4. With the Calculator window in focus, press [R]  5. Observe the Calculator's number pad    Note this also reproduces for:  * Pressing [Shift] + [2] causes the square root button to flash on the number pad  * Pressing [L] causes the log button to flash on the number pad  * Pressing [P] causes the Pi button to flash on the number pad  * Pressing [N] causes the natural log button to flash on the number pad  * Pressing [Y] additionally causes the x to exponent button to flash on the number pad    **Observed behavior**  The 1/X button flashes on the number pad    **Expected behavior**  The 1/X button doesn't flash on the number pad    **Device and Application Information**   - OS Build: 19619.1001   - Architecture: X64   - Application Version: 102003.13.0   - Region: en-US   - Dev Version Installed: True    **Additional context**  - This is a new issue, it does not reproduce in Calculator 10.2003.0.0, but it does reproduce in 102003.13.0    **Requested Assignment**  I'm reporting this problem.  I don't want to fix it.	MicrosoftIssueBot	null	null	null	null	null	null	
2020-04-30 17:06:20.0	2020-04-30 19:09:35.0	2020-05-10 19:03:16.0	closed	[tooling]	0	1206	Update calculator version to 2004	https://api.github.com/repos/microsoft/calculator/issues/1206	https://github.com/microsoft/calculator/pull/1206	### Description of the changes:  - Update build number to 2004  	joseartrivera	null	null	null	null	null	null	
2020-05-05 10:22:47.0	2020-05-12 17:59:56.0	2020-12-02 12:01:04.0	closed	[Bug, Area: Reliability, won't fix, Pri: 1]	4	1207	Crash at startup	https://api.github.com/repos/microsoft/calculator/issues/1207	https://github.com/microsoft/calculator/issues/1207	<!--  Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.  -->    Suddenly Calc does not start anymore, it blinks for a moment in the taskbar but closes.   I'm using (2004) May 2020 preview and was running okay yesterday.  I decided to clone the git and compile it and it crashes at:   XamlTypeInfo.g.cpp:71  Exception thrown at 0x00007FFE751D3E49 in Calculator.exe: Microsoft C++ exception: Platform::ClassNotRegisteredException ^ at memory location 0x000000C02A7FE7C0. HRESULT:0x80040154 Class not registered  WinRT information: Class not registered   occurred    I don't know if it's my fault.    **Steps To Reproduce**  Open calculator  (also using terminal it does not output anything and closes)    **Expected behavior**  Calculator start    **Device and Application Information**   - OS Build: Microsoft Windows 10 Pro 10.0.19041 N/A Build 19041   - Architecture: x64   - Application Version: 10.2003.0.0 system and git   - Region: En-US (Spain)   - Dev Version Installed: True    **Requested Assignment**  I'm just reporting this problem.  I don't want to fix it.  	uberkael	null	null	null	null	null	null	
2020-05-05 20:53:35.0	2020-05-05 22:08:31.0	2020-05-05 22:08:31.0	closed	[]	0	1208	Fix Logical_Operator_Decimal tests	https://api.github.com/repos/microsoft/calculator/issues/1208	https://github.com/microsoft/calculator/pull/1208	CI builds have been failing since #779 was merged because the Logical_Operator_Decimal_LeftShift test is failing. Looking at the screen capture of the failed test, the issue is that the Calculator is in hex mode when the test starts. Changing the test to explicitly switch into decimal mode should address this issue.	mcooley	null	null	null	null	null	null	
2020-05-05 22:33:41.0	2020-05-06 21:08:48.0	2020-05-06 21:08:48.0	closed	[]	2	1209	Update SignConfig.xml to use new signType	https://api.github.com/repos/microsoft/calculator/issues/1209	https://github.com/microsoft/calculator/pull/1209	Use FirstPartyWindowsStoreVNext instead of 136020001 for internal release builds for consistency with other projects.	mcooley	null	null	null	null	null	null	
2020-05-05 22:55:32.0	2020-05-06 22:14:55.0	2020-05-06 22:14:55.0	closed	[]	1	1210	Switching from Difference between dates to Add or subtract dates igno…	https://api.github.com/repos/microsoft/calculator/issues/1210	https://github.com/microsoft/calculator/pull/1210	https://github.com/microsoft/calculator/issues/254    Date field needs to persist across Date Difference and Add/Subtract From Date Mode.    ## Fixes #254.      ### Description of the changes:  - Modifying the date calculator's mode dropdown to assist in persisting the from date to be used in the add or subtract mode or date difference mode.    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Can test by changing the from date in either date mode (add/subtract or difference mode) and verifying the correct date is persisted to the other date mode. Also verified the day calculations were still valid.      	quentin987	null	null	null	null	null	null	
2020-05-06 23:06:49.0	2020-05-07 23:41:09.0	2020-05-26 21:46:08.0	closed	[graphing calculator]	0	1211	Associate Units and Theme labels with the radio button groups	https://api.github.com/repos/microsoft/calculator/issues/1211	https://github.com/microsoft/calculator/pull/1211	## Fixes #1178.      ### Description of the changes:  - Added the AccessibilityProperty LabeledBy to the stack panels for the Trig Units radio buttons and Graph Theme radio buttons.    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - manually using narrator    	sanderl	null	null	null	null	null	null	
2020-05-07 09:35:29.0	2020-05-07 09:49:12.0	2020-12-02 12:01:03.0	closed	[won't fix]	2	1212	"Standard" calculator does not take into account order of operations	https://api.github.com/repos/microsoft/calculator/issues/1212	https://github.com/microsoft/calculator/issues/1212	When using "Standard" calculator, then order of operations is not taken into account and calculation value is wrong. For example:  ```  8 + 6 * 2 = 28  ```    Correct answer should be:  ```  8 + 6 * 2 = 20  ```    When using "Scientific" calculator then same calculation is shown in the UI, but calculation is done correctly (e.g. value 20 is shown). If it is intentionally done so that "Standard" is like a "stupid" version of calculator, which performs calculations immediately when entering values, then calculation should be shown as two different operations - first "8 + 6 = 14" and then "14 * 2 = 28".    **Steps To Reproduce**  1. Open Calculator  2. Enter number "8".  3. Enter "+".  4. Enter "6".  5. Enter "*".  6. Enter "2".  7. Press "Enter" to see the calculation value.  8. Value of "28" is shown, which is mathematically incorrect.    **Expected behavior**  Should show a calculation value of "20", which is mathematically correct.    **Screenshots**  "Standard":  ![image](https://user-images.githubusercontent.com/174160/81278664-a652ef00-905e-11ea-922c-2d2b47d053d5.png)    "Scientific":  ![image](https://user-images.githubusercontent.com/174160/81278707-b23eb100-905e-11ea-9d93-549c6965ce62.png)    **Device and Application Information**   - OS Build: 10     0      18363  0   - Architecture: x64   - Application Version: 10.1910.0.0   - Region: et-EE   - Dev Version Installed: False    **Additional context**  Same problem applies when pasting in the equation as a whole (e.g. "8+6*2").    **Requested Assignment**  I'm just reporting this problem.   	jarmo	null	null	null	null	null	null	
2020-05-07 20:31:30.0	2020-05-19 16:58:12.0	2020-05-19 16:58:12.0	closed	[]	4	1213	Improve launch performance by delay loading NavigationView	https://api.github.com/repos/microsoft/calculator/issues/1213	https://github.com/microsoft/calculator/pull/1213	## Partially addresses #209     ### Description of the changes:  - This PR delay loads NavigationView until after the rest of the app is loaded and the UI is responsive.  - Removed Header and AoT button from NavView footer to allow it to be loaded independently of NavView  ~~- Delay loads NavigationView by placing a placeholder Hamburger button that loads the full NavigationView UI when invoked.~~  - ~~Added logic to load NavView when hot keys are used to allow existing hot keys to still work (Alt + 1, 2, 3, 4 and Ctrl +E).~~  - ~~Delay loads GraphEngine DLL until the code needs it~~    ### How changes were validated:  I used the [MeasureAppStartupTime tool](https://gist.github.com/mcooley/86450e22ee0a8ffb6430ccec74317234) created by @mcooley to launch the app repeatedly and measure startup performance.     There is roughly a ~16% decrease in start up time with these changes when measuring locally on my dev machine. The scenario tested is launching the Calculator app into standard mode at the default launch size (smallest possible).    Launch perf with the above circumstances before this PR:  Average: 455.8604766666667 ms    Launch perf with the above circumstances after this PR:  Average: 380.44501666666656 ms	joseartrivera	null	null	null	null	null	null	
2020-05-07 21:31:14.0	2020-05-08 17:32:18.0	2020-05-08 17:32:18.0	closed	[]	1	1214	Issue 935 - Updates to Scientific/Graphing Keypad 	https://api.github.com/repos/microsoft/calculator/issues/1214	https://github.com/microsoft/calculator/pull/1214	## Fixes #935.      ### Description of the changes:  Changed the location of the square root and cubed buttons in the scientific and graphing calculator modes to match issue specification.      ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  Manual testing - (Verified buttons were in the correct locations and worked as expected)  Ran Automated Tests (UI/Unit) and tests pass.      	quentin987	null	null	null	null	null	null	
2020-05-08 04:49:12.0	2020-05-11 23:38:46.0	2020-05-11 23:49:56.0	closed	[Area: User Experience]	0	1215	Tweak UI: Title and History/Memory panels 	https://api.github.com/repos/microsoft/calculator/issues/1215	https://github.com/microsoft/calculator/pull/1215	### Description of the changes:  - Modify the font weight of titles  - Decrease the margin between the burger menu and titles  - Align `MemoryPaneEmpty` and `HistoryEmpty` with `History` label  - Modify the weight of the font used by `MemoryPaneEmpty` and `HistoryEmpty`  - Align `History`/`Memory` with the title    ### How changes were validated:  - Manually, validated during UX review    ![MicrosoftTeams-image (19)](https://user-images.githubusercontent.com/1226538/81371889-d8d80880-90ad-11ea-8ae4-d3d96ebb6203.png)  _Fix alignement_    ![MicrosoftTeams-image (20)](https://user-images.githubusercontent.com/1226538/81371891-daa1cc00-90ad-11ea-975f-a72a65167515.png)  _Change font weigth of the text displayed when History/Memory panel is empty_    ![MicrosoftTeams-image (21)](https://user-images.githubusercontent.com/1226538/81371895-dbd2f900-90ad-11ea-8056-f5d7512a4b00.png)  _Decrease margin between burger menu and title_	rudyhuyn	null	null	null	null	null	null	
2020-05-08 04:52:57.0	2020-05-12 22:51:18.0	2020-12-02 12:01:02.0	closed	[won't fix]	3	1216	On rendermain.cpp at line 213 there is a error e1740 lambda capture variable of type cannot be copied to closure	https://api.github.com/repos/microsoft/calculator/issues/1216	https://github.com/microsoft/calculator/issues/1216	<!-- Before filing a bug - Ensure the bug reproduces on the latest version of the app. - Search existing issues and make sure this issue is not already filed. -->  **Describe the bug** <!-- A clear and concise description of what the bug is. -->  **Steps To Reproduce** <!-- Steps to reproduce the behavior: 1. Go to '...' 2. Click on '....' 3. Scroll down to '....' 4. See error -->  **Expected behavior** <!-- A clear and concise description of what you expected to happen. -->  **Screenshots** <!-- If applicable, add screenshots to help explain your problem. -->  **Device and Application Information**  - OS Build:  - Architecture:  - Application Version:  - Region:  - Dev Version Installed:  <!-- Run the following commands in Powershell and copy/paste the output. " - OS Build: $([Environment]::OSVersion.Version)" " - Architecture: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Architecture)" " - Application Version: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Version)" " - Region: $((Get-Culture).Name)" " - Dev Version Installed: $($null -ne (Get-AppxPackage -Name Microsoft.WindowsCalculator.Dev))" -->  **Additional context** <!-- Add any other context about the problem here. -->  **Requested Assignment** <!-- Some people just want to report a bug and let someone else fix it. Other people want to not only submit the bug report, but fix it as well. Both scenarios are completely ok. We just want to know which one it is. Please indicate which bucket you fall into by keeping one and removing the other. --> If possible, I would like to fix this. I'm just reporting this problem.  I don't want to fix it.	lukecusson	null	null	null	null	null	null	
2020-05-08 10:08:41.0	2020-05-15 17:44:51.0	2020-05-15 17:44:51.0	closed	[graphing calculator]	0	1217	Fix graph dark colors at launch	https://api.github.com/repos/microsoft/calculator/issues/1217	https://github.com/microsoft/calculator/pull/1217	The graph will render grid lines with the wrong color if the application is launched in dark-theme mode and the option "match app theme" checked.    The graph control has a bug and will override the value with the default value if the control is not fully loaded. We should fix the issue in the control but in the meantime, we need to mitigate the issue of the current version.    ### Description of the changes:  - Move `UpdateGraphColor` from the constructor to `GraphingControl::Loaded`    ### How changes were validated:  - manually      ![image](https://user-images.githubusercontent.com/1226538/81395843-30d83480-90d9-11ea-95bb-892875ad0290.png)  Left: wrong colors, Right: correct colors	rudyhuyn	null	null	null	null	null	null	
2020-05-08 18:58:41.0	2020-05-09 06:58:34.0	2020-12-02 12:01:01.0	closed	[won't fix]	5	1218	Keyboard shortcuts not working on international keyboard layout	https://api.github.com/repos/microsoft/calculator/issues/1218	https://github.com/microsoft/calculator/issues/1218	Sorry if I am raising an old topic but I could not find any hint on the list of issues:  I am using calc (Win10 1809) preferably with the keyboard on my notebook. Unfortunately, the keyboard shortcut for sqrt ("@" = ALT-Q on the German keyboard) will not work and bring up the sqr function instead. Does anybody know a the way to get sqrt on an international keyboard or some other workaround?   Otherwise, I would propose to add "w" (or Inv sqr = i + q) as a shortcut for the sqrt function in future versions.   Thanks,  Brecon	MyBrecon	null	null	null	null	null	null	
2020-05-08 21:04:07.0	2020-05-14 01:42:36.0	2020-05-14 01:42:37.0	closed	[]	0	1219	Use ToggleButton for variable options chevron button	https://api.github.com/repos/microsoft/calculator/issues/1219	https://github.com/microsoft/calculator/pull/1219	## Fixes #1180 and Fixes #1179      ### Description of the changes:  - Use a ToggleButton for the variable options button, this allows narrator to read out the status of on/off    ### How changes were validated:  - Manual testing    	joseartrivera	null	null	null	null	null	null	
2020-05-08 22:19:00.0	2020-05-09 01:50:23.0	2020-05-09 01:50:23.0	closed	[]	0	1220	Don't submit equation when opening context menu	https://api.github.com/repos/microsoft/calculator/issues/1220	https://github.com/microsoft/calculator/pull/1220	## Fixes #1153      ### Description of the changes:  This change prevents the equation from submitting when the context menu is opened, this change fixes many issues such as selection being lost upon right click, text color changing when analyzing the equation, and other glitches.    When analyzing the equation, the equation is submitted upon selecting that button from the context menu, instead of when the menu is opened.    ### How changes were validated:  Manual testing  	joseartrivera	null	null	null	null	null	null	
2020-05-09 00:36:05.0	2020-05-09 01:06:56.0	2020-05-09 01:06:56.0	closed	[]	1	1221	Change "add" button foreground color	https://api.github.com/repos/microsoft/calculator/issues/1221	https://github.com/microsoft/calculator/pull/1221	## Partially fixes #997    ![MicrosoftTeams-image (22)](https://user-images.githubusercontent.com/1226538/81458968-3de53a00-9152-11ea-9c00-22dfacf02f75.png)  _The 'f' should be black in dark mode (see Issue #997)_    ### Description of the changes:  - Don't modify `EquationButton.Foreground` when the EquationBox is a "add an equation" placeholder.    ### How changes were validated:  - manually in Light, Dark and High contrast mode    	rudyhuyn	null	null	null	null	null	null	
2020-05-09 07:26:23.0	2020-09-15 19:43:51.0	2020-12-02 12:01:00.0	closed	[Bug, triage approved, Area: World-Readiness, Pri: 2]	1	1222	2 events are launched when typing a character using Alt-Gr 	https://api.github.com/repos/microsoft/calculator/issues/1222	https://github.com/microsoft/calculator/issues/1222	**Describe the bug**  The AltGr key available with many non-US keyboards is the equivalent of Ctrl+Alt and is used to access to alternative characters (AltGr+Q will generate a `@` with a German keyboard for example).    In this case, the calculator will see 2 different events: User typed @ (`sqrt` in scientific mode) and users typed Ctrl+Q (M-) and will virtual press both buttons.    **Steps To Reproduce**  - Switch to German keyboard  - Type AltGr+Q (or Ctrl+Alt+Q)      **Expected behavior**  Only `sqrt` should be called.    **Requested Assignment**  I will fix it  	rudyhuyn	null	null	null	null	null	null	
2020-05-09 07:45:41.0	2020-09-15 19:43:51.0	2020-09-15 19:43:52.0	closed	[fixing approved issue]	1	1223	Simplify KeyboardShortcutManager and correctly support Alt-Gr key	https://api.github.com/repos/microsoft/calculator/issues/1223	https://github.com/microsoft/calculator/pull/1223	## Fixes #1222     ### Description of the changes:  - Make sure to not consider `Ctrl+Alt+key` as `Ctrl+key`  - Clean KeyboardShortcutManager     - Remove `VirtualKeyInverseChord` and `VirtualKeyControlInverseChord`, `ShiftButtonChecked` is never called, so `s_ShiftButtonChecked.find(viewId)->second)` is always false.     - Remove code to manage the Escape key for the About dialog (not necessary, the flyout already   manages it)     - Remove `UpdateDropDownState(Flyout ^ aboutPageFlyout)` to only use `UpdateDropDownState(bool)`     - Refactor how we manage the `Ctrl`, `Alt`, `Shift` keys. We now check directly if the key is pressed instead of using 3 `std::map` to save their states with the risk of missing a KeyUp event and corrupting the "cache" (can happen when the application loses focus while the key is still pressed).     - Refactor `GetCurrentKeyDictionary` to always return the correct list of shortcuts instead of defaulting to the `s_VirtualKeysForButtons` when we don't recognize the key combination.     - Move `GetCurrentKeyDictionary` and global fields to private static method/fields (to make the conversion to C# easier)     - Replace `multimap` with `map` when we didn't need them    ### How changes were validated:  - manually in Fr, En and De    	rudyhuyn	null	null	null	null	null	null	
2020-05-11 17:19:59.0	2020-05-11 17:25:53.0	2020-05-11 17:25:53.0	closed	[]	1	1224	Adding Variable Options tooltip to Resources.resw	https://api.github.com/repos/microsoft/calculator/issues/1224	https://github.com/microsoft/calculator/pull/1224	Fixes #1179 .      ### Description of the changes:  - Updated Resources file to include new tooltip for variable options caret.    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Manual Testing  - Used Narrator for Accessibility Testing    	quentin987	null	null	null	null	null	null	
2020-05-11 17:36:48.0	2020-05-11 21:59:28.0	2020-05-11 21:59:29.0	closed	[]	0	1225	Fix minor graph options style bugs	https://api.github.com/repos/microsoft/calculator/issues/1225	https://github.com/microsoft/calculator/pull/1225	## Fixes #1189 and Fixes #1191      ### Description of the changes:  - Change "theme" to "graph theme"  - Make line thickness same width as unit buttons    ### How changes were validated:  Manual tests  	joseartrivera	null	null	null	null	null	null	
2020-05-11 18:42:46.0	2020-05-21 21:08:17.0	2020-05-21 21:08:17.0	closed	[]	1	1226	Handle non breaking white spaces in copy paste manager	https://api.github.com/repos/microsoft/calculator/issues/1226	https://github.com/microsoft/calculator/pull/1226	## Fixes #969 by adding the non-breaking white space to the list of removed characters    ### Description of the changes:  - adds the non-breaking white space character to the list of removed characters from pasted strings    ### How changes were validated:  manually	EriWong	null	null	null	null	null	null	
2020-05-11 23:52:19.0	2020-05-26 16:34:46.0	2020-05-26 21:46:08.0	closed	[graphing calculator]	0	1227	Fixed narrator issues in KGF and GraphView button, updated Trig radio button corner radius	https://api.github.com/repos/microsoft/calculator/issues/1227	https://github.com/microsoft/calculator/pull/1227	## Fixes #1126, Fixes #1182, Fixes #1192.      ### Description of the changes:  - Set the automation name for the Function Analysis pane so that it is read out when navigating to the pane  - Updated the narrator read out for Graph View Automatic Best Fit so that it includes "Graph view has been reset" and so that the graph reset information does not interrput the button info.  - Updated the stack panel for the Trig Units radio buttons in Graph Settings to have rounded corners.    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - manually    	sanderl	null	null	null	null	null	null	
2020-05-12 04:39:02.0	2020-05-25 22:02:27.0	2020-05-25 22:02:28.0	closed	[]	0	1228	Remove dead code from History	https://api.github.com/repos/microsoft/calculator/issues/1228	https://github.com/microsoft/calculator/pull/1228	### Description of the changes:  - Remove serialization/deserialization of history items (never used) and all methods associated  - Remove `CalculatorViewModel->AreHistoryShortcutsEnabled` (never used contrary to `CalculatorViewModel->HistoryVM->AreHistoryShortcutsEnabled`)  - Replace the property HistoryViewModel::ItemSize with a "facade" property `ItemsCount`, returning the value of `Items->Size`.    ### How changes were validated:  - Manually    	rudyhuyn	null	null	null	null	null	null	
2020-05-12 05:04:03.0	2020-08-12 15:22:50.0	2020-08-12 15:22:50.0	closed	[codebase quality]	0	1229	Remove ICustomPropertyProviders	https://api.github.com/repos/microsoft/calculator/issues/1229	https://github.com/microsoft/calculator/pull/1229	### Description of the changes:  - `HistoryItemViewModel` and `MemoryItemViewModel` implements `ICustomPropertyProvider` only to support UI tests while we can have access to the information without. We should minimize at the maximum code specific to UI tests in Calculator and instead modify `CalculatorUITestFramework`    ### How changes were validated:  - Manually    	rudyhuyn	null	null	null	null	null	null	
2020-05-12 06:03:11.0	2020-05-25 17:43:32.0	2020-05-25 17:43:32.0	closed	[]	0	1230	Remove saved commands from CalculatorManager	https://api.github.com/repos/microsoft/calculator/issues/1230	https://github.com/microsoft/calculator/pull/1230	### Description of the changes:  - Code cleaning: Remove recording mode from CalculatorManager/StandardCalculatorViewModel and all associated methods/fields, and removing some restrictions on commands due to this mode.    ### How changes were validated:  - Manually    	rudyhuyn	null	null	null	null	null	null	
2020-05-12 17:23:07.0	2020-06-17 19:30:20.0	2020-06-17 19:30:20.0	closed	[]	0	1231	Updates ResetGrid to account for when equations are added during Manual Adjustment mode	https://api.github.com/repos/microsoft/calculator/issues/1231	https://github.com/microsoft/calculator/pull/1231	## Fixes #1187.      ### Description of the changes:  - Tracks when we add equations in Manual Adjustment mode  - Conditionally resets using TryPlotGraph or ResetRange depending on whether or not equations were added during Manual Adjustment mode    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - manually    	sanderl	null	null	null	null	null	null	
2020-05-14 20:02:59.0	2020-05-14 20:20:59.0	2020-12-02 12:00:59.0	closed	[won't fix]	1	1232	calculator	https://api.github.com/repos/microsoft/calculator/issues/1232	https://github.com/microsoft/calculator/issues/1232		saulgutierrez	null	null	null	null	null	null	
2020-05-15 16:01:36.0	2020-05-20 21:59:10.0	2020-05-20 21:59:10.0	closed	[]	0	1233	Check in localized strings 2020-05-15	https://api.github.com/repos/microsoft/calculator/issues/1233	https://github.com/microsoft/calculator/pull/1233	Check in localized strings from the internal localization system.	mcooley	null	null	null	null	null	null	
2020-05-16 17:26:53.0	2020-05-16 17:48:39.0	2020-05-16 17:48:39.0	closed	[]	0	1234	Remove duplicate string for submit button automation name	https://api.github.com/repos/microsoft/calculator/issues/1234	https://github.com/microsoft/calculator/pull/1234	Remove a duplicate string in en-us/Resources.resw, which was introduced in #1163 and confused our internal localization system.	mcooley	null	null	null	null	null	null	
2020-05-16 18:15:50.0	2020-05-16 19:16:56.0	2020-05-16 19:16:56.0	closed	[]	0	1235	Remove more duplicate strings	https://api.github.com/repos/microsoft/calculator/issues/1235	https://github.com/microsoft/calculator/pull/1235	Follow-up for #1234 to remove more duplicate strings in en-US/Resources.resw.	mcooley	null	null	null	null	null	null	
2020-05-16 19:46:25.0	2020-05-19 01:18:45.0	2020-05-19 01:18:45.0	closed	[]	0	1236	Remove obsolete localization config file	https://api.github.com/repos/microsoft/calculator/issues/1236	https://github.com/microsoft/calculator/pull/1236	Remove LocConfigPackageEs.xml, which is no longer used in the build after #359.	mcooley	null	null	null	null	null	null	
2020-05-18 16:43:31.0	2020-05-18 17:21:58.0	2020-12-02 12:00:58.0	closed	[won't fix]	2	1237	POP DIRECTIONAL FORMATTING character at end of value when copying after manual selection	https://api.github.com/repos/microsoft/calculator/issues/1237	https://github.com/microsoft/calculator/issues/1237	**Describe the bug**  When copying the displayed value after manually sweeping to select it with the mouse, a POP DIRECTIONAL FORMATTING character is included at the end of the text which interferes with other apps trying to parse the value as a number.    **Steps To Reproduce**  1. Type the number 100 into calculator  2. Select the value using the mouse starting at the '1' (NB, this doesn't happen when sweeping the other way as the zero-width character cannot be selected)  3. Right click on the selection and choose "Copy" (or use CTRL-C)  4. Paste the result into Notepad  5. Hit backspace at the end of the value - a zero-width character (Unicode 202C) is deleted not the last digit.    **Expected behavior**  No zero-width formatting characters included with the copied value.    **Device and Application Information**  Calculator v10.1910.0.0 x64 10.1910.0.0 (en-GB)    I'm just reporting this problem.  I don't want to fix it.  	cclgroupltd	null	null	null	null	null	null	
2020-05-19 17:57:48.0	2020-05-21 09:20:27.0	2020-12-02 12:00:57.0	closed	[by design]	10	1238	App tile and splash screen don't use accent colour  	https://api.github.com/repos/microsoft/calculator/issues/1238	https://github.com/microsoft/calculator/issues/1238	<!--  Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.  -->    **Describe the bug**  <!-- A clear and concise description of what the bug is. -->  App tile and splash screen don't use accent colour      **Steps To Reproduce**  <!--  Steps to reproduce the behavior:  1. Go to '...'  2. Click on '....'  3. Scroll down to '....'  4. See error  -->    **Expected behavior**  <!-- A clear and concise description of what you expected to happen. -->  App tile and splash screen would follow accent colour      **Screenshots**  <!-- If applicable, add screenshots to help explain your problem. -->  ![image](https://user-images.githubusercontent.com/51363864/82361193-e007fa80-9a4d-11ea-806a-707b8d26e760.png)      **Device and Application Information**   - OS Build: 19041.264   - Architecture: 64 bit   - Application Version: 10.2004.5.0   - Region: Australia   - Dev Version Installed:    <!--  Run the following commands in Powershell and copy/paste the output.  " - OS Build: $([Environment]::OSVersion.Version)"  " - Architecture: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Architecture)"  " - Application Version: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Version)"  " - Region: $((Get-Culture).Name)"  " - Dev Version Installed: $($null -ne (Get-AppxPackage -Name Microsoft.WindowsCalculator.Dev))"  -->    **Additional context**  <!-- Add any other context about the problem here. -->    **Requested Assignment**  <!--  Some people just want to report a bug and let someone else fix it.  Other people want to not only submit the bug report, but fix it as well.  Both scenarios are completely ok. We just want to know which one it is.  Please indicate which bucket you fall into by keeping one and removing the other.  -->  I'm just reporting this problem.  I don't want to fix it.  	Poopooracoocoo	null	null	null	null	null	null	
2020-05-20 22:45:31.0	2020-05-21 15:58:04.0	2020-05-21 15:58:20.0	closed	[]	0	1239	Adding Preview tag to Resources File	https://api.github.com/repos/microsoft/calculator/issues/1239	https://github.com/microsoft/calculator/pull/1239	## Fixes 26464663#.      ### Description of the changes:  "Preview" is not getting translated to other languages. Added to resource file so it would.    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  Manual testing    	quentin987	null	null	null	null	null	null	
2020-05-21 07:26:11.0	2020-05-21 09:04:01.0	2020-12-02 12:00:56.0	closed	[duplicate]	4	1240	Why is there no sqrt button in scientific mode	https://api.github.com/repos/microsoft/calculator/issues/1240	https://github.com/microsoft/calculator/issues/1240	<!--  PLEASE NOTE:   We cannot _merge_ any suggested localization changes to our localized resources files. These files are automatically generated from an internal localization process.  Any suggestion submitted this way will be duplicated into our internal localization system, and then closed here.    Alternatively, you can launch feedback-hub://, click on the "Language Community" tab on the left-side of the app, and follow the steps to submit a localization suggestion that way.  (The "Language Community" tab currently will only be visible if your system is running a non-English language).    Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.  -->    **Describe the bug**  <!-- A clear and concise description of what the bug is. -->  I suddenly discovered that there is no sqrt button in the scientific mode of calculator.Is the new edition changed?    **Steps To Reproduce**  <!--  Steps to reproduce the behavior:  1. Go to '...'  2. Click on '....'  3. Scroll down to '....'  4. See error  -->    **Expected behavior**  <!-- A clear and concise description of what you expected to happen. -->  I remember it used to have an sqrt button.But now, it is only in standard mode.  **Screenshots**  <!-- If applicable, add screenshots to help explain your problem. -->  ![image](https://user-images.githubusercontent.com/47566260/82533986-f3fb4b80-9b76-11ea-8586-6c81b1694e75.png)    **Device and Application Information**   - OS Build:   - Architecture:   - Application Version:   - Region:    - Dev Version Installed:      <!--  Run the following commands in Powershell and copy/paste the output.  " - OS Build: $([Environment]::OSVersion.Version)"  " - Architecture: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Architecture)"  " - Application Version: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Version)"  " - Region: $((Get-Culture).Name)"  " - Dev Version Installed: $($null -ne (Get-AppxPackage -Name Microsoft.WindowsCalculator.Dev))"  -->    **Additional context**  <!-- Add any other context about the problem here. -->  	00LT00	null	null	null	null	null	null	
2020-05-21 18:00:14.0	2020-07-20 05:30:26.0	2020-12-02 12:00:55.0	closed	[Enhancement, pitch declined]	7	1241	Add support for calculating hours/minutes in data calculator	https://api.github.com/repos/microsoft/calculator/issues/1241	https://github.com/microsoft/calculator/issues/1241	**Problem Statement**  Calculate time with milliseconds (HH:MM:SS.mmm).    **Evidence or user information**  Widely used in the film industry to adjust timing between video, audio and subtitles.    **Proposal**  In addition to the calculation of time (days, months and years) allow the calculation of hours minutes seconds and thousandths. In 24-hour military mode. We already have the Dates Calculation option. Add Hours Calculation option.     **Goals**  To calculate time (HH:MM:SS.mmm), with "cents" of a second, thousandths, which is one of the standards of the film industry.    **Non-Goals**  I don't think I need to calculate TimeCode with Frames.  But if you wish you would need to add, in addition to calculating with thousandths (base 1000), other bases for "cents": 23,976 fps, 24 fps, 25 fps.    **Low-Fidelity Concept**  I did not understand the purpose of this item	ticao2	null	null	null	null	null	null	
2020-05-21 21:43:17.0	2020-05-21 21:45:40.0	2020-05-21 21:45:40.0	closed	[]	0	1242	Setting IsEnabled to be conditional based on the AlwaysOnTop flag	https://api.github.com/repos/microsoft/calculator/issues/1242	https://github.com/microsoft/calculator/pull/1242	## Fixes #1144.      ### Description of the changes:  Added a conditional to the menu being enabled, this means that when the calculator is in always on top mode, that the alt commands won't fire because the menu won't be enabled.    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  Manual testing  	quentin987	null	null	null	null	null	null	
2020-05-21 21:47:55.0	2020-05-26 17:59:07.0	2020-05-26 17:59:07.0	closed	[]	0	1243	Setting IsEnabled to be conditional based on the AlwaysOnTop flag,	https://api.github.com/repos/microsoft/calculator/issues/1243	https://github.com/microsoft/calculator/pull/1243	## Fixes #1144.      ### Description of the changes:  Added a condtional to the navigation menu being enabled, this means that when the calculator is in always on top mode, that the alt commands won't fire because the menu won't be enabled.    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  Manual Testing  	quentin987	null	null	null	null	null	null	
2020-05-22 21:39:37.0	2020-06-23 16:46:50.0	2020-12-02 12:00:54.0	closed	[Bug, Area: Reliability, fixed, Pri: 2]	1	1244	Graphing mode crash	https://api.github.com/repos/microsoft/calculator/issues/1244	https://github.com/microsoft/calculator/issues/1244	**Describe the bug**  Latest version crash on graphing mode when I try to draw:     ![Sin título](https://user-images.githubusercontent.com/25681464/82710959-858fb980-9c5a-11ea-94ee-8e863351918f.png)    It just crash with that equation, idk why any other exponent works like a charm.    **Steps To Reproduce**    Steps to reproduce the behavior:  1. Go to graphing mode  2. Click on 'insert an equation'  3. Write: `𝑥^9-x` and press enter  4. See crash    **Expected behavior**  I think it would be wonderful that graphing mode doesn't crash    **Requested Assignment**  I'm just reporting this problem.  I don't want to fix it.  	facuparedes	null	null	null	null	null	null	
2020-05-23 20:12:30.0	2020-05-28 17:38:10.0	2020-12-02 12:00:53.0	closed	[question]	4	1245	Question linux user contribution	https://api.github.com/repos/microsoft/calculator/issues/1245	https://github.com/microsoft/calculator/issues/1245	in readme.md it is strictly written that for getting started your computer must be running on Windows 10 Version 1803 or newer.    visual studio is not available for Linux, how can a linux user contribute towards this reposiitory?    sorry for this lame question, i am not an experienced developer	ayaankhan98	null	null	null	null	null	null	
2020-05-25 03:37:16.0	2020-05-27 05:47:53.0	2020-12-02 12:00:52.0	closed	[by design, Area: User Experience]	4	1246	Modern-style tooltip for Min/Max/Close control	https://api.github.com/repos/microsoft/calculator/issues/1246	https://github.com/microsoft/calculator/issues/1246	<!--  Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.  -->    **Describe the bug**  <!-- A clear and concise description of what the bug is. -->  If you hover over a line in the graphing calculator, it is a tooltip with a modern look. However, the min/max/close buttons are not. (See below images)  **Steps To Reproduce**  1. Go to The top of the screen, to the three buttons  2. Hover over Close, Minimize/restore down, or maximize    **Expected behaviour**  A modern tooltip, with round edges.  **Screenshots**  Modern example:  ![Modern Tooltip](https://user-images.githubusercontent.com/47545798/82775953-24a0e680-9dfe-11ea-9ec1-f9020411c903.jpg)    Not modern:  ![Not modern tooltip](https://user-images.githubusercontent.com/47545798/82775985-3bdfd400-9dfe-11ea-9bc1-1ed13d76e9c2.jpg)    **Device and Application Information**  Not applicable/not needed.  <!--  Run the following commands in Powershell and copy/paste the output.  " - OS Build: $([Environment]::OSVersion.Version)"  " - Architecture: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Architecture)"  " - Application Version: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Version)"  " - Region: $((Get-Culture).Name)"  " - Dev Version Installed: $($null -ne (Get-AppxPackage -Name Microsoft.WindowsCalculator.Dev))"  -->    **Additional context**  <!-- Add any other context about the problem here. -->    **Requested Assignment**  <!--  Some people just want to report a bug and let someone else fix it.  Other people want to not only submit the bug report but fix it as well.  Both scenarios are completely ok. We just want to know which one it is.  Please indicate which bucket you fall into by keeping one and removing the other.  -->  If possible, I would like to fix this.  	Chips1234	null	null	null	null	null	null	
2020-05-26 16:27:21.0	2020-05-26 16:51:57.0	2020-05-26 16:51:57.0	closed	[]	0	1247	Translations Patch for Preview Tag	https://api.github.com/repos/microsoft/calculator/issues/1247	https://github.com/microsoft/calculator/pull/1247	## Fixes #26464663.      ### Description of the changes:  Applies the translations for the Preview Tag.    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->      	quentin987	null	null	null	null	null	null	
2020-05-26 19:18:43.0	2020-07-21 21:28:48.0	2020-12-02 12:00:51.0	closed	[Pri: 3, Enhancement, approved]	12	1248	Round edges for Graphing Calculator's X-min, X-max, etc.	https://api.github.com/repos/microsoft/calculator/issues/1248	https://github.com/microsoft/calculator/issues/1248	<!--  See https://github.com/Microsoft/calculator/blob/master/docs/NewFeatureProcess.md for suggestions on how to write a good feature pitch. Just want to submit an idea quickly? Try Feedback Hub instead: https://insider.windows.com/en-us/fb/?contextid=130  -->    **Problem Statement**  Add corner radius to the textboxes for consistency and fluency in desgin  ![Textbox should have round corners](https://user-images.githubusercontent.com/47545798/82941096-a30a9f00-9f4a-11ea-8712-90dc7e74f84e.jpg)    <!--  What problem are we trying to solve? Who’s the target audience? Is there a customer need or pain point we need to remedy? Is there a business goal or metric we are trying to improve? Do we have a hypothesis we want to prove or disprove?  -->    **Evidence or User Insights**  We should do it for consistency.  <!--  Why should we do this? Potential sources of data: Feedback Hub, other GitHub issues, other anecdotes from listening to customers in person or online, request from another team, telemetry data, user research, market or competitive research  -->    **Low-Fidelity Concept**  Here's one from Windows Terminal:  ![Txt round corner](https://user-images.githubusercontent.com/47545798/82941278-f5e45680-9f4a-11ea-8a6d-a814320d44b1.png)    **Requested Assignment**  <!--  Some people just want to suggest a feature and let someone else implement it.  Other people want to not only suggest a feature but implement it as well.  Both scenarios are completely ok. We just want to know which one it is.  We are likely to prioritize the review of feature requests if they already have someone who can implement them.  Please indicate which bucket you fall into by keeping one and removing the other.  -->  If possible, I would like to implement this.  	Chips1234	null	null	null	null	null	null	
2020-05-26 21:51:39.0	2020-05-26 21:54:57.0	2020-05-26 21:54:57.0	closed	[graphing calculator]	0	1249	Update calculator internal build to 0.0.43	https://api.github.com/repos/microsoft/calculator/issues/1249	https://github.com/microsoft/calculator/pull/1249	  	sanderl	null	null	null	null	null	null	
2020-05-26 22:39:27.0	2020-06-30 22:08:55.0	2020-06-30 22:08:55.0	closed	[]	7	1250	Updated APIs to use new GetClosePointData() from Graphing Engine.	https://api.github.com/repos/microsoft/calculator/issues/1250	https://github.com/microsoft/calculator/pull/1250	## Fixes #998.    Note: Rounding/precision isn't 100% accurate at this point, addressing separately.    ### Description of the changes:  -Updated API endpoints to use new GetClosePointData() API.   -Specifying precision before consuming the API.   -Removed Trace formatting unused function.      ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Manual Testing  - Graphed lines y = x and y = 1.54321 and zoomed out and in to test different views.  	quentin987	null	null	null	null	null	null	
2020-05-28 04:42:30.0	2020-07-21 05:55:32.0	2020-12-02 12:00:50.0	closed	[Enhancement, pitch declined]	14	1251	Allow different forms of operands	https://api.github.com/repos/microsoft/calculator/issues/1251	https://github.com/microsoft/calculator/issues/1251	**Problem statement**  Currently the calculator only allows the "computer" forms of operands – `+ - * /` – for input, and "mixed computer and US" forms – `+ - × ÷` – for display, while in reality, there are many other forms used.    **Evidence or user insights**  For example in Vietnamese academy, these forms are used:    - Addition: + (plus)  - Subtraction: – (en-dash)  - Multiplication: . (full stop)  - Division: : (colon)    In case someone might argue they have never seen such a weird case of the full stop as multiplication, here is a shot from a high-school physics textbook:    ![image](https://user-images.githubusercontent.com/26449060/83013218-d16da480-a046-11ea-8a94-ddc505a6618f.png)    **Proposal**  Users should be able to input expressions and see the interface (calculator buttons, calculation results) in their preferred form.    **Goals**  - Allow input to have other forms of operands, for example multiplication can be `. · × *`.  - Allow customization of the interface to have the operands in a chosen form.    **Non-goals**  _(None.)_    **Possible problems and solutions**  _The operand forms chosen can coincide with each other, for example `.` as both the thousand separator and the multiplication sign._    We can check those in the code and automatically fix by falling back to the default, for the example   above the multiplication sign can fall back to `×`.    _If #153 (Support both `.` and `,` as decimal separator when entering numbers) is implemented, the dot can be ambiguous._    We can make an option to not enable the "both dot and comma are decimal separators" feature and let the user use the dot as multiplication sign. If the user keeps that enabled anyway, we fall back as the problem above when they also happen to attempt to set `.` as multiplication.    _The calculator button icons are from a custom icon assets font._    We can let those icons originate from _Segoe UI light_ or the like.    **Low-fidelity concept**  Mockup configuration: Vietnamese academic.  - Decimal separator: comma.  - Thousand separator: space.  - Operands: `+ – . : ^ #` for addition, subtraction, multiplication, division, exponentiation, root extraction.    _Input_  - When the user has the comma as decimal separator, the user can for example type `.` for multiplication, `:` for division.  - Pasting the expression `16,3 + 28,7 . 1594 – 18 : 2^2 + 3#8` (English reading: Sixteen point three plus twenty-eight point seven times one thousand five hundred ninety-four minus eighteen divided by two squared plus the third root of eight) into the scientific view should yield `45 761,6` (English reading: Forty-five thousand seven hundred sixty-one point six).    _Interface_  - The user can make the calculator buttons appear as `+ – . :`:  ![image](https://user-images.githubusercontent.com/26449060/83098906-0543db00-a0d6-11ea-8b4c-12fb4ac84863.png)    - The user can make the result appear in the chosen forms:  ![image](https://user-images.githubusercontent.com/26449060/83099009-420fd200-a0d6-11ea-8d2a-ccad21e2dcae.png)    **Requested assignment**  If possible, I would like to (try to) implement this.	leduyquang753	null	null	null	null	null	null	
2020-05-29 08:08:54.0	2020-06-01 15:36:32.0	2020-12-02 12:00:49.0	closed	[won't fix, question]	4	1252	win10 VS2019生成的calculator.exe打不开？	https://api.github.com/repos/microsoft/calculator/issues/1252	https://github.com/microsoft/calculator/issues/1252	在VS2019中运行，可以打开计算机的进程，但是在x64文件下calculator的exe文件就打不开，最初提示缺失很多库，把库文件添加进来后打开calculator.exe没有反应，也没有应用被启动，这该怎么办？	liuxiabling	null	null	null	null	null	null	
2020-05-29 20:56:52.0	2020-06-01 14:18:09.0	2020-06-01 14:18:09.0	closed	[]	1	1253	Fixing TestHistoryClearCommand Test	https://api.github.com/repos/microsoft/calculator/issues/1253	https://github.com/microsoft/calculator/pull/1253	## Fixes #.      ### Description of the changes:  We removed a bunch of unused history code and persistence settings logic which these tests were calling into their own implementation and consuming. This was causing a failing test _**TestHistoryClearCommand**_  in x86, however if you were to wipe out your settings file, you can't repro the test failure.    Essentially this is test debt at this point which causes failed runs with certain settings files.    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  Automated testing  	quentin987	null	null	null	null	null	null	
2020-05-29 23:26:21.0	2020-06-02 19:58:07.0	2020-06-02 19:58:07.0	closed	[graphing calculator]	2	1254	Replot the graph when the user clicks Graph View after manually updating the graph range	https://api.github.com/repos/microsoft/calculator/issues/1254	https://github.com/microsoft/calculator/pull/1254	## Temporary solution to issue #1187    ### Description of the changes:  - Replots the graph when the user manually updates the range in Reset Grid    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Manually, add a graph manually move the range (pan, zoom, graph settings), add an equation, click the graph view button. Tested variations of these steps.    	sanderl	null	null	null	null	null	null	
2020-05-30 08:03:10.0	2020-06-01 23:50:46.0	2020-12-02 12:00:48.0	closed	[Bug, fixed, Pri: 1]	1	1255	Unit Converter can freeze when a large number is pasted	https://api.github.com/repos/microsoft/calculator/issues/1255	https://github.com/microsoft/calculator/issues/1255	  **Steps To Reproduce**  - Select Data converter  - Select Gigabytes -> Megabytes  - paste 21334324254  -> the app will freeze for seconds.    **Expected behavior**  - The result should display instantaneously      **Requested Assignment**  If possible, I would like to fix this.  	rudyhuyn	null	null	null	null	null	null	
2020-05-30 08:57:08.0	2020-06-01 23:50:46.0	2020-06-01 23:50:46.0	closed	[]	0	1256	Fix how we calculate the precision in Unit converter and update GetNumberDigitsWholeNumberPart 	https://api.github.com/repos/microsoft/calculator/issues/1256	https://github.com/microsoft/calculator/pull/1256	## Fixes #1255       ### Description of the changes:  - Fix GetNumberDigitsWholeNumberPart with small numbers (0.0000001 for example)  - Fix how we calculate the precision in Calculate (the unsigned int overflowed when the number was too high and the precision negative)    ### How changes were validated:  - manually    	rudyhuyn	null	null	null	null	null	null	
2020-06-02 01:06:43.0	2020-06-02 17:08:53.0	2020-06-02 17:08:53.0	closed	[]	3	1257	Delay load graph engine dll	https://api.github.com/repos/microsoft/calculator/issues/1257	https://github.com/microsoft/calculator/pull/1257	## Partially addresses #209      ### Description of the changes:  - Delay load graph engine DLLs until the code needs them.    ### How changes were validated:  - Manual tests, checking modules in VS to verify that the omsaut.dll and graphengine.dll are loaded only when the user enters graphing mode    	joseartrivera	null	null	null	null	null	null	
2020-06-02 13:54:28.0	2020-06-02 18:20:27.0	2020-06-02 18:20:27.0	closed	[]	0	1258	Disable x86 build and test in PR builds	https://api.github.com/repos/microsoft/calculator/issues/1258	https://github.com/microsoft/calculator/pull/1258	Now that #721 is fixed because VS 16.6 has been deployed to our build machines, we can revert #846 and go back to building and testing only x64 in PR builds.	mcooley	null	null	null	null	null	null	
2020-06-02 13:58:31.0	2020-06-02 18:20:38.0	2020-06-02 18:20:38.0	closed	[]	0	1259	Add localized strings 2020-06-02	https://api.github.com/repos/microsoft/calculator/issues/1259	https://github.com/microsoft/calculator/pull/1259	Check in translated strings from our internal localization system.	mcooley	null	null	null	null	null	null	
2020-06-02 18:25:16.0	2020-06-04 15:51:07.0	2020-06-04 15:51:07.0	closed	[]	2	1260	Pre-Unit conversion work refactor, replace category with categoryID	https://api.github.com/repos/microsoft/calculator/issues/1260	https://github.com/microsoft/calculator/pull/1260	## Fixes #.  Predecessor to https://github.com/microsoft/calculator/issues/379      ### Description of the changes:  Removed category as key in category to unit vector map and replaced with category id to reduce memory footprint.    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  Manual testing  Automated Testing    	quentin987	null	null	null	null	null	null	
2020-06-02 18:32:59.0	2020-06-02 19:58:48.0	2020-06-02 19:58:48.0	closed	[Area: Accessibility]	2	1261	Modify how we manage round corners	https://api.github.com/repos/microsoft/calculator/issues/1261	https://github.com/microsoft/calculator/pull/1261	### Description of the changes:  - Modify how we manage corner radius for trig modes and make it compatible with high-contrast    ![image](https://user-images.githubusercontent.com/1226538/83556715-3ef55700-a4c5-11ea-916a-e2e8798b09bc.png)    ![image](https://user-images.githubusercontent.com/1226538/83556781-5a606200-a4c5-11ea-966b-9f8e4184a060.png)    ### How changes were validated:  - Manually    	rudyhuyn	null	null	null	null	null	null	
2020-06-03 19:18:25.0	2020-06-04 17:19:28.0	2020-06-04 17:19:28.0	closed	[]	2	1262	Use NuGet 5.x	https://api.github.com/repos/microsoft/calculator/issues/1262	https://github.com/microsoft/calculator/pull/1262	Improve Calculator's use of the NuGetToolInstaller task.    Previously, checkLatest was set to true, so the task would check online for the latest version of NuGet which met the requirements. But we didn't specify a wildcard version, so it always downloaded the exact version we specified anyway.    Instead, just use whatever 5.x version is available on the build agent, as the [documentation](https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/tool/nuget?view=azure-devops#arguments) suggests. This should improve performance since the build will spend less time downloading nuget.exe. We are generally cautious about using wildcards to specify versions of our dependencies, but NuGet minor version updates are a relatively small factor in build reproducibility so we'll allow it in this case.	mcooley	null	null	null	null	null	null	
2020-06-03 20:03:42.0	2020-06-04 18:02:01.0	2020-06-04 18:02:02.0	closed	[]	2	1263	Revert accidental changes to UITest projects	https://api.github.com/repos/microsoft/calculator/issues/1263	https://github.com/microsoft/calculator/pull/1263	#779 included accidental changes to the UITest project files, presumably from migrating the solution locally in Visual Studio. These should not be checked in to the repo.	mcooley	null	null	null	null	null	null	
2020-06-03 22:48:01.0	2020-06-04 15:19:49.0	2020-09-25 22:56:34.0	closed	[]	0	1264	Update props file to 2005 for 2005 Release	https://api.github.com/repos/microsoft/calculator/issues/1264	https://github.com/microsoft/calculator/pull/1264	## Fixes #.  Updating versioning to 10.2005 for the 2005 Release    ### Description of the changes:  - Updated build/pipelines/azure-pipelines.release.yaml from 2004 to 2005 version  -  -    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  -  -  -    	volkcor	null	null	null	null	null	null	
2020-06-04 13:03:00.0	2020-06-04 15:30:30.0	2020-06-10 19:49:18.0	closed	[]	2	1265	Translation error	https://api.github.com/repos/microsoft/calculator/issues/1265	https://github.com/microsoft/calculator/pull/1265	Carry is being translated to spanish as the verb "to carry"/"to bring" ("llevar"), but it should be the noun form of the carry operation, "acarreo".    ## Fixes #.  Fixed translation    ### Description of the changes:  - Changed word llevar to acarreo    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.	Asmial	null	null	null	null	null	null	
2020-06-10 19:45:49.0	2020-06-11 17:57:43.0	2020-06-11 17:57:43.0	closed	[]	0	1266	Add localized strings 2020-06-10	https://api.github.com/repos/microsoft/calculator/issues/1266	https://github.com/microsoft/calculator/pull/1266	Check in translated strings from our internal localization system.	joseartrivera	null	null	null	null	null	null	
2020-06-12 08:22:50.0	2020-06-13 17:28:42.0	2020-12-02 12:00:47.0	closed	[]	4	1267	Order of operands not correct for follow-up calculations	https://api.github.com/repos/microsoft/calculator/issues/1267	https://github.com/microsoft/calculator/issues/1267	<!--  Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.  -->    **Describe the bug**  <!-- A clear and concise description of what the bug is. -->    **Steps To Reproduce**  <!--  Steps to reproduce the behavior:  1. Go to '...'  2. Click on '....'  3. Scroll down to '....'  4. See error  -->  1. Do an initial calculation, e.g. 10*10 and hit Enter to get the result  2. Try to add (+) another multiplication, e.g. +3*5 and hit Enter  3. Calculator first executes the addition, and then multiplies --> Result is 515  ![order_of_operands_2](https://user-images.githubusercontent.com/41448641/84481207-0bb98180-ac96-11ea-80cd-6607f9e84cae.png)      **Expected behavior**  Multiplication should happen before addition, expected result should be 115 instead of 515    **Screenshots**  ![order_of_operands](https://user-images.githubusercontent.com/41448641/84476183-1112ce00-ac8e-11ea-99b0-99fa1dff5623.png)    **Device and Application Information**   - OS Build: Win 10 Pro Version 10.0.18363 Build 18363   - Architecture: X64   - Application Version: 10.1910.0.0   - Region: de-DE   - Dev Version Installed: False    <!--  Run the following commands in Powershell and copy/paste the output.  " - OS Build: $([Environment]::OSVersion.Version)"  " - Architecture: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Architecture)"  " - Application Version: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Version)"  " - Region: $((Get-Culture).Name)"  " - Dev Version Installed: $($null -ne (Get-AppxPackage -Name Microsoft.WindowsCalculator.Dev))"  -->    **Additional context**  <!-- Add any other context about the problem here. -->    **Requested Assignment**  <!--  Some people just want to report a bug and let someone else fix it.  Other people want to not only submit the bug report, but fix it as well.  Both scenarios are completely ok. We just want to know which one it is.  Please indicate which bucket you fall into by keeping one and removing the other.  -->  I'm just reporting this problem.  I don't want to fix it.  	Seeraeuber	null	null	null	null	null	null	
2020-06-15 20:16:39.0	2020-06-15 21:13:57.0	2020-12-02 12:00:46.0	closed	[Bug, triage approved, Area: Reliability, Pri: 1]	1	1268	Crash when moving variable value slider after setting step to 0	https://api.github.com/repos/microsoft/calculator/issues/1268	https://github.com/microsoft/calculator/issues/1268	Crash when moving variable value slider after setting step to 0    **Repro Steps:**  1. Launch Calculator  2. Switch to Graphing mode  3. In a variable into a function data input field, such as the letter "a"  4. Expand variable options  5. Set Step to 0  6. Move the variable value slider  7. Observe Calculator    **Observed results:**  Calculator crashes    **Expected results:**  Calculator doesn't crash.    **Notes:**  To address this, lets reset the step value to "0.1" (default) instead of allowing users to set a step of <=0.	MicrosoftIssueBot	null	null	null	null	null	null	
2020-06-15 20:16:44.0	2020-06-15 21:13:57.0	2020-12-02 12:00:45.0	closed	[Bug, triage approved, Area: User Experience, Pri: 2]	1	1269	User can set the min variable value as a positive number when max variable value is a negative number	https://api.github.com/repos/microsoft/calculator/issues/1269	https://github.com/microsoft/calculator/issues/1269	**Describe the bug**  User can set the min variable value as a positive number when max variable value is a negative number    **Steps To Reproduce**  1. Launch Calculator  2. Switch to Graphing mode  3. In a variable into a function data input field, such as the letter "a"  4. Expand variable options  5. Change The Max value to a negative number  6. Change The Min value to a positive number  7. Observe Calculator    **Observed behavior**  The user is able to set the min variable value as a positive number when max variable value is a negative number    **Expected behavior**  If max is set to something <=min, allow, but update min to max - 10 (default range)  If min is set to something >=max, allow, but update max to min + 10 (default range)    **Note**  - The user can set the Max number to be lower than the Min    **Device and Application Information**   - OS Build: 19041.1000   - Architecture: X64   - Application Version: 10.2004.37.0   - Region: en-US   - Dev Version Installed: True    **Requested Assignment**  I'm reporting this problem.  I don't want to fix it.	MicrosoftIssueBot	null	null	null	null	null	null	
2020-06-15 20:20:49.0	2020-06-15 21:13:57.0	2020-06-15 21:13:57.0	closed	[]	0	1270	Check for valid input in min/max/step fields	https://api.github.com/repos/microsoft/calculator/issues/1270	https://github.com/microsoft/calculator/pull/1270	## Fixes #1269 and Fixes #1268      ### Description of the changes:  - Prevents a value in the step field from being <= 0  - If a value in the min field is greater than the value in max, max changes to the new min value + 10  - If a value in the max field is less than the value in the min field, min changes to the new max value - 10    ### How changes were validated:  Manual tests  	joseartrivera	null	null	null	null	null	null	
2020-06-15 21:11:20.0	2020-06-16 16:58:21.0	2020-06-16 16:58:21.0	closed	[]	0	1271	Fix equations not getting focus after being removed	https://api.github.com/repos/microsoft/calculator/issues/1271	https://github.com/microsoft/calculator/pull/1271	## Fixes #1123      ### Description of the changes:  When an equation is removed, the new equation that now occupies that index gains focus    ### How changes were validated:  Manual tests    	joseartrivera	null	null	null	null	null	null	
2020-06-15 21:32:02.0	2020-06-16 16:58:03.0	2020-06-16 16:58:03.0	closed	[]	0	1272	Fix tracing button not receiving focus after the 'esc' key is used to exit tracing mode	https://api.github.com/repos/microsoft/calculator/issues/1272	https://github.com/microsoft/calculator/pull/1272	## Fixes #1170      ### Description of the changes:  Fix tracing button not receiving focus after the 'esc' key is used to exit tracing mode    ### How changes were validated:  Manual tests    	joseartrivera	null	null	null	null	null	null	
2020-06-15 21:53:27.0	2020-06-16 16:57:45.0	2020-06-16 16:57:45.0	closed	[]	0	1273	Fix bitwise popup focus order	https://api.github.com/repos/microsoft/calculator/issues/1273	https://github.com/microsoft/calculator/pull/1273	## Fixes #961      ### Description of the changes:  Focus was out of order, rearrange xaml elements so that focus order makes sense    ### How changes were validated:  Manual tests    	joseartrivera	null	null	null	null	null	null	
2020-06-16 09:02:14.0	2020-06-23 16:46:44.0	2020-12-02 12:00:44.0	closed	[Bug, Area: Reliability, fixed, Pri: 2]	1	1274	Crash when inputting x^4=1 into function data input field in Graphing Calculator	https://api.github.com/repos/microsoft/calculator/issues/1274	https://github.com/microsoft/calculator/issues/1274	**Summary:**  Crash when inputting x^4=1 into function data input field in Graphing Calculator    **Repro Steps:**  1. Launch Calculator  2. Switch to Graphing mode  3. In a function data input field, input x^4=1  4. Press [Enter]  5. Observe Calculator    **Observed results:**  Calculator crashes    **Expected results:**  Calculator doesn't crash    **Exception Thrown:**  Unhandled exception at 0x00007FFE3DC0CDF6 (omsautimmss.dll) in Calculator.exe.20280.dmp: 0xC0000005: Access violation reading location 0x0000000000000003. occurred	MicrosoftIssueBot	null	null	null	null	null	null	
2020-06-16 09:02:19.0	2020-06-23 16:46:47.0	2020-12-02 12:00:43.0	closed	[Bug, Area: User Experience, fixed, Pri: 1]	1	1275	Variable editing, graph manipulation and other functionality broken with y= equations	https://api.github.com/repos/microsoft/calculator/issues/1275	https://github.com/microsoft/calculator/issues/1275	With the latest graphing engine drop, equations with 'y=' have regressed. This bug is tracking this Graphing Engine issue.	MicrosoftIssueBot	null	null	null	null	null	null	
2020-06-16 09:02:23.0	2020-06-23 16:46:53.0	2020-12-02 12:00:42.0	closed	[Bug, Area: Reliability, fixed, Pri: 2]	1	1276	Crash when inputting x^10=10 into function data input field in Graphing Calculator	https://api.github.com/repos/microsoft/calculator/issues/1276	https://github.com/microsoft/calculator/issues/1276	**Summary:**  Crash when inputting x^10=10 into function data input field in Graphing Calculator    **Repro Steps:**  1. Launch Calculator  2. Switch to Graphing mode  3. In a function data input field, input x^10=10  4. Press [Enter]  5. Observe Calculator    **Observed results:**  Calculator crashes    **Expected results:**  Calculator doesn't crash    **Exception Thrown:**  Unhandled exception at 0x00007FFAC20CCDF6 (omsautimmss.dll) in Calculator.exe.6964.dmp: 0xC0000005: Access violation reading location 0x000001BB00000001. occurred	MicrosoftIssueBot	null	null	null	null	null	null	
2020-06-16 09:02:27.0	2020-09-15 21:27:23.0	2020-12-02 12:00:41.0	closed	[Bug, triage approved, Area: User Experience, Pri: 2]	1	1277	Function Analysis is not working for x=y	https://api.github.com/repos/microsoft/calculator/issues/1277	https://github.com/microsoft/calculator/issues/1277	**Describe the bug**  Function Analysis is not working for x=y    **Steps To Reproduce**  1. Launch Windows Calculator 10.2004.37.0  2. Navigate to Graphing mode  3. Input a function/equation such as, "y = x" into a function input field  4. Invoke the hover button, Analyze Function, in the function input field (looks like a lighting bolt)  5. Observe Function analysis    **Observed behavior**  The following message is displayed, "Analysis is not support for this function."  A reason, as to why it's not supported, is not given.    **Expected behavior**  An analysis of the function is displayed with information on key graph features    **Device and Application Information**   - OS Build: 19644.1000   - Architecture: X64   - Application Version: 10.2004.37.0   - Region: en-US   - Dev Version Installed: True    **Requested Assignment**  I'm reporting this problem.  I don't want to fix it.	MicrosoftIssueBot	null	null	null	null	null	null	
2020-06-16 09:02:31.0	2020-06-23 16:46:56.0	2020-12-02 12:00:40.0	closed	[Bug, Area: User Experience, fixed, Pri: 2]	1	1278	Some equations, are sometimes falsely given the error message "The expression is empty" 	https://api.github.com/repos/microsoft/calculator/issues/1278	https://github.com/microsoft/calculator/issues/1278	**Describe the bug**  Some equations, are sometimes falsely given the error message "The expression is empty"      **Steps To Reproduce**  1. Ensure device has Twitter app is installed and working  2. Launch Windows Calculator 10.2004.37.0  3. Navigate to Graphing mode  4. Input a function/equation such as, "y=(-3x^2+2)/(x-1)" into a function input field  5. Observe the result of input    **Observed behavior**  Sometimes the function is outlined and highlighted red.  The error message given when hover over the warning icon is "The expression is empty."      **Expected behavior**  Valid equations are accepted and drawn on graph every time they are inputted     **Notes**  - To get the graph to accept desired input when it is erroring out, the user must get the calculator to accept a similar input that has a minor variation from the desired input.  After that, the calculator will correctly accept the desired input.   - The issue occurs almost 100% with the equation noted in the steps, however this issue has occurred with other functions/equations.     **Device and Application Information**   - OS Build: 19644.1000   - Architecture: X64   - Application Version: 10.2004.37.0   - Region: en-US   - Dev Version Installed: True    **Requested Assignment**  I'm reporting this problem.  I don't want to fix it.	MicrosoftIssueBot	null	null	null	null	null	null	
2020-06-16 09:02:35.0	null	2021-08-06 09:01:26.0	open	[Bug, Pri: 3, triage approved, Area: User Experience]	1	1279	Sometimes Inflection Points, and Vertical Asymptotes is not calculated for y=tan(x) 	https://api.github.com/repos/microsoft/calculator/issues/1279	https://github.com/microsoft/calculator/issues/1279	**Describe the bug**  Sometimes Inflection Points, and Vertical Asymptotes is not calculated for y=tan(x)     **Steps To Reproduce**  1. Ensure device has Twitter app is installed and working  2. Launch Windows Calculator 10.2004.37.0  3. Navigate to Graphing mode  4. Input a function/equation such as, "y=tan(x)" into a function input field  5. Invoke the hover button, Analyze Function, in the function input field (looks like a lighting bolt)  6. Observe Inflection Points calculation, and Vertical Asymptotes calculation    **Observed behavior**  The calculation for Inflection Points, and for Vertical Asymptotes is as follows:    Inflection Points: This function does not have any inflection points  Vertical Asymptotes: This function does not have any vertical asymptotes    **Expected behavior**  The calculation for Inflection Points, and for Vertical Asymptotes is as follows:    Inflection Points: x=𝜋n1, n1 ∈ℤ  Vertical Asymptotes: x=𝜋n1+𝜋/2, n1∈ℤ     **Notes**  - Sometimes it's on the the Inflection points that's not calculated    **Device and Application Information**   - OS Build: 19644.1000   - Architecture: X64   - Application Version: 10.2004.37.0   - Region: en-US   - Dev Version Installed: True    **Requested Assignment**  I'm reporting this problem.  I don't want to fix it.	MicrosoftIssueBot	null	null	null	null	null	null	
2020-06-16 09:02:39.0	null	2021-09-30 09:05:47.0	open	[Enhancement, Pri: 2, needs more info]	1	1280	Analyze and Equation Options should be available when editing an expression	https://api.github.com/repos/microsoft/calculator/issues/1280	https://github.com/microsoft/calculator/issues/1280	**Describe the bug**  Analyze and Equation Options should be available when editing an expression    **Steps To Reproduce**  1. Put keyboard focus inside of an equation to enter an expression.  2. Notice Analyze and Equation options are not available to the user    **Expected behavior**  Analyze and Equation options should be available when editing an expression.    **Screenshots**  Actions visible:  ![image](https://user-images.githubusercontent.com/1414423/87895723-05d46000-c9fb-11ea-908f-c4559ec1d5f3.png)  Actions unavailable:  ![image](https://user-images.githubusercontent.com/1414423/87895773-22709800-c9fb-11ea-912d-40903bef59a1.png)    **Device and Application Information**   - OS Build: 10.0.19042.0   - Architecture: X64   - Application Version: 10.2005.23.0   - Region: en-US   - Dev Version Installed: False    **Requested Assignment**  I'm just reporting this problem.  I don't want to fix it.  	MicrosoftIssueBot	null	null	null	null	null	null	
2020-06-16 09:02:42.0	null	2021-05-26 10:06:40.0	open	[Bug, triage approved, Area: User Experience, Pri: 2]	1	1281	Typing the '-' character after '>' character in graphing mode alters the > character and fails to graph	https://api.github.com/repos/microsoft/calculator/issues/1281	https://github.com/microsoft/calculator/issues/1281	**Describe the bug**  Typing the '-' character after '>' character in graphing mode alters the > character and fails to graph    **Steps To Reproduce**  1. Go to graphing mode  2. Type in "x >-40"  3. Notice after you type the '-' character, the > character turns into the ≻ character    **Expected behavior**  The equation should read as x>-40, but instead reads as x≻40. I am guessing ≻ is some mathematical character, seems not intuitive that the RichEditBox would make this change. We can possibly update our code to just automatically replace the ≻ character with a >, but that will still cause the input to eat up the minus sign the user entered.    **Screenshots**  ![image](https://user-images.githubusercontent.com/1414423/84801781-76c7c880-afb4-11ea-9ce0-6ce4c396db6a.png)	MicrosoftIssueBot	null	null	null	null	null	null	
2020-06-20 16:21:07.0	2020-06-22 20:29:48.0	2020-12-02 12:00:39.0	closed	[question]	2	1282	Icon	https://api.github.com/repos/microsoft/calculator/issues/1282	https://github.com/microsoft/calculator/issues/1282	When will app's icon be updated?	stockfx0	null	null	null	null	null	null	
2020-06-22 13:45:03.0	2020-07-08 22:06:41.0	2020-12-02 12:00:38.0	closed	[external]	2	1283	Unable to replace standard calc.exe with this app	https://api.github.com/repos/microsoft/calculator/issues/1283	https://github.com/microsoft/calculator/issues/1283	When trying to replace calc.exe binary with renamed Calculator.exe, it doesn' work. It'll be great to add a button in app to easily change default calculator.   	HackcatDev	null	null	null	null	null	null	
2020-06-22 23:24:43.0	null	2021-09-30 20:43:42.0	open	[Enhancement, Pri: 2, approved]	3	1284	Add Game Bar Widget support	https://api.github.com/repos/microsoft/calculator/issues/1284	https://github.com/microsoft/calculator/issues/1284	<!--  See https://github.com/Microsoft/calculator/blob/master/docs/NewFeatureProcess.md for suggestions on how to write a good feature pitch. Just want to submit an idea quickly? Try Feedback Hub instead: https://insider.windows.com/en-us/fb/?contextid=130  -->    **Problem Statement**  <!--  What problem are we trying to solve? Who’s the target audience? Is there a customer need or pain point we need to remedy? Is there a business goal or metric we are trying to improve? Do we have a hypothesis we want to prove or disprove?  -->  This is a feature request for the Calculator app to support being launched as a Game Bar widget.    **Evidence or User Insights**  <!--  Why should we do this? Potential sources of data: Feedback Hub, other GitHub issues, other anecdotes from listening to customers in person or online, request from another team, telemetry data, user research, market or competitive research  -->  The Game Bar provides a convenient overlay for gaming enhancement utilities without needed to shift focus of leave the context of an active game. There are numerous gaming scenarios in which players may use a calculator, and a Game Bar widget would make that scenario simple and easy.     **Proposal**  <!--  How will the solution/feature help us solve the problem? How will it meet the target audience’s needs? If there are business goals or metrics, how does this improve them?  -->  The Calculator app would ingest the [Game Bar SDK](https://docs.microsoft.com/en-us/gaming/game-bar/) support being activated as a widget from the context of the Game Bar. This enables gamers to use the calculator in an overlay scenario without needing to alt+tab or change context while gaming.     **Goals**  <!--  What you want to accomplish with this feature. Typical examples include  "User Can *perform some task*"  -->  Users can choose to launch the Calculator app as a Game Bar widget from the context of the Game Bar widget menu.    **Non-Goals**  <!--  Things we are explicitly not doing or supporting or that are out of scope, including reasons why.  -->    **Low-Fidelity Concept**  <!--  Show as much of the experience as needed to explain the idea. This can be as simple as a napkin drawing but can also be a code prototype, or a design comp. Keep it simple at this stage, as it can be refined later during the pre-production stage.  -->  A few experience details:  * Graphing mode should be disabled, not hidden, when accessed from GameBar, similar to how we handle the policy that disables graphing functionality. The mode should already be completely hidden on machines running an unsupported version of Windows.  * The entry point for "keep on top" in Standard mode should be hidden.  * If #596 is completed, we should make a best effort attempt at adopting the GameBar pattern for Settings by hiding the app entry point and surfacing settings in a separate window. If this cannot be done without significant refactoring, we can revisit this at a later date.    **Requested Assignment**  <!--  Some people just want to suggest a feature and let someone else implement it.  Other people want to not only suggest a feature, but implement it as well.  Both scenarios are completely ok. We just want to know which one it is.  We are likely to prioritize the review of feature requests if they already have someone who can implement them.  Please indicate which bucket you fall into by keeping one and removing the other.  -->  If possible, I would like to implement this with Design and Review guidance from the Calculator team.  	DDobynsMS	null	null	null	null	null	null	
2020-06-23 19:20:22.0	2020-06-23 20:06:24.0	2020-06-23 20:06:24.0	closed	[]	0	1285	Remove preview tag from graphing mode	https://api.github.com/repos/microsoft/calculator/issues/1285	https://github.com/microsoft/calculator/pull/1285	## Fixes #1175      ### Description of the changes:  Removes preview tag    ### How changes were validated:  Manual tests  	joseartrivera	null	null	null	null	null	null	
2020-06-26 19:27:25.0	2020-06-26 21:38:43.0	2020-06-26 21:38:43.0	closed	[]	1	1286	Narrator reads incorrect information as “History and Memory list” in Programmer Calculator #1174	https://api.github.com/repos/microsoft/calculator/issues/1286	https://github.com/microsoft/calculator/pull/1286	  ## Fixes #1174 .      ### Description of the changes:  - Added 2 string resources.  One for when History and memory lists are both available and another when only memory lists are.  - Loaded the string resources during calculator initialization  - While mode is changed to Programmer, I change the automation name of the Dock panel to "Memory List" as only Memory tab is present in Programmer mode.  - By default the automation name will be "History and Memory lists" to retain current behavior and "Memory list" when switching to Programmer mode.    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Manual testing.  Switched to Programmer mode via Narrator and observed that "Memory list" announcement is made.  - Verified via Inspect that accessible names are changing according to the current mode.      	vishegn	null	null	null	null	null	null	
2020-06-27 15:56:26.0	2020-08-12 21:33:42.0	2020-12-02 12:00:37.0	closed	[Enhancement, Pri: 2, pitch declined]	5	1287	Add 'favorites' or pinning of frequently used/user chosen settings	https://api.github.com/repos/microsoft/calculator/issues/1287	https://github.com/microsoft/calculator/issues/1287	<!--  See https://github.com/Microsoft/calculator/blob/master/docs/NewFeatureProcess.md for suggestions on how to write a good feature pitch. Just want to submit an idea quickly? Try Feedback Hub instead: https://insider.windows.com/en-us/fb/?contextid=130  -->    **Problem Statement**  <!--  What problem are we trying to solve? Who’s the target audience? Is there a customer need or pain point we need to remedy? Is there a business goal or metric we are trying to improve? Do we have a hypothesis we want to prove or disprove?  -->  I go between DATA and Standard and Programmer quite a bit. It'd be nice to have a pinned area where these three are. Can we add that?    **Evidence or User Insights**  <!--  Why should we do this? Potential sources of data: Feedback Hub, other GitHub issues, other anecdotes from listening to customers in person or online, request from another team, telemetry data, user research, market or competitive research  -->  To make frequently used items easier to access.    **Proposal**  <!--  How will the solution/feature help us solve the problem? How will it meet the target audience’s needs? If there are business goals or metrics, how does this improve them?  -->  It makes it easier to use the app...  **Goals**  <!--  What you want to accomplish with this feature. Typical examples include  "User Can *perform some task*"  -->  I can perform my tasks quicker.    **Non-Goals**  <!--  Things we are explicitly not doing or supporting or that are out of scope, including reasons why.  -->  Solving world hunger. Calculator doesn't make food.    **Low-Fidelity Concept**  <!--  Show as much of the experience as needed to explain the idea. This can be as simple as a napkin drawing but can also be a code prototype, or a design comp. Keep it simple at this stage, as it can be refined later during the pre-production stage.  -->    **Requested Assignment**  <!--  Some people just want to suggest a feature and let someone else implement it.  Other people want to not only suggest a feature, but implement it as well.  Both scenarios are completely ok. We just want to know which one it is.  We are likely to prioritize the review of feature requests if they already have someone who can implement them.  Please indicate which bucket you fall into by keeping one and removing the other.  -->    I'm just suggesting this idea.  I don't want to implement it.  	jeffstokes72	null	null	null	null	null	null	
2020-06-29 19:44:38.0	2020-06-30 20:28:49.0	2020-12-02 12:00:36.0	closed	[question]	5	1288	Error E2166 when building	https://api.github.com/repos/microsoft/calculator/issues/1288	https://github.com/microsoft/calculator/issues/1288	**Problem Statement**  Hello, I'm trying to make a financial calculator (compound interest, tips, etc). In the ViewModel I created a ref class `[Windows::UI::Xaml::Data::Bindable] public ref class FinanceCalculatorViewModel sealed : public Windows::UI::Xaml::Data::INotifyPropertyChanged` but FinanceCalculatorViewModel comes up with error E2166, "class fails to implement interface member function "Windows::UI::Xaml::Data::INotifyPropertyChanged::PropertyChanged::add" (declared in "C:\Program Files (x86)\Windows Kits\10\References\10.0.18362.0\Windows.Foundation.UniversalApiContract\8.0.0.0\Windows.Foundation.UniversalApiContract.winmd")". If anyone can help, that would be great. Thanks in advance!    P. S. Sorry if this is not the place to ask such questions, but I can't figure out where to ask it.	Chips1234	null	null	null	null	null	null	
2020-06-29 20:09:18.0	2020-06-30 21:00:40.0	2020-09-25 22:56:08.0	closed	[]	0	1289	Updateto2006	https://api.github.com/repos/microsoft/calculator/issues/1289	https://github.com/microsoft/calculator/pull/1289	## Fixes #.  None    ### Description of the changes:  - Updating release versioning to 2006  -  -    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  -  -  -    	volkcor	null	null	null	null	null	null	
2020-06-29 21:20:15.0	2020-07-08 21:53:53.0	2020-12-02 12:00:35.0	closed	[duplicate]	3	1290	I wish I could paste this	https://api.github.com/repos/microsoft/calculator/issues/1290	https://github.com/microsoft/calculator/issues/1290	I wish I could paste in any of the following:    1- `($53,000 / 10,000,000 requests) * 100,000 requests`  2- `(53,000 / 10,000,000) * 100,000`  3- `(53000 / 10000000) * 100000`    The result should be `530`	pedramrezaei	null	null	null	null	null	null	
2020-06-30 20:20:33.0	null	2021-05-26 10:06:46.0	open	[Bug, triage approved, Pri: 2]	1	1291	Trace value string in pop-up should be localized	https://api.github.com/repos/microsoft/calculator/issues/1291	https://github.com/microsoft/calculator/issues/1291	**Describe the bug**  The trace value string in the tooltip when hovering over a graph line is not localized. There are probably different list separators other than comma in different languages, especially when numbers use a comma instead of a period to represent decimals.    https://github.com/microsoft/calculator/blob/a3163f64e3419055fbd8fbb84051fe18028a2da6/src/Calculator/Views/GraphingCalculator/GraphingCalculator.xaml.cpp#L247    **Steps To Reproduce**  1. Switch to a different language  2. Go to graphing mode  3. Graph a line and hover over to see the trace tooltip, notice it is not localized  	joseartrivera	null	null	null	null	null	null	
2020-07-01 23:13:15.0	2020-07-10 16:36:20.0	2020-12-02 12:00:34.0	closed	[by design]	2	1292	Pressing the Enter key after viewing History causes History to reopen instead of displaying result.	https://api.github.com/repos/microsoft/calculator/issues/1292	https://github.com/microsoft/calculator/issues/1292	**Describe the bug**  Normally, pressing the Enter key causes the result of the current calculations to be displayed. However, if the user clicks on History to view previous results, then the History button remains selected even after History is closed, and pressing Enter re-opens History instead of displaying the result.    **Steps To Reproduce**  Steps to reproduce the behavior:  1. Input some calculations, and press Enter.  2. Click History button to open it (or use the Ctrl + H shortcut).  3. Click the main portion of the calculator to close History.  4. From this point on, pressing Enter will re-open History instead of displaying input.    **GIF Demonstrating Bug**  https://i.imgur.com/fJOCftq.gifv    **Device and Application Information**   - Winver: Version 2004 (OS Build 10941.329)   - OS Build: 10.0.19041.0   - Architecture: X64   - Application Version: Calculator 10.2005.23.0   - Region: en-US   - Dev Version Installed: False    **Requested Assignment**  I'm just reporting this problem.  I don't want to fix it.  	F-Lambda	null	null	null	null	null	null	
2020-07-02 09:05:21.0	2020-11-11 17:40:40.0	2020-12-11 18:00:07.0	closed	[Bug, triage approved, Area: Reliability, Pri: 1]	4	1293	Graphing - remove equation crashes app	https://api.github.com/repos/microsoft/calculator/issues/1293	https://github.com/microsoft/calculator/issues/1293	**Describe the bug**  Calculator crashes when removing an equation in graphing mode    **Steps To Reproduce**  1. Calculator graphing mode  2. Graph three expressions, for example: x^2 , x^3 , x^4  3. Edit expression x^2 by clicking on it  4. Click the 'x' to the right of the expression to clear it  5. On expression x^3 choose 'Remove equation'  6. Calculator crashes    **Expected behavior**  The x^3 expression should be removed leaving an empty expression and x^4    **Device and Application Information**   - OS Build: 10.0.19041.0   - Architecture: X64   - Application Version: 10.2005.23.0   - Region: en-GB   - Dev Version Installed: False    **Requested Assignment**  I'm just reporting this problem.  I don't want to fix it.    ![calc-crash](https://user-images.githubusercontent.com/22602437/86339067-0fb04200-bc4b-11ea-95e9-24929d7d4241.png)  	aphawkins	null	null	null	null	null	null	
2020-07-03 02:43:57.0	2020-07-10 21:10:30.0	2020-12-02 12:00:33.0	closed	[external]	7	1294	Graphic mode display problem	https://api.github.com/repos/microsoft/calculator/issues/1294	https://github.com/microsoft/calculator/issues/1294	<!--  Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.  -->    **Describe the bug**  <!-- A clear and concise description of what the bug is. -->  Open the Claculater in standard mode, switch to graphic mode.  Then boom!  ![image](https://user-images.githubusercontent.com/8894481/86426352-0b068f00-bd1a-11ea-8a00-88560b0ecbc4.png)        **Steps To Reproduce**  <!--  Steps to reproduce the behavior:  1. Go to '...'  2. Click on '....'  3. Scroll down to '....'  4. See error  -->  1. Open the Claculater in standard mode, switch to graphic mode.  2. Then boom!    **Expected behavior**  <!-- A clear and concise description of what you expected to happen. -->  Display normally.    **Screenshots**  <!-- If applicable, add screenshots to help explain your problem. -->  ![image](https://user-images.githubusercontent.com/8894481/86426355-0e017f80-bd1a-11ea-857d-69588be5d22e.png)    **Device and Application Information**   - OS Build: 10.0.19041.0   - Architecture:X64   - Application Version:10.2005.23.0   - Region:zh-CN   - Dev Version Installed: False    <!--  Run the following commands in Powershell and copy/paste the output.  " - OS Build: $([Environment]::OSVersion.Version)"  " - Architecture: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Architecture)"  " - Application Version: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Version)"  " - Region: $((Get-Culture).Name)"  " - Dev Version Installed: $($null -ne (Get-AppxPackage -Name Microsoft.WindowsCalculator.Dev))"  -->    **Additional context**  <!-- Add any other context about the problem here. -->      **Requested Assignment**  <!--  Some people just want to report a bug and let someone else fix it.  Other people want to not only submit the bug report, but fix it as well.  Both scenarios are completely ok. We just want to know which one it is.  Please indicate which bucket you fall into by keeping one and removing the other.  -->  I'm just reporting this problem.  I don't want to fix it.  	youlingwangzi	null	null	null	null	null	null	
2020-07-03 08:42:18.0	null	2021-05-26 10:06:54.0	open	[Bug, triage approved, Area: User Experience, Pri: 1]	2	1295	Graphing Calculator falsely shows "This function is too complex to graph"	https://api.github.com/repos/microsoft/calculator/issues/1295	https://github.com/microsoft/calculator/issues/1295	**Describe the Bug**:    The Graphing Calculator sometimes falsely shows the error stating, "This function is too complex to graph" even when it is capable of plotting it.    **Steps to Reproduce**:    1. Open Calculator. Switch to Graphing mode.  2. Type first expression as 'sin (x)' and press Enter.  3. Type second expression as 'tan (x)' and press Enter again.    You will see an error stating that the function is too complex to graph.    ![Too Complex](https://user-images.githubusercontent.com/55381546/86450411-1fa55000-bd37-11ea-8cbb-f0526def2810.jpg)    5. Close all running instances of the Calculator, and then open it again.  6. Type first expression as 'tan (x)' and press Enter.    This time the graphing calculator is able to plot the function.  The same thing happens every time when we try to plot the functions given below:    f(x) = log(sin(x) + cos(x))  g(x) = cot(x)  h(x) = csc (x)  p(x) = sec (x)    **Expected Behaviour**:    The Calculator should readily plot these functions.    **Device and Application Info**:    OS Build: 10.0.19041.264  Architecture: x64  Application Version: 10.2005.23.0  Region: India (EN-US)  Dev Version Installed: No    **Requested Assisgnment**:    I'm just reporting this problem. I don't want to fix it.	ghost	null	null	null	null	null	null	
2020-07-03 08:47:17.0	null	2021-10-06 18:11:49.0	open	[Bug, triage approved, Area: User Experience, Pri: 2]	10	1296	Graphing Calculator sometimes falsely shows "The expression is empty"	https://api.github.com/repos/microsoft/calculator/issues/1296	https://github.com/microsoft/calculator/issues/1296	**Describe the Bug**:    The Graphing Calculator sometimes falsely shows the error stating, "The expression is empty".    **Steps to Reproduce**:    1. Open Calculator. Switch to Graphing mode.  2. Copy the following into the Expression Box:  ```  sin x +cos x  ```  OR  ```  sin x+cosx  ```  You may also enter this sequence using your keyboard. But DO not alter the spacing.  Otherwise you may not see the error.    You will see an error stating that the expression is empty.    ![Empty Expression](https://user-images.githubusercontent.com/55381546/86450921-d86b8f00-bd37-11ea-847d-ae17b86a4116.jpg)    5. Close all running instances of the Calculator, and then open it again.  6. Type first expression as 'sin(x)+cos(x)' and press Enter.    This time the graphing calculator is able to plot the function.    **Edit**  This error also occurs in case of the following function:  ```  h(x) = sin x/cos x  ```    **Expected Behaviour**:    The Calculator should readily plot this function.    **Device and Application Info**:    OS Build: 10.0.19041.264  Architecture: x64  Application Version: 10.2005.23.0  Region: India (EN-US)  Dev Version Installed: No    **Requested Assisgnment**:    I'm just reporting this problem. I don't want to fix it.	ghost	null	null	null	null	null	null	
2020-07-03 08:51:26.0	null	2021-05-26 10:06:51.0	open	[Bug, triage approved, Area: User Experience, Pri: 2]	5	1297	Graphing Calculator shows a vague error on entering an expression with invalid spacing	https://api.github.com/repos/microsoft/calculator/issues/1297	https://github.com/microsoft/calculator/issues/1297	**Describe the Bug**:    The Graphing Calculator sometimes shows a vague error on entering an expression with invalid spacing. For example, entering 'sinx'in the expression box shows the error: "'i' and 'I' cannot be used as variable names". I don't think this error makes any sense here.    **Steps to Reproduce**:    1. Open Calculator. Switch to Graphing mode.  2. Type 'sinx' in the expression box.    You will see the above error.    ![Vague Error](https://user-images.githubusercontent.com/55381546/86451307-5760c780-bd38-11ea-804e-48bd2af4a431.jpg)    6. Clear the previous expression and type 'sin(x)' and press Enter.    This time the graphing calculator is able to plot the function.  The same thing happens every time when we try to plot the functions given below:    f(x) = sinx + cosx  g(x) = ln(sinx + cosx)    **Edit**  t(x) = floor(ceiling(x))  u(x) = xsin(x)    In case of the last two functions, this error occurs even if we type these functions with the correct number of parentheses. However, it does not occur when we are using the in-app keyboard.    **Expected Behaviour**:    The Calculator should correct the spacing automatically and readily plot these functions.    **Device and Application Info**:    OS Build: 10.0.19041.264  Architecture: x64  Application Version: 10.2005.23.0  Region: India (EN-US)  Dev Version Installed: No    **Requested Assisgnment**:    I'm just reporting this problem. I don't want to fix it.	ghost	null	null	null	null	null	null	
2020-07-03 08:57:48.0	null	2021-05-26 10:06:49.0	open	[Bug, triage approved, Area: User Experience, Pri: 2]	8	1298	Graphing Calculator does not support functions of the type f(y) completely	https://api.github.com/repos/microsoft/calculator/issues/1298	https://github.com/microsoft/calculator/issues/1298	**Describe the Bug**:    The Graphing Calculator does not support functions of the type f(y) completely. It shows an error, which says "This function could not be graphed". We need to explicitly specify 'x = ' for it to work correctly. For example, entering 'sin (y)' directly does not work but entering 'x = sin(y)' works correctly.    **Significance**:    Through graphs, we study the variation of y i.e. function of x with respect to variation in x. For this purpose, we take the variable at the independent axis (usually x-axis) and its function at the dependent axis (usually y-axis). But at  times, we need to study it the other way round.    Let us take the example of y = (sin^(-1) (x)), also known as arcsin(x). This function can be rewritten as x = sin(y). Now we can treat x as a function of y.    Similarly we can have:    x = (y - 3)/(y - 1)    This is particularly useful when we are studying 'Invertible Functions' in mathematics.    **Steps to Reproduce**:    1. Open Calculator. Switch to Graphing mode.  2. Type 'sin (y)' in the expression box and press Enter.    You will see an error stating that this function could not be graphed.    ![x = f(y)](https://user-images.githubusercontent.com/55381546/86451989-46648600-bd39-11ea-810c-3c779872eebb.jpg)    5. Close all running instances of the Calculator, and then open it again.  6. Type first expression as 'x = sin (y)' and press Enter.    This time the graphing calculator is able to plot the function.    **Expected Behaviour**:    The Calculator should support functions of the type f(y) without specifying 'x = ' explicitly.    **Device and Application Info**:    OS Build: 10.0.19041.264  Architecture: x64  Application Version: 10.2005.23.0  Region: India (EN-US)  Dev Version Installed: No    **Requested Assisgnment**:    I'm just reporting this problem. I don't want to fix it.	ghost	null	null	null	null	null	null	
2020-07-03 09:30:39.0	null	2021-09-22 06:02:03.0	open	[Bug, triage approved, Area: User Experience, Pri: 2]	5	1299	Allow the symbol 'cosec' for cosecant function	https://api.github.com/repos/microsoft/calculator/issues/1299	https://github.com/microsoft/calculator/issues/1299	**Problem Statement**:    The Calculator app only allows the usage of the symbol 'csc' for referring to the cosecant trigonometric function. It would have been better if the symbol 'cosec' was also allowed.    **Evidence or User Insights**:    Many books and websites use the symbol 'cosec' for it. Here I have quoted some of them:    https://en.wiktionary.org/wiki/cosec    http://www.librow.com/articles/article-11/appendix-a-16    In fact in regions like India, the name 'cosec' is used much more than 'csc'.    **Proposal**:    I have a simple proposal. Please allow the usage of both 'csc' and 'cosec' in Scientific as well as graphing modes of the Calculator as both terms are synonymous.    **Goals**:    To have two symbols for referring to the cosecant trigonometric function: 'csc' and 'cosec', so that when we are entering cosec(x) in the graphing calculator it directly related to the cosecant trigonometric function.    **Non Goals**:    **Low Fidelity Concept**:    **Requested Assignment**:    I'm just suggesting this feature. I don't want to implement it.	ghost	null	null	null	null	null	null	
2020-07-03 14:33:01.0	2020-07-14 00:02:09.0	2020-07-14 00:02:09.0	closed	[]	0	1300	Narrator is not providing any confirmation after activating Keep on top button	https://api.github.com/repos/microsoft/calculator/issues/1300	https://github.com/microsoft/calculator/pull/1300	## Fixes #1173 .      ### Description of the changes:  - Added resource strings for "Keep on top" and "Back to full view" announcements.  - Added reference for the new resource strings in StandardCalculatorViewModel.cpp file.  - When 'IsAlwaysOnTop' property is changed, there is now a check in OnPropertyChanged callback to generate announcements according to the change.  When the property is set, the code will now generate an announcement for 'Keep on top' and when unset, announcement is generated for 'Back to full view'.  This keeps the user informed of changes to the view.  - New function added CalculatorAnnouncement::GetAlwaysOnTopChangedAnnouncement to return announcements to Standard Calculator view model.  Changes in Announcement value result in narrator announcements.    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Manually.  Used narrator to navigate to and activate "keep on top" button.  Narrator announces that Calculator is always on top.  - When switching back, narrator announces that Calculator is back to full view.    	vishegn	null	null	null	null	null	null	
2020-07-07 14:43:24.0	2020-09-14 22:11:18.0	2020-12-02 12:00:32.0	closed	[Bug, Pri: 3, triage approved, Area: User Experience]	2	1301	Copy-pasting result computed by the calculator gives "Invalid input"	https://api.github.com/repos/microsoft/calculator/issues/1301	https://github.com/microsoft/calculator/issues/1301	Calculator 10.1910.0.0    Steps to reproduce the behavior:  Step 1.  ![image](https://user-images.githubusercontent.com/46918093/86797888-e2afc500-c078-11ea-8862-3774ab92a4c3.png)    Step 2.  ![image](https://user-images.githubusercontent.com/46918093/86798014-01ae5700-c079-11ea-86ab-5486b03001af.png)    Step 3.  ![image](https://user-images.githubusercontent.com/46918093/86798105-1854ae00-c079-11ea-86a6-b02d73abfce1.png)    Step 4.  ![image](https://user-images.githubusercontent.com/46918093/86798159-273b6080-c079-11ea-8cf0-d94c963c8449.png)    Why the input is invalid if the calculator has computed it just before??	annazolkieve	null	null	null	null	null	null	
2020-07-07 19:19:14.0	2020-07-14 17:08:58.0	2020-07-14 17:10:10.0	closed	[]	2	1302	Narrator does not provide the confirmation when user deleted one history from the history list items #1172	https://api.github.com/repos/microsoft/calculator/issues/1302	https://github.com/microsoft/calculator/pull/1302	## Fixes #1172 .      ### Description of the changes:  - Added a new resource string for History slot cleared.  - Created a new narrator announcement method which will handle history slot cleared announcements.  - In HistoryViewModel, added code to DeleteItem() method.  This code will construct the announcement string for history item deletions.  - By setting the HistoryAnnouncement variable, the string is announced by Narrator.    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Tested the changes manually.  Narrator announces 'History slot # cleared' when a history is deleted.  -  -    	vishegn	null	null	null	null	null	null	
2020-07-08 04:26:47.0	2020-08-20 22:30:49.0	2020-12-02 12:00:31.0	closed	[Bug, Pri: 3, triage approved, Area: User Experience]	3	1303	Graph mode theme is changed after running programmer mode.	https://api.github.com/repos/microsoft/calculator/issues/1303	https://github.com/microsoft/calculator/issues/1303	**Describe the bug**  Graph mode theme is changed to Dark form White after running programmer mode.    **Steps To Reproduce**  0. Set Windows Theme to Dark mode  1. Run Calculator  2. Change mode to Graph  3. Change theme to same of windows theme  4. Close Calculator  5. Run Calculator  6. Change theme to withe  7. Change mode to programmer  8. Change mode to Graph      **Expected behavior**  1. I expect to maintain theme in Graph mode    **Screenshots**    ![ezgif com-video-to-gif](https://user-images.githubusercontent.com/10369528/86875960-a20a8700-c11e-11ea-826b-308ffdb231bc.gif)    **Device and Application Information**   - OS Build: 10.0.19041.0   - Architecture: X64   - Application Version: 10.2005.23.0   - Region: ko-KR   - Dev Version Installed: True      **Additional context**  I Find this bug in  Calculator in Windows Store.  And I try to find this bug in Dev Version, but now my notebook's Windows Version isn't 2004.  So I tried to check in Dev mode using mstsc. but error occurs because m_graph is null (now, I don't know why this is happening, is it a bug, what am I forgetting?), so I took a temporary action. Subsequently, the same problem occurs in Dev mode.    **Requested Assignment**    If possible, I would like to fix this.  	Lee-WonJun	null	null	null	null	null	null	
2020-07-08 13:51:04.0	null	2021-09-30 09:05:54.0	open	[Enhancement, Pri: 1, needs spec]	9	1304	Option to make exponent divisible by 3 (for metric units reading)	https://api.github.com/repos/microsoft/calculator/issues/1304	https://github.com/microsoft/calculator/issues/1304	**Problem Statement**  When working with metric units it's usefull to see scientific notation with exponent divisible by 3. Number 3,3898e-4 is not as clear as 338.98e-6 is clearly 338.98µ units.    **Evidence or User Insights**  You can try "1/2950=" in standard or scientific mode to see result. It was discussed in #226 also.    **Proposal**  For calculations in metric units it's better to see results in format similar to T, G, M, k, m, µ, n, etc. units.    **Goals**  User should be able to set exponent divider to make scientific notation easily readable. Default value should by 1 to preserve actual state with ability to enable predefined value 3 (or even other value) to read metric results more easily.    **Non-Goals**  It's not meant to make any kind of units conversion.    **Low-Fidelity Concept**  If exp>0 then exp=int(exp/div)*div  if exp<0 then exp=int((exp-div+1)/div)*div    **Requested Assignment**  If possible, I would like to implement this.	uhliksk	null	null	null	null	null	null	
2020-07-08 15:12:47.0	2020-07-09 14:45:55.0	2020-12-02 12:00:30.0	closed	[Enhancement]	3	1305	Copy/Pasting result from programmer mode to another application should remove value separators	https://api.github.com/repos/microsoft/calculator/issues/1305	https://github.com/microsoft/calculator/issues/1305	<!--  Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.  -->    **Describe the bug**  <!-- A clear and concise description of what the bug is. -->  Copying a result value includes commas. This is particularly annoying in the 'programmer' mode where there would never be a situation where the commas would be valid. Copying to the clipboard, in the 'programmer' mode, should strip the commas (or appropriate value separator based on culture).    **Steps To Reproduce**  <!--  Steps to reproduce the behavior:  1. Go to '...'  2. Click on '....'  3. Scroll down to '....'  4. See error  -->  1. enter number, i.e 65535  2. on result, select all, copy  3. paste value somewhere, i.e. notepad  4. value "65,535" is pasted    **Expected behavior**  <!-- A clear and concise description of what you expected to happen. -->  Value should be pasted without separators, i.e. "65535".    **Screenshots**  <!-- If applicable, add screenshots to help explain your problem. -->    **Device and Application Information**   - OS Build: 10     0      18362  0   - Architecture: X64   - Application Version: 10.2005.23.0   - Region: en-US   - Dev Version Installed: False    <!--  Run the following commands in Powershell and copy/paste the output.  " - OS Build: $([Environment]::OSVersion.Version)"  " - Architecture: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Architecture)"  " - Application Version: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Version)"  " - Region: $((Get-Culture).Name)"  " - Dev Version Installed: $($null -ne (Get-AppxPackage -Name Microsoft.WindowsCalculator.Dev))"  -->    **Additional context**  <!-- Add any other context about the problem here. -->    **Requested Assignment**  <!--  Some people just want to report a bug and let someone else fix it.  Other people want to not only submit the bug report, but fix it as well.  Both scenarios are completely ok. We just want to know which one it is.  Please indicate which bucket you fall into by keeping one and removing the other.  -->  I'm just reporting this problem.  I don't want to fix it.  	RSchwoerer	null	null	null	null	null	null	
2020-07-09 02:14:18.0	2020-07-11 15:06:55.0	2020-07-16 01:03:05.0	closed	[]	7	1306	Introduce Finance Calculator	https://api.github.com/repos/microsoft/calculator/issues/1306	https://github.com/microsoft/calculator/pull/1306	As of July 08th, 2020: The tips calculator is not done yet!! If anyone can help me with the BooltoVisibility converter, that would be great! (P.s. this is still a draft pr)    ## Fixes #806 .      ### Description of the changes:  -  A new calculation mode, "Financial"  -  Includes Compound Interest Calculator  -  A tip calculation mode (Not started as of 08th July)    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Manual    Note: In code, Financial mode is always mentioned as "FinanceCalculator" for shortness and consistency.  Also, if you have an idea or can tell me how to use the BooleanToVisibility converter that would be nice. Thanks.  	Chips1234	null	null	null	null	null	null	
2020-07-10 04:52:24.0	2020-07-10 15:26:14.0	2020-07-24 19:56:23.0	closed	[]	2	1307	Link to GitHub Repository	https://api.github.com/repos/microsoft/calculator/issues/1307	https://github.com/microsoft/calculator/pull/1307	## Fixes #582.     I can't put the link in the sentence because of localization (Right to Left languages). I did, however, put it in two different ones? Maybe that works? Also, I'm aware that @karna98 is working on it but that was October 2019.    ### Description of the changes:  - A sentence at the top below the copyright statement: "Windows Calculator is made available under the MIT License. To learn more and contribute, click on the GitHub link below:"  - Add a hyperlink button: "[The repository on GitHub](https://github.com/microsoft/calculator)"    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Manual    P. S. Is there any legal stuff? I mean the name GitHub is probably registered and copyrighted. 	Chips1234	null	null	null	null	null	null	
2020-07-10 18:55:44.0	2020-07-11 14:57:56.0	2020-12-02 12:00:29.0	closed	[good first issue, Bug, triage approved, documentation]	1	1308	Link is broken in readme	https://api.github.com/repos/microsoft/calculator/issues/1308	https://github.com/microsoft/calculator/issues/1308	In my opinion, mock implementation link is broken.    ![image](https://user-images.githubusercontent.com/10369528/87188452-d00fe700-c329-11ea-9d54-9c6b3469b10a.png)    ![image](https://user-images.githubusercontent.com/10369528/87188472-da31e580-c329-11ea-986d-ca3fbb0855e5.png)    Since the mock project path has been moved, I think you need to change it from "/src/MockGraphingImpl" to "/src/GraphingImpl/Mocks".	Lee-WonJun	null	null	null	null	null	null	
2020-07-11 03:56:39.0	2020-07-11 14:57:57.0	2020-07-11 14:57:57.0	closed	[]	0	1309	Fix link of mock implementation of the engine	https://api.github.com/repos/microsoft/calculator/issues/1309	https://github.com/microsoft/calculator/pull/1309	Link of "mock implementation of the engine" is changed to "/src/GraphingImpl/Mocks" from "/src/MockGraphingImpl"    ## Fixes #1308      ### Description of the changes:  - Fix link in Readme    ### How changes were validated:  You can view the mock code by clicking on the "mock implementation of the engine" link in the Readme.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - manual (just check link)    	Lee-WonJun	null	null	null	null	null	null	
2020-07-11 15:28:03.0	2020-07-17 21:33:17.0	2020-12-02 12:00:28.0	closed	[Bug, triage approved, Area: Reliability]	5	1310	A crash occurs when running graph mode.	https://api.github.com/repos/microsoft/calculator/issues/1310	https://github.com/microsoft/calculator/issues/1310	<!--  Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.  -->  **Describe the bug**  <!-- A clear and concise description of what the bug is. -->  I am trying to fix #1308 now.  But when I try to switch the mode to graph mode, I get a null pointer exception error.    **Steps To Reproduce**  <!--  Steps to reproduce the behavior:  1. Go to '...'  2. Click on '....'  3. Scroll down to '....'  4. See error  -->  Steps to reproduce the behavior:   1. Clone this project   2. Change Build Mode to x86   3. Build and run    **Expected behavior**  Runs normally.  <!-- A clear and concise description of what you expected to happen. -->    **Screenshots**  <!-- If applicable, add screenshots to help explain your problem. -->  ![image](https://user-images.githubusercontent.com/10369528/87227368-706f1580-c3d5-11ea-8097-c843a80903fc.png)  Note) RenderMain::CanRenderPoint()    **Device and Application Information**  <!--  Run the following commands in Powershell and copy/paste the output.  " - OS Build: $([Environment]::OSVersion.Version)"  " - Architecture: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Architecture)"  " - Application Version: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Version)"  " - Region: $((Get-Culture).Name)"  " - Dev Version Installed: $($null -ne (Get-AppxPackage -Name Microsoft.WindowsCalculator.Dev))"  -->   - OS Build: 10.0.19041.0   - Architecture: X64   - Application Version: 10.2005.23.0   - Region: ko-KR   - Dev Version Installed: True    **Additional context**  <!-- Add any other context about the problem here. -->  I'm not sure if I'm setting it up incorrectly or a code error.  Also, my architecture is x64, but when I try to debug in x64, Debug mode, as soon as I start it, I get an error in xmemory. (It seems to be a problem with stl, not a calculator.)  So I tested it with x86.     **Requested Assignment**  <!--  Some people just want to report a bug and let someone else fix it.  Other people want to not only submit the bug report, but fix it as well.  Both scenarios are completely ok. We just want to know which one it is.  Please indicate which bucket you fall into by keeping one and removing the other.  -->  If this is fixed by simply adding a null check, I would like to fix this.  If it is not an error, or if it is an architectural problem, I just want to report it.    	Lee-WonJun	null	null	null	null	null	null	
2020-07-12 05:30:38.0	null	2021-08-05 03:02:15.0	open	[help wanted, Bug, triage approved, Area: User Experience, Pri: 2]	13	1311	Entering negative exponents in Scientific mode is not supported	https://api.github.com/repos/microsoft/calculator/issues/1311	https://github.com/microsoft/calculator/issues/1311	**Describe the bug**  The Calculator app does not support entering negative exponents. For example, in the Scientific mode, we can enter "2.6e2" produces the expected output 260 but trying to type "2.6e-2" does not give 0.026 as it should. I even tried to put the -2 within parentheses to make sure it understands that the dash symbol is not for subtraction here but even that fails.    **Steps To Reproduce**  1. Open the Calculator app in Scientific mode.  2. Type "2.6e-2" and attempt to calculate it.  3. The answer reported back is 0.6 instead of the expected 0.026.    **Expected behavior**  The Calculator app should ideally support entering negative exponents and on typing "2.6e-2" in Scientific mode, it should understand that a dash following an exponent symbol 'e' is not supposed to mean subtraction but a negation.    **Screenshots**  ![image](https://user-images.githubusercontent.com/10389346/87239559-2d8d5c00-c42e-11ea-8934-0f820be885b7.png)    **Device and Application Information**   - OS: Windows 10 Home Insider Preview Single Language   - OS Build: 10 - 0 -20161 - 0 (20161.rs_prerelease.200627-1754)   - Architecture: x64   - Application Version: 10.2005.23.0    **Requested Assignment**  I'm just reporting this problem.  I don't want to fix it.  	SaprativRay	null	null	null	null	null	null	
2020-07-12 15:40:20.0	2020-08-20 22:30:49.0	2020-08-20 22:30:49.0	closed	[fixing approved issue]	2	1312	Change the initialization time of Radio button's isChecked	https://api.github.com/repos/microsoft/calculator/issues/1312	https://github.com/microsoft/calculator/pull/1312	 Change the initialization time of Radio button's isChecked in CalculatorProgrammerRadixOperators      ## Fixes #1303     ### Description of the changes:  - Remove checkDefaultBitShift  - Add a member variable for saving what is selected  - Modify XAML    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Manual tests / Check that graph theme is unchanged  - Default Unit Tests (Unit Test pass, UI Test Fail, but it seems to be a bug because the master branch fails too )      ### Information  As a result of analyzing the call point of g.hpp made from C++, it was confirmed that the theme radio button in Graphing Setting is changed suddenly when CalcuatorProgrammerRadixOperators is initialized.  It was determined that there was something wrong with the components of the CalacuatorProgrammerRadixOperators, and after various tests, it was confirmed that there was a problem in the initialization of the Radio Button (BitshiftFlyout).    The problem I am assuming is as follows.  1. The radio box group does not exist.  2. Arithmetic Shift Button of Bitshift Flyout Radio Box is checked at startup.  4. When the view is converted and the CacluatorPrgrammerRadixOperators are created, the Graph Setting does not disappear and remains in the memory (Graph Setting seems to be generated by Code-base, not XAML).  5. Since other Radio Button is selected, Radio Button of Graphing Setting is Unchecked.    - Excepted  ![image](https://user-images.githubusercontent.com/10369528/87250248-885e9c00-c49e-11ea-968c-3c9d5405a4f7.png)    - Error  ![image](https://user-images.githubusercontent.com/10369528/87250258-97454e80-c49e-11ea-9b4d-2475296da5ee.png)        I chose a simple way to check the radio button when displaying the BitShiftFlyout.    So, I added a member variable for saving what is selected. (I just use the reference of radio directly, not use others like enum. this is dangerous?)    I don't think this is the best way. I think this is not a fundamental solution  However, to solve the problem without structural changes (or changing the internal operation), I selected this way.    ### Additional context  #1310 issue has not been answered yet and has been excluded from the PR.  	Lee-WonJun	null	null	null	null	null	null	
2020-07-14 17:36:10.0	2020-07-14 18:38:26.0	2020-07-14 18:38:26.0	closed	[]	2	1313	Update to Localized Strings	https://api.github.com/repos/microsoft/calculator/issues/1313	https://github.com/microsoft/calculator/pull/1313	## Fixes #.      ### Description of the changes:  Update to localized strings    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  -  -  -    	quentin987	null	null	null	null	null	null	
2020-07-15 19:25:40.0	2020-07-21 16:23:50.0	2020-12-02 12:00:27.0	closed	[Bug, triage approved, Area: User Experience, Pri: 2]	3	1314	Square root button does not use standard keyboard button styling	https://api.github.com/repos/microsoft/calculator/issues/1314	https://github.com/microsoft/calculator/issues/1314	<!--  Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.  -->    **Describe the bug**  When you hover over the square root button in the scientific calculator, the mouse-over colour is accent colour, however, the others are grey.     **Steps To Reproduce**  Steps to reproduce the behaviour:  1. Go to Scientific Mode  2. Hover over Square Root  4. See that the colour is accent    **Expected behaviour**  Be grey in colour as the other buttons, or the other buttons become accent coloured.     **Screenshots**  Squrt:  ![Scientific Mode Squrt](https://user-images.githubusercontent.com/47545798/87586624-a510f480-c695-11ea-8a63-016a206e9abf.jpg)  Normal:  ![Scientific Mode Grey](https://user-images.githubusercontent.com/47545798/87586648-ae9a5c80-c695-11ea-9d5e-04fa5df9515d.jpg)    **Device and Application Information**   - OS Build: 10.1.20161.1000   - Architecture: x64   - Application Version: 10.2005.23.0   - Region: English-Canada   - Dev Version Installed: Yes    **Requested Assignment**  If possible, I would like to fix this.    P.s. I apologize if there are dupes. I searched and did not find anything.  	Chips1234	null	null	null	null	null	null	
2020-07-16 03:49:52.0	2020-07-21 16:23:50.0	2020-07-21 16:24:45.0	closed	[]	5	1315	Fix accent colour mouse-over	https://api.github.com/repos/microsoft/calculator/issues/1315	https://github.com/microsoft/calculator/pull/1315	## Fixes #1314.      ### Description of the changes:  - Fix the style of the sqrt button from `EmphasizedCalcButtonStyle` to `SymbolOperatorButtonStyle` for constsancy.  ![Scientific Mode Squrt](https://user-images.githubusercontent.com/47545798/87624448-a74a7180-c6dc-11ea-8944-78a4ee85fc96.jpg)  _Before_  ![Scientific Mode Squrt Fixed](https://user-images.githubusercontent.com/47545798/87624460-b16c7000-c6dc-11ea-9a88-a4592b7477b8.jpg)  _After_    ### How changes were validated:  -Manual   	Chips1234	null	null	null	null	null	null	
2020-07-16 10:36:03.0	2020-07-17 21:33:17.0	2020-07-20 05:12:12.0	closed	[]	2	1316	Null Check in RenderMain::CanRenderPoint	https://api.github.com/repos/microsoft/calculator/issues/1316	https://github.com/microsoft/calculator/pull/1316	## Fixes #1310        ### Description of the changes:  -Null Check in RenderMain::CanRenderPoint      ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.  Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - manual  - Tested with #1312     	Lee-WonJun	null	null	null	null	null	null	
2020-07-16 11:42:36.0	2020-07-20 22:05:23.0	2020-07-23 14:59:53.0	closed	[]	0	1317	Narrator is not announcing the confirmation after selecting radio button	https://api.github.com/repos/microsoft/calculator/issues/1317	https://github.com/microsoft/calculator/pull/1317	## Fixes #962 .      ### Description of the changes:  - Added Resource strings for each radio button in Bit Shift flyout  - Loaded resource strings as part of CalculatorProgrammerRadixOperators construction  - Based on radio button selected, the relevant resource string is passed over to the view model to make the announcement.  - The Announcement property is set in the View Model which being an observed property causes the Narrator announcement.    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Manual testing via Narrator.  Announcements corresponding to the radio button are announced when selected.  -  -    	vishegn	null	null	null	null	null	null	
2020-07-18 09:42:12.0	2020-07-20 03:32:44.0	2020-12-02 12:00:26.0	closed	[Enhancement, pitch declined]	4	1318	Add "Ctrl + W" shortcut for closing the app	https://api.github.com/repos/microsoft/calculator/issues/1318	https://github.com/microsoft/calculator/issues/1318	<!--  See https://github.com/Microsoft/calculator/blob/master/docs/NewFeatureProcess.md for suggestions on how to write a good feature pitch. Just want to submit an idea quickly? Try Feedback Hub instead: https://insider.windows.com/en-us/fb/?contextid=130  -->    **Problem Statement**  The Calculator app doesn't have the keyboard shortcut to close the app. Adding the keyboard shortcut will make the app useful.  <!--  What problem are we trying to solve? Who’s the target audience? Is there a customer need or pain point we need to remedy? Is there a business goal or metric we are trying to improve? Do we have a hypothesis we want to prove or disprove?  -->    **Evidence or User Insights**  At this time, users have to use the close button at the top of the window to close the Calculator app. Many apps running on Windows have Ctrl + W shortcut to close the app.  <!--  Why should we do this? Potential sources of data: Feedback Hub, other GitHub issues, other anecdotes from listening to customers in person or online, request from another team, telemetry data, user research, market or competitive research  -->    **Proposal**  Please add Ctrl + W shortcut for closing the app.  <!--  How will the solution/feature help us solve the problem? How will it meet the target audience’s needs? If there are business goals or metrics, how does this improve them?  -->    **Goals**  Users can use Ctrl + W shortcut to close the Calculator app.  <!--  What you want to accomplish with this feature. Typical examples include  "User Can *perform some task*"  -->    **Non-Goals**  <!--  Things we are explicitly not doing or supporting or that are out of scope, including reasons why.  -->    **Low-Fidelity Concept**  <!--  Show as much of the experience as needed to explain the idea. This can be as simple as a napkin drawing but can also be a code prototype, or a design comp. Keep it simple at this stage, as it can be refined later during the pre-production stage.  -->    **Requested Assignment**  <!--  Some people just want to suggest a feature and let someone else implement it.  Other people want to not only suggest a feature, but implement it as well.  Both scenarios are completely ok. We just want to know which one it is.  We are likely to prioritize the review of feature requests if they already have someone who can implement them.  Please indicate which bucket you fall into by keeping one and removing the other.  -->  I'm just suggesting this idea.  I don't want to implement it.  	Robot-Inventor	null	null	null	null	null	null	
2020-07-18 13:46:25.0	2020-07-20 03:59:26.0	2020-12-02 12:00:25.0	closed	[Bug, not repro]	4	1319	The background blur effect keeps flashing.	https://api.github.com/repos/microsoft/calculator/issues/1319	https://github.com/microsoft/calculator/issues/1319	![image](https://user-images.githubusercontent.com/16176906/87849421-7c059380-c923-11ea-8910-5c47449cda98.png)  ![lzv0v-jso7d](https://user-images.githubusercontent.com/16176906/87853829-8be39e80-c948-11ea-9e5e-447566bd81f4.gif)        	Qiaogun	null	null	null	null	null	null	
2020-07-19 18:22:15.0	2020-07-20 18:32:28.0	2020-12-02 12:00:24.0	closed	[Bug, Area: User Experience, duplicate]	1	1320	Caption buttons not working properly	https://api.github.com/repos/microsoft/calculator/issues/1320	https://github.com/microsoft/calculator/issues/1320	**Describe the bug**  When I resize the Calculator window, the caption buttons (Minimize, Maximize, and Close) remain stuck even after resize, and tend to hide if I resize the window smaller. If I resize the window larger, they stay in the middle until I maximize by double clicking the titlebar or moving the window.    **Steps To Reproduce**  1. Open the Calculator window in any mode (scientific, standard, etc.)  2. Resize the window using the drag handles    **Expected behavior**  The caption buttons will stay attached to the top right corner of the window.    **Screenshots**  Screenshots added.  ![image](https://user-images.githubusercontent.com/51350879/87881901-7b740800-c9ca-11ea-97af-aa424c34c483.png)  ![image](https://user-images.githubusercontent.com/51350879/87881912-96df1300-c9ca-11ea-92ff-8913e9f27ba2.png)        **Device and Application Information**   - OS Build: 10.0.20170.0   - Architecture: X64   - Application Version: 10.2005.23.0   - Region: en-US   - Dev Version Installed: False      **Additional context**  I noticed that if you click in the area where those buttons are supposed to be, the window will still minimize, maximize, or close appropriately, even without the buttons.    **Requested Assignment**  <!--  Some people just want to report a bug and let someone else fix it.  Other people want to not only submit the bug report, but fix it as well.  Both scenarios are completely ok. We just want to know which one it is.  Please indicate which bucket you fall into by keeping one and removing the other.  -->  I'm just reporting this problem.  I don't want to fix it.  	nitishvijai	null	null	null	null	null	null	
2020-07-21 17:43:41.0	2020-07-21 21:28:48.0	2020-07-21 21:30:06.0	closed	[]	1	1321	CornerRadius for Graph settings textbox	https://api.github.com/repos/microsoft/calculator/issues/1321	https://github.com/microsoft/calculator/pull/1321	## Fixes #1248 .      ### Description of the changes:  - Add `contract7Present:CornerRadius="2"`    ### How changes were validated:  - Manual	Chips1234	null	null	null	null	null	null	
2020-07-22 16:49:01.0	2020-07-22 20:00:45.0	2020-07-22 20:00:45.0	closed	[]	0	1322	update localized strings	https://api.github.com/repos/microsoft/calculator/issues/1322	https://github.com/microsoft/calculator/pull/1322	Applies the localized strings from our localization pipeline to the main calculator repo.    	EriWong	null	null	null	null	null	null	
2020-07-23 04:10:58.0	null	2021-09-30 09:05:57.0	open	[Enhancement, Pri: 2, approved]	4	1323	New icon for dev mode	https://api.github.com/repos/microsoft/calculator/issues/1323	https://github.com/microsoft/calculator/issues/1323	**Problem Statement**  We should make a new icon for dev mode similar to the calculator icon (but with a "Dev" banner on it)    **Evidence or User Insights**  For consistency, also the terminal dev mode has it.    **Proposal**  Have a variation of the calculator dev icon but with a dev banner.     **Requested Assignment**  I'm just suggesting this idea.  I don't want to implement it (I'm not great with image manipulation).  	Chips1234	null	null	null	null	null	null	
2020-07-27 23:20:00.0	2020-07-30 22:00:04.0	2020-09-25 22:56:24.0	closed	[]	1	1324	User/covolk/updateto2007 release	https://api.github.com/repos/microsoft/calculator/issues/1324	https://github.com/microsoft/calculator/pull/1324	## Fixes #  N/A    ### Description of the changes:  Updating release version to 2007    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  N/A    	volkcor	null	null	null	null	null	null	
2020-07-28 09:21:01.0	null	2021-05-26 10:07:11.0	open	[help wanted, Bug, Pri: 3, triage approved, Area: User Experience]	7	1325	Unable to set focus back to the Calculator after minimizing using the title bar menu	https://api.github.com/repos/microsoft/calculator/issues/1325	https://github.com/microsoft/calculator/issues/1325	**Describe the Bug**:  Sometimes we are unable to set focus back to the Calculator after minimizing using the title bar menu. This issue occurs when we are working in the Graphing mode. After opening the app again, we cannot press even a single button.    **Steps to Reproduce**:  This bug is intermittent. You may have a hard time reproducing this bug; I resetted this app several times in order to record a handful of occurences.  If someone is able to reproduce this, please leave a comment telling your observations so that the maintainers find it easier to debug.     1. Open the Calculator in Graphing mode.  2. In the expression box, type an incomplete expression as shown below:  ```  x<  ```  OR  ```  x=  ```  OR  ```  x/  ```  OR  ```  x|  ```  3. Right-click the title bar and select '**Minimize**'.    ![Title Bar](https://user-images.githubusercontent.com/55381546/88645068-53c72300-d0e1-11ea-8256-5b1eba6d6873.jpg)    4. Restore the app from the taskbar.  5. You will notice that you are unable to click any button or text field.    ![Focus Bug](https://user-images.githubusercontent.com/55381546/88645164-6fcac480-d0e1-11ea-867a-0c19f95ab91a.jpg)    **Expected Behaviour**:  We should have been able to set focus to any button or text field.    **Device and Application Info**:  OS Build: 10.0.19041.264  Architecture: x64  Application Version: 10.2005.23.0  Region: India (en-US)  Dev-Version Installed: No    **Requested Assignment**:  I'm just reporting this problem. I don't want to fix it.	ghost	null	null	null	null	null	null	
2020-07-28 09:36:19.0	null	2021-05-26 10:07:09.0	open	[Bug, triage approved, Area: Reliability, Pri: 2]	9	1326	Calculator app crashes when trying to plot 'x < sin(x)'	https://api.github.com/repos/microsoft/calculator/issues/1326	https://github.com/microsoft/calculator/issues/1326	**Describe the Bug**:  The Calculator app crashes when we try to plot the inequality 'x < sin(x)'.    **Steps to Reproduce**:  1. Open the Calculator in Graphing mode.  2. Type 'x' as the first expression.  3. Type 'x^2' as the second expression.  4. Type 'x < sin(x)' as the third expression and press Enter.    ![Crash](https://user-images.githubusercontent.com/55381546/88646191-87567d00-d0e2-11ea-98ca-e9d8d967a195.jpg)    5. You will notice that the Calculator app crashes.    > **Note**: The Calculator app is currently unable to plot inequalities of the type:  ```  x < sin (x)  sin(x) < cos (x)  cos(x) < sin(x)  ```  **Expected Behaviour**:  The Calculator should readily plot these inequalities and should not crash while handling them.    **Requested Assignment**:  I'm just reporting this problem. I don't want to fix it.	ghost	null	null	null	null	null	null	
2020-07-28 13:19:32.0	null	2021-09-30 09:05:59.0	open	[Enhancement, Pri: 2, needs more info]	3	1327	Enable us to save the picture of the graph in vectorgraph	https://api.github.com/repos/microsoft/calculator/issues/1327	https://github.com/microsoft/calculator/issues/1327	<!--  See https://github.com/Microsoft/calculator/blob/master/docs/NewFeatureProcess.md for suggestions on how to write a good feature pitch. Just want to submit an idea quickly? Try Feedback Hub instead: https://insider.windows.com/en-us/fb/?contextid=130  -->    **Problem Statement**  <!--  What problem are we trying to solve? Who’s the target audience? Is there a customer need or pain point we need to remedy? Is there a business goal or metric we are trying to improve? Do we have a hypothesis we want to prove or disprove?  -->  We may encounter a situation that we want to save the graph in a picture for use of inserting it into another place. Currently we can do that by snipping the screen, or share it with an email or in OneNote. It's not that convenient if we just want to save a picture. An editable image file (such as svg/emf) will benefit a lot.    **Evidence or User Insights**  <!--  Why should we do this? Potential sources of data: Feedback Hub, other GitHub issues, other anecdotes from listening to customers in person or online, request from another team, telemetry data, user research, market or competitive research  -->  I could remember a product, Microsoft Mathematics, which could save the graphs in emf files.     **Proposal**  <!--  How will the solution/feature help us solve the problem? How will it meet the target audience’s needs? If there are business goals or metrics, how does this improve them?  -->  Add a save button above the graph. We could change the file format (in bitmap or vectorgraph) in the pop out window.    **Goals**  <!--  What you want to accomplish with this feature. Typical examples include  "User Can *perform some task*"  -->    **Non-Goals**  <!--  Things we are explicitly not doing or supporting or that are out of scope, including reasons why.  -->    **Low-Fidelity Concept**  <!--  Show as much of the experience as needed to explain the idea. This can be as simple as a napkin drawing but can also be a code prototype, or a design comp. Keep it simple at this stage, as it can be refined later during the pre-production stage.  -->    **Requested Assignment**  <!--  Some people just want to suggest a feature and let someone else implement it.  Other people want to not only suggest a feature, but implement it as well.  Both scenarios are completely ok. We just want to know which one it is.  We are likely to prioritize the review of feature requests if they already have someone who can implement them.  Please indicate which bucket you fall into by keeping one and removing the other.  -->  I'm just suggesting this idea.  I don't want to implement it.  	skyanchor	null	null	null	null	null	null	
2020-07-29 00:10:12.0	2020-08-11 06:30:22.0	2020-12-02 12:00:23.0	closed	[Enhancement]	2	1328	Move "|x|" abs function to "2nd" area.	https://api.github.com/repos/microsoft/calculator/issues/1328	https://github.com/microsoft/calculator/issues/1328	Remove the |x| abs function from this prominent place. It is absolutely useless, because changing the sign is almost trivial and can easily calculated by hand. In case you want to change the sign, you can use +/- button.   Replace the e constant with the e**x function, because you use e in e**x.  In general check which functions are used frequently: make them accessible with one click.      	wodr	null	null	null	null	null	null	
2020-07-30 21:59:19.0	2020-07-30 22:30:12.0	2020-07-30 22:30:13.0	closed	[]	0	1329	Update release version to 2007	https://api.github.com/repos/microsoft/calculator/issues/1329	https://github.com/microsoft/calculator/pull/1329	Update release version to 2007.	mcooley	null	null	null	null	null	null	
2020-07-31 14:34:57.0	2020-07-31 15:09:45.0	2020-07-31 15:09:45.0	closed	[]	0	1330	Update signing config in release build	https://api.github.com/repos/microsoft/calculator/issues/1330	https://github.com/microsoft/calculator/pull/1330	Update codesigning configuration for internal release builds.	mcooley	null	null	null	null	null	null	
2020-07-31 20:15:40.0	null	2021-09-30 09:06:02.0	open	[Enhancement, Pri: 1, approved]	9	1331	Copy values from Hex mode without spaces	https://api.github.com/repos/microsoft/calculator/issues/1331	https://github.com/microsoft/calculator/issues/1331	**Problem Statement**  <!--  What problem are we trying to solve? Who’s the target audience? Is there a customer need or pain point we need to remedy? Is there a business goal or metric we are trying to improve? Do we have a hypothesis we want to prove or disprove?  -->  When you copy values from the Hex mode in the Programmer's calculator, you copy the values with the spaces included. In most programming languages, hex numbers do not support spaces in between, so you have to manually remove them every time you paste that number in a text editor.    **Evidence or User Insights**  <!--  Why should we do this? Potential sources of data: Feedback Hub, other GitHub issues, other anecdotes from listening to customers in person or online, request from another team, telemetry data, user research, market or competitive research  -->  Popular programming languages don't support spaces in between, for example: C, C++, Python, Rust, etc.    **Proposal**  <!--  How will the solution/feature help us solve the problem? How will it meet the target audience’s needs? If there are business goals or metrics, how does this improve them?  -->  When you're copying from the hex calculator, copy the values without spaces.    **Goals**  <!--  What you want to accomplish with this feature. Typical examples include  "User Can *perform some task*"  -->  User can copy the result values from the calculator without the spaces every word.      **Non-Goals**  <!--  Things we are explicitly not doing or supporting or that are out of scope, including reasons why.  -->  Don't remove the space in the display, they help when reading the value.      **Requested Assignment**  <!--  Some people just want to suggest a feature and let someone else implement it.  Other people want to not only suggest a feature, but implement it as well.  Both scenarios are completely ok. We just want to know which one it is.  We are likely to prioritize the review of feature requests if they already have someone who can implement them.  Please indicate which bucket you fall into by keeping one and removing the other.  -->  If the idea is approved, I would like to try to implement this on a time frame, if I can't, I will inform it so a maintainer can take care of the idea.  	etra0	null	null	null	null	null	null	
2020-08-04 17:05:33.0	2020-08-04 17:28:11.0	2020-08-04 17:28:11.0	closed	[]	0	1332	Updated Resource Strings	https://api.github.com/repos/microsoft/calculator/issues/1332	https://github.com/microsoft/calculator/pull/1332	## Fixes #.      ### Description of the changes:  Updated Resource Strings    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->      	quentin987	null	null	null	null	null	null	
2020-08-04 18:30:30.0	2020-08-06 19:28:39.0	2020-08-06 19:28:39.0	closed	[]	0	1333	Skip items that are not enabled when creating jump list	https://api.github.com/repos/microsoft/calculator/issues/1333	https://github.com/microsoft/calculator/pull/1333	### Description of the changes:  - Skip items that are not enabled when creating jump list    ### How changes were validated:  - Manual tests    	joseartrivera	null	null	null	null	null	null	
2020-08-05 23:17:22.0	2020-08-06 08:43:07.0	2020-08-06 08:43:27.0	closed	[]	2	1334	Excessive check for the max value is removed	https://api.github.com/repos/microsoft/calculator/issues/1334	https://github.com/microsoft/calculator/pull/1334	## Fixes #1301 .  It reproduces both for QWORD numbers (as mentioned in the report) and for WORD numbers (e.g. -32768).    The root cause of the issue has been an incorrect validation of the pasted data.  When user is trying to insert quite a big negative number, the validator `CopyPasteManager::ExpressionRegExMatch` calculates both the maximum bits length and the maximum unsigned long value for it.  However, casting signed negative long to the unsigned long by this check leads to exceeding of the maximum value.    ### Description of the changes:  I have removed the check for the maximum value since there are already precedence checks for the maximum bits length `OperandLength(...) > maxOperandLength` and `TryOperandToULL(...) != nullptr` which throw the error if "the operand was empty, received invalid_argument, or received out_of_range".    ### How changes were validated:  - The changes were tested by manual testing on 4 types of numbers: QWORD, DWORD, WORD, BYTE.  - Additional unit tests have been written to cover these scenarios. Now there are automatic tests for the copy/paste context menu which were absent by the moment.  	JackRainy	null	null	null	null	null	null	
2020-08-06 16:58:14.0	2020-09-14 22:11:18.0	2020-09-14 22:11:18.0	closed	[fixing approved issue]	0	1336	Take the boundary of signed negative values into account( Fix issue 1301)	https://api.github.com/repos/microsoft/calculator/issues/1336	https://github.com/microsoft/calculator/pull/1336	## Fixes #1301     It reproduces both for QWORD numbers (as mentioned in the report) and for WORD numbers (e.g. -32768).    The root cause of the issue has been an incorrect validation of the pasted data.  When user is trying to insert quite a big negative number, the validator `CopyPasteManager::ExpressionRegExMatch` calculates both the maximum bits length and the maximum unsigned long value for it.  However, the sign of a signed negative long is ignored by `SanitizeOperand` thus it results in casting of the signed long to the unsigned long with the overflow.    ## Description of the changes:  The check for the maximum value is improved by additional check whether it has a deal with the maximum negative number for the given word size. Now the range of acceptable values is extended (e.g. for WORD from [-32767...32767] to [-32768...32767] )    ## How changes were validated:  - The changes were tested by manual testing on 4 types of numbers: QWORD, DWORD, WORD, BYTE.  - Additional unit tests have been written to cover these scenarios.  - Also, now there are automatic UI tests for the copy/paste context menu which were absent by the moment.    	JackRainy	null	null	null	null	null	null	
2020-08-06 19:37:06.0	2020-08-11 22:39:33.0	2020-08-13 18:04:37.0	closed	[build]	2	1337	Updated the Calculator projects to include the /Z7 compiler flag	https://api.github.com/repos/microsoft/calculator/issues/1337	https://github.com/microsoft/calculator/pull/1337	### Description of the changes:  - Added the /Z7 compiler flag to the AdditionalOptions compiler configuration    	sanderl	null	null	null	null	null	null	
2020-08-06 21:51:12.0	2020-09-15 21:27:23.0	2020-09-15 21:27:24.0	closed	[fixing approved issue]	2	1338	Improved error handing for function analysis for functions in the f(y) format	https://api.github.com/repos/microsoft/calculator/issues/1338	https://github.com/microsoft/calculator/pull/1338	## Fixes #1277.      ### Description of the changes:  - Updated the CanFunctionAnalysisBePerformed to use the updated API that returns if the variable is not x  - Added a new error string to inform the user the function is in the incorrect format for function analysis    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Manually, verified f(x) works as expected, f(x) with variables works as expected, f(y) returns an error with the new string  	sanderl	null	null	null	null	null	null	
2020-08-06 22:16:45.0	2020-08-12 16:14:45.0	2020-12-02 12:00:22.0	closed	[Bug, Area: Accessibility, Pri: 3, triage approved]	3	1339	'Keep on top' button appears last in the tab order	https://api.github.com/repos/microsoft/calculator/issues/1339	https://github.com/microsoft/calculator/issues/1339	**Describe the bug**  The 'Keep on top' button appears to be last in the tab order, resulting in focus order: NavigationView menu button > Calculator Display > _Everything else_ > Keep on top button.    **Steps To Reproduce**  1. Launch Narrator.  2. Launch Calculator app.  3. Navigate to 'Open Navigation' button and activate it.  4. Navigate to 'Standard' menu item and activate it.  5. 'Standard' calculator mode will open.  6. Set narrator scan mode using 'Caps+Space' keys.  7. Navigate to 'Open Navigation' and 'Keep on top' buttons using 'Up/Down arrow' keys in scan mode.  8. Observe the issue.    Note: Issue can be observed without Narrator or scan mode using keyboard focus.    **Expected behavior**  The 'Keep on top' button exists in tab order logically, resulting in focus order: NavigationView menu button > Calculator Display > Keep on top button > _Everything else_.    **Device and Application Information**   - Application Version: 10.2005.23.0    **Requested Assignment**  I'm just reporting this problem.  I don't want to fix it.  	MicrosoftIssueBot	null	null	null	null	null	null	
2020-08-06 22:16:49.0	null	2021-05-26 10:07:05.0	open	[help wanted, Bug, triage approved, Area: Reliability, Pri: 2]	3	1340	Crash occurs upon opening an additional session of Calculator that is not the same size and mode of the current, open session	https://api.github.com/repos/microsoft/calculator/issues/1340	https://github.com/microsoft/calculator/issues/1340	**Describe the bug**  Crash occurs upon opening an additional session of Calculator that is not the same size and mode of the current, open session    **Steps To Reproduce**  1. Launch a session Calculator in Standard mode with History/Memory panel not displayed  2. Leave this 1st session open throughout the rest of the steps  3. Open a 2nd session  4. Resize the 2nd session to display History/Memory panel  5. Switch the 2nd session to another mode of calculator such as Scientific  6. Close the 2nd session  7. Open a 3rd session   9. If the mode of the third session reverted to the same mode of the 1st session, change the mode of the 3rd session to the mode that 2nd session was before it was closed  10. Close the 3rd session  11. Open 4th a session (if crash does not occur open and close additional sessions)    **Expected behavior**  Calculator doesn't crash    **Device and Application Information**   - Application Version: 10.2005.23.0    **Additional context**  Repro rate: 50% to 75%    **Requested Assignment**  I'm just reporting this problem.  I don't want to fix it.  	MicrosoftIssueBot	null	null	null	null	null	null	
2020-08-07 10:10:54.0	2020-08-07 15:31:36.0	2020-12-02 12:00:21.0	closed	[question]	2	1341	how do you compute the graph coordinates of the function on graph mode？	https://api.github.com/repos/microsoft/calculator/issues/1341	https://github.com/microsoft/calculator/issues/1341	I have a problem that is same with ‘ https://github.com/microsoft/calculator/issues/966 ’.   Now i has known it is because the system version is wrong. Then I want know why the graph mode is related with ths system version?   And the code of calculating the graph coordinates is in which module and in which file? Please give me answer. Thanks! @sanderl 	fangsmile	null	null	null	null	null	null	
2020-08-07 17:44:28.0	2020-08-10 15:46:20.0	2020-08-10 15:46:20.0	closed	[]	0	1342	Update CI trigger to point at release/* branches	https://api.github.com/repos/microsoft/calculator/issues/1342	https://github.com/microsoft/calculator/pull/1342	The servicing/* branches in this repository have been renamed to release/*.    "release" is a better name because we use these branches mostly for stabilizing a release before shipping. Using these branches for "servicing" (patching) releases that have already shipped is less common. Also, we think "release" will be more widely understood.    Update CI builds to trigger on check-ins to release/* branches.	mcooley	null	null	null	null	null	null	
2020-08-08 02:01:27.0	2021-07-01 04:48:39.0	2021-07-22 18:15:15.0	closed	[fixing approved issue]	107	1343	Add settings	https://api.github.com/repos/microsoft/calculator/issues/1343	https://github.com/microsoft/calculator/pull/1343	## Fixes #596 .    ### Description of the changes:  - Add in a new page, the "Settings" page.  - Changed the NavView footer to "Settings".  - Replaced the "About" flyout with the "Settings" page.    ![Calculator settings NavBar](https://user-images.githubusercontent.com/47545798/107166889-32869f80-696c-11eb-8679-6b8a6a49578d.jpg)  _Change the "About" button in the Navigation Bar to "Settings"._    ![Calculator settings](https://user-images.githubusercontent.com/47545798/107166749-c7d56400-696b-11eb-8201-f78b38041fab.jpg)  _The new "Settings Page"_    ![Calculator settings 2](https://user-images.githubusercontent.com/47545798/107166981-75487780-696c-11eb-85a6-c9c4208e4d7f.jpg)  _When the user changes the mode, they are prompted to restart the app for changes to take effect._     ![Calculator settings 3](https://user-images.githubusercontent.com/47545798/107166769-d3288f80-696b-11eb-8ab2-299a7100b467.jpg)  _When low on space._    ### How changes were validated:  Manual    P.S. thanks @sanderl for all the help!	Chips1234	null	null	null	null	null	null	
2020-08-10 13:32:44.0	2020-08-11 12:56:45.0	2020-08-11 16:15:02.0	closed	[fixing approved issue]	1	1344	Enable keyboard entry in bit-toggling mode #478	https://api.github.com/repos/microsoft/calculator/issues/1344	https://github.com/microsoft/calculator/pull/1344	## Fixes #478.      ### Description of the changes:  The programmer radix buttons were being disabled when the bit flip panel was selected, causing the appropriate keyboard events to be ignored.  They should actually only be hidden in bit flip mode but still enabled.    - Corrected programmer radix buttons to continue being enabled just hidden when the programmer calculator is in bit flip mode.  - Renamed AreProgrammerRadixOperatorsEnabled property to the more appropriate AreProgrammerRadixOperatorsVisible.    ### How changes were validated:  - Manually tested each of the keyboard shortcuts from the programmer radix buttons while in bit-toggling mode, made sure to test that the dynamically disabled buttons (e.g. A,B,C.. etc in non-hex mode) behaviour is consistent when non in bit-toggling mode.	Callum-Shipton	null	null	null	null	null	null	
2020-08-11 02:56:50.0	2020-08-11 17:32:19.0	2020-12-02 12:00:20.0	closed	[by design]	4	1345	My running app is exception. The graph mode give me a blank screen.	https://api.github.com/repos/microsoft/calculator/issues/1345	https://github.com/microsoft/calculator/issues/1345	  ![image](https://user-images.githubusercontent.com/3468473/89852324-2d18ea00-dbc1-11ea-966a-16363b15a2bd.png)      I modified this file like below image：  ![image](https://user-images.githubusercontent.com/3468473/89852071-9fd59580-dbc0-11ea-84f5-76c3e8092ed0.png)  If it is doesn't matter.  @grochocki @sanderl 	fangsmile	null	null	null	null	null	null	
2020-08-11 13:16:02.0	2020-08-12 15:53:32.0	2020-08-19 18:46:51.0	closed	[fixing approved issue]	0	1346	Enable keyboard entry in bit-toggling mode #478	https://api.github.com/repos/microsoft/calculator/issues/1346	https://github.com/microsoft/calculator/pull/1346	## Fixes #478.      ### Description of the changes:  The programmer radix buttons were being disabled when the bit flip panel was selected, causing the appropriate keyboard events to be ignored.  They should actually only be hidden in bit flip mode but still enabled.    - Corrected programmer radix buttons to continue being enabled just hidden when the programmer calculator is in bit flip mode.  - Renamed AreProgrammerRadixOperatorsEnabled property to the more appropriate AreProgrammerRadixOperatorsVisible.    ### How changes were validated:  - Manually tested each of the keyboard shortcuts from the programmer radix buttons while in bit-toggling mode, made sure to test that the dynamically disabled buttons (e.g. A,B,C.. etc in non-hex mode) behaviour is consistent when non in bit-toggling mode.	Callum-Shipton	null	null	null	null	null	null	
2020-08-11 15:05:38.0	2020-08-12 16:14:46.0	2020-08-19 18:46:08.0	closed	[fixing approved issue]	0	1347	'Keep on top' button appears last in the tab order (#1339)	https://api.github.com/repos/microsoft/calculator/issues/1347	https://github.com/microsoft/calculator/pull/1347	## Fixes #1339.    ### Description of the changes:  The 'Keep on top' button did not have the tab ordering set so it was last in the tab order.  - Added TabIndex to AlwaysOnTop button    ### How changes were validated:  - Manually tested that the tab order is now correct on the standard calculator mode  - Manually tested that the tab order is unchanged in the other calculator modes	Callum-Shipton	null	null	null	null	null	null	
2020-08-12 18:21:39.0	2020-08-12 19:17:48.0	2020-08-12 19:17:48.0	closed	[]	0	1348	Pull internals package from WindowsInboxApps feed	https://api.github.com/repos/microsoft/calculator/issues/1348	https://github.com/microsoft/calculator/pull/1348	For internal release builds, change the feed where the calculator-internals package is pulled from.	mcooley	null	null	null	null	null	null	
2020-08-13 01:08:14.0	2020-08-13 01:28:26.0	2020-12-02 12:00:19.0	closed	[Bug, duplicate]	2	1349	Wrong evaluation of MATH operator priority :  7 + 6 - 9 + 5 * 3  // give 27 -- wrong!!!  Suppose to be 19 !!!	https://api.github.com/repos/microsoft/calculator/issues/1349	https://github.com/microsoft/calculator/issues/1349	SERIOUS MATH OPERATOR PRIORITY PROBLEM:    Wrong evaluation of operator priority :  7 + 6 - 9 + 5 * 3  // give 27 --> wrong!!!  suppose to be 19 !!!    ( calculator version 6.3 (build 9600) on window 8.1 )	LSW1980	null	null	null	null	null	null	
2020-08-14 10:32:17.0	2020-08-17 06:17:43.0	2021-04-29 12:00:07.0	closed	[duplicate, Enhancement]	5	1350	Add support for symbolic results for fractions	https://api.github.com/repos/microsoft/calculator/issues/1350	https://github.com/microsoft/calculator/issues/1350	**Problem Statement**  The calculator displays results for division only in terms of decimals. Sometimes it is very confusing for us to comprehend those decimal outputs when we are looking for a quick answer. For example: suppose one has to divide 17 pastries among 6 children, the answer `2.83333333` seems to be quite confusing. If the calculator had also shown 2⅚, it would have been very clear that each child will receive two complete pastries and a ⅚th part of the pastry. (Sorry if the example was very bad, but I am sure you would have understood the underlying problem). This is definitely a problem for students of the primary school as they are not able to understand the decimal outputs. Suppose a student has got `48/50`, `45/50` and `47/50` in three subjects and he wants to calculate his average marks, then he will find this feature useful.    **Evidence or User Insights**  Many calculators already support symbolic results for fractions. Let's take the example of Google Calculator for Android:    ![Screenshot_2020-08-14-15-40-56-700_com google android calculator](https://user-images.githubusercontent.com/55381546/90239098-9fe5c780-de44-11ea-9503-ef705a151433.jpg)    **Proposal**  The Windows Calculator should also support showing symbolic results for fractions apart from the regular decimal output.    For example, the calculator should show `39/52` both as `0.75` and `¾`    And `5¼` for `21/4`.  Similarly, `14*29/52` should be shown both as `7.80769230` and `7²¹/²⁶`.    **Goals**  Calculator should support symbolic results for fractions and decimal operations.    **Non-Goals**    **Low-Fidelity Concept**  The calculator should show the symbolic form just below the decimal result in the Standard mode of the calculator. There may be a setting for controlling this behaviour in the Settings page when it is implemented. The output should be in rich text MathML.    **Requested Assignment**  I'm just suggesting this idea.  I don't want to implement it.	ghost	null	null	null	null	null	null	
2020-08-15 06:57:54.0	2020-08-17 06:15:31.0	2020-12-02 12:00:18.0	closed	[]	3	1351	Algebraic Logic, Konstant Mode, Memory Mode, & Feature Parity of calc.exe in comparison with physical pocket calculators	https://api.github.com/repos/microsoft/calculator/issues/1351	https://github.com/microsoft/calculator/issues/1351	Let's start out with a simple key press sequence:  <kbd>2</kbd><kbd>×</kbd><kbd>3</kbd><kbd>=</kbd>  On any non-cheap calculator, we'll see 6 shown on the display. However, if we now continue to type in the following sequence immediately after pressing the above one:  <kbd>4</kbd><kbd>=</kbd>  Results will begin to diverge.  On a Casio Calculator, we will see 4 shown as a result.  On almost anything but a Casio calculator, we will instead see 8 shown as the result.  Except in calc.exe. Where the result will be: 12.  None of those behaviors are particularly wrong or better than any of the other ones. However, this isn't where the disparities end.  I'd continue to outline these disparities here, but quite honestly, I've known about this issue for years now and never got around to reporting it due to lack of time, and really, I'd just be paraphrasing this page here, which outlines all the behavioral differences that exist between various physical calculators, the only thing it doesn't mention, is the very disparity which I mentioned at the beginning, so please, just check out the page to save us all some time:  https://tedmuller.us/Math/Calculator-1'Introduction.htm  If you compare every behavioral difference between various calculator models mentioned there with calc.exe, it becomes pretty obvious that a lot of these disparities stem from a lack of sufficiently fine-grained configurability of calculator behavior. This makes sense in some pocket calculators — it doesn't make sense in calc.exe. Please consider adding appropriate configuration options.  (Hopefully someone with more time than I can outline all these other individual differences I hinted at in detail & relegate them to separate issues, which'd seem more appropriate, but I simply don't have the time, sorry!) 	no-identd	null	null	null	null	null	null	
2020-08-17 05:52:58.0	null	2021-05-26 10:07:23.0	open	[Bug, Area: World-Readiness, investigate, Pri: 1]	3	1352	Some UI elements flipped in graphing mode in RTL	https://api.github.com/repos/microsoft/calculator/issues/1352	https://github.com/microsoft/calculator/issues/1352	**Describe the bug**  Some UI elements flipped in graphing mode in RTL    <!--**Steps To Reproduce**  Steps to reproduce the behavior:  1. Go to '...'  2. Click on '....'  3. Scroll down to '....'  4. See error  -->    **Expected behavior**  All text and UI elements respect RTL languages.    **Screenshots**  ![image](https://user-images.githubusercontent.com/1414423/90361394-f30d7500-e012-11ea-8782-f11668a89e31.png)    <!--  **Device and Application Information**   - OS Build:   - Architecture:   - Application Version:   - Region:   - Dev Version Installed:  -->    <!--  Run the following commands in Powershell and copy/paste the output.  " - OS Build: $([Environment]::OSVersion.Version)"  " - Architecture: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Architecture)"  " - Application Version: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Version)"  " - Region: $((Get-Culture).Name)"  " - Dev Version Installed: $($null -ne (Get-AppxPackage -Name Microsoft.WindowsCalculator.Dev))"  -->    **Additional context**  Reported on [Reddit](https://www.reddit.com/r/Windows10/comments/ib0i1i/windows_flips_some_elements_graphics_and_texts/)    **Requested Assignment**  I'm just reporting this problem.  I don't want to fix it.  	grochocki	null	null	null	null	null	null	
2020-08-18 16:49:10.0	2020-08-18 21:58:39.0	2020-08-18 21:59:20.0	closed	[]	3	1353	Chinese version of README	https://api.github.com/repos/microsoft/calculator/issues/1353	https://github.com/microsoft/calculator/pull/1353	## Fixes #.      ### Description of the changes:  -  -  -    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  -  -  -    	Destinycky04	null	null	null	null	null	null	
2020-08-20 21:20:19.0	2020-09-01 23:48:22.0	2020-09-01 23:48:22.0	closed	[]	1	1354	Update WinUI Version to 2.4	https://api.github.com/repos/microsoft/calculator/issues/1354	https://github.com/microsoft/calculator/pull/1354	### Description of the changes:  - Updated the WinUI Version to 2.4.3  - Updated the NavView Footer to remove the unnecessary NavigationViewList and StackPanel that were wrapping the AboutFlyout  - Updated the EquationEditBox dark theme to more closely match the WinUI2.4 RichEditBox dark theme styling    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Manually  -  -    	sanderl	null	null	null	null	null	null	
2020-08-21 15:46:16.0	null	2021-09-30 09:06:05.0	open	[Enhancement, Pri: 2, needs pitch review]	5	1355	Support defining custom variables and functions in Windows Calculator	https://api.github.com/repos/microsoft/calculator/issues/1355	https://github.com/microsoft/calculator/issues/1355	**Problem Statement** The Calculator currently lags behind when we have to do a calculation several times or a calculation involving several steps. For example, suppose I own a company that manufactures plastic buckets. Now we have to calculate the amount of water each bucket holds, given that we have many buckets of different sizes. So I have to calculate the volume of a conical frustum. The formula is as follows:   `V((r_1), (r_2)) = 1/3 x π x h x ((r_1)^2 + (r_2)^2 + (r_1)(r_2))`, where r_1 and r_2 are the radii of the conical frustum.  Now I have to enter this difficult formula again and again for every bucket size. This is a laborious task. It would have been simpler if the Calculator had allowed me to define my own function and I would just have to pass different values to it for getting the volumes of all the buckets:  V(12, 15), V(10,12) and so on.  And similarly it goes for custom variables which could be used in a number of situations. For example, suppose I wish to use the number 8.85e-12 many times. Now it's difficult for me to type this again and again. It would have been easier if I could assign it to a variable, say ϵ = 8.85e-12. Now I can use it as many times as I want.  All we have right now is the Calculator Memory with a few functions — M+, M-, MR, MC. It is very limited and it it is very difficult to use them for such tasks.  **Evidence or User Insights** As I highlighted above this feature can be really useful when we have to deal with a complex calculation involving several steps or a calculation several times. In short, it enhances a user's efficiency. They don't need to switch to Microsoft ® Excel in order to get their work done.   Here is what the makers of Excel say on this:  > Although Excel includes a multitude of built-in worksheet functions, chances are it doesn’t have a function for every type of calculation you perform. The designers of Excel couldn’t possibly anticipate every user's calculation needs. Instead, Excel provides you with the ability to create custom functions.  Courtesy: Microsoft  You can read more [here](https://support.microsoft.com/en-us/office/create-custom-functions-in-excel-2f06c10b-3622-40d6-a1b2-b6748ae8231f).  But this is not limited to Microsoft Excel. Many of the calculators already have this.  Let's take the example of Desmos Calculator for Android:  ![IMG_20200821_211256.jpg](https://user-images.githubusercontent.com/55381546/90909743-d945a680-e3f3-11ea-8d43-19cbd323298a.jpg)  Courtesy: Desmos Inc  This limitation has also been noted on the [Wikipedia page for Windows Calculator](https://en.m.wikipedia.org/wiki/Windows_Calculator):  > It does not provide support for **user-defined functions**, complex numbers, **storage variables** for intermediate results (other than the classic accumulator memory of pocket calculators), automated polar-cartesian coordinates conversion, or support for two-variables statistics.  **Proposal**  The Windows Calculator should support defining custom variables and functions. These should be implemented in such a way that it is easy for the user to define, discover and use them.  Users should be able to define custom functions of the type f(...) with the help of already existing functions.  Some examples are shown below:  f(x) = sin(x) + cos(x) g(x, y) = xy^2 + yx^2 h(a, b) = (a + b)/2 v(x, y, z) = sin(x) + cos(xy) + sin(z)  The users should be able to use them as follows:  f(π/2), g(1, 2), h(3, 7), v(π/4, π, π/2)  Similarly, the users should be able to define custom variables:  a = 5.71 ϕ = 1.61803399 α = tan(15)  Now they can use them as follows:  5a - 4ϕ - 7α  The result should be calculated accordingly.  I guess we will have to make significant changes to the UI in order to implement this.  After the work for the proposed Settings page is complete, we can also have a setting to preserve them so that they don't get lost when we close the Calculator.  **Goals**  - To have support for defining custom variables and functions in Windows Calculator - After the implementation of complex numbers is complete, we can support assigning complex numbers to variables. For example `z = -5 + 7i`.  **Non Goals**  - Adding more built-in functions to the Calculator  **Low Fidelity Concept**  We can implement a third category apart from History and Memory where we can keep all the defined variables and functions. The user should be able to edit previously defined variables or functions.  We can borrow some UI code from the Graphing Calculator. For the new panel that we wish to design, we can take inspiration from the equation input panel of the Graphing Calculator. It can have two sections – one for the variables and the other one for functions.  ![IMG-20200822-WA0005.jpg](https://user-images.githubusercontent.com/55381546/90959925-8f27f800-e4bb-11ea-85b8-f920a3e8315f.jpg)  **Requested Assignment**  I'm just suggesting this idea. I don't want to implement it.	ghost	null	null	null	null	null	null	
2020-08-21 18:50:01.0	2020-08-25 16:31:41.0	2020-08-25 16:31:41.0	closed	[]	2	1356	Revert "Updated the Calculator projects to include the /Z7 compiler flag"	https://api.github.com/repos/microsoft/calculator/issues/1356	https://github.com/microsoft/calculator/pull/1356	Reverts microsoft/calculator#1337	sanderl	null	null	null	null	null	null	
2020-08-28 17:16:10.0	2020-09-01 03:52:58.0	2020-09-01 03:52:58.0	closed	[]	0	1357	Add localized strings 2020-08-28	https://api.github.com/repos/microsoft/calculator/issues/1357	https://github.com/microsoft/calculator/pull/1357	Check in translated strings from our internal localization system.	joseartrivera	null	null	null	null	null	null	
2020-08-28 17:50:57.0	2020-08-31 17:51:21.0	2020-09-25 22:56:06.0	closed	[]	0	1358	Updating to 2008 version for release/2008 branch	https://api.github.com/repos/microsoft/calculator/issues/1358	https://github.com/microsoft/calculator/pull/1358	## Fixes #.      ### Description of the changes:  - Updating to 2008 version for release/2008 branch  -  -    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  -  -  -    	volkcor	null	null	null	null	null	null	
2020-08-31 23:56:22.0	2020-09-01 03:52:13.0	2020-09-25 22:56:04.0	closed	[]	0	1359	Update2009release	https://api.github.com/repos/microsoft/calculator/issues/1359	https://github.com/microsoft/calculator/pull/1359	## Fixes #.  None    ### Description of the changes:  - Updating Main to 2009 release version after creating release/2008 branch  -  -    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  -  -  -    	volkcor	null	null	null	null	null	null	
2020-09-01 05:06:23.0	2020-09-01 17:36:06.0	2020-12-02 12:00:17.0	closed	[duplicate]	6	1360	Splash screen does not use accent colour	https://api.github.com/repos/microsoft/calculator/issues/1360	https://github.com/microsoft/calculator/issues/1360	<!--  Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.  -->    **Describe the bug**  <!-- A clear and concise description of what the bug is. -->  Splash screen does not use accent colour    **Steps To Reproduce**  <!--  Steps to reproduce the behavior:  1. Open Calculator (if your accent colour is not the default blue)  -->    **Expected behavior**  <!-- A clear and concise description of what you expected to happen. -->  Calculator would use Windows 10's accent colour for its splash screen    **Screenshots**  <!-- If applicable, add screenshots to help explain your problem. -->    **Device and Application Information**   - OS Build: 19042   - Architecture: X64   - Application Version: 10.2007.1.0   - Region: AU   - Dev Version Installed: False    <!--  Run the following commands in Powershell and copy/paste the output.  " - OS Build: $([Environment]::OSVersion.Version)"  " - Architecture: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Architecture)"  " - Application Version: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Version)"  " - Region: $((Get-Culture).Name)"  " - Dev Version Installed: $($null -ne (Get-AppxPackage -Name Microsoft.WindowsCalculator.Dev))"  -->    **Additional context**  <!-- Add any other context about the problem here. -->  Apparently by design but this makes no sense. #1238     **Requested Assignment**  <!--  Some people just want to report a bug and let someone else fix it.  Other people want to not only submit the bug report, but fix it as well.  Both scenarios are completely ok. We just want to know which one it is.  Please indicate which bucket you fall into by keeping one and removing the other.  -->  I'm just reporting this problem.  I don't want to fix it.  	Poopooracoocoo	null	null	null	null	null	null	
2020-09-02 06:57:54.0	null	2021-09-30 09:06:11.0	open	[Enhancement, Pri: 2, needs pitch review]	5	1361	Add Statistics Functions?	https://api.github.com/repos/microsoft/calculator/issues/1361	https://github.com/microsoft/calculator/issues/1361	**Problem Statement**  Missing functions like 'Combinations' and 'Permutations' for statistics.    **Evidence or User Insights**  Functions available usually with advanced calculators.    **Proposal**  Add a Statistics drop-down which provides the following functions:  - [ ] [Combination](https://www.tutorialspoint.com/statistics/combination.htm)  - [ ] [Combination with Replacement](https://www.tutorialspoint.com/statistics/combination_with_replacement.htm)  - [ ] [Permutations](https://www.tutorialspoint.com/statistics/permutation.htm)  - [ ] [Permutations with Replacement](https://www.tutorialspoint.com/statistics/permutation_with_replacement.htm)    **Goals**  User can calculate things nCr and nPr with two values.    **Requested Assignment**  I'm just suggesting this idea.  I don't want to implement it.  	hawkerm	null	null	null	null	null	null	
2020-09-02 14:07:37.0	2020-09-02 14:09:20.0	2020-09-02 14:09:21.0	closed	[]	0	1362	someNewFile.txt	https://api.github.com/repos/microsoft/calculator/issues/1362	https://github.com/microsoft/calculator/pull/1362	## Fixes #.      ### Description of the changes:  -  -  -    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  -  -  -    	ghost	null	null	null	null	null	null	
2020-09-02 20:48:10.0	2020-09-02 21:51:52.0	2020-09-02 21:51:52.0	closed	[]	0	1363	Cherry-Pick: Update WinUI Version to 2.4 (#1354)	https://api.github.com/repos/microsoft/calculator/issues/1363	https://github.com/microsoft/calculator/pull/1363	* Updated to WinUI2.4 and fixed NavMenu about flyout and Dark Mode EquationEditBox    * Added updated equationbox background to the focusederror state  	sanderl	null	null	null	null	null	null	
2020-09-03 19:27:14.0	2020-09-03 19:27:28.0	2020-09-03 19:27:28.0	closed	[]	0	1364	Update internals package to 0.0.49	https://api.github.com/repos/microsoft/calculator/issues/1364	https://github.com/microsoft/calculator/pull/1364	Update the internals package to 0.0.49. This fixes a build break in the internal GraphingImpl project.	mcooley	null	null	null	null	null	null	
2020-09-04 13:26:30.0	2020-11-06 17:02:40.0	2020-11-06 17:02:40.0	closed	[]	5	1365	Edited KeyboardShortcutManager.cpp Issue #744	https://api.github.com/repos/microsoft/calculator/issues/1365	https://github.com/microsoft/calculator/pull/1365	## Fixes #744 .    ### Description of the changes:  - Moved the check for Shift and Control out of the "!args->Handled" as it was fails for just ctrl and just shift leading to the issue  -  -    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Manually tested by following steps on issue  - Ran included tests to make sure no other functionality broke  -    	razan45	null	null	null	null	null	null	
2020-09-05 02:50:21.0	null	2021-09-30 09:06:14.0	open	[Enhancement, Pri: 2, needs pitch review]	5	1366	Add support for plotting points and drawing line segments in graphing mode	https://api.github.com/repos/microsoft/calculator/issues/1366	https://github.com/microsoft/calculator/issues/1366	<!--  See https://github.com/Microsoft/calculator/blob/master/docs/NewFeatureProcess.md for suggestions on how to write a good feature pitch. Just want to submit an idea quickly? Try Feedback Hub instead: https://insider.windows.com/en-us/fb/?contextid=130  -->    **Problem Statement**  <!--  What problem are we trying to solve? Who’s the target audience? Is there a customer need or pain point we need to remedy? Is there a business goal or metric we are trying to improve? Do we have a hypothesis we want to prove or disprove?  -->  I want to use windows calculator graphing mode as a replacement for other software such as GeoGebra Classic. However, the lack of features in windows calculator does not  permit me  to do so.     **Evidence or User Insights**  <!--  Why should we do this? Potential sources of data: Feedback Hub, other GitHub issues, other anecdotes from listening to customers in person or online, request from another team, telemetry data, user research, market or competitive research  -->  All these features can be done in Geogebra Classic, which is slightly difficult to use. Would be nice if a native windows app could do this. For reference, this is the link to Geogebra Classic: https://www.geogebra.org/classic    **Proposal**  <!--  How will the solution/feature help us solve the problem? How will it meet the target audience’s needs? If there are business goals or metrics, how does this improve them?  -->  Is it possible to add support for plotting points (eg: _A = (x, y)_), drawing all kinds of lines and line segments (eg: perpendicular lines, line segments, rays, etc), and drawing polygons (again, by choosing the vertices).     **Goals**  <!--  What you want to accomplish with this feature. Typical examples include  "User Can *perform some task*"  -->  Users will be able to plot points of the graph, create polygons and line segments as seen in the popular geometry software GeoGebra classic.    **Non-Goals**  <!--  Things we are explicitly not doing or supporting or that are out of scope, including reasons why.  -->  We are not doing this for drawing with shapes, and drawing for artistic pleasure in graphing mode, mainly for drawing geometric constructions.    **Low-Fidelity Concept**  <!--  Show as much of the experience as needed to explain the idea. This can be as simple as a napkin drawing but can also be a code prototype, or a design comp. Keep it simple at this stage, as it can be refined later during the pre-production stage.  -->  Screencast from Geogebra:  https://we.tl/t-SMvIkLkBkF    **Requested Assignment**  <!--  Some people just want to suggest a feature and let someone else implement it.  Other people want to not only suggest a feature, but implement it as well.  Both scenarios are completely ok. We just want to know which one it is.  We are likely to prioritize the review of feature requests if they already have someone who can implement them.  Please indicate which bucket you fall into by keeping one and removing the other.  -->  I'm just suggesting this idea.  I don't want to implement it.	akhilesh-balaji	null	null	null	null	null	null	
2020-09-07 06:40:49.0	null	2021-05-26 10:07:50.0	open	[Bug, Area: User Experience, investigate, Pri: 1, needs more info]	3	1367	correct equations are rejected by the graphing calculator	https://api.github.com/repos/microsoft/calculator/issues/1367	https://github.com/microsoft/calculator/issues/1367	It happens quite a lot. The graphing calculator rejects correct equations. For example :  ![image](https://user-images.githubusercontent.com/64352000/92355989-fcb26600-f102-11ea-9401-bf88364a58a7.png)  This is the equation of a simple circle and the calculator rejects it. The other day it refused to plot y = sin(x) for me, please fix this quick. It randomly decides not to plot an equation that is correct	Justaphysicsnerd	null	null	null	null	null	null	
2020-09-07 06:50:38.0	null	2021-09-20 12:01:43.0	open	[Bug, Area: User Experience, investigate, Pri: 2]	5	1368	Circles don't look circle-ey ?	https://api.github.com/repos/microsoft/calculator/issues/1368	https://github.com/microsoft/calculator/issues/1368	  **Describe the bug**  <!-- A clear and concise description of what the bug is. -->  The circles aren't properly graphed. Take a look for yourself :  ![image](https://user-images.githubusercontent.com/64352000/92356249-6f234600-f103-11ea-853c-12bae16ed9db.png)  I got my friends to see that if they see what I see i.e. a circle is being graphed as an oval shape    **Steps To Reproduce**  <!--  Steps to reproduce the behavior:  1. Go to Graphing section or mode  2. Type the equation of a circle and hit enter  3. If the calculator doesn't reject the equation, you should hopefully be able to see the error  -->    **Expected behavior**  <!-- A clear and concise description of what you expected to happen. -->  A nice little circle of radius 1 unit to be graphed with center at origin    **Screenshots**  <!-- If applicable, add screenshots to help explain your problem. -->  ![image](https://user-images.githubusercontent.com/64352000/92356476-d17c4680-f103-11ea-9d9e-f601966d09a0.png)      **Device and Application Information**   - OS Build: Windows 10 build 19041.450   - Architecture: X64   - Application Version: 10.2007.1.0   - Region: en-IN   - Dev Version Installed: False    **Additional context**  <!-- Add any other context about the problem here. -->    **Requested Assignment**  I'm just reporting this problem.  I don't want to fix it as I don't know anything about fixing this stuff.  	Justaphysicsnerd	null	null	null	null	null	null	
2020-09-07 07:00:25.0	2020-09-14 17:49:23.0	2020-12-02 12:00:16.0	closed	[duplicate]	4	1369	Add Export to SVG option	https://api.github.com/repos/microsoft/calculator/issues/1369	https://github.com/microsoft/calculator/issues/1369	**Problem Statement**  Add the option to export to SVG or some other helpful file format instead of just adding export to OneNote which is not  as helpful. I for example, just write some of my notes in markdown and need to graph some functions, hence, OneNote is of no use to me in such a scenario.    **Evidence or User Insights**  Other graphing calculators as far as I know have some sort of lossless image export option like Geo-Gebra has PNG exports, wolfram software have all the formats imaginable JPG, SVG, TIFF, GIF, PNG etc.    **Proposal**  Users will simply hit the share button and boom they get the option to export it as lossless image. It saves time. How you might ask ? Teachers using the graphing calculator will be able to save graphs that they drew and put them to so,  **Goals**  User can "perform export to PNG or JPG or SVG task"    **Non-Goals**    **Low-Fidelity Concept**    **Requested Assignment**  I'm just suggesting this idea.   	Justaphysicsnerd	null	null	null	null	null	null	
2020-09-09 18:11:54.0	2020-09-09 20:35:31.0	2021-09-28 18:09:01.0	closed	[]	0	1370	Update internals package to 0.0.49 (#1364)	https://api.github.com/repos/microsoft/calculator/issues/1370	https://github.com/microsoft/calculator/pull/1370	cherry-picking internals package into release/2008 branch to fix build break  	volkcor	null	null	null	null	null	null	
2020-09-09 23:19:35.0	null	2021-09-30 09:06:19.0	open	[Enhancement, Pri: 2, needs pitch review]	2	1371	In Graphing Mode, Illustrate Inequality with a Solid, Translucent Color Instead of with Dots	https://api.github.com/repos/microsoft/calculator/issues/1371	https://github.com/microsoft/calculator/issues/1371	**Problem Statement**  Using dots to illustrate an inequality makes the graph visually busy, and my cause discomfort when viewed    ![image](https://user-images.githubusercontent.com/45952655/92664151-134dee00-f2b8-11ea-9642-4ce5c14e0ce7.png)    **Evidence or User Insights**  There has been some feedback Feedback Hub about this issue.  Also, from my personal experience, the visual can sometimes be uncomfortable to view.  Here is a quick article about why this happens, "[Why do some patterns and stripes hurt your eyes?](https://www.optimax.co.uk/blog/patterns-stripes-hurt-eyes/)"    **Proposal**  Use solid, translucent colors to illustrate inequalities    **Goals**  The goal is to make graphing inequalities in Windows Calculator more comfortable and appealing    **Low-Fidelity Concept**  ![image](https://user-images.githubusercontent.com/45952655/92664187-28c31800-f2b8-11ea-91dd-82c7389bd3e9.png)    **Requested Assignment**  I'm just suggesting this idea.  I don't want to implement it.  	edwcry	null	null	null	null	null	null	
2020-09-10 11:17:05.0	null	2021-09-30 09:06:21.0	open	[Enhancement, Pri: 2, needs pitch review]	5	1372	Restore state of Calculator on launch	https://api.github.com/repos/microsoft/calculator/issues/1372	https://github.com/microsoft/calculator/issues/1372	**Problem Statement**  Users of Calculator that close the window will lose their history and current calculations forever. After an (automatic) reboot calculator does not restore it's current history and calculations.     **Proposal**  Let's extend the current state saving that saves the current mode the calculator is in, to also include the history and any current calculations. And restore those in the same way the current mode gets restored.    **Goals**  Closing a calculator window and opening a new one should be like the user never closed the window in the first place.    **Non-Goals**  An extended, mode spanning, multi-window history is not the objective here, just restoring the window state as well as possible.    **Requested Assignment**  If this is something people are interested in, I can try to work on this. But please, anyone that likes this, feel free to take it and run with it.	Marv51	null	null	null	null	null	null	
2020-09-15 00:18:55.0	2020-09-15 18:08:23.0	2020-09-21 20:01:27.0	closed	[]	1	1373	Fix Race condition in tests involving context menu	https://api.github.com/repos/microsoft/calculator/issues/1373	https://github.com/microsoft/calculator/pull/1373	## Fixes a race condition in ui automation around context menu items.    ### Description of the changes:  - Added extension method to wait for an element to be created in the UI tree.  - Waits for the context menu items to be visible before trying to interact with them.    ### How changes were validated:  - ran tests failing race condition locally    	EriWong	null	null	null	null	null	null	
2020-09-15 21:28:44.0	2020-09-16 05:28:05.0	2020-09-21 15:45:07.0	closed	[]	2	1374	Add altform-colorful splashscreen pngs	https://api.github.com/repos/microsoft/calculator/issues/1374	https://github.com/microsoft/calculator/pull/1374	### Description of the changes:  - Add splashscreen altform-colorful pngs to the assets    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  N/A  	sanderl	null	null	null	null	null	null	
2020-09-16 17:17:02.0	2020-09-22 01:07:32.0	2020-09-22 01:07:32.0	closed	[]	2	1375	fix UI tests in lab runs	https://api.github.com/repos/microsoft/calculator/issues/1375	https://github.com/microsoft/calculator/pull/1375	## Fixes Programmer Mode tests in lab runs.    ### Description of the changes:  We are seeing failures in our official runs when trying to access the context menu.  Changing some tests to avoid using the context menu and instead using keyboard commands    ### How changes were validated:  - local automation runs pass.    	EriWong	null	null	null	null	null	null	
2020-09-16 20:16:25.0	2020-09-21 19:51:21.0	2020-09-21 19:51:21.0	closed	[]	0	1376	update resw files with latest translations	https://api.github.com/repos/microsoft/calculator/issues/1376	https://github.com/microsoft/calculator/pull/1376	## Updates localization files with latest translations      ### Description of the changes:  - contains localization fixes from our loc team.    	EriWong	null	null	null	null	null	null	
2020-09-23 18:16:54.0	null	2021-07-22 09:03:22.0	open	[Bug, Area: Accessibility, Pri: 3, triage approved]	1	1377	Luminosity ratio for "Network settings" text is 3.6:1 which is less than 4.5:1. 	https://api.github.com/repos/microsoft/calculator/issues/1377	https://github.com/microsoft/calculator/issues/1377	**Repro Steps:**   1. Launch 'Calculator'.  2. Home screen will be displayed.​  3. Navigate Open navigation button and activate it.  4. Navigate to currency converter list item and activate it.  5. Verify the luminosity ratio of the "Network settings" text via Colour Contrast Analyser tool.  6. Observe the issue.    **Actual Result:**  Luminosity ratio for "Network settings" text is 3.6:1 which is less than 4.5:1.     **Expected Result:**  Luminosity ratio for "Network settings" text should be minimum 4.5:1.    Should use same style as this link:  ![image](https://user-images.githubusercontent.com/1414423/94230317-95443680-feb6-11ea-88a5-5057cb966c5f.png)	MicrosoftIssueBot	null	null	null	null	null	null	
2020-09-23 18:16:58.0	null	2021-08-26 10:02:45.0	open	[Bug, Area: Accessibility, triage approved, Pri: 2]	1	1378	State is incorrectly defined as On/Off for operator panel flyout buttons	https://api.github.com/repos/microsoft/calculator/issues/1378	https://github.com/microsoft/calculator/issues/1378	**Repro Steps:**   1. Launch 'Calculator' and turn on narrator.  2. Home screen will be displayed.​  3. Navigate Open navigation button and activate it.  4. Navigate to scientific calculator list item and activate it.  5. Navigate to "Trigonometry and Function".  6. Observe the issue.     Note: This repros for all operator panel buttons.    **Actual Result:**  State is incorrectly defined as On/Off instead of Expanded/collapsed for Trigonometry and Function buttons in programmer calculator.     **Expected Result:**  State is should not be defined as On/Off. Instead follow standard pattern for menu flyout.	MicrosoftIssueBot	null	null	null	null	null	null	
2020-09-23 18:17:01.0	null	2021-08-25 18:38:20.0	open	[Bug, Area: Accessibility, Pri: 3, triage approved]	1	1379	Narrator is reading the change notification twice after activating zoom controls in graphing calculator.	https://api.github.com/repos/microsoft/calculator/issues/1379	https://github.com/microsoft/calculator/issues/1379	**Repro Steps:**   1. Launch 'Calculator' and turn on narrator.  2. Home screen will be displayed.​  3. Navigate Open navigation button and activate it.  4. Navigate to graphing calculator list item and activate it.  5. Navigate to zoom controls and activate it.  6. Observe the issue.     **Actual Result:**  Narrator is reading the change notification twice after activating zoom controls in graphing calculator.    **Expected Result:**  Narrator should read the change notification once after activating zoom controls in graphing calculator.	MicrosoftIssueBot	null	null	null	null	null	null	
2020-09-23 18:17:05.0	2021-03-01 07:04:55.0	2021-03-31 12:00:07.0	closed	[Bug, Area: Accessibility, external, Pri: 1]	2	1380	Narrator is not reading the already entered equation when focus lands on Enter a equation edit box.	https://api.github.com/repos/microsoft/calculator/issues/1380	https://github.com/microsoft/calculator/issues/1380	**Repro Steps:**   1. Launch 'Calculator' and turn on narrator.  2. Home screen will be displayed.​  3. Navigate Open navigation button and activate it.  4. Navigate to graphing calculator list item and activate it.  5. Navigate to Enter a equation edit box.  6. Observe the issue.     **Actual Result:**  Narrator is not reading the already entered equation when focus lands on Enter a equation edit box.    **Expected Result:**  Narrator should read the already entered equation when focus lands on Enter a equation edit box.	MicrosoftIssueBot	null	null	null	null	null	null	
2020-09-23 18:17:09.0	2020-10-22 16:28:27.0	2020-12-02 12:00:15.0	closed	[Bug, Area: Accessibility, Pri: 3, triage approved]	1	1381	Numbers present at "Step" edit field do not get properly visible at text scaling in 220%.	https://api.github.com/repos/microsoft/calculator/issues/1381	https://github.com/microsoft/calculator/issues/1381	**Pre-Requisites:**  Set the slider value to maximum i.e. 220% (Settings -> Ease of access -> text scaling).    **Repro Steps:**   1. Launch Calculator app.  2. Navigate Open navigation button and activate it.  3. Navigate to graphing calculator list item and activate it.  4. Navigate to Enter a expression edit box.  5. Writ e the expression as "A+B".  6. Now navigate to variable option button of any variable say "a" and activate it.  7. Now the variable options will get visible.  8. Navigate to step edit field.  9. Observe the issue.    **Actual Result:**  Numbers present at "Step" edit field do not get properly visible at text scaling in 220%.  For e.g. number in step edit field is "0.1" so "1" is not getting properly visible.    **Expected Result:**  Numbers present at "Step" edit field should get properly visible at text scaling in 220%.    ![image](https://user-images.githubusercontent.com/1414423/94230628-3af7a580-feb7-11ea-88d7-3d7cc7f52e82.png)	MicrosoftIssueBot	null	null	null	null	null	null	
2020-09-23 18:17:13.0	null	2021-08-25 12:01:42.0	open	[Bug, Area: Accessibility, Pri: 3, triage approved]	1	1382	Activating 'Memory recall' button narrator announces information twice.	https://api.github.com/repos/microsoft/calculator/issues/1382	https://github.com/microsoft/calculator/issues/1382	**Pre-Requisite:**  Number should be stored in memory    **Repro Steps:**   1. Launch Calculator app.  2. Navigate Open navigation button and activate it.  3. Navigate to Scientific calculator list item and activate it.  4. Navigate to "Memory recall" button and activate it.  5. Observe the issue.    **Actual Result:**  Activating 'Memory recall' button narrator announces information twice. For e.g. If the number "256" is stored in memory then by activating 'Memory recall' button narrator announces information twice.    **Expected Result:**  Activating 'Memory recall' button narrator should announce information only once.	MicrosoftIssueBot	null	null	null	null	null	null	
2020-09-23 18:17:17.0	null	2021-08-26 10:02:47.0	open	[Bug, Area: Accessibility, Pri: 3, triage approved]	1	1383	When we switch from currency converter to volume then narrator is first announcing the currency info and then volume.	https://api.github.com/repos/microsoft/calculator/issues/1383	https://github.com/microsoft/calculator/issues/1383	**Repro Steps:**   1. Launch Calculator app.  2. Navigate Open navigation button and activate it.  3. Navigate to 'Currency converter' list item and activate it.  4. Now convert any currency value to another.  5. Navigate to 'Open navigation' button and activate it.  6. Now navigate to 'Volume' converter list item and activate it.  7. Observe the issue.    Note: Issue is repro for all the converters switching from one to another.    **Actual Result:**  When we switch from currency converter to volume then narrator first announcing the currency info and then volume.    **Expected Result:**  When we switch from currency converter to volume then narrator should not announce the previous converter information and should only announce the present converter info i.e. volume.	MicrosoftIssueBot	null	null	null	null	null	null	
2020-09-23 18:17:20.0	null	2021-08-26 14:46:51.0	open	[Bug, Area: Accessibility, Pri: 3, triage approved]	1	1384	When no history is present there, narrator does not announce “There’s no history yet”	https://api.github.com/repos/microsoft/calculator/issues/1384	https://github.com/microsoft/calculator/issues/1384	**Pre-Requisite:**  No history should be present.    **Repro Steps:**   1. Launch Calculator app.  2. Navigate Open navigation button and activate it.  3. Navigate to Scientific calculator list item and activate it.  4. Navigate to "History" tab item and activate it.  5. Observe the issue.    Note: Same issue is repro for 'Memory' tab item also. Narrator does not announce “There’s nothing saved in memory”.    **Actual Result:**  When no history is present there, narrator does not announce “There’s no history yet”    **Expected Result:**  When no history is present there, narrator should announce the information also as “There’s no history yet”	MicrosoftIssueBot	null	null	null	null	null	null	
2020-09-23 18:17:23.0	null	2021-07-22 09:03:36.0	open	[Bug, Area: Accessibility, Pri: 3, triage approved]	1	1385	In scan mode narrator focus separately navigates to function number.	https://api.github.com/repos/microsoft/calculator/issues/1385	https://github.com/microsoft/calculator/issues/1385	**Pre-Requisites:**  Expressions should be added.    **Repro Steps:**   1. Launch Calculator app.  2. Turn on the narrator.  3. Navigate Open navigation button and activate it.  4. Navigate to graphing calculator list item and activate it.  5. Navigate to Enter a expression edit box.  6. Enter any expression say "7+8".  7. Turn on the scan mode of the narrator by pressing "caps + space" and navigate using arrow keys.  8. Navigate on the function equation say "f1".  9. Observe the issue.    **Actual Result:**  In scan mode narrator focus separately navigates to function number.  If equation "f1" is present then focus separately navigates to complete "f1" and then to number "1".    **Expected Result:**  In scan mode narrator focus should not separately navigate to function number.  If equation "f1" is present then focus should only navigate to complete "f1" and not to number "1".	MicrosoftIssueBot	null	null	null	null	null	null	
2020-09-23 18:17:27.0	2021-01-11 21:48:28.0	2021-02-11 00:00:07.0	closed	[Bug, Area: Accessibility, triage approved, Pri: 1]	1	1386	No confirmation is announced by the narrator after activating 'Remove equation' button	https://api.github.com/repos/microsoft/calculator/issues/1386	https://github.com/microsoft/calculator/issues/1386	**Pre-Requisites:**  Expressions should be added.    **Repro Steps:**   1. Launch Calculator app.  2. Turn on the narrator.  3. Navigate Open navigation button and activate it.  4. Navigate to graphing calculator list item and activate it.  5. Navigate to Enter a expression edit box.  6. Enter any expression say "7+8".  7. Now open context menu and activate "Remove equation" button.  8. Observe the issue.    **Actual Result:**  No confirmation is announced by the narrator after activating 'Remove equation' button.    **Expected Result:**  Confirmation should be announced by the narrator after activating 'Remove equation' button.	MicrosoftIssueBot	null	null	null	null	null	null	
2020-09-23 18:17:30.0	2021-06-09 22:24:16.0	2021-07-10 00:00:38.0	closed	[by design, Bug, Area: Accessibility, Pri: 2]	1	1387	Narrator does not announce the Domain value "⁅𝑥∈ℝ⁆" when focus navigates there.	https://api.github.com/repos/microsoft/calculator/issues/1387	https://github.com/microsoft/calculator/issues/1387	**Pre-Requisites:**  Expressions should be added.    **Repro Steps:**   1. Launch Calculator app.  2. Turn on the narrator.  3. Navigate Open navigation button and activate it.  4. Navigate to graphing calculator list item and activate it.  5. Navigate to Enter a expression edit box.  6. Enter any expression say "7+8".  7. Open context menu and activate 'Analyze function' button and activate it.  8. Analyze function pane will get open.  9. Now press tab key to navigate to the domain value.  10. Observe the issue.    **Actual Result:**  Narrator does not announce the Domain value "⁅𝑥∈ℝ⁆" when focus navigates there. Narrator just announces "scan off".    **Expected Result:**  Narrator should announce the Domain value "⁅𝑥∈ℝ⁆" when focus navigates there.	MicrosoftIssueBot	null	null	null	null	null	null	
2020-09-23 18:17:34.0	null	2021-07-22 09:03:39.0	open	[Bug, Area: Accessibility, Pri: 3, triage approved]	1	1388	Narrator does not announce position number of the variables mentioned in the expression.	https://api.github.com/repos/microsoft/calculator/issues/1388	https://github.com/microsoft/calculator/issues/1388	**Repro Steps:**   1. Launch Calculator app.  2. Turn on the narrator.  3. Navigate Open navigation button and activate it.  4. Navigate to graphing calculator list item and activate it.  5. Navigate to Enter a expression edit box.  6. Enter expression "A+B".  7. Navigate to the any variable say "B".  8. Observe the issue.    **Actual Result:**  Narrator does not announce position number of the variables mentioned in the expression.  For e.g. if focus navigates to 2nd variable which is "B" then narrator is not announcing its position number.    **Expected Result:**  Narrator should announce position number of the variables mentioned in the expression.  For e.g. if focus navigates to 2nd variable which is "B" then narrator should announce its position number as "2 of 2".	MicrosoftIssueBot	null	null	null	null	null	null	
2020-09-23 18:17:37.0	null	2021-07-22 09:03:41.0	open	[Bug, Area: Accessibility, Pri: 3, triage approved]	1	1389	Keyboard focus navigates twice at Domain value "⁅𝑥∈ℝ⁆".	https://api.github.com/repos/microsoft/calculator/issues/1389	https://github.com/microsoft/calculator/issues/1389	**Pre-Requisites:**  Expressions should be added.    **Repro Steps:**   1. Launch Calculator app.  2. Navigate Open navigation button and activate it.  3. Navigate to graphing calculator list item and activate it.  4. Navigate to Enter a expression edit box.  5. Enter any expression say "7+8".  6. Open context menu and activate 'Analyze function' button and activate it.  7. Analyze function pane will get open.  8. Now press tab key to navigate to the domain value.  9. Observe the issue.    **Actual Result:**  Keyboard focus navigates twice at Domain value "⁅𝑥∈ℝ⁆".    **Expected Result:**  Keyboard focus should navigate only once at  Domain value "⁅𝑥∈ℝ⁆".	MicrosoftIssueBot	null	null	null	null	null	null	
2020-09-23 18:17:41.0	null	2021-08-26 10:02:49.0	open	[Bug, Area: Accessibility, Pri: 3, triage approved]	1	1390	Narrator announces "1 USD = 0.8443 EUR" information twice in scan mode when focus navigates there.	https://api.github.com/repos/microsoft/calculator/issues/1390	https://github.com/microsoft/calculator/issues/1390	**Repro Steps:**   1. Launch Calculator app.  2. Turn on the narrator.  3. Navigate Open navigation button and activate it.  4. Navigate to 'Currency converter' list item and activate it.  5. Turn On the scan mode and navigate via arrow key to the text "1 USD = 0.8443 EUR".  6. Observe the issue.    **Actual Result:**  Narrator announces "1 USD = 0.8443 EUR" information twice in scan mode when focus navigates there.    **Expected Result:**  Narrator should announce "1 USD = 0.8443 EUR" information only once in scan mode when focus navigates there.	MicrosoftIssueBot	null	null	null	null	null	null	
2020-09-24 20:07:29.0	null	2021-10-19 05:02:23.0	open	[Enhancement, Pri: 2, needs pitch review]	2	1391	Improve usability for common mathematical formulas	https://api.github.com/repos/microsoft/calculator/issues/1391	https://github.com/microsoft/calculator/issues/1391	<!--  See https://github.com/Microsoft/calculator/blob/master/docs/NewFeatureProcess.md for suggestions on how to write a good feature pitch. Just want to submit an idea quickly? Try Feedback Hub instead: https://insider.windows.com/en-us/fb/?contextid=130  -->    **Problem Statement**  <!--  What problem are we trying to solve? Who’s the target audience? Is there a customer need or pain point we need to remedy? Is there a business goal or metric we are trying to improve? Do we have a hypothesis we want to prove or disprove?  -->  This is a feature request for improvement of the usability for the usage of common mathematical formulas.    **Evidence or User Insights**  <!--  Why should we do this? Potential sources of data: Feedback Hub, other GitHub issues, other anecdotes from listening to customers in person or online, request from another team, telemetry data, user research, market or competitive research  -->  Users find themselves with issues remembering the correct formula for some common calculations.    For example, take the [cross-multiplication (and rule of three)](https://en.wikipedia.org/wiki/Cross-multiplication), where there's the input of 2 variables to discover the other one.    **Proposal**  <!--  How will the solution/feature help us solve the problem? How will it meet the target audience’s needs? If there are business goals or metrics, how does this improve them?  -->    I propose the creation of another side bar item called "Common calculations".  This would open a page with a combo box, showing the names common formulas.  By selecting a formula, such as the Cross-multiplication, speed equation, or mass equation, etc. the bottom part of the UI would display the input boxes where the user could type the values.    By typing the values, the result could be automatically calculated such as:    ![Cross](https://user-images.githubusercontent.com/14798947/94194309-dffa8a00-fe87-11ea-840f-bdb7a568fb64.gif)    **Goals**  User should be able to perform calculations faster, understanding better the results of the formulas.    **Non-Goals**  <!--  Things we are explicitly not doing or supporting or that are out of scope, including reasons why.  -->    **Low-Fidelity Concept**  <!--  Show as much of the experience as needed to explain the idea. This can be as simple as a napkin drawing but can also be a code prototype, or a design comp. Keep it simple at this stage, as it can be refined later during the pre-production stage.  -->    **Requested Assignment**  <!--  Some people just want to suggest a feature and let someone else implement it.  Other people want to not only suggest a feature, but implement it as well.  Both scenarios are completely ok. We just want to know which one it is.  We are likely to prioritize the review of feature requests if they already have someone who can implement them.  Please indicate which bucket you fall into by keeping one and removing the other.  -->  I'm just suggesting this idea.  I don't want to implement it.  	NickeManarin	null	null	null	null	null	null	
2020-09-25 01:26:22.0	2020-09-25 05:35:12.0	2020-12-02 12:00:14.0	closed	[off-topic]	1	1392	How to compile windows xp	https://api.github.com/repos/microsoft/calculator/issues/1392	https://github.com/microsoft/calculator/issues/1392	Hello so I clean room reversed Windows XP and I download 3 gb file on mega with f5 now I want to ask how to compile windows xp I can't see visual studio 2019 project file so I don't know how to open .cab I want to make my own good system please help thank you 	0xGREG	null	null	null	null	null	null	
2020-09-25 16:16:10.0	2020-09-25 17:54:38.0	2020-09-25 17:54:38.0	closed	[]	0	1393	Update the pipeline internal version to 0.0.51	https://api.github.com/repos/microsoft/calculator/issues/1393	https://github.com/microsoft/calculator/pull/1393	Keeping the internal version up to date in the build pipeline yaml files.  	sanderl	null	null	null	null	null	null	
2020-09-25 22:45:04.0	2020-09-25 22:45:50.0	2020-09-28 20:14:05.0	closed	[]	2	1394	Update2010 release	https://api.github.com/repos/microsoft/calculator/issues/1394	https://github.com/microsoft/calculator/pull/1394	## Fixes #.      ### Description of the changes:  -  -  -    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  -  -  -    	volkcor	null	null	null	null	null	null	
2020-09-28 20:11:44.0	2020-09-28 20:13:49.0	2020-09-28 20:14:02.0	closed	[]	0	1395	Update2010 release	https://api.github.com/repos/microsoft/calculator/issues/1395	https://github.com/microsoft/calculator/pull/1395	## Fixes #.  Updating release version to 2010 after creating the release/2009 branch    ### Description of the changes:  -  -  -    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  -  -  -    	volkcor	null	null	null	null	null	null	
2020-09-29 14:19:08.0	2020-10-19 07:32:06.0	2020-12-10 18:00:06.0	closed	[Bug, Area: User Experience, duplicate]	5	1396	Why is programmer mode changed from `Alt+3` to `Alt+4` ?	https://api.github.com/repos/microsoft/calculator/issues/1396	https://github.com/microsoft/calculator/issues/1396	It was `Ctrl+3` for decades, and then `Alt+3` -- fine.  And now, without any hints, the shortcut changed to `Alt+4`. -- I'm not OK with this.  Problem is that, there's no visual hint which version I'm on, so on a random Win10 installation it'll be either `Alt+3` or `Alt+4`, depends on how happy the Windows Update is on that box.	yatli	null	null	null	null	null	null	
2020-09-30 14:52:52.0	null	2021-05-26 10:07:58.0	open	[Bug, triage approved, Area: User Experience, Pri: 2]	2	1397	Sometimes, the analysis for a function can exceed the display area	https://api.github.com/repos/microsoft/calculator/issues/1397	https://github.com/microsoft/calculator/issues/1397	<!--  Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.  -->    **Describe the bug**  Sometimes, when you view the analysis for a function in Graphing Mode, some items may be too long to show in the analysis window, and are unable to wrap because even a single expression exceeds the width. Therefore, the expression is directly chopped, let the user unable to read the entire expression.   Note that you're still able to copy the entire expression though.  <!-- A clear and concise description of what the bug is. -->    **Steps To Reproduce**  1. Go to Graphing Mode  2. Enter `3x^3+5x^2-7x+1` (for example)  3. Click on 'Analyze Function'  4. See error    **Expected behavior**  The expression for the 3 x-axis interceptions, while long, should be shown completely,  <!-- A clear and concise description of what you expected to happen. -->    **Screenshots**  <img width="314" alt="exceed" src="https://user-images.githubusercontent.com/40313014/94701386-2e6bc500-036f-11eb-8127-474fc3ba549e.png">    <!-- If applicable, add screenshots to help explain your problem. -->    **Device and Application Information**   - OS Build: 10.0.19041.0   - Architecture: X64   - Application Version: 10.2007.1.0   - Region: zh-CN   - Dev Version Installed: False    <!--  Run the following commands in Powershell and copy/paste the output.  " - OS Build: $([Environment]::OSVersion.Version)"  " - Architecture: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Architecture)"  " - Application Version: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Version)"  " - Region: $((Get-Culture).Name)"  " - Dev Version Installed: $($null -ne (Get-AppxPackage -Name Microsoft.WindowsCalculator.Dev))"  -->    **Requested Assignment**  <!--  Some people just want to report a bug and let someone else fix it.  Other people want to not only submit the bug report, but fix it as well.  Both scenarios are completely ok. We just want to know which one it is.  Please indicate which bucket you fall into by keeping one and removing the other.  -->  I'm just reporting this problem.  I don't want to fix it.  	dovisutu	null	null	null	null	null	null	
2020-10-01 02:47:38.0	2020-12-01 19:02:35.0	2021-01-01 00:00:07.0	closed	[Bug, Area: World-Readiness, investigate]	2	1398	[Localization] Wrong translation for odd and even function in Chinese	https://api.github.com/repos/microsoft/calculator/issues/1398	https://github.com/microsoft/calculator/issues/1398	<!--  PLEASE NOTE:   We cannot _merge_ any suggested localization changes to our localized resources files. These files are automatically generated from an internal localization process.  Any suggestion submitted this way will be duplicated into our internal localization system, and then closed here.    Alternatively, you can launch feedback-hub://, click on the "Language Community" tab on the left-side of the app, and follow the steps to submit a localization suggestion that way.  (The "Language Community" tab currently will only be visible if your system is running a non-English language).    Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.  -->    **Describe the bug**  The `odd`/`even` in *function analysis* (**parity**), which indicates **`odd function`/`even function`** (`奇函数`/`偶函数` in Chinese) is wrongly translated as *`odd number`*/*`even number`* (`奇数`/`偶数` in Chinese).   <!-- A clear and concise description of what the bug is. -->    **Steps To Reproduce**  1. Go to Graphing Mode  2. Enter any function  3. Open Analysis tab  4. Check out Parity tab in Chinese (奇偶性)  <!--  Steps to reproduce the behavior:  1. Go to '...'  2. Click on '....'  3. Scroll down to '....'  4. See error  -->    **Expected behavior**  It should be translated correctly.  <!-- A clear and concise description of what you expected to happen. -->    **Screenshots**  <img width="164" alt="oddity" src="https://user-images.githubusercontent.com/40313014/94759769-64429500-03d3-11eb-983f-8c973b102ba0.png">      <!-- If applicable, add screenshots to help explain your problem. -->    **Device and Application Information**   - OS Build: 10.0.19041.0   - Architecture: X64   - Application Version: 10.2007.1.0   - Region: zh-CN   - Dev Version Installed: False     <!--  Run the following commands in Powershell and copy/paste the output.  " - OS Build: $([Environment]::OSVersion.Version)"  " - Architecture: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Architecture)"  " - Application Version: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Version)"  " - Region: $((Get-Culture).Name)"  " - Dev Version Installed: $($null -ne (Get-AppxPackage -Name Microsoft.WindowsCalculator.Dev))"      -->	dovisutu	null	null	null	null	null	null	
2020-10-01 12:03:02.0	2020-10-01 16:35:47.0	2020-12-02 12:00:13.0	closed	[]	2	1399	Normal exe version download?	https://api.github.com/repos/microsoft/calculator/issues/1399	https://github.com/microsoft/calculator/issues/1399	Hello, where to get normal .exe version of calculator as i never use store accounts and never will be. I prefer apps not rely any sort of store at all and i even removed Windows Store from my system.	fcore117	null	null	null	null	null	null	
2020-10-01 21:21:45.0	2020-10-02 00:22:22.0	2020-10-02 00:22:22.0	closed	[]	0	1400	Fix typo in splash icon names	https://api.github.com/repos/microsoft/calculator/issues/1400	https://github.com/microsoft/calculator/pull/1400	### Description of the changes:  - Fix the name format for the splash icons so they have '_' instead of '.' before altform-colorful    	sanderl	null	null	null	null	null	null	
2020-10-02 07:27:56.0	2020-10-22 16:28:27.0	2020-10-22 16:28:27.0	closed	[]	7	1401	Edit fields are scalable for large fonts	https://api.github.com/repos/microsoft/calculator/issues/1401	https://github.com/microsoft/calculator/pull/1401	## Fixes #1381 .    ### Description of the changes:  - The edit boxes (min value, step value, max value) max width is not limited now, so they can be scaled for any large fonts.    ### How changes were validated:  - The changes are tested manually with different font sizes from 100 to 225%  ![Screenshot 2020-10-02 10-26-13](https://user-images.githubusercontent.com/27405436/94898234-e1384200-0499-11eb-86d9-374eae483960.png)      	JackRainy	null	null	null	null	null	null	
2020-10-02 16:13:58.0	2020-10-02 17:07:23.0	2020-10-02 17:07:23.0	closed	[]	0	1402	Cherry-Pick: Fix typo in splash icon names (#1400)	https://api.github.com/repos/microsoft/calculator/issues/1402	https://github.com/microsoft/calculator/pull/1402	Cherry-pick PR #1400 to release/2009     * Fix typo in splash screen icon names    * Update the internals version to match the internal change    * Update the internals version to match the internal change      	sanderl	null	null	null	null	null	null	
2020-10-03 17:19:02.0	2020-10-03 17:45:44.0	2020-10-03 17:45:57.0	closed	[invalid]	0	1403	Update README.md	https://api.github.com/repos/microsoft/calculator/issues/1403	https://github.com/microsoft/calculator/pull/1403	## Fixes #.      ### Description of the changes:  -  -  -    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  -  -  -    	dangolprasanna	null	null	null	null	null	null	
2020-10-07 01:22:31.0	2020-10-27 22:56:22.0	2020-12-02 12:00:12.0	closed	[Bug, triage approved, Area: User Experience, Pri: 2]	2	1404	Negative Button for converters inconsistent with visibility	https://api.github.com/repos/microsoft/calculator/issues/1404	https://github.com/microsoft/calculator/issues/1404	**Describe the bug**  If you launch Windows Calculator with any mode of Converters that don't support Negative Numbers, then change to temperature or angle converter, the negative button won't pop up. Likewise, if you launch with the temperature or angle mode, that button will not disappear.     **Steps To Reproduce**  Steps to reproduce the behaviour:  1. Launch Windows Calculator (be sure that it is on any converter mode that is not angle and temperature)  2. Change the mode to temperature or angle  3. See error: the negative button does not appear    **Expected behaviour**  When you switch modes, the negative button should appear and collapse accordingly.    **Screenshots**  ![Calculator Converter](https://user-images.githubusercontent.com/47545798/95276559-5ab89300-0800-11eb-8a62-4777ca9ef7b2.png)  _Left: A instance where the converter was switched to. Right: A new instance of the calculator, already on the temperature page_    **Device and Application Information**   - OS Build: Windows Insider 19042.546   - Architecture: x64   - Application Version: 10.2008.2.0   - Region: en-CA   - Dev Version Installed: Yes    **Requested Assignment**  I'm just reporting this problem.  I don't want to fix it.  	Chips1234	null	null	null	null	null	null	
2020-10-08 21:22:36.0	2020-10-09 18:08:18.0	2020-12-02 12:00:11.0	closed	[duplicate]	3	1405	[Usability] Paste copied result from calculator: extra hidden characters were copied too	https://api.github.com/repos/microsoft/calculator/issues/1405	https://github.com/microsoft/calculator/issues/1405	How to reproduce:  1. Copy result from calculator: 0xFFF0000000000000.  2. Paste to text file with source code (for example): 0xFFF0000000000000.  3. Get unexpected compilation error.  main.c:181:65: error: invalid suffix '‬' on integer constant ...%016lx\n", d7.u & 0xFFF0000000000000<U+202C> );    Provide the way to paste copied result from calculator to text files without any hidden characters (like <U+202C>).  	annazolkieve	null	null	null	null	null	null	
2020-10-09 13:29:50.0	2020-10-19 07:28:25.0	2020-12-02 12:00:10.0	closed	[Bug, Area: User Experience, external]	5	1406	[UI] Two (or more) calculator instances side-by-side: impossible to make the 2nd one the same scale as the 1st one	https://api.github.com/repos/microsoft/calculator/issues/1406	https://github.com/microsoft/calculator/issues/1406	![image](https://user-images.githubusercontent.com/46918093/95588794-8a5bdb00-0a4c-11eb-8801-df7e909c261b.png)  	annazolkieve	null	null	null	null	null	null	
2020-10-11 22:38:05.0	2020-12-17 18:15:25.0	2021-01-17 00:00:05.0	closed	[Bug, Pri: 3, triage approved, Area: User Experience]	2	1407	Copy-pasting result computed by the calculator gives "Invalid input"	https://api.github.com/repos/microsoft/calculator/issues/1407	https://github.com/microsoft/calculator/issues/1407	Copy-pasting result computed by the calculator (5.562684646268003457725581793331e-309) gives "Invalid input":  ![image](https://user-images.githubusercontent.com/46918093/95691897-6c989c80-0c2b-11eb-829a-daccc3d546f0.png)    See also: https://github.com/microsoft/calculator/issues/1301.  	annazolkieve	null	null	null	null	null	null	
2020-10-21 19:16:36.0	2020-10-27 22:57:29.0	2020-10-27 22:57:29.0	closed	[]	6	1408	Update dev comment for periodicity for translation problems in graphical mode	https://api.github.com/repos/microsoft/calculator/issues/1408	https://github.com/microsoft/calculator/pull/1408	## Fixes internal bug _[MachineTranslated] Translation problems in graphical mode. - Update dev comment_    ### Description of the changes:  - Added definition of period in en-US comment.    ### How changes were validated:  - No need for validation as this is a non-technical issue.  	greedyAI	null	null	null	null	null	null	
2020-10-21 22:20:52.0	2020-11-10 17:56:40.0	2020-12-10 18:00:05.0	closed	[Bug, Area: Reliability, investigate, Pri: 2]	4	1409	Copy pasting into Currency locks the editor	https://api.github.com/repos/microsoft/calculator/issues/1409	https://github.com/microsoft/calculator/issues/1409	<!--  Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.  -->    **Describe the bug**  <!-- A clear and concise description of what the bug is. -->  Copy pasting from any source into the currency locks the editor and you cannot clear the editor.    **Steps To Reproduce**  <!--  Steps to reproduce the behavior:  1. Go to '...'  2. Click on '....'  3. Scroll down to '....'  4. See error  -->  Open Notepad  Type text "20.83" and copy the text   Open the calculator app and paste the text with Ctrl+V  See that you removing or CE button doesn't clear anything.    **Expected behavior**  <!-- A clear and concise description of what you expected to happen. -->  I would expect the editor still continue to edit. Nothing happens after copy paste.    **Screenshots**  <!-- If applicable, add screenshots to help explain your problem. -->  ![Currency](https://user-images.githubusercontent.com/3826953/96793254-04378100-13ca-11eb-9830-2ef080650abc.gif)      **Device and Application Information**   - OS Build: 10.0.19041.0   - Architecture: X64   - Application Version: 10.2009.4.0   - Region: en-US   - Dev Version Installed: false    <!--  Run the following commands in Powershell and copy/paste the output.  " - OS Build: $([Environment]::OSVersion.Version)"  " - Architecture: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Architecture)"  " - Application Version: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Version)"  " - Region: $((Get-Culture).Name)"  " - Dev Version Installed: $($null -ne (Get-AppxPackage -Name Microsoft.WindowsCalculator.Dev))"  -->    **Additional context**  <!-- Add any other context about the problem here. -->  N/A    **Requested Assignment**  <!--  Some people just want to report a bug and let someone else fix it.  Other people want to not only submit the bug report, but fix it as well.  Both scenarios are completely ok. We just want to know which one it is.  Please indicate which bucket you fall into by keeping one and removing the other.  -->  If possible, I would like to fix this.  	BuraChuhadar	null	null	null	null	null	null	
2020-10-22 20:02:04.0	2020-10-27 22:56:22.0	2020-10-27 22:56:22.0	closed	[]	4	1410	Fixes issue #1404	https://api.github.com/repos/microsoft/calculator/issues/1410	https://github.com/microsoft/calculator/pull/1410	## Fixes #1404     ### Description of the changes:  - When the unit converter's category is changed, the corresponding property setter for the `CurrentCategory` variable mistakenly calls `OnPropertyChanged("CurrentCategory")` instead of `RaisePropertyChanged("CurrentCategory")`. This results in a failure to notify XAML that the `CurrentCategory` variable has changed, resulting in the corresponding UI to not be updated accordingly.    ### How changes were validated:  - Manual testing.    	greedyAI	null	null	null	null	null	null	
2020-10-22 22:21:24.0	2020-10-28 01:24:54.0	2020-10-28 01:24:54.0	closed	[]	4	1411	fix: change floppy disk size	https://api.github.com/repos/microsoft/calculator/issues/1411	https://github.com/microsoft/calculator/pull/1411	## Fixes #.  Fixed floppy disk size to real. It is 1474560 bytes for standard 3,5' floppy (https://en.wikipedia.org/wiki/Floppy_disk)    ### Description of the changes:  -  -  -    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  -  -  -    	leuri397	null	null	null	null	null	null	
2020-10-24 00:28:39.0	2020-11-10 17:56:40.0	2020-11-10 17:56:40.0	closed	[]	0	1412	Fixes issue #1409	https://api.github.com/repos/microsoft/calculator/issues/1412	https://github.com/microsoft/calculator/pull/1412	#Fixes #1409.      ### Description of the changes:  - Skipping the validation of full editor lock when backspace or clear button is clicked.    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Manual testing.  - Added UI tests  - Added Unit tests    	BuraChuhadar	null	null	null	null	null	null	
2020-10-26 23:05:28.0	2020-10-27 22:58:06.0	2020-10-27 22:58:06.0	closed	[]	6	1413	Enable nightly flighting	https://api.github.com/repos/microsoft/calculator/issues/1413	https://github.com/microsoft/calculator/pull/1413	Update release pipeline to include a nightly schedule and to delete previous packages (so that we can avoid having to update the stub version for each flight) when flighting to the team ring.	greedyAI	null	null	null	null	null	null	
2020-10-27 22:14:01.0	2020-11-02 09:08:07.0	2020-12-02 12:00:09.0	closed	[Bug, duplicate]	2	1414	Changing mode: current result was reset to zero / no MR in Programmer mode?	https://api.github.com/repos/microsoft/calculator/issues/1414	https://github.com/microsoft/calculator/issues/1414	![image](https://user-images.githubusercontent.com/46918093/97367782-c8655580-18ba-11eb-9bb0-879f1ed3f36e.png)  	annazolkieve	null	null	null	null	null	null	
2020-10-28 18:06:24.0	2020-10-28 21:41:13.0	2020-10-28 21:41:19.0	closed	[]	0	1415	Improvements to CI pipeline	https://api.github.com/repos/microsoft/calculator/issues/1415	https://github.com/microsoft/calculator/pull/1415	Various improvements to the CI pipeline    - git shallow fetch, since we only need the latest commit in the pipeline  - don't run the MSBuild 'Clean' target or tell Azure Pipelines to clean up its workspace. Since we build on a fresh VM image every time, this isn't necessary	mcooley	null	null	null	null	null	null	
2020-10-29 13:16:03.0	2020-10-29 17:02:07.0	2020-12-02 12:00:08.0	closed	[triage needed]	1	1417	CALCULATOR	https://api.github.com/repos/microsoft/calculator/issues/1417	https://github.com/microsoft/calculator/issues/1417	https://www.github.com/microsoft/calculator/tree/master/build%2Fscripts%2FCreateAppxBundleMapping.ps1	liyah16	null	null	null	null	null	null	
2020-11-02 13:31:54.0	2020-11-03 22:31:59.0	2020-12-04 00:00:08.0	closed	[duplicate]	2	1418	Programmer mode sign bit.	https://api.github.com/repos/microsoft/calculator/issues/1418	https://github.com/microsoft/calculator/issues/1418	Programmer mode. Calculating with sign bit. I think I  could select signed or unsigned. Example: byte mode selected . I can't write 255. Only, 127 , -127 between writing.  May be add menu item sign or unsign.  in Byte mode, word mode, and others. only DEC integer sign bit is used.  I can write binary (11111111) Hex (FF) but I can't write (255) in byte mode.      Thanks  Regards        <!--  Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.  -->    **Describe the bug**  <!-- A clear and concise description of what the bug is. -->    **Steps To Reproduce**  <!--  Steps to reproduce the behavior:  1. Go to '...'  2. Click on '....'  3. Scroll down to '....'  4. See error  -->    **Expected behavior**  <!-- A clear and concise description of what you expected to happen. -->    **Screenshots**  <!-- If applicable, add screenshots to help explain your problem. -->    **Device and Application Information**   - OS Build:   - Architecture:   - Application Version:   - Region:   - Dev Version Installed:    <!--  Run the following commands in Powershell and copy/paste the output.  " - OS Build: $([Environment]::OSVersion.Version)"  " - Architecture: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Architecture)"  " - Application Version: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Version)"  " - Region: $((Get-Culture).Name)"  " - Dev Version Installed: $($null -ne (Get-AppxPackage -Name Microsoft.WindowsCalculator.Dev))"  -->    **Additional context**  <!-- Add any other context about the problem here. -->    **Requested Assignment**  <!--  Some people just want to report a bug and let someone else fix it.  Other people want to not only submit the bug report, but fix it as well.  Both scenarios are completely ok. We just want to know which one it is.  Please indicate which bucket you fall into by keeping one and removing the other.  -->  If possible, I would like to fix this.  I'm just reporting this problem.  I don't want to fix it.  	safaka123	null	null	null	null	null	null	
2020-11-02 15:39:45.0	2020-11-03 06:09:30.0	2020-11-04 11:29:18.0	closed	[invalid]	1	1419	Update README.md	https://api.github.com/repos/microsoft/calculator/issues/1419	https://github.com/microsoft/calculator/pull/1419	## Fixes #.      ### Description of the changes:  -  -  -    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  -  -  -    	Moazzam94	null	null	null	null	null	null	
2020-11-03 20:39:13.0	2020-11-03 21:22:25.0	2020-12-04 00:00:07.0	closed	[Bug, Area: User Experience, duplicate]	2	1420	Wrong calculation result	https://api.github.com/repos/microsoft/calculator/issues/1420	https://github.com/microsoft/calculator/issues/1420	**Describtion**  Wrong answer when calculating a whole formula on standart mode    **Steps To Reproduce**  1. Open calculator  2. Enter "3 * 2 + 5 * 6" as one line on standard category and hit enter    **Expected behavior**  "3 * 2 + 5 * 6 = 36" on standard mode    **Screenshots**  ![calc_standart](https://user-images.githubusercontent.com/44092345/98037354-18e13380-1e24-11eb-96e4-4a60b1029553.png)  ![calc_scientific](https://user-images.githubusercontent.com/44092345/98037357-1a126080-1e24-11eb-9125-374626996078.png)    **Device and Application Information**   - OS Build: 19041.572   - Architecture: x64   - Application Version: 10.2009.4.0   - Region: en-US   - Dev Version Installed: False    I'm just reporting this problem.  I don't want to fix it.	mrghosti3	null	null	null	null	null	null	
2020-11-03 22:14:17.0	2020-11-04 20:06:39.0	2020-11-04 20:06:39.0	closed	[]	0	1421	Switch agent pool for internal releases	https://api.github.com/repos/microsoft/calculator/issues/1421	https://github.com/microsoft/calculator/pull/1421	Switch the "WindowsInternalRelease" job to run on a newer internal pool with more capacity.	mcooley	null	null	null	null	null	null	
2020-11-03 22:51:58.0	2020-11-04 20:06:25.0	2020-11-04 20:06:25.0	closed	[]	0	1422	Update localized strings 2020-11-03	https://api.github.com/repos/microsoft/calculator/issues/1422	https://github.com/microsoft/calculator/pull/1422	Check in updated strings from our internal localization system.	mcooley	null	null	null	null	null	null	
2020-11-04 17:58:58.0	2020-11-04 20:06:02.0	2021-09-28 18:09:01.0	closed	[]	0	1423	Updating version to 2010 for release fork	https://api.github.com/repos/microsoft/calculator/issues/1423	https://github.com/microsoft/calculator/pull/1423	## Fixes #.      ### Description of the changes:  - Updating version to 2010 for the 2010 release branch fork  -  -    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  -  -  -    	volkcor	null	null	null	null	null	null	
2020-11-04 22:41:02.0	2020-11-05 16:44:26.0	2021-03-08 20:03:44.0	closed	[]	0	1424	Updating Master to 2011	https://api.github.com/repos/microsoft/calculator/issues/1424	https://github.com/microsoft/calculator/pull/1424	Now that the release/2010 branch is created it's time to update Master to 2011 to prepare for the next release.  	volkcor	null	null	null	null	null	null	
2020-11-05 22:20:49.0	2020-11-05 23:08:39.0	2020-12-06 00:00:07.0	closed	[Bug, triage approved, Pri: 1]	1	1425	Update the GraphingPolicy check in NavCategory.cpp to use the PolicyManger APIs instead of a registry lookup	https://api.github.com/repos/microsoft/calculator/issues/1425	https://github.com/microsoft/calculator/issues/1425	A team member will update this issue with more details soon.	MicrosoftIssueBot	null	null	null	null	null	null	
2020-11-05 22:27:25.0	2020-11-05 23:08:39.0	2020-11-05 23:08:40.0	closed	[]	0	1426	switch to use policy manager apis for detecting graphing policy	https://api.github.com/repos/microsoft/calculator/issues/1426	https://github.com/microsoft/calculator/pull/1426	## Fixes #1425.      ### Description of the changes:  - In NavCategory.cpp, update the use the Policy Manager APIs instead of the registry to look up the AllowGraphingCalculator policy.  -Since the AllowGraphingCalculator policy is a user policy, we get the users and look up the policy using the Education area and AllowGraphingCalculator with the GetPolicyFromPathForUser Policy Manager API: https://docs.microsoft.com/en-us/uwp/api/windows.management.policies.namedpolicy.getpolicyfrompathforuser?view=winrt-19041  ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Manually using Group Policy to validate the new method still picks up the policy value.    	sanderl	null	null	null	null	null	null	
2020-11-11 07:51:49.0	2020-11-11 17:40:40.0	2020-11-12 06:07:30.0	closed	[]	0	1430	Lock m_renderMain in Grapher::TryInitializeGraph to avoid race condition	https://api.github.com/repos/microsoft/calculator/issues/1430	https://github.com/microsoft/calculator/pull/1430	## Fixes #1293 .    The Calculator crashes when removing an expression with another expression just cleared.    This behavior will trigger the graph updating **twice in a short time**, which leads to a potential race condition to `m_graph`.  The app crashes because one thread is rendering the `m_graph` and another tries to initialize the `m_graph`.    ### Description of the changes:    - Add lock to `m_renderMain->GetCriticalSection()` in `Grapher::TryInitializeGraph`  - Minor improvements to code style    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - After this fix, the bug cannot repro per steps in #1293    > As `Graph` is not included in the community version, tests cannot be added.    	xuhongxu96	null	null	null	null	null	null	
2020-11-12 01:37:46.0	2020-11-12 19:48:41.0	2020-11-12 19:48:41.0	closed	[]	0	1431	Now that Bug 23811901 has been fixed, adding Test Method 'KeyboardInp…	https://api.github.com/repos/microsoft/calculator/issues/1431	https://github.com/microsoft/calculator/pull/1431	Now that #744 has been fixed, I'm adding Test Method "KeyboardInput_HistoryHotkeys" to test the functionality of history hotkeys such as [Shift] + [Ctrl] + [D] to help prevent a regression or a break.    ### Description of the changes:  - Added Test Method "KeyboardInput_HistoryHotkeys" to the "Basic Calculator Functionality via Keyboard Input Tests" region in StandardModeFunctionalTests.cs    ### How changes were validated:  I ran the test a few times, and it passed    	edwcry	null	null	null	null	null	null	
2020-11-12 02:46:27.0	2020-12-02 19:04:23.0	2020-12-03 02:49:31.0	closed	[fixing approved issue]	0	1432	Use different formatter for different currency	https://api.github.com/repos/microsoft/calculator/issues/1432	https://github.com/microsoft/calculator/pull/1432	## Fixes #424 , #1204 , #1438  .    Before, the Calculator will use `CurrencyFormatter` per system locale for all currencies.  So, users cannot input `USD` with fraction digits in Japanese locale, because `JPY` doesn't allow fraction digits.    ### Description of the changes:  - Allow to use different formatter for different currency     - By adding `m_currencyFormatter1`, `m_currencyFormatter2`    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - <del>Functional UI tests</del> (it does not work because there is no full currency list in CI)  - Add unit test case `TestCurrencyFormattingLogic` for `UnitConverterViewModel`    	xuhongxu96	null	null	null	null	null	null	
2020-11-13 03:27:43.0	null	2021-09-22 09:02:08.0	open	[help wanted, Bug, triage approved, Area: World-Readiness, Pri: 2]	2	1433	Function won't Show after Pressing Enter if IME is Open in Graphing Mode	https://api.github.com/repos/microsoft/calculator/issues/1433	https://github.com/microsoft/calculator/issues/1433	<!--  Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.  -->    **Describe the bug**  <!-- A clear and concise description of what the bug is. -->    Function won't show after pressing `Enter` if IME is open in Graphing Mode.  Also, some strange expressions may be filled in next editbox.    **Steps To Reproduce**    Steps to reproduce the behavior:  1. Go to `Graphing Mode`  2. Enable the IME (I'm using Chinese IME)  3. Input an expression and press `Enter`  4. Nothing will show on graph  5. Input more expressions, and sometimes strange expressions are auto filled in next editbox after pressing `Enter`  6. Still not works if go back to previous editbox and hit `Enter` again even with IME disabled.      **Expected behavior**  - Function should be shown after pressing `Enter` with IME open.  - No strange expressions should appear.      **Screenshots**    I never input the 4th function `x+3` and 5th function `x` but they're filled in next editbox automatically.    ![1](https://user-images.githubusercontent.com/2201482/99024690-0c867480-25a2-11eb-9b86-868ae700a83f.gif)      **Device and Application Information**     - OS Build: 10.0.19042.0   - Architecture: x64   - Application Version: 10.2009.4.0   - Region: zh-CN   - Dev Version Installed: True    **Requested Assignment**    I'm just reporting this problem.  I don't want to fix it for now.  	xuhongxu96	null	null	null	null	null	null	
2020-11-15 22:21:48.0	null	2021-10-19 05:02:26.0	open	[Pri: 1, approved]	2	1435	Update profile guided optimization settings	https://api.github.com/repos/microsoft/calculator/issues/1435	https://github.com/microsoft/calculator/issues/1435	The profile-guided optimization configuration for Calculator has not been updated in a long time. Updating it would benefit performance.    A partial list of things to be done:  - Improve documentation to make it easier to update the profile data  - Re-generate the profile data, since code in the app has changed a lot since it was last generated  - Add PGD data for ARM64, in addition to x64 and x86  - Update the [PGO targets file](https://github.com/microsoft/calculator/blob/master/Tools/PGO/build/native/Microsoft.WindowsCalculator.PGO.targets) to avoid using deprecated settings like `/LTCG:PGUPDATE`  - The PGO NuGet package doesn't need _both_ PGC and PGD files  - Make it possible to produce an instrumented build from the CI pipeline  - Consider whether we can automatically collect PGD data in the CI pipeline by running UI tests against the instrumented build  - Consider using a source other than NuGet to host the PGD files, since using multiple upstream sources is discouraged	mcooley	null	null	null	null	null	null	
2020-11-16 17:07:02.0	2020-11-16 17:24:00.0	2020-12-16 18:00:07.0	closed	[triage needed]	5	1436	scientifc calculator order of operations is wrong	https://api.github.com/repos/microsoft/calculator/issues/1436	https://github.com/microsoft/calculator/issues/1436	the problem is `6÷2(1+2)`  the expected answer is 1 the actual answer is 9    (you can't even type it that way you have to type it like that `6÷2×(1+2)`)    ![image](https://user-images.githubusercontent.com/7858946/99283760-1af0bc80-283e-11eb-8577-0ab49b1265ce.png)  ![image](https://user-images.githubusercontent.com/7858946/99284351-d31e6500-283e-11eb-9a95-6e9e1c1c1acf.png)      **Device and Application Information**   - OS Build: 19042   - Architecture: x64   - Application Version: 10.2009.4.0   - Region: en-US    I'm just reporting this problem.  I don't want to fix it.  	ahmed-abdelrazek	null	null	null	null	null	null	
2020-11-17 16:07:57.0	2020-11-18 19:45:20.0	2020-12-19 00:00:06.0	closed	[triage needed]	5	1437	Don't startup on Microsoft Windows 10 20H2	https://api.github.com/repos/microsoft/calculator/issues/1437	https://github.com/microsoft/calculator/issues/1437	<!--  Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.  -->    **Describe the bug**  After install update for Windows 10 - October update (20H2) app don't startup. I'm uninstall app & reinstall him.  App startup flash window and close app.    **Steps To Reproduce**  1. Open app calculator     **Expected behavior**      **Screenshots**  <!-- If applicable, add screenshots to help explain your problem. -->    **Device and Application Information**   - OS Build:   - Architecture:   - Application Version:   - Region:   - Dev Version Installed:    - OS Build: Major = 10  Minor = 0  Build = 19042  Revision  = 0  " - Architecture: X64"  " - Application Version: 10.2009.4.0"  " - Region: en-US"  " - Dev Version Installed: False"      **Additional context**  <!-- Add any other context about the problem here. -->    **Requested Assignment**  <!--  Some people just want to report a bug and let someone else fix it.  Other people want to not only submit the bug report, but fix it as well.  Both scenarios are completely ok. We just want to know which one it is.  Please indicate which bucket you fall into by keeping one and removing the other.  -->  If possible, I would like to fix this.  I'm just reporting this problem.  I don't want to fix it.  	livevasiliy	null	null	null	null	null	null	
2020-11-18 17:47:04.0	2020-12-03 05:54:01.0	2021-01-02 06:00:10.0	closed	[Bug, triage approved, Area: Test Case, fixed, Pri: 1]	9	1438	Currency converter UI tests don't pass on production calculator	https://api.github.com/repos/microsoft/calculator/issues/1438	https://github.com/microsoft/calculator/issues/1438	The UI tests for currency converter added in #1412 are failing in our (internal) release pipeline.    The tests assume that the selected source and destination currency are the same. This is true in the dev builds, when fake currency data is used, but it's not true in production builds.    The tests should be updated to explicitly select a currency before exercising the number pad.	mcooley	null	null	null	null	null	null	
2020-11-20 17:11:42.0	2020-11-20 19:09:00.0	2020-11-21 03:06:15.0	closed	[]	2	1439	Update Windows Roadmap docs	https://api.github.com/repos/microsoft/calculator/issues/1439	https://github.com/microsoft/calculator/pull/1439	Just updated the docs.	MeghnaS21	null	null	null	null	null	null	
2020-11-21 01:02:54.0	2020-11-21 01:23:34.0	2020-11-21 01:24:45.0	closed	[off-topic]	6	1440	Ritz car on calcultor	https://api.github.com/repos/microsoft/calculator/issues/1440	https://github.com/microsoft/calculator/issues/1440	RITZT CAR	000000000000000000000000000000000000004	null	null	null	null	null	null	
2020-11-21 05:08:09.0	2020-11-23 15:20:06.0	2020-12-23 18:00:08.0	closed	[triage needed]	6	1441	unable to divide a number. A number( x ) divided by another number( y ) results a number( y ). 	https://api.github.com/repos/microsoft/calculator/issues/1441	https://github.com/microsoft/calculator/issues/1441	### **DESCRIBE THE BUG**   Calculator is unable to divide a number. It simply results the _**DIVISOR**_ as an output. I was trying to solve this question   _**6/2(2+1)**_. So I couldn't go further after entering first operator( division ).     ### **STEPS TO REPRODUCE**  _Steps to reproduce the behavior:_  1. Go to the **top left corner**.  2. Click on **Scientific/Engineering or any**.  3. Enter **6**, then **division operator**, then **3**.  4. See error- You will see that **the answer is the divisor itself**.     ### **EXPECTED BEHAVIOR**  *A "quotient" as an output. Not the "Divisor"*     ### **SCREENSHOT**    ![Calculator 21-11-2020 10_18_42](https://user-images.githubusercontent.com/50775297/99867966-53005280-2be4-11eb-8da0-da94931c97ce.png)       	MeghnaS21	null	null	null	null	null	null	
2020-11-24 19:31:15.0	2020-11-24 21:28:50.0	2020-11-24 21:28:50.0	closed	[]	0	1442	Updating to 2012 version after creating the 2011 release branch fork	https://api.github.com/repos/microsoft/calculator/issues/1442	https://github.com/microsoft/calculator/pull/1442	### Description of the changes:  - Updating version to 2012 after creating the release/2011 branch fork	volkcor	null	null	null	null	null	null	
2020-11-25 10:58:10.0	null	2021-10-19 05:02:28.0	open	[Enhancement, Pri: 2, needs more info]	3	1443	History in Programmer mode	https://api.github.com/repos/microsoft/calculator/issues/1443	https://github.com/microsoft/calculator/issues/1443	#326 and many other tickets say that History is disabled in Programmer mode. That's just unacceptable, and not to mention confusing.	mick-p1982	null	null	null	null	null	null	
2020-11-29 04:27:21.0	2020-12-17 18:15:25.0	2020-12-17 18:15:25.0	closed	[fixing approved issue]	1	1444	Fix copy-pasting result computed by the calculator gives "Invalid input"	https://api.github.com/repos/microsoft/calculator/issues/1444	https://github.com/microsoft/calculator/pull/1444	## Fixes #1407   This pull request fixes copy paste issue with exponential numbers.     The root cause of the issue has been an incorrect validation of the pasted data.  When a user tries to enter a big exponential number (eg. 1.1111111111111111111111111111111e+1142). The length of entire number is compared with maximum operand length. Only the length of mantissa should be compared with max operand length.    ### Description of the changes:  - While calculating operand length for standard and scientific modes, if the operand contains exponent then subtract exponent string length from operand length.    ### How changes were validated:  - Application was manually tested with inputs having exponential component  - Additional positive and negative unit test inputs have been added to CopyPasteManagerTest.cpp	chaitanyamehta	null	null	null	null	null	null	
2020-11-30 11:12:06.0	2020-11-30 17:46:14.0	2020-11-30 17:46:14.0	closed	[]	1	1445	Update README.md	https://api.github.com/repos/microsoft/calculator/issues/1445	https://github.com/microsoft/calculator/pull/1445	## Fixes #.      ### Description of the changes:  -  -  -    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  -  -  -    	NitinLodha2812	null	null	null	null	null	null	
2020-12-01 01:32:07.0	2020-12-01 18:04:00.0	2021-01-01 12:00:10.0	closed	[won't fix]	2	1446	calc error	https://api.github.com/repos/microsoft/calculator/issues/1446	https://github.com/microsoft/calculator/issues/1446	31186164224/512  = 60910477    32210164224/512  = 62910477	gonboy	null	null	null	null	null	null	
2020-12-01 18:14:57.0	2020-12-01 19:02:35.0	2020-12-01 19:02:54.0	closed	[]	0	1447	Update localized strings 2020-12-01	https://api.github.com/repos/microsoft/calculator/issues/1447	https://github.com/microsoft/calculator/pull/1447	Update translations from our internal localization system.    Fixes #1398  	mcooley	null	null	null	null	null	null	
2020-12-04 05:17:23.0	2020-12-04 16:53:42.0	2020-12-04 16:53:42.0	closed	[]	1	1448	Rename LICENSE to LICENSE.txt	https://api.github.com/repos/microsoft/calculator/issues/1448	https://github.com/microsoft/calculator/pull/1448	## Just a minor update #.  Changed LICENSE to LICENSE.txt    	jeremygautama	null	null	null	null	null	null	
2020-12-06 08:06:35.0	2020-12-11 05:04:19.0	2020-12-12 04:02:25.0	closed	[fixing approved issue]	1	1449	Add link to GitHub repo on about flyout	https://api.github.com/repos/microsoft/calculator/issues/1449	https://github.com/microsoft/calculator/pull/1449	## Fixes #582  Display link to the GitHub repo on the about flyout. Implementation is similar to link shown in currency converter mode when application is offline. (Offline. Please check your%HL%Network Settings%HL%)    ### Description of the changes:  - Add  learn more and contribute string in en-us resource.  - Display link below feedback button in About Flyout.  - Disable ScrollViewer.HorizontalScrollBarVisibility so that text wraps properly.    <img src="https://user-images.githubusercontent.com/10975439/101289507-e2079000-37ca-11eb-8475-10f6ce170f2e.png" alt="About Page" width="400">    ### How changes were validated:  - Manually tested.	chaitanyamehta	null	null	null	null	null	null	
2020-12-12 13:09:33.0	null	2021-10-19 05:02:31.0	open	[Enhancement, Pri: 2, needs more info]	1	1450	Rectangular to Polar Conversion	https://api.github.com/repos/microsoft/calculator/issues/1450	https://github.com/microsoft/calculator/issues/1450	I would like to see this feature getting added in a future version. I am forced to use the Casio emulator just for that single purpose	demberto	null	null	null	null	null	null	
2020-12-13 15:46:00.0	null	2021-05-26 10:08:12.0	open	[Bug, triage approved, Area: Reliability, Pri: 2]	1	1451	Calculator crashes when trying to plot complex inequalities	https://api.github.com/repos/microsoft/calculator/issues/1451	https://github.com/microsoft/calculator/issues/1451	**Describe the bug**  Then calculator app crashes and closes when trying to plot too complex inequalities, instead of displaying an error message like it does in other cases. This occurs only after certain commands sequences (in my case seemingly after removing another equation).    **Steps To Reproduce**  Steps to reproduce the behavior:  1. Go to Graphing mode.  2. Insert sin(x) as the first expression  3. Insert sin(x^2) as the second expression  4. Insert x as third expression  5. Remove 'x' equation  6. Insert sin(x^2)>sin(x) and hit enter. The graphing area becomes blank and the application crashes after few instants or when trying to click something.  This issue doesn't occur if I don't insert and remove 'x' (or any other expression).    **Expected behavior**  If the calculation is too complex, calculator should display a message like it does in other cases.    **Screenshots**  ![calc](https://user-images.githubusercontent.com/45036600/102016727-945acc80-3d62-11eb-819c-fe57643ad211.gif)    **Device and Application Information**   - OS Build: 10.0.21277.0   - Architecture: X64   - Application Version: 10.2011.16.0   - Region: it-IT   - Dev Version Installed: False    **Requested Assignment**  I'm just reporting this problem.  	manfromarce	null	null	null	null	null	null	
2020-12-18 01:50:48.0	2021-01-20 21:21:28.0	2021-01-20 21:21:28.0	closed	[]	0	1453	Improve clarity of math expressions in history for Standard Calculator (feature #138)	https://api.github.com/repos/microsoft/calculator/issues/1453	https://github.com/microsoft/calculator/pull/1453	## Fixes #138 .      ### Description of the changes:  - For standard calculator, when processing an input binary operator, if there is a previous operation, this feature completes the equation using that previous operation and add said equation to the history. The new secondary display and the next history entry will start with `m_currentVal` followed by the new binary operator to better communicate to the user that the calculator is working in immediate execution. These changes have been applied to the `CCalcEngine::ProcessCommandWorker` method in `CalcManager/CEngine/scicomm.cpp`.     ### How changes were validated:  - Each operator (unary and binary, including negation) has been thoroughly unit tested (using different combinations and orderings of one or more operators and numerical inputs) to ensure proper functionality. These unit tests have been added to `CalculatorManagerTest.cpp` and `HistoryTests.cpp`. Existing unit tests that no longer pass due to this change have also been updated.  - The changes have also been manually tested to ensure the UX matches the intended functionality.	greedyAI	null	null	null	null	null	null	
2020-12-21 15:27:41.0	2021-01-04 15:30:36.0	2021-02-04 18:00:06.0	closed	[duplicate]	4	1454	Alt+3 No Longer Opens Programming Mode	https://api.github.com/repos/microsoft/calculator/issues/1454	https://github.com/microsoft/calculator/issues/1454	I'm aware there have been other issues for this, however as they have been closed and locked, I am no longer able to show my support for them.  Changing shortcuts that have been around for years is a massive pain for users.  Perhaps as a solution, have it so we are able to define these shortcuts ourselves so that you can have graph mode where you want in the list, whilst we can still have alt+3 for programmer mode (although as yatli pointed out in issue #1396 , the inconsistencies between machines will also be a massive pain).    Imagine if Windows decided to suddenly change something like win+e for explorer! I doubt _that_ many people use it, but the people who do would be very annoyed!	Jonny-vb	null	null	null	null	null	null	
2020-12-28 19:55:40.0	2021-01-27 17:22:34.0	2021-01-27 17:23:15.0	closed	[]	2	1455	Fixed an issue where keyboard focus navigates twice at Domain value	https://api.github.com/repos/microsoft/calculator/issues/1455	https://github.com/microsoft/calculator/pull/1455	## Fixes #1389.      ### Description of the changes:  - This change sets the `UseSystemFocusVisuals` property to false in the KeyGraphFeaturesControls template.    ### How changes were validated:  Unfortunately, I was not able to get the KeyGraphFeaturesControl to show up in debug mode, but after looking at the XAML, I am fairly sure this change will fix the issue.  	yaichenbaum	null	null	null	null	null	null	
2020-12-29 04:48:35.0	2021-01-04 15:27:35.0	2021-02-03 18:00:09.0	closed	[duplicate]	4	1456	Simple logic operation calculation value error	https://api.github.com/repos/microsoft/calculator/issues/1456	https://github.com/microsoft/calculator/issues/1456	The result value is strange when calculating the following formula    ![image](https://user-images.githubusercontent.com/40881444/103259349-543f4f00-49dc-11eb-8b0f-dfb6fc53832a.png)    Valid Result Value  ![image](https://user-images.githubusercontent.com/40881444/103259354-5c978a00-49dc-11eb-9227-d393b9239972.png)    ----------------------------------------------   - OS Build: 10.0.18363.0   - Architecture: X64   - Application Version: 10.2011.16.0   - Region: ko-KR   - Dev Version Installed: False	OneTop4458	null	null	null	null	null	null	
2021-01-04 22:01:20.0	2021-01-04 23:18:45.0	2021-01-04 23:18:45.0	closed	[]	0	1457	Updateto2101release	https://api.github.com/repos/microsoft/calculator/issues/1457	https://github.com/microsoft/calculator/pull/1457	Update version number to 10.2101.*.	volkcor	null	null	null	null	null	null	
2021-01-04 23:17:07.0	2021-01-06 18:50:33.0	2021-01-06 18:50:33.0	closed	[]	0	1458	Update localized strings 2021-01-04	https://api.github.com/repos/microsoft/calculator/issues/1458	https://github.com/microsoft/calculator/pull/1458	Update strings from our internal localization system.	mcooley	null	null	null	null	null	null	
2021-01-07 05:32:12.0	2021-01-11 19:46:09.0	2021-01-11 19:46:10.0	closed	[]	0	1459	Handle Space and Enter KeyDown event for About button	https://api.github.com/repos/microsoft/calculator/issues/1459	https://github.com/microsoft/calculator/pull/1459	## Fixes #1461: ‘About’ menu item is not getting activated via keyboard using Enter or Space key      ### Description of the changes:  - Add `OnKeyDown` event handler to open about flyout when clicking Enter or Space with AboutButton selected    ### How changes were validated:  Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Manually tested    	xuhongxu96	null	null	null	null	null	null	
2021-01-07 05:55:23.0	null	2021-09-22 09:02:05.0	open	[Bug, triage approved, Area: User Experience, Pri: 2]	5	1460	When in "Keep on Top" mode, results are truncated from the left	https://api.github.com/repos/microsoft/calculator/issues/1460	https://github.com/microsoft/calculator/issues/1460	If calculator is set to "always on top", the results appear to be truncated from the left making them unreadable. For example entering 8 / 12 shows "66666666666" instead of "0.6666666666". Note: As soon as you click the '>' button, the '<' appears and you can scroll to the left to see the full value.    ![image](https://user-images.githubusercontent.com/1414423/103857159-c8c45e80-506a-11eb-824f-1c56937abc12.png)  	MicrosoftIssueBot	null	null	null	null	null	null	
2021-01-07 05:55:26.0	2021-01-11 19:46:09.0	2021-02-11 00:00:06.0	closed	[Bug, Area: Accessibility, triage approved, Pri: 1]	1	1461	‘About’ menu item is not getting activated via keyboard using Enter or Space key	https://api.github.com/repos/microsoft/calculator/issues/1461	https://github.com/microsoft/calculator/issues/1461	‘About’ menu item is not getting activated via keyboard using Enter or Space key    **Repro steps**  1. Launch 'Calculator'.  2. Home screen will be displayed.  3. Navigate to 'open Navigation' button and activate it.  4. Navigate to ‘About’ menu item and activate it.  5. Now verify that ‘About’ menu item is keyboard accessible or not    **Actual Result**  ‘About’ menu item is not getting activated via keyboard using Enter or Space key.    **Expected Result**  ‘About’ menu item in Navigation pane should be accessible via keyboard and get activated using 'Enter' key.	MicrosoftIssueBot	null	null	null	null	null	null	
2021-01-07 05:55:30.0	2021-08-04 02:01:40.0	2021-09-03 06:00:42.0	closed	[Bug, Area: Accessibility, fixed, Pri: 1]	1	1462	Narrator doesn't announce the accessible name of list items present below 'History' tab item	https://api.github.com/repos/microsoft/calculator/issues/1462	https://github.com/microsoft/calculator/issues/1462	Narrator doesn't announce the accessible name of list items present below 'History' tab item.    **Prerequisite**  1. Perform some calculation so that 'History' tab item should have list items.    **Repro steps**  1. Launch 'Calculator'.  2. Home screen will be displayed.  3. Open Narrator by pressing 'Window + Ctrl + Enter' key.  4. Navigate to 'History' tab item and activate it.  5. Navigate to list items present below it.  6. Now verify that Narrator pronounce the accessible name of list items or not.    **Actual Result**  Narrator doesn't announce the accessible name of list items present below 'History' tab item, Narrator only announces the position number of first list item like 1 of 3.    **Expected Result**  Narrator should announce the accessible name of list items present below 'History' tab item, For first list item like "2 x 3 = 6" Narrator should announce complete information as 2 multiply 3 equals to 6 1 of 3.	MicrosoftIssueBot	null	null	null	null	null	null	
2021-01-07 05:55:33.0	null	2021-05-27 00:32:08.0	open	[Bug, Area: Accessibility, Pri: 3, triage approved]	2	1463	Keyboard user have to press 'Enter/Space' key twice to activate the list items	https://api.github.com/repos/microsoft/calculator/issues/1463	https://github.com/microsoft/calculator/issues/1463	Keyboard user have to press 'Enter/Space' key twice to activate the list items.    **Repro steps**  1. Launch 'Calculator'.  2. Home screen will be displayed.  3. Navigate to 'open Navigation' button and activate it.  4. Navigate to 'Programmer' menu item.  5. Now verify that Keyboard user have to press 'Enter/Space' key twice to activate the 'Programmer' list items or not.    **Actual Result**  Keyboard user have to press 'Enter/Space' key twice to activate the list items present in Navigation pane, It is not accessible by pressing 'Enter/Space' key once.    **Expected Result**  All list items present in Navigation pane should be accessible by pressing 'Enter/Space' key once.	MicrosoftIssueBot	null	null	null	null	null	null	
2021-01-07 13:33:24.0	2021-01-08 01:07:03.0	2021-02-07 06:00:05.0	closed	[duplicate]	6	1464	The standart calculator don't use PEMDAS	https://api.github.com/repos/microsoft/calculator/issues/1464	https://github.com/microsoft/calculator/issues/1464	**Describe the bug**  The standard calculator don't use using standard order of operations. But the scientific one work fine.    **Steps To Reproduce**  Make simple calculi like 1+2*3      **Expected behavior**    Answer should be 7 instead of 9 and the calculator should be consistent    **Screenshots**  ![image](https://user-images.githubusercontent.com/13988751/103898138-cdcdf000-50f4-11eb-9a37-05a0645a3fe8.png)      **Device and Application Information**   - OS Build:1909   - Architecture:x64   - Application Version:10.2011.16.0   - Region:France   - Dev Version Installed:No        	softyoda	null	null	null	null	null	null	
2021-01-08 06:58:14.0	2021-01-11 21:48:28.0	2021-01-14 04:43:32.0	closed	[]	1	1465	fix bug: No confirmation is announced by the narrator after activating 'Remove equation' button #1386	https://api.github.com/repos/microsoft/calculator/issues/1465	https://github.com/microsoft/calculator/pull/1465	## Fixes #1386 .  Changing AutomationNotificationProcessing from `MostRecent` to `ImportantMostRecent` to prevent this confirmation messages being superseded by the incoming announcement requests.    Target issue: #1386    ### Description of the changes:  - Uses `ImportantMostRecent` instead of `MostRecent` for function removing announcement.    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  1. Launch Calculator app.  1. Turn on the narrator.  1. Navigate Open navigation button and activate it.  1. Navigate to graphing calculator list item and activate it.  1. Navigate to Enter a expression edit box.  1. Enter any expression say "7+8".  1. Now open context menu and activate "Remove equation" button.  1. Check that the confirmation - 'Function Removed' - is announced by Narrator.    	tian-lt	null	null	null	null	null	null	
2021-01-11 22:43:40.0	2021-01-11 23:37:38.0	2021-08-17 21:05:16.0	closed	[]	0	1466	Update graph internal engine version	https://api.github.com/repos/microsoft/calculator/issues/1466	https://github.com/microsoft/calculator/pull/1466	## Fixes #.      ### Description of the changes:  Updating graph internal engine version    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->    	quentin987	null	null	null	null	null	null	
2021-01-12 18:32:19.0	2021-05-10 17:18:40.0	2021-05-10 19:24:58.0	closed	[]	11	1467	Clang-format sources	https://api.github.com/repos/microsoft/calculator/issues/1467	https://github.com/microsoft/calculator/pull/1467	formats all the sources in the repository.    It's been a while (over a year) since I tried. It seems there are far less changes now.	janisozaur	null	null	null	null	null	null	
2021-01-12 19:59:53.0	2021-02-01 16:40:51.0	2021-02-01 16:40:51.0	closed	[]	4	1468	Add headers missing for compilation with GCC	https://api.github.com/repos/microsoft/calculator/issues/1468	https://github.com/microsoft/calculator/pull/1468	Things that required such update included:  * `wstringstream`  * `setprecision`  * `SCODE_CODE`, `E_BOUNDS`  * Various SAL macros	janisozaur	null	null	null	null	null	null	
2021-01-14 04:38:19.0	2021-01-22 00:27:19.0	2021-02-01 06:25:41.0	closed	[]	1	1469	Adds unit-test cases for NarratorAnnouncement after fixing issue #1386	https://api.github.com/repos/microsoft/calculator/issues/1469	https://github.com/microsoft/calculator/pull/1469	## Fixes #.  Adds unit test cases for NarratorAnnouncement  PR #1465 which fixed issue #1386 has changed a part of NarratorAnnouncement's behaviors. To strengthen the quality of the code, add unit test cases for NarratorAnnouncement.    ### Description of the changes:  - add Test-Class NarratorAnnouncementUnitTests with 18 test methods.    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Run CalculatorUnitTests project  - All newly added test methods succeed.    	tian-lt	null	null	null	null	null	null	
2021-01-19 18:14:19.0	2021-01-20 01:19:25.0	2021-01-20 01:19:25.0	closed	[]	0	1470	Turn off DFS in internal build system	https://api.github.com/repos/microsoft/calculator/issues/1470	https://github.com/microsoft/calculator/pull/1470	Configure the internal build system to avoid doing unnecessary work during the Calculator release pipeline.	mcooley	null	null	null	null	null	null	
2021-01-20 23:16:19.0	2021-02-02 16:31:45.0	2021-02-02 16:31:45.0	closed	[]	0	1471	Fixed a graphing calculator "permissions" bug caused by PR #1426	https://api.github.com/repos/microsoft/calculator/issues/1471	https://github.com/microsoft/calculator/pull/1471	## Fixes a bug caused by https://github.com/microsoft/calculator/pull/1426#.      ### Description of the changes:  - The PR #1426 can cause a crash when no users are returned via `User::FindAllAsync(UserType::LocalUser)` when subsequently trying to access the first user. The existing code also does not guarantee that the returned user is the currently active user.  - This fix retrieves the user that opened the app and passes this user into a function to check if this user has the proper permissions to access the graphing mode. This makes sense since the active user is indistinguishable (at least from the app's perspective) to the user who opened the app. This user's permissions are then propagated downwards to properly set up the navigation menu of the app.  - Implementation detail worth pointing out: `s_categoryManifest` is what is used to populate the navigation menu of the app, but this variable is static by design, so a separate function was written to override the appropriate `isEnabled` value in `s_categoryManifest`. This function is called by `onLaunched`.    ### How changes were validated:  - Manual testing    	greedyAI	null	null	null	null	null	null	
2021-01-21 09:21:22.0	null	2021-05-26 10:08:16.0	open	[Bug, Pri: 3, Area: User Experience, investigate]	1	1472	Result texts of programmer tools are clipped (high DPI & minimum window size)	https://api.github.com/repos/microsoft/calculator/issues/1472	https://github.com/microsoft/calculator/issues/1472	**Describe the bug**  Result texts of programmer tools are clipped:  * high DPI  * minimum window size  ![image](https://user-images.githubusercontent.com/57629614/105330133-e8cc5400-5c0c-11eb-89fc-15781fb5a22e.png)    **Screenshots**  minimum window size  ![image](https://user-images.githubusercontent.com/57629614/105329244-e61d2f00-5c0b-11eb-9a64-f843b726d3de.png)    **Expected behavior**  if I adjust the window size larger, there is no problem  ![image](https://user-images.githubusercontent.com/57629614/105329786-81160900-5c0c-11eb-8d47-41eef2887817.png)    **Device and Application Information**   - OS Build: 10.0.19042.0   - Architecture: X64   - Application Version: 10.2011.16.0   - Region: zh-CN   - Dev Version Installed: False    **Requested Assignment**  I'm just reporting this problem.  I don't known how to fix it.  	Demonese	null	null	null	null	null	null	
2021-01-21 19:58:44.0	null	2021-10-19 05:02:33.0	open	[Enhancement, Pri: 2, needs pitch review]	2	1473	Remember Keep on top mode for the next launch	https://api.github.com/repos/microsoft/calculator/issues/1473	https://github.com/microsoft/calculator/issues/1473	**Problem Statement**  I alwayse use the calculator in Keep on top mode. Unfortunately the mode is reset after every relaunch of the app.    **Proposal**  Remember Keep on top mode.    **Goals**  I would like to be able to start using the calculator more quickly without the need to switch to Keep on top mode every time.    **Requested Assignment**  I'm just suggesting this idea.  I don't want to implement it.  	michalhudecek	null	null	null	null	null	null	
2021-01-22 13:05:36.0	2021-01-22 13:19:12.0	2021-02-21 18:00:05.0	closed	[]	2	1474	Order of operations is wrong in Standard and Programmer mode	https://api.github.com/repos/microsoft/calculator/issues/1474	https://github.com/microsoft/calculator/issues/1474	**Describe the bug**  Order of operations is wrong in Standard and Programmer mode.    **Steps To Reproduce**    Order of operations in Standard mode:  1. Open Standard mode  2. Enter `1-60/100`  3. Result is `-0.59` (wrong)  4. Enter `1-2*4`  5. Result is `-4` (wrong)    Order of operations in Programmer mode:  1. Open Programmer mode  2. Select DEC  3. Enter `1-60/100`  4. Result is `1` (wrong)  5. Enter `1-2*4`  6. Result is `-7` (correct)      **Expected behavior**  `1-60/100=0.4`  `1-2*4=-7`      **Screenshots**  ![image](https://user-images.githubusercontent.com/5302085/105493129-428a5800-5cb9-11eb-8624-0d9a4382ea4e.png)  ![image](https://user-images.githubusercontent.com/5302085/105493597-e411a980-5cb9-11eb-8e3a-36121fc56b48.png)  ![image](https://user-images.githubusercontent.com/5302085/105493245-6baae880-5cb9-11eb-8fc6-e025853a7e2c.png)        **Device and Application Information**   - OS Build: 19042.746   - Architecture: 64bit   - Application Version: Calculator 10.2011.16.0   - Region: en-CH   - Dev Version Installed: -    <!--  Run the following commands in Powershell and copy/paste the output.  " - OS Build: $([Environment]::OSVersion.Version)"  " - Architecture: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Architecture)"  " - Application Version: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Version)"  " - Region: $((Get-Culture).Name)"  " - Dev Version Installed: $($null -ne (Get-AppxPackage -Name Microsoft.WindowsCalculator.Dev))"  -->    **Additional context**  In Scientific mode the behavior is correct.    **Requested Assignment**  <!--  Some people just want to report a bug and let someone else fix it.  Other people want to not only submit the bug report, but fix it as well.  Both scenarios are completely ok. We just want to know which one it is.  Please indicate which bucket you fall into by keeping one and removing the other.  -->  I'm just reporting this problem.  I don't want to fix it.  	eddex	null	null	null	null	null	null	
2021-01-27 15:52:32.0	2021-02-18 09:05:29.0	2021-03-20 12:00:08.0	closed	[Bug, Area: World-Readiness, external]	2	1475	[Localization] Incorrect zh-CN translations in "Rotate Circular Shift" and "Rotate Through Carry Circular Shift" related strings	https://api.github.com/repos/microsoft/calculator/issues/1475	https://github.com/microsoft/calculator/issues/1475	<!--  PLEASE NOTE:   We cannot _merge_ any suggested localization changes to our localized resources files. These files are automatically generated from an internal localization process.  Any suggestion submitted this way will be duplicated into our internal localization system, and then closed here.    Alternatively, you can launch feedback-hub://, click on the "Language Community" tab on the left-side of the app, and follow the steps to submit a localization suggestion that way.  (The "Language Community" tab currently will only be visible if your system is running a non-English language).    Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.  -->    **Describe the bug**  <!-- A clear and concise description of what the bug is. -->  I have spotted incorrect translations in several strings related to Rotate Circular Shift (ROL/ROR) and Rotate Through Carry Circular Shift (RCL/RCR) in zh-CN resource file.    https://github.com/microsoft/calculator/blob/9d8e2ad18c472fb9a511d67cb9430e8a7732552a/src/Calculator/Resources/zh-CN/Resources.resw#L3218-L3221    The value above should be "带进位旋转循环移位".    https://github.com/microsoft/calculator/blob/9d8e2ad18c472fb9a511d67cb9430e8a7732552a/src/Calculator/Resources/zh-CN/Resources.resw#L4125-L4128    The value above should be "已选择旋转循环移位".    https://github.com/microsoft/calculator/blob/9d8e2ad18c472fb9a511d67cb9430e8a7732552a/src/Calculator/Resources/zh-CN/Resources.resw#L4129-L4132    The value above should be "已选择带进位旋转循环移位".    **Steps To Reproduce**  <!--  Steps to reproduce the behavior:  1. Go to '...'  2. Click on '....'  3. Scroll down to '....'  4. See error  -->  None    **Expected behavior**  <!-- A clear and concise description of what you expected to happen. -->  As described above.    **Screenshots**  <!-- If applicable, add screenshots to help explain your problem. -->  ![Rotate Through Carry Circular Shift](https://user-images.githubusercontent.com/7923857/106016071-0e1ffd00-60fa-11eb-9db6-56061260f596.png)    **Device and Application Information**   - OS Build: 10.0.19042.0   - Architecture: X64   - Application Version: 10.2011.16.0   - Region: zh-CN   - Dev Version Installed: False     <!--  Run the following commands in Powershell and copy/paste the output.  " - OS Build: $([Environment]::OSVersion.Version)"  " - Architecture: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Architecture)"  " - Application Version: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Version)"  " - Region: $((Get-Culture).Name)"  " - Dev Version Installed: $($null -ne (Get-AppxPackage -Name Microsoft.WindowsCalculator.Dev))"  -->    **Additional context**  <!-- Add any other context about the problem here. -->  None  	Prcuvu	null	null	null	null	null	null	
2021-01-27 19:03:06.0	null	2021-05-26 10:08:19.0	open	[Bug, Area: User Experience, investigate, Pri: 2]	2	1476	App resets after minimizing	https://api.github.com/repos/microsoft/calculator/issues/1476	https://github.com/microsoft/calculator/issues/1476	**Describe the bug**  After last update to 19042 calculator app resets after window minimization. I tried resetting app and reinstalling from Store, it didn't help.   One possibility is: Windows suspending calculator process in background for some reason.     **Steps To Reproduce**  1. Open app  2. click 2+2  3. number 4 appears in result  4. minimize window  5. unminimize window  6. number 0 appears in result and history is empty    **Expected behavior**  App shouldn't reset after minimization    **Device and Application Information**   - OS Build: 19042   - Architecture: X64   - Application Version: 10.2012.21.0   - Region: en-US   - Dev Version Installed: False  	alxwndr	null	null	null	null	null	null	
2021-01-28 13:37:36.0	null	2021-10-19 05:02:35.0	open	[Enhancement, Pri: 2, needs more info]	1	1477	Add share button in context menu to share result as text to other apps directly	https://api.github.com/repos/microsoft/calculator/issues/1477	https://github.com/microsoft/calculator/issues/1477	![திரைப்பிடிப்பு (229)](https://user-images.githubusercontent.com/45227503/106145861-0749c680-619c-11eb-9d51-e8fdffe72329.png)  This menu could have a share option to send the result directly to other apps participating in the share contract	Jaiganeshkumaran	null	null	null	null	null	null	
2021-01-28 16:22:18.0	2021-01-28 18:46:38.0	2021-01-28 18:46:38.0	closed	[]	0	1478	Move localization pipeline sync schedule to the YAML file	https://api.github.com/repos/microsoft/calculator/issues/1478	https://github.com/microsoft/calculator/pull/1478	Move the daily schedule for the localization sync to the YAML file.	mcooley	null	null	null	null	null	null	
2021-01-28 20:01:00.0	2021-02-18 08:56:51.0	2021-03-20 12:00:07.0	closed	[duplicate, Enhancement, Pri: 2]	2	1479	Add unix timestamp conversion from/to date & time	https://api.github.com/repos/microsoft/calculator/issues/1479	https://github.com/microsoft/calculator/issues/1479	<!--  See https://github.com/Microsoft/calculator/blob/master/docs/NewFeatureProcess.md for suggestions on how to write a good feature pitch. Just want to submit an idea quickly? Try Feedback Hub instead: https://insider.windows.com/en-us/fb/?contextid=130  -->    **Problem Statement**  I am programmer & electronic engineer , I very use often calculator (I have on my desk advanced math calc, but since I started using win10 and it's calc , my math calc started to collect dust 😅 ). Often I happens to need to manually insert/change some data in sql databases (or in others places too), and when I use unix timestamps in them, I have to convert datetime to unix - for this I use usually online tools , but it's a bit annoying to open web page (or switch tab in web browser) to do it.  I believe this would be useful for many programmers 😄       **Evidence or User Insights**  Because there is no such tool all-in-one.    **Proposal**  Add conversion date & time from/to unix timestamp.    **Goals**  *(do I have to write this - it's obvious 😅 )*      **Low-Fidelity Concept**    - I guess, it need to convert date & time to (from) ```int32```, ```uint32```, ```int64```, ```uint64``` .  - Would be nice to be able to set "offset time" (or epoch time) for timestamp.  e.g. I set **epoch** to ```2020-01-01 00:00:00``` ( ```unix=1577836800``` ), and I want to know the elapsed seconds since it for the time ```2021-01-28 19:31:52``` (```unix=1611862312```), the result is ```34025512``` (secs: 1y 01m 29d 19:31:52). So basically I want to move in calculation **epoch time** from 1970 to midnight 1st Jan 2020 and get elapsed seconds since it.  - If it could handle e.g. Clarion format would be nice too (I have contact with it in ERP database - sometimes I need to extract some data from it and they use clarion 😑 )    **Requested Assignment**  I'm just suggesting this idea.      *Ps. Sorry if my English is bad 😄*  	saper-2	null	null	null	null	null	null	
2021-01-29 09:40:22.0	null	2021-10-19 05:02:38.0	open	[Enhancement, Pri: 2, needs pitch review]	2	1480	Weeks in date calculation	https://api.github.com/repos/microsoft/calculator/issues/1480	https://github.com/microsoft/calculator/issues/1480	<!--  See https://github.com/Microsoft/calculator/blob/master/docs/NewFeatureProcess.md for suggestions on how to write a good feature pitch. Just want to submit an idea quickly? Try Feedback Hub instead: https://insider.windows.com/en-us/fb/?contextid=130  -->    **Problem Statement**  The Date calculation is a nice thing, but it clearly lacks the possibility to offset by weeks.  ![grafik](https://user-images.githubusercontent.com/2277182/106250691-49aeea00-6214-11eb-9a93-d36ae14e6273.png)      **Evidence or User Insights**  I don't know for other countries, but in the DACH (Germany/Austria/Switzerland) space in business context _everybody_ only uses weeks.    **Proposal**  The thing should be an easy fix:  Just add an input for weeks and treat it like 7 days.    **Requested Assignment**  I'm just suggesting this idea.  I don't want to implement it.  	runxel	null	null	null	null	null	null	
2021-02-01 05:40:42.0	null	2021-05-26 10:08:25.0	open	[Bug, Area: User Experience, investigate, Pri: 2]	10	1481	Copy/pasting a long formula in chunks, and in whole, give different results	https://api.github.com/repos/microsoft/calculator/issues/1481	https://github.com/microsoft/calculator/issues/1481	Consider the following multiline sum in a document, simplified for purposes of easy to repro. (The real numbers were longer.)    ```  1 +2 -3   +4 +5 +6  ```    and the same sum but written on a single line  ```  1 +2 -3 +4 +5 +6  ```    **Describe the bug**    I was very surprised to realize the results of copy-pasting the first formula, **one line-at-a-time**, and then hitting `=` is different from the result of copy-pasting it both-lines-together, or copy-pasting the single-line version all in one shot.      **Steps To Reproduce**  1. Standard mode [Edit: also the same issue reproduces for me in scientific mode which it is the other main mode I find useful]  2. Copy text `1 +2 -3` onto your clipboard from another app  3. Paste into calculator with Ctrl+V  3. Copy text `+4 +5 +6` onto your clipboard from another app  4. Paste into calculator with Ctrl+V    Observed result:    Calculator shows the sum it has computed to be 1 + 2 - 4 + 5 + 6, resulting in 10 (the 'wrong' answer)    Expected result:    Calculator should have shown the sum it has computed to be 1 + 2 - 3 + 4 + 5 + 6, resulting in 15!    Impact:    Took quite a while to figure out why calculator kept giving me the wrong answer! I'm lucky that for me it was obviously wrong. If it wasn't obvious I might not have even realized and just believed the wrong number.    **Screenshots**  <!-- If applicable, add screenshots to help explain your problem. -->    **Device and Application Information**   - OS Build: 10.0.19042.0   - Architecture: X64   - Application Version: 10.2005.23.0 also repros in 10.2012.21.0   - Region: en-US   - Dev Version Installed: False    I'm just reporting this problem.  I don't want to fix it.	TimLovellSmith	null	null	null	null	null	null	
2021-02-01 10:41:58.0	2021-03-03 05:46:37.0	2021-05-28 08:45:22.0	closed	[]	4	1482	fixes up bug: Narrator is not reading the already entered equation when focus lands on Enter an equation edit box.	https://api.github.com/repos/microsoft/calculator/issues/1482	https://github.com/microsoft/calculator/pull/1482	Target Issue: #1380 Narrator is not reading the already entered equation when focus lands on Enter a equation edit box.    ## Fixes #  Once there's focus landed on equation text box, engage Narrator to announce the equation by jumping the insertion position back and forth ending with a left arrow key action.      ### Description of the changes:  - Added an event handler listening to [GotFocus event](https://docs.microsoft.com/en-us/uwp/api/windows.ui.xaml.uielement.gotfocus?view=winrt-19041)  - When equation edit box got focus:    1. Set insertion position to the end of line.    2. Set insertion position to the start of line.    3. execute a left-arrow command.      ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  1. Launched 'Calculator' and turn on narrator.  1. Home screen displayed.​  1. Navigated Open navigation button and activate it.  1. Navigated to graphing calculator list item and activate it.  1. Navigated to Enter a equation edit box.  1. Checked that the equation content has been announced.    	tian-lt	null	null	null	null	null	null	
2021-02-01 19:29:35.0	2021-02-01 19:30:23.0	2021-02-01 19:30:23.0	closed	[]	0	1483	Update2102release	https://api.github.com/repos/microsoft/calculator/issues/1483	https://github.com/microsoft/calculator/pull/1483	## Fixes #.      ### Description of the changes:  -  -  -    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  -  -  -    	volkcor	null	null	null	null	null	null	
2021-02-01 19:38:36.0	2021-02-02 19:40:58.0	2021-02-02 19:40:58.0	closed	[]	0	1484	Update2102release	https://api.github.com/repos/microsoft/calculator/issues/1484	https://github.com/microsoft/calculator/pull/1484	Update release builds to 2102	volkcor	null	null	null	null	null	null	
2021-02-02 10:18:32.0	2021-02-02 19:42:45.0	2021-02-17 04:27:45.0	closed	[]	0	1485	Update ManualTests.md	https://api.github.com/repos/microsoft/calculator/issues/1485	https://github.com/microsoft/calculator/pull/1485	The style of it is not right      	KermanX	null	null	null	null	null	null	
2021-02-02 18:17:31.0	2021-02-02 19:05:27.0	2021-02-02 19:05:27.0	closed	[]	0	1486	Update nuget.config file	https://api.github.com/repos/microsoft/calculator/issues/1486	https://github.com/microsoft/calculator/pull/1486	Update the nuget.config file to add a `<clear />` directive to unblock some internal build pipelines work.	mcooley	null	null	null	null	null	null	
2021-02-02 19:41:47.0	2021-02-03 15:32:39.0	2021-02-03 15:32:39.0	closed	[]	0	1487	Update build year to 2021	https://api.github.com/repos/microsoft/calculator/issues/1487	https://github.com/microsoft/calculator/pull/1487	Update build year to 2021	mcooley	null	null	null	null	null	null	
2021-02-05 17:51:56.0	2021-02-05 19:40:28.0	2021-02-05 19:40:28.0	closed	[]	0	1488	Update internal loc pipeline account	https://api.github.com/repos/microsoft/calculator/issues/1488	https://github.com/microsoft/calculator/pull/1488		mcooley	null	null	null	null	null	null	
2021-02-07 12:34:38.0	2021-02-17 16:48:59.0	2021-03-19 18:00:06.0	closed	[duplicate, Enhancement, Pri: 2]	3	1489	Distinguish "calculate immediately" and "calculate after pressing ENTER"	https://api.github.com/repos/microsoft/calculator/issues/1489	https://github.com/microsoft/calculator/issues/1489	<!--  See https://github.com/Microsoft/calculator/blob/master/docs/NewFeatureProcess.md for suggestions on how to write a good feature pitch. Just want to submit an idea quickly? Try Feedback Hub instead: https://insider.windows.com/en-us/fb/?contextid=130  -->    **Distinguish "calculate immediately" and "calculate after pressing ENTER"**  <!--  What problem are we trying to solve? Who’s the target audience? Is there a customer need or pain point we need to remedy? Is there a business goal or metric we are trying to improve? Do we have a hypothesis we want to prove or disprove?  -->    **Evidence or User Insights**  After making this improvement, meaningless issues will be reduced (for example issue#1349 (has been closed))  This suggestion is to avoid the problems like [issue#1349](https://github.com/microsoft/calculator/issues/1349)  <!--  Why should we do this? Potential sources of data: Feedback Hub, other GitHub issues, other anecdotes from listening to customers in person or online, request from another team, telemetry data, user research, market or competitive research  -->    **Proposal**  I saw some users complaining about the calculation logic. The calculator should provide an option to distinguish between the two calculation orders-one is to calculate the result to support the next calculation request immediately after entering each calculation symbol, and the other is to allow the user to enter the calculation before performing the calculation .  <!--  How will the solution/feature help us solve the problem? How will it meet the target audience’s needs? If there are business goals or metrics, how does this improve them?  -->    **Goals**  <!--  What you want to accomplish with this feature. Typical examples include  "User Can *perform some task*"  -->    **Non-Goals**  <!--  Things we are explicitly not doing or supporting or that are out of scope, including reasons why.  -->    **Low-Fidelity Concept**  <!--  Show as much of the experience as needed to explain the idea. This can be as simple as a napkin drawing but can also be a code prototype, or a design comp. Keep it simple at this stage, as it can be refined later during the pre-production stage.  -->    **Requested Assignment**  Sorry, I cannot realize it. But I really want  <!--  Some people just want to suggest a feature and let someone else implement it.  Other people want to not only suggest a feature, but implement it as well.  Both scenarios are completely ok. We just want to know which one it is.  We are likely to prioritize the review of feature requests if they already have someone who can implement them.  Please indicate which bucket you fall into by keeping one and removing the other.  -->  I'm just suggesting this idea.  I don't want to implement it.  PS. Translated by Google Translate, the text may not be so clear. But it is okay if you can understand what I mean.  	lsht-cn	null	null	null	null	null	null	
2021-02-08 15:04:14.0	null	2021-07-22 07:59:05.0	open	[Bug, Pri: 3, Area: User Experience, investigate]	1	1490	No online help	https://api.github.com/repos/microsoft/calculator/issues/1490	https://github.com/microsoft/calculator/issues/1490	  **Describe the bug**  All versions of Windows Calculator (since 16-bit Windows 2.0) have had online help accessible with the F1 key.    **Steps To Reproduce**    1) Start Windows 10 Calculator  2) Press F1.    BUG#1) Nothing happens ... at all.    **Expected behavior**    I'd expect to see some online help. Calculator is simple, sure, but the online help can be simple, too. Plus, there are numerous shortcut keys to change modes, settings, and use different functions. They're not particularly discoverable (outside of destructive trial-and-error) and could be documented.    **Device and Application Information**   - OS Build: 19042.746   - Architecture: x86   - Application Version: 10.2012.21.0   - Region: en-US   - Dev Version Installed: none      **Additional context**  None.  	mikeblas	null	null	null	null	null	null	
2021-02-08 15:11:02.0	2021-02-18 08:38:36.0	2021-03-21 06:00:24.0	closed	[by design, Bug]	3	1491	Calculator appears to be completely undocumented	https://api.github.com/repos/microsoft/calculator/issues/1491	https://github.com/microsoft/calculator/issues/1491	  **Describe the bug**  Calculator is, as far as I can tell, undocumented.    Note that this is a different issue than no online help (see #1490).  That's about online help; this is about no documentation at all, offline or online.    **Steps To Reproduce**  1. Go to docs.microsoft.com  2. Search for "windows calculator"  BUG#1) Nothing.  3. Keep digging.  "Calculator programmer mode" or "calculator hot keys" or ...  BUG#2) Still nothing.    **Expected behavior**  Good software is documented. There are lots of keyboard shortcuts, modes, whole features that users never discover because they're not documented.    **Screenshots**  ![image](https://user-images.githubusercontent.com/6632219/107238349-98ab0b00-69dc-11eb-8a9a-f663b01216e0.png)    **Device and Application Information**   - OS Build: 19042.746   - Architecture: x64   - Application Version:  10.2012.21.0   - Region: en-US   - Dev Version Installed: none      **Additional context**  None    	mikeblas	null	null	null	null	null	null	
2021-02-08 15:18:32.0	null	2021-09-22 06:02:06.0	open	[Bug, Area: User Experience, investigate, Pri: 2]	2	1492	F7 shortcut for octal mode (in Programmer mode) prompts about "caret browsing"	https://api.github.com/repos/microsoft/calculator/issues/1492	https://github.com/microsoft/calculator/issues/1492	**Describe the bug**  An anachronistic prompt about "caret browsing" is given when trying to use a shortcut key to change the numeric base in programmer mode.    **Steps To Reproduce**  1. Fire up Calculator  2. Enter "Programmer mode" with ALT+F4, or by using the "Programmer" command in the hamburger menu  3. Press F5 to switch to hex mode. Sweet!  4. Press F6 to switch to switch back to decimal. Nice.  5. Press F7 to switch to octal mode.  BUG#1) It works and Calculator switches to octal mode. But it also prompts about "Turn on Caret Browsing?"  I don't know what caret browsing is, and can't figure out how it might apply to Calculator. Maybe it has something to do with web browsing -- but I can't find any web-integration features in Calculator.    **Expected behavior**  In this context, F7 should switch to Octal mode without prompting about something unexpected and unrelated to this application.    **Screenshots**  ![image](https://user-images.githubusercontent.com/6632219/107239436-b5940e00-69dd-11eb-96eb-35929366b6c2.png)    **Device and Application Information**   - OS Build: 19042.746   - Architecture: x64   - Application Version: 10.2012.21.0   - Region: en-US   - Dev Version Installed: None      **Additional context**  None.    	mikeblas	null	null	null	null	null	null	
2021-02-11 17:40:46.0	null	2021-05-26 10:08:31.0	open	[Bug, triage approved, Area: User Experience, Pri: 2]	1	1493	error in plotting ((−𝑒)^((−𝑒)^𝑥 )+0,5) 	https://api.github.com/repos/microsoft/calculator/issues/1493	https://github.com/microsoft/calculator/issues/1493	<!--  Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.  -->    **Describe the bug**  <!-- A clear and concise description of what the bug is. -->  calculator plots the wrong graph  **Steps To Reproduce**  <!--  Steps to reproduce the behavior:  1. Go to '...'  2. Click on '....'  3. Scroll down to '....'  4. See error  -->  enter ((−𝑒)^((−𝑒)^𝑥 )+0,5) in diagram mode    **Expected behavior**  <!-- A clear and concise description of what you expected to happen. -->  correct plotting of the function 👍       **Screenshots**      ![winrechner](https://user-images.githubusercontent.com/78924727/107673929-b7d4c180-6c96-11eb-849b-ae5515b11c1b.png)    **Device and Application Information**   - OS Build: 19041   - Architecture:X64   - Application Version:10.2012.21.0   - Region:de-DE   - Dev Version Installed:False    <!--  Run the following commands in Powershell and copy/paste the output.  " - OS Build: $([Environment]::OSVersion.Version)"  " - Architecture: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Architecture)"  " - Application Version: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Version)"  " - Region: $((Get-Culture).Name)"  " - Dev Version Installed: $($null -ne (Get-AppxPackage -Name Microsoft.WindowsCalculator.Dev))"  -->    **Additional context**  <!-- Add any other context about the problem here. -->  also works with ((−𝑒)^((−𝑒)^𝑥 )  **Requested Assignment**  <!--  Some people just want to report a bug and let someone else fix it.  Other people want to not only submit the bug report, but fix it as well.  Both scenarios are completely ok. We just want to know which one it is.  Please indicate which bucket you fall into by keeping one and removing the other.  -->  I don't want to fix it. :)  	plsdontfix	null	null	null	null	null	null	
2021-02-15 13:08:57.0	2021-02-18 08:24:48.0	2021-03-20 12:00:06.0	closed	[Bug, Area: World-Readiness, external]	1	1494	[Localization] Incorrect Korean translations in "Light Theme" related strings	https://api.github.com/repos/microsoft/calculator/issues/1494	https://github.com/microsoft/calculator/issues/1494	<!--  PLEASE NOTE:   We cannot _merge_ any suggested localization changes to our localized resources files. These files are automatically generated from an internal localization process.  Any suggestion submitted this way will be duplicated into our internal localization system, and then closed here.    Alternatively, you can launch feedback-hub://, click on the "Language Community" tab on the left-side of the app, and follow the steps to submit a localization suggestion that way.  (The "Language Community" tab currently will only be visible if your system is running a non-English language).    Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.  -->    **Describe the bug**  <!-- A clear and concise description of what the bug is. -->  There're wrong translations in ko-KR resource file.    https://github.com/microsoft/calculator/blob/6a34a31ec6c072fb593c877ae81a070739f44a2f/src/Calculator/Resources/ko-KR/Resources.resw#L4025-L4028    https://github.com/microsoft/calculator/blob/6a34a31ec6c072fb593c877ae81a070739f44a2f/src/Calculator/Resources/ko-KR/Resources.resw#L4037-L4040    The values above should be "항상 밝게".        **Steps To Reproduce**  <!--  Steps to reproduce the behavior:  1. Go to '...'  2. Click on '....'  3. Scroll down to '....'  4. See error  -->  None    **Expected behavior**  <!-- A clear and concise description of what you expected to happen. -->    As described above.    **Screenshots**  <!-- If applicable, add screenshots to help explain your problem. -->  ![image](https://user-images.githubusercontent.com/73321845/107950154-b0385400-6fd9-11eb-9904-71e0b558fe0a.png)      **Device and Application Information**     <!--  Run the following commands in Powershell and copy/paste the output.  " - OS Build: $([Environment]::OSVersion.Version)"  " - Architecture: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Architecture)"  " - Application Version: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Version)"  " - Region: $((Get-Culture).Name)"  " - Dev Version Installed: $($null -ne (Get-AppxPackage -Name Microsoft.WindowsCalculator.Dev))"  -->     - OS Build: 10.0.19042.0   - Architecture: X64   - Application Version: 10.2012.21.0   - Region: ko-KR   - Dev Version Installed: False    **Additional context**  <!-- Add any other context about the problem here. -->  None	Coding-Young	null	null	null	null	null	null	
2021-02-16 01:11:02.0	2021-02-16 02:30:07.0	2021-03-18 06:00:06.0	closed	[Enhancement]	0	1495	[Deleted]	https://api.github.com/repos/microsoft/calculator/issues/1495	https://github.com/microsoft/calculator/issues/1495	[Deleted]	IShantWobble	null	null	null	null	null	null	
2021-02-18 15:56:51.0	null	2021-03-31 06:42:06.0	open	[triage needed, question]	2	1496	A problem	https://api.github.com/repos/microsoft/calculator/issues/1496	https://github.com/microsoft/calculator/issues/1496	I'm new in project.I have read the README and installed WinAppDriver as the README said.However,I cannot find any calculator.exe after I pressed  "StartWithoutDebugging" in the Debug menu in visual studio,I have searched a lot but haven't solved the problem.	S-N-O-R-L-A-X	null	null	null	null	null	null	
2021-02-20 11:35:09.0	2021-03-04 21:20:41.0	2021-04-04 00:00:09.0	closed	[Bug, duplicate]	5	1497	Error in calculations: 2x2+2x2 should be 8!!!	https://api.github.com/repos/microsoft/calculator/issues/1497	https://github.com/microsoft/calculator/issues/1497	<!--  Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.  -->    **Describe the bug**  <!-- A clear and concise description of what the bug is. -->  The program performs incorrect calculations.  I supposed <b>2x2+2x2 will be 8</b>.  But the programm thinks different.  It calculates <b>12</b> as a result.      **Steps To Reproduce**  <!--  Steps to reproduce the behavior:  1. Go to '...'  2. Click on '....'  3. Scroll down to '....'  4. See error  -->  Just type 2x2+2x2 in one line and press ENTER.    **Expected behavior**  <!-- A clear and concise description of what you expected to happen. -->  I hoped it can calculate like a programm, but it works worth than oldschool casio calculator.    **Screenshots**  <!-- If applicable, add screenshots to help explain your problem. -->  ![casio](https://user-images.githubusercontent.com/70862477/108593579-95713100-7385-11eb-9bf6-3148bcc72585.jpg)    I had to use my old  reliable friend. It  never let me down, I can really rely on it/    ![casio-the-best](https://user-images.githubusercontent.com/70862477/108593637-eb45d900-7385-11eb-8f4a-fc84fdce7252.jpg)      **Device and Application Information**    Win 10 x64    **Requested Assignment**    If you can't fix it, just delete win calc from the system.  Or make a disclamer that you must teach a lot to use it in a wright way.  I don't want to fix it. I was very disappoined witn that fck bug.  	MikeSheff	null	null	null	null	null	null	
2021-02-20 14:18:22.0	2021-08-26 03:01:29.0	2021-09-25 06:00:40.0	closed	[Bug, Area: User Experience, fixed, Pri: 1]	5	1498	Error when input 48÷2(9+3) in scientific mode	https://api.github.com/repos/microsoft/calculator/issues/1498	https://github.com/microsoft/calculator/issues/1498	<!--  Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.  -->    **Describe the bug**  problem when input " **48÷2(9+3)** " , the digit before the brackets (i.e the 2) was not being registered/recorded and the equation is instead evaluated as " 48÷(9+3) " even when the 2 is typed after the closing brackets....      **Steps To Reproduce**  Just type **48÷2(9+3)** in scientific mode  _Notice that the digit before brackets is not recorded!!_    **Expected behavior**  <!-- A clear and concise description of what you expected to happen. -->  the digit before the brackets should be recorded **and not skipped** before evaluation    **Screenshots**  <!-- If applicable, add screenshots to help explain your problem. -->  ![calc bug](https://user-images.githubusercontent.com/56014359/108598223-77172f80-739d-11eb-808e-7519d8ff73ae.jpg)    https://user-images.githubusercontent.com/56014359/108598549-433d0980-739f-11eb-8f69-ffcaba598eec.mp4    **Device and Application Information**   - OS Build: 19042   - Architecture: x64   - Application Version: 10.2012.21.0   - Region: en-US   - Dev Version Installed: False    <!--  Run the following commands in Powershell and copy/paste the output.  " - OS Build: $([Environment]::OSVersion.Version)"  " - Architecture: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Architecture)"  " - Application Version: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Version)"  " - Region: $((Get-Culture).Name)"  " - Dev Version Installed: $($null -ne (Get-AppxPackage -Name Microsoft.WindowsCalculator.Dev))"  -->    **Requested Assignment**  <!--  Some people just want to report a bug and let someone else fix it.  Other people want to not only submit the bug report, but fix it as well.  Both scenarios are completely ok. We just want to know which one it is.  Please indicate which bucket you fall into by keeping one and removing the other.  -->  I'm just reporting this problem.  I don't want to fix it.  	afrostig	null	null	null	null	null	null	
2021-02-20 21:30:02.0	2021-03-04 21:45:55.0	2021-04-04 00:00:08.0	closed	[duplicate]	3	1499	Incorrect handling of sqrt(-1)	https://api.github.com/repos/microsoft/calculator/issues/1499	https://github.com/microsoft/calculator/issues/1499	<!--  Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.  -->    **Describe the bug**  <!-- A clear and concise description of what the bug is. -->  The square root of 1 is invalid.    **Steps To Reproduce**  <!--  Steps to reproduce the behavior:  1. Go to '...'  2. Click on '....'  3. Scroll down to '....'  4. See error  -->  1: Open Calculator. (mode doesn't matter)  2: Type -1 (press 1, and press the +/- button)  3: Press the square root button  4: You should see "invalid input"    **Expected behavior**  <!-- A clear and concise description of what you expected to happen. -->  The expected result is i, the "unit" Imaginary Number.    **Device and Application Information**   - OS Build: 10.0.19042.0   - Architecture: X64   - Application Version: 10.2012.21.0   - Region: en-US   - Dev Version Installed: False    <!--  Run the following commands in Powershell and copy/paste the output.  " - OS Build: $([Environment]::OSVersion.Version)"  " - Architecture: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Architecture)"  " - Application Version: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Version)"  " - Region: $((Get-Culture).Name)"  " - Dev Version Installed: $($null -ne (Get-AppxPackage -Name Microsoft.WindowsCalculator.Dev))"  -->    **Requested Assignment**  <!--  Some people just want to report a bug and let someone else fix it.  Other people want to not only submit the bug report, but fix it as well.  Both scenarios are completely ok. We just want to know which one it is.  Please indicate which bucket you fall into by keeping one and removing the other.  -->  I'm just reporting this problem.  I don't want to fix it.  	hifinerd	null	null	null	null	null	null	
2021-02-21 08:39:43.0	null	2021-10-19 05:02:42.0	open	[Enhancement, Pri: 2, needs pitch review]	4	1500	Add "Keep on Top" mode for all other modes on the calculator	https://api.github.com/repos/microsoft/calculator/issues/1500	https://github.com/microsoft/calculator/issues/1500	<!--  See https://github.com/Microsoft/calculator/blob/master/docs/NewFeatureProcess.md for suggestions on how to write a good feature pitch. Just want to submit an idea quickly? Try Feedback Hub instead: https://insider.windows.com/en-us/fb/?contextid=130  -->    **Problem Statement**  I tend to use the programmer mode on the windows calculator when programming as most people do. I recently discovered the "Keep on Top" mode in the standard mode on the calculator. To my dismay, I can't use it in conjunction with the programmer mode or any other mode for that matter.  <!--  What problem are we trying to solve? Who’s the target audience? Is there a customer need or pain point we need to remedy? Is there a business goal or metric we are trying to improve? Do we have a hypothesis we want to prove or disprove?  -->    **Evidence or User Insights**  As far as I can tell, the button doesn't appear to be in any of the modes besides the standard mode as previously mentioned  <!--  Why should we do this? Potential sources of data: Feedback Hub, other GitHub issues, other anecdotes from listening to customers in person or online, request from another team, telemetry data, user research, market or competitive research  -->    **Proposal**  Simply adding the button to each mode will allow for easier access to it when using fullscreen applications such as when using an IDE on a single monitor needing to quickly perform programmer-esque calculations without having to alt+tab back and forth  <!--  How will the solution/feature help us solve the problem? How will it meet the target audience’s needs? If there are business goals or metrics, how does this improve them?  -->    **Low-Fidelity Concept**  <!--  Show as much of the experience as needed to explain the idea. This can be as simple as a napkin drawing but can also be a code prototype, or a design comp. Keep it simple at this stage, as it can be refined later during the pre-production stage.  -->  ![image](https://user-images.githubusercontent.com/39471591/108619841-30512600-73ed-11eb-972b-b0eab8549f7d.png)  ![image](https://user-images.githubusercontent.com/39471591/108620146-a8b8e680-73ef-11eb-8f32-96b3d9af510d.png)    **Requested Assignment**  <!--  Some people just want to suggest a feature and let someone else implement it.  Other people want to not only suggest a feature, but implement it as well.  Both scenarios are completely ok. We just want to know which one it is.  We are likely to prioritize the review of feature requests if they already have someone who can implement them.  Please indicate which bucket you fall into by keeping one and removing the other.  -->  I'm down to implement. Time permitting of course.	WormChickenWizard	null	null	null	null	null	null	
2021-02-21 17:26:08.0	2021-05-05 06:08:19.0	2021-06-04 12:00:07.0	closed	[documentation]	2	1501	2021 Roadmap Update	https://api.github.com/repos/microsoft/calculator/issues/1501	https://github.com/microsoft/calculator/issues/1501	[The roadmap](https://github.com/microsoft/calculator/blob/master/docs/Roadmap.md) needs updating for 2021.😉	EatonZ	null	null	null	null	null	null	
2021-02-22 03:18:10.0	null	2021-05-26 10:08:33.0	open	[Bug, Area: User Experience, investigate, Pri: 2]	1	1502	The function analisis shows incorrect horizontal asymptote	https://api.github.com/repos/microsoft/calculator/issues/1502	https://github.com/microsoft/calculator/issues/1502	**Describe the bug**  The function analisis says that sinx/x² has a horizontal asymptote. I even checked with [Symbolab](https://es.symbolab.com/solver/step-by-step/asintotas%20horizontales%20de%20%5Cfrac%7Bsinx%7D%7Bxx%7D) to see if I was right, it says the function doesn't has a horizontal asymptote.    **Steps To Reproduce**  1. Open the calculator.  2. Type sin(x)/(xx)  3. Click on the lightning to see the analisis.    **Expected behavior**  It sould show that this function has no horizontal asymptote.    **Screenshots**  <!-- If applicable, add screenshots to help explain your problem. -->  ![image](https://user-images.githubusercontent.com/45268815/108652008-a787c800-7488-11eb-9a58-2f293b24860e.png)    **Device and Application Information**   - OS Build: Windows 10 Home 10.0.19041   - Architecture: x64 bits.   - Application Version: 10.2012.21.0   - Region: es-MX   - Dev Version Installed: False    **Additional context**  ...    **Requested Assignment**  I'm just reporting this problem.  I don't want to fix it.  	ElrohirGT	null	null	null	null	null	null	
2021-02-22 12:19:14.0	2021-04-20 19:08:35.0	2021-05-21 00:00:17.0	closed	[Bug, Pri: 3, triage approved, Area: User Experience]	3	1503	Pressing enter does not calculate after I click on "2nd"	https://api.github.com/repos/microsoft/calculator/issues/1503	https://github.com/microsoft/calculator/issues/1503	**Describe the bug**  When I click on the button to use secondary functions in scientific mode and then press enter it activates the button I clicked rather than calculate the result    **Steps To Reproduce**  1. Enter the Scientific mode  2. Click **2nd** button  3. You may click secondary functions that change when you clicked the previous button (I did not test all of them, but **yroot** seems to work)  4. Enter some calculations from the keyboard (don't click any other buttons) **2 + 2**, for example  5. Press Enter  6. Get functions change as if you pressed **2nd** button again    **Expected behavior**  Seeing the result of the calculation (**4**)    **Device and Application Information**   - OS Build: 10.0.19042.0   - Architecture: X64   - Application Version: 10.2012.21.0   - Region: en-US   - Dev Version Installed: False    **Additional context**  Similar issue: #860     **Requested Assignment**  I'm just reporting this problem.  I don't want to fix it.    > A team member has edited this comment to update repro steps for clarity.	AntonioOne	null	null	null	null	null	null	
2021-03-02 02:38:51.0	2021-03-04 08:47:26.0	2021-03-04 08:47:26.0	closed	[]	0	1504	Update mainto2103release	https://api.github.com/repos/microsoft/calculator/issues/1504	https://github.com/microsoft/calculator/pull/1504	## Fixes #.      ### Description of the changes:  - Updating the release version to 2103 now that the 2102 release branch fork has been created.  -  -    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  -  -  -    	volkcor	null	null	null	null	null	null	
2021-03-03 19:10:49.0	2021-03-03 22:12:15.0	2021-03-03 22:12:15.0	closed	[codebase quality]	0	1505	Update service connection name to avoid name conflicts	https://api.github.com/repos/microsoft/calculator/issues/1505	https://github.com/microsoft/calculator/pull/1505	### Description of the changes:  This PR updates the name of the StoreBrokerProxy endpoint to avoid conflicts with other service connections with the same name    	joseartrivera	null	null	null	null	null	null	
2021-03-04 15:06:18.0	null	2021-10-19 05:02:44.0	open	[Enhancement, Pri: 2, needs pitch review]	3	1506	Endian Selection In [Programmer Mode]	https://api.github.com/repos/microsoft/calculator/issues/1506	https://github.com/microsoft/calculator/issues/1506	**Problem Statement**  Add a "Endian Selection" button, or something else works similar. Sometimes programmers needs to works with different endian like "Big Endian" in UTF-8 and "Little Endian" that how Integers represented on x86 platform.    **Evidence or User Insights**  Help developers like us    **Proposal**  Add a "Endian Selection" button    **Goals**  Users can select which endian to use to interpret these raw bits in integer form    **Non-Goals**  i.d.k. there is just 2 endian on the world.    **Low-Fidelity Concept**  MSPaint drawn Screenshot  ![image](https://user-images.githubusercontent.com/43724908/109983409-c2d2bd00-7d3d-11eb-8b19-4b7de1e64a28.png)    **Requested Assignment**  i.d.k.      I'm just suggesting this idea.  I don't want to implement it.  	Akarinnnnn	null	null	null	null	null	null	
2021-03-05 18:29:49.0	2021-05-25 08:46:07.0	2021-06-24 12:00:07.0	closed	[by design, Bug]	12	1507	Calculator in Standard wont won't keep a multiline entry ex previously 1+1+1=3 now it shows 1+1=2, 2+1=3 despite being entered as 1+1+1=	https://api.github.com/repos/microsoft/calculator/issues/1507	https://github.com/microsoft/calculator/issues/1507	<!--  Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.  -->    **Describe the bug**  <!-- A clear and concise description of what the bug is. -->    **Steps To Reproduce**  <!--  Steps to reproduce the behavior:  1. Go to '...'  2. Click on '....'  3. Scroll down to '....'  4. See error  -->    **Expected behavior**  <!-- A clear and concise description of what you expected to happen. -->    **Screenshots**  <!-- If applicable, add screenshots to help explain your problem. -->    **Device and Application Information**   - OS Build:   - Architecture:   - Application Version:   - Region:   - Dev Version Installed:    <!--  Run the following commands in Powershell and copy/paste the output.  " - OS Build: $([Environment]::OSVersion.Version)"  " - Architecture: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Architecture)"  " - Application Version: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Version)"  " - Region: $((Get-Culture).Name)"  " - Dev Version Installed: $($null -ne (Get-AppxPackage -Name Microsoft.WindowsCalculator.Dev))"  -->    **Additional context**  <!-- Add any other context about the problem here. -->    **Requested Assignment**  <!--  Some people just want to report a bug and let someone else fix it.  Other people want to not only submit the bug report, but fix it as well.  Both scenarios are completely ok. We just want to know which one it is.  Please indicate which bucket you fall into by keeping one and removing the other.  -->  If possible, I would like to fix this.  I'm just reporting this problem.  I don't want to fix it.  	ParksLife	null	null	null	null	null	null	
2021-03-06 21:03:19.0	2021-03-31 05:58:43.0	2021-04-30 12:00:06.0	closed	[Bug, Area: World-Readiness, external]	3	1508	Confusing angle "approximately equal"   	https://api.github.com/repos/microsoft/calculator/issues/1508	https://github.com/microsoft/calculator/issues/1508	**Describe the bug**  A confusing translation maybe     **Steps To Reproduce**  Just open the sidebar, select "angle", select the conversion of degree to radiant and enter 180°, you get 3.14.    **Expected behavior**  "Grad" means degree and "Ungefähr gleich", approximately equal.  At the bottom, I would have expected 200 gon, not 200 degree, that's confusing, because 180 degree is not the same as 200 degree, but in this case, the calculator meant 180° is the same as 200 gon, so just write gon.    **Screenshots**  ![image](https://user-images.githubusercontent.com/16435889/110220558-a910b180-7ec6-11eb-8786-3d4552c96bca.png)    **Device and Application Information**   - OS Build: 10.0.19042.0   - Architecture: X64   - Application Version: 10.2101.10.0   - Region: de-DE   - Dev Version Installed: False    I'm just reporting this problem.  I don't want to fix it.	DerSimi	null	null	null	null	null	null	
2021-03-07 00:12:32.0	null	2021-10-19 05:02:47.0	open	[Enhancement, Pri: 2, needs pitch review]	2	1509	Show Y value at specifc X value in Graphing Calculator	https://api.github.com/repos/microsoft/calculator/issues/1509	https://github.com/microsoft/calculator/issues/1509	**Problem Statement**  This feature would be implemented with the purpose of addressing the unnecessary inaccuracies and excess time consumption inherent in the current process of trying to find a value for a specific location on the function graph. The only way to get this information right now is by hovering the mouse over the line and scrubbing across the line until an exact value can be found. This may require the user zoom in to unnecessary levels until they can get the precise information they need.    **Evidence or User Insights**  This has been a core feature of almost all graphing calculators for multiple decades now. Here's an example of [how to do this exact thing on the TI-84 Plus](https://www.dummies.com/education/graphing-calculators/how-to-find-the-value-of-a-function-on-the-ti-84-plus/), a calculator from almost 20 years ago. Further research reveals most top graphing calculator search results have this feature in some form or another (Desmos and Geogebra, the top two results, both have this feature). Anecdotal evidence also suggests this is a much-needed feature for precision work. Beyond all that though, it should be implemented because it simply improves UX.    **Proposal**  Implement a bar that allows users to get the value of any specific X location on a function without having to use mouse scrubbing to find it, thus improving the speed and accuracy with which users can find the information they are looking for.    **Goals**  Allow users to get the value of a function at an exact X location by inputting it into a selection bar. This process should be significantly faster than if the user were to mouse over the line.    **Non-Goals**  Not implementing a table of values at this time, as that can be addressed later down the road. Right now, the user experience lacks precision and speed, and a table of values may not be speedy or efficient to implement.    **Low-Fidelity Concept**  ![Mockup](https://user-images.githubusercontent.com/66507524/110224513-97fd7b80-7e99-11eb-8481-fe0ae4f952b9.png)Notice bar in the bottom right. If the user were to put in 1.5 in the X field, Y would populate with the associated value for that function and auto-hover that point on the line (in this case, (1.5, 1.5) is hovered on the line). The user can also select the function from which they are getting values by clicking the drop-down arrow on the function button.    **Requested Assignment**  I'm just suggesting this idea.  I don't want to implement it.  	MatthewRoweDev	null	null	null	null	null	null	
2021-03-08 16:59:40.0	2021-03-08 17:33:39.0	2021-03-08 17:33:39.0	closed	[]	0	1510	Temporarily disable PGO NuGet package	https://api.github.com/repos/microsoft/calculator/issues/1510	https://github.com/microsoft/calculator/pull/1510	Temporarily disable the build configuration which pulls down a NuGet package containing .pgd files. This enables the project to use a single upstream feed for NuGet.    Fixing PGO settings longer-term is tracked by #1435.	mcooley	null	null	null	null	null	null	
2021-03-08 18:10:40.0	2021-03-08 21:40:07.0	2021-03-08 21:40:07.0	closed	[]	0	1511	Update localized strings 2021-03-08	https://api.github.com/repos/microsoft/calculator/issues/1511	https://github.com/microsoft/calculator/pull/1511	Update strings from our internal localization system.	mcooley	null	null	null	null	null	null	
2021-03-09 00:56:49.0	2021-03-09 17:48:11.0	2021-03-09 17:48:11.0	closed	[codebase quality]	0	1512	Update service connection name (#1505)	https://api.github.com/repos/microsoft/calculator/issues/1512	https://github.com/microsoft/calculator/pull/1512	Cherry-pick into release/2102 from:    https://github.com/microsoft/calculator/commit/a544381e86a2920d5368b155f5565621de5caea6  	joseartrivera	null	null	null	null	null	null	
2021-03-09 00:57:47.0	2021-03-09 17:48:08.0	2021-03-09 17:48:08.0	closed	[codebase quality]	0	1513	Temporarily disable PGO NuGet package (#1510)	https://api.github.com/repos/microsoft/calculator/issues/1513	https://github.com/microsoft/calculator/pull/1513	Cherry-pick into release/2102 from:    https://github.com/microsoft/calculator/commit/12110936eb67f907a1ea4f4e41724f68b898bd7a	joseartrivera	null	null	null	null	null	null	
2021-03-19 21:13:32.0	null	2021-10-19 05:02:50.0	open	[Enhancement, Pri: 2, needs pitch review]	2	1514	Add kilowatt-hour (kWh) to energy conversion units	https://api.github.com/repos/microsoft/calculator/issues/1514	https://github.com/microsoft/calculator/issues/1514	<!--  See https://github.com/Microsoft/calculator/blob/master/docs/NewFeatureProcess.md for suggestions on how to write a good feature pitch. Just want to submit an idea quickly? Try Feedback Hub instead: https://insider.windows.com/en-us/fb/?contextid=130  -->    **Problem Statement**  <!--  What problem are we trying to solve? Who’s the target audience? Is there a customer need or pain point we need to remedy? Is there a business goal or metric we are trying to improve? Do we have a hypothesis we want to prove or disprove?  -->  There is no easy way to convert energy values to kilowatt-hours.    **Evidence or User Insights**  <!--  Why should we do this? Potential sources of data: Feedback Hub, other GitHub issues, other anecdotes from listening to customers in person or online, request from another team, telemetry data, user research, market or competitive research  -->  The kilowatt-hour (kWh) is a common unit of energy, used for electricity bills and battery capacity. Outside of scientific and engineering circles, it is more popular than the joule (J). Another representation similar to kWh is the watt-second (W-s).    **Proposal**  <!--  How will the solution/feature help us solve the problem? How will it meet the target audience’s needs? If there are business goals or metrics, how does this improve them?  -->  An additional option to the energy conversion units for kilowatt-hour and watt-second would make conversions easier to other forms of energy.    **Goals**  <!--  What you want to accomplish with this feature. Typical examples include  "User Can *perform some task*"  -->  - Add kilowatt-hour (kWh) and watt-second (W-s) to the list of energy conversions.  - Determine the common way to shorten kilowatt-hour and watt-second. kWh and W-s is simply how I have represented them here however they may not be the generally-accepted format.    **Non-Goals**  <!--  Things we are explicitly not doing or supporting or that are out of scope, including reasons why.  -->  Add all possible combinations of metric prefixes and units of time (e.g., megawatt-minute, decajoules, etc.)    **Low-Fidelity Concept**  <!--  Show as much of the experience as needed to explain the idea. This can be as simple as a napkin drawing but can also be a code prototype, or a design comp. Keep it simple at this stage, as it can be refined later during the pre-production stage.  -->    1 W-s is equivalent to 1 J. 1 kWh is equivalent to 3600 kJ or 3,600,000 J or 3,600,000 W-s.    **Requested Assignment**  <!--  Some people just want to suggest a feature and let someone else implement it.  Other people want to not only suggest a feature, but implement it as well.  Both scenarios are completely ok. We just want to know which one it is.  We are likely to prioritize the review of feature requests if they already have someone who can implement them.  Please indicate which bucket you fall into by keeping one and removing the other.  -->  If adding conversion units is relatively simple, I can implement this.	asasine	null	null	null	null	null	null	
2021-03-20 09:14:54.0	2021-03-25 04:26:00.0	2021-04-24 06:00:06.0	closed	[Area: World-Readiness, triage needed]	2	1515	[Localization] 	https://api.github.com/repos/microsoft/calculator/issues/1515	https://github.com/microsoft/calculator/issues/1515	<!-- PLEASE NOTE:  We cannot _merge_ any suggested localization changes to our localized resources files. These files are automatically generated from an internal localization process.  Any suggestion submitted this way will be duplicated into our internal localization system, and then closed here.  Alternatively, you can launch feedback-hub://, click on the "Language Community" tab on the left-side of the app, and follow the steps to submit a localization suggestion that way.  (The "Language Community" tab currently will only be visible if your system is running a non-English language).  Before filing a bug - Ensure the bug reproduces on the latest version of the app. - Search existing issues and make sure this issue is not already filed. -->  **Describe the bug** <!-- A clear and concise description of what the bug is. -->  **Steps To Reproduce** <!-- Steps to reproduce the behavior: 1. Go to '...' 2. Click on '....' 3. Scroll down to '....' 4. See error -->  **Expected behavior** <!-- A clear and concise description of what you expected to happen. -->  **Screenshots** <!-- If applicable, add screenshots to help explain your problem. -->  **Device and Application Information**  - OS Build:  - Architecture:  - Application Version:  - Region:   - Dev Version Installed:    <!-- Run the following commands in Powershell and copy/paste the output. " - OS Build: $([Environment]::OSVersion.Version)" " - Architecture: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Architecture)" " - Application Version: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Version)" " - Region: $((Get-Culture).Name)" " - Dev Version Installed: $($null -ne (Get-AppxPackage -Name Microsoft.WindowsCalculator.Dev))" -->  **Additional context** <!-- Add any other context about the problem here. --> 	XJIN1415	null	null	null	null	null	null	
2021-03-21 06:35:04.0	2021-03-25 04:16:29.0	2021-03-25 04:16:29.0	closed	[]	0	1516	Create study	https://api.github.com/repos/microsoft/calculator/issues/1516	https://github.com/microsoft/calculator/pull/1516	## Fixes #.      ### Description of the changes:  -  -  -    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  -  -  -    	futre-re	null	null	null	null	null	null	
2021-03-24 21:11:59.0	2021-03-25 04:16:40.0	2021-03-25 04:16:40.0	closed	[]	0	1517	Always run loc pipeline	https://api.github.com/repos/microsoft/calculator/issues/1517	https://github.com/microsoft/calculator/pull/1517	Add `always: true` so the loc pipeline runs even when there have not been any changes in git, to ensure we're checking for new translations continuously.	mcooley	null	null	null	null	null	null	
2021-03-25 22:29:54.0	2021-03-31 06:05:52.0	2021-03-31 06:05:52.0	closed	[]	1	1518	A few fixes/improvements to the Portuguese translation.	https://api.github.com/repos/microsoft/calculator/issues/1518	https://github.com/microsoft/calculator/pull/1518	## Fixes    A few incorrect translations to pt-PT that I've noticed.    ### How changes were validated:    They're just string changes and they don't significantly change the string lengths so it's very unlikely that they'll cause text rendering issues.  	ric2b	null	null	null	null	null	null	
2021-03-28 09:30:27.0	null	2021-05-26 10:08:45.0	open	[Bug, Area: User Experience, investigate, Pri: 2]	1	1519	States lost after restoring calculator from minimized state	https://api.github.com/repos/microsoft/calculator/issues/1519	https://github.com/microsoft/calculator/issues/1519	**Describe the bug**  State lost after restoring calculator from minimized state.    **Steps To Reproduce**  Steps to reproduce the behavior:  1. Do some calculation  2. Minimize the calculator  3. Restore the calculator  4. All states lost    **Expected behavior**  States should be preserved.    **Device and Application Information**   - OS Build: 10.0.21343.0   - Architecture: X64   - Application Version: 10.2101.10.0   - Region: ja-JP   - Dev Version Installed: False    <!--  Run the following commands in Powershell and copy/paste the output.  " - OS Build: $([Environment]::OSVersion.Version)"  " - Architecture: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Architecture)"  " - Application Version: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Version)"  " - Region: $((Get-Culture).Name)"  " - Dev Version Installed: $($null -ne (Get-AppxPackage -Name Microsoft.WindowsCalculator.Dev))"  -->    **Additional context**  <!-- Add any other context about the problem here. -->  UPDATE: This behavior happens on all UWP apps, I think it's a bug related to Windows 10.  Reported with Feedback app: https://aka.ms/AAbp0cx    **Requested Assignment**  <!--  Some people just want to report a bug and let someone else fix it.  Other people want to not only submit the bug report, but fix it as well.  Both scenarios are completely ok. We just want to know which one it is.  Please indicate which bucket you fall into by keeping one and removing the other.  -->  I'm just reporting this problem.  I don't want to fix it.  	hez2010	null	null	null	null	null	null	
2021-04-03 15:52:44.0	2021-04-20 20:50:03.0	2021-05-21 00:00:16.0	closed	[Area: World-Readiness, external]	2	1520	[Localization] 	https://api.github.com/repos/microsoft/calculator/issues/1520	https://github.com/microsoft/calculator/issues/1520	Chinese simplified language version, in the converter, the "power" should be translated as "功率"; the "pressure" should be translated as "压强”.       	jackleeholmes	null	null	null	null	null	null	
2021-04-07 18:44:11.0	2021-04-20 17:38:06.0	2021-04-20 17:38:06.0	closed	[]	0	1521	Update localized strings 2021-04-07	https://api.github.com/repos/microsoft/calculator/issues/1521	https://github.com/microsoft/calculator/pull/1521	Update strings from our internal localization system.	mcooley	null	null	null	null	null	null	
2021-04-10 18:59:49.0	null	2021-10-19 05:02:53.0	open	[Enhancement, Pri: 2, needs pitch review]	11	1522	[Feature] Calculate: Find Roots of an Equation	https://api.github.com/repos/microsoft/calculator/issues/1522	https://github.com/microsoft/calculator/issues/1522	Hey folks! 👋🏼   Do we have any feature to find the roots of an equation (whether it will a quadratic or linear equation) in one tap?    A quadratic equation is a second-order polynomial equation of a variable say x. The general form of a quadratic equation is given as:  ```  a*x2 + b*x + c = 0    Where a,b and c are real known values and,  a can't be zero.  ```  A quadratic equation has two roots. The roots of a quadratic equation can be easily obtained by using the quadratic formula:  ```  roots = (-b ± √(b2 - 4ac))/2a  ```  Derivation:  ```  ax2 + bx + c = 0    or, ax2 + bx = -c    or, x2 + (b/a)x = -(c/a)    or, x2 + (b/a)x + (b2/4a2) - (b2/4a2) = -(c/a)    or, x2 + (b/a)x + (b2/4a2) = -(c/a) + (b2/4a2)    or, (x + b/2a)2  = -(c/a) + (b2/4a2)    or, (x + b/2a)2  = (b2  - 4ac) /4a2    or, (x + b/2a) = ± √(b2 - 4ac) /2a    or, x = (-b ± √(b2 - 4ac))/2a  ```  There arises three cases as described below while finding the roots of a quadratic equation:  ```  If b2 < 4ac, then roots are complex  (not real).  For example, roots of x2 + x + 1 = 0 are  -0.5 + i1.73205 and -0.5 - i1.73205    If b2 = 4ac, then roots are real   and both roots are same.  For example, roots of x2 - 2x + 1 = 0 are 1 and 1    If b2 > 4ac, then roots are real   and different.  For example, roots of x2 - 7x - 12 = 0 are 3 and 4  ```    I didn't have any clue whether, that features is already there or not?  If its not, Can I proceed to work on it?  Pl help me look out!    	amino19	null	null	null	null	null	null	
2021-04-11 11:16:08.0	2021-04-20 19:08:35.0	2021-04-20 19:08:35.0	closed	[]	0	1523	Disabled focus for 2nd button in Scientific Mode	https://api.github.com/repos/microsoft/calculator/issues/1523	https://github.com/microsoft/calculator/pull/1523	### Fixes #1503 .      ### Description of the changes:  - Added a `AllowFocusOnInteraction` property for `ShiftButton`.     ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Manually Tested    	achmurali	null	null	null	null	null	null	
2021-04-12 21:59:10.0	null	2021-10-19 05:02:56.0	open	[Enhancement, Pri: 2]	5	1524	Start calculator with certain mode	https://api.github.com/repos/microsoft/calculator/issues/1524	https://github.com/microsoft/calculator/issues/1524	I switch a lot between different modes like scientific and graphing.  I would like if possible to add two shortcuts each one points to a different mode, for example:   If I use run (windows + R) to start calculator I could write this command:  `calculator://` -- this would start calculator normally  If I can add the mode to this, like:  `calculator://scientific` -- this would start calculator in scientific mode  `calculator://graphing` -- this would start calculator in graphing mode    I'm just suggesting this idea.  I don't want to implement it.    Many Thanks  	hatahetahmad	null	null	null	null	null	null	
2021-04-13 13:09:47.0	2021-05-02 04:13:47.0	2021-05-02 04:13:47.0	closed	[]	2	1525	Update Resources.resw	https://api.github.com/repos/microsoft/calculator/issues/1525	https://github.com/microsoft/calculator/pull/1525	## Fixes #.      ### Description of the changes:  -Fixed some Korean translations  -  -    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  -  -  -    	leehan02816	null	null	null	null	null	null	
2021-04-14 01:17:31.0	null	2021-10-19 05:02:58.0	open	[Enhancement, Pri: 2, needs pitch review]	2	1526	Put microsoft math solver in microsoft calculator	https://api.github.com/repos/microsoft/calculator/issues/1526	https://github.com/microsoft/calculator/issues/1526	<!--  See https://github.com/Microsoft/calculator/blob/master/docs/NewFeatureProcess.md for suggestions on how to write a good feature pitch. Just want to submit an idea quickly? Try Feedback Hub instead: https://insider.windows.com/en-us/fb/?contextid=130  -->    **Problem Statement**  Microsoft edge browser have a "math solver" feature. (https://techcommunity.microsoft.com/t5/articles/learn-how-to-solve-math-problems-with-math-solver-in-microsoft/m-p/2195689) However, it is only available in websites. I hope to use this feature in all the apps in windows. Besides, a math solver in a browser is really strange and difficult to discover.  <!--  What problem are we trying to solve? Who’s the target audience? Is there a customer need or pain point we need to remedy? Is there a business goal or metric we are trying to improve? Do we have a hypothesis we want to prove or disprove?  -->    **Evidence or User Insights**  Microsoft calculator is a better place for math solver than microsoft edge.  1. Calculator already have graphing function.  2. When I need a "math solver" feature, I'll probably look for this feature in calculator app, not microsoft edge. So this feature will be easier to discover if put in calculator. Let calculator to do everything about mathmatics.  3. Suppose I'm doing my homework with microsoft word (or excel, powerpoint etc.). I have to launch edge browser to use math solver (which is slow on startup, and consumes more electriciy), and I'll be easily distracted by websites in the browser. If math solver is put in the calculator, I only have to launch a tiny calcular app (which is fast and lightweight).  https://techcommunity.microsoft.com/t5/articles/learn-how-to-solve-math-problems-with-math-solver-in-microsoft/m-p/2261553/highlight/true#M5309  <!--  Why should we do this? Potential sources of data: Feedback Hub, other GitHub issues, other anecdotes from listening to customers in person or online, request from another team, telemetry data, user research, market or competitive research  -->    **Proposal**  <!--  How will the solution/feature help us solve the problem? How will it meet the target audience’s needs? If there are business goals or metrics, how does this improve them?  -->    **Goals**  <!--  What you want to accomplish with this feature. Typical examples include  "User Can *perform some task*"  -->    **Non-Goals**  <!--  Things we are explicitly not doing or supporting or that are out of scope, including reasons why.  -->    **Low-Fidelity Concept**  <!--  Show as much of the experience as needed to explain the idea. This can be as simple as a napkin drawing but can also be a code prototype, or a design comp. Keep it simple at this stage, as it can be refined later during the pre-production stage.  -->    **Requested Assignment**  <!--  Some people just want to suggest a feature and let someone else implement it.  Other people want to not only suggest a feature, but implement it as well.  Both scenarios are completely ok. We just want to know which one it is.  We are likely to prioritize the review of feature requests if they already have someone who can implement them.  Please indicate which bucket you fall into by keeping one and removing the other.  -->  I'm just suggesting this idea.  I don't want to implement it.  	oxygen-dioxide	null	null	null	null	null	null	
2021-04-14 12:01:12.0	2021-07-22 07:43:58.0	2021-08-21 12:00:44.0	closed	[duplicate, Enhancement, Pri: 2]	2	1527	Popup key	https://api.github.com/repos/microsoft/calculator/issues/1527	https://github.com/microsoft/calculator/issues/1527	Just a suggestion to consider a **popup** the **keyboard key** for each key in the calculator function when **mouseover**.	danilopatro	null	null	null	null	null	null	
2021-04-16 11:35:52.0	null	2021-10-19 05:03:01.0	open	[Enhancement, Pri: 2]	3	1528	I cannot see "Help" option, Graphing mode: how to specify function domain (say, 1 < x < 10)?	https://api.github.com/repos/microsoft/calculator/issues/1528	https://github.com/microsoft/calculator/issues/1528	I cannot see "Help" option, Graphing mode: how to specify function domain (say, `1 < x < 10`)?	annazolkieve	null	null	null	null	null	null	
2021-04-16 18:48:02.0	2021-05-10 17:19:16.0	2021-05-10 17:19:16.0	closed	[]	2	1529	Added KeyDown Event Handler for Navigation Pane.	https://api.github.com/repos/microsoft/calculator/issues/1529	https://github.com/microsoft/calculator/pull/1529	## Fixes #1463 .      ### Description of the changes:  - Handle KeyDown Event for NavPane.  - Modify the Selected Item Binding on KeyDown, using FocusManager    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Manually Tested    	achmurali	null	null	null	null	null	null	
2021-04-18 02:47:43.0	null	2021-10-19 05:03:03.0	open	[Enhancement, Pri: 2, needs pitch review]	2	1530	Add flop converter	https://api.github.com/repos/microsoft/calculator/issues/1530	https://github.com/microsoft/calculator/issues/1530	**Proposal**  Add a flop converter like file size converter	wilsonwill15	null	null	null	null	null	null	
2021-04-19 16:11:47.0	2021-04-20 17:36:42.0	2021-04-20 17:36:42.0	closed	[]	0	1531	k	https://api.github.com/repos/microsoft/calculator/issues/1531	https://github.com/microsoft/calculator/pull/1531	## Fixes #.      ### Description of the changes:  -  -  -    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  -  -  -    	Nuha1234	null	null	null	null	null	null	
2021-04-21 17:43:27.0	null	2021-06-28 09:02:25.0	open	[Bug, triage approved, Area: User Experience, Pri: 2]	2	1532	Currency Converter- multiple try to Update rates	https://api.github.com/repos/microsoft/calculator/issues/1532	https://github.com/microsoft/calculator/issues/1532	<!--  Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.  -->    **Describe the bug**  Currency converter update rates feature issue. When the Update rates button is pressed multiple times in quick succession the selected currencies change.      **Steps To Reproduce**  Steps to reproduce the behavior:  1. Go to Converter -> Currency  2. Select two currencies and enter values to convert  3. press the Update rates button multiple times  4. The currencies change to different currencies      **Expected behavior**  The selected currencies should not change.     **Screenshots**  ![image](https://user-images.githubusercontent.com/30839224/115596461-c2927f00-a2f5-11eb-97ea-986b20e2782c.png)  ![image](https://user-images.githubusercontent.com/30839224/115596519-d3db8b80-a2f5-11eb-996f-0a3eb23dfd59.png)      **Device and Application Information**   - OS Build: 19041   - Architecture:  X64   - Application Version: 10.2101.10.0   - Region: en-US   - Dev Version Installed: False    <!--  Run the following commands in Powershell and copy/paste the output.  " - OS Build: $([Environment]::OSVersion.Version)"  " - Architecture: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Architecture)"  " - Application Version: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Version)"  " - Region: $((Get-Culture).Name)"  " - Dev Version Installed: $($null -ne (Get-AppxPackage -Name Microsoft.WindowsCalculator.Dev))"  -->    **Additional context**  <!-- Add any other context about the problem here. -->  I am new to the Open Source contributions. Saw this problem, not sure how valid this might be considering the use-case.     **Requested Assignment**  <!--  Some people just want to report a bug and let someone else fix it.  Other people want to not only submit the bug report, but fix it as well.  Both scenarios are completely ok. We just want to know which one it is.  Please indicate which bucket you fall into by keeping one and removing the other.  -->  If possible, I would like to fix this. Did not have a look at the code for this particular feature. Please provide some references if possible.     Thanks!  	advaitbhat20	null	null	null	null	null	null	
2021-04-24 16:37:36.0	2021-04-24 16:40:44.0	2021-05-26 12:00:08.0	closed	[Area: World-Readiness]	1	1533	Can Microsoft port this program fo mac or linux	https://api.github.com/repos/microsoft/calculator/issues/1533	https://github.com/microsoft/calculator/issues/1533	<!--  PLEASE NOTE:   We cannot _merge_ any suggested localization changes to our localized resources files. These files are automatically generated from an internal localization process.  Any suggestion submitted this way will be duplicated into our internal localization system, and then closed here.    Alternatively, you can launch feedback-hub://, click on the "Language Community" tab on the left-side of the app, and follow the steps to submit a localization suggestion that way.  (The "Language Community" tab currently will only be visible if your system is running a non-English language).    Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.  -->    **Describe the bug**  <!-- A clear and concise description of what the bug is. -->    **Steps To Reproduce**  <!--  Steps to reproduce the behavior:  1. Go to '...'  2. Click on '....'  3. Scroll down to '....'  4. See error  -->    **Expected behavior**  <!-- A clear and concise description of what you expected to happen. -->    **Screenshots**  <!-- If applicable, add screenshots to help explain your problem. -->    **Device and Application Information**   - OS Build:   - Architecture:   - Application Version:   - Region:    - Dev Version Installed:      <!--  Run the following commands in Powershell and copy/paste the output.  " - OS Build: $([Environment]::OSVersion.Version)"  " - Architecture: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Architecture)"  " - Application Version: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Version)"  " - Region: $((Get-Culture).Name)"  " - Dev Version Installed: $($null -ne (Get-AppxPackage -Name Microsoft.WindowsCalculator.Dev))"  -->    **Additional context**  <!-- Add any other context about the problem here. -->  	Tekh-ops	null	null	null	null	null	null	
2021-04-25 18:54:20.0	null	2021-06-28 09:02:27.0	open	[Bug, Pri: 3, triage approved, Area: User Experience]	3	1534	Backspace on "Select All" doesn't clear the whole expression	https://api.github.com/repos/microsoft/calculator/issues/1534	https://github.com/microsoft/calculator/issues/1534	<!--  Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.  -->    **Describe the bug**  <!-- A clear and concise description of what the bug is. -->  Pressing `Backspace` after selecting the whole content of `CalculationResult` only removes the previous entered digit.    **Steps To Reproduce**  <!--  Steps to reproduce the behavior:  1. Go to '...'  2. Click on '....'  3. Scroll down to '....'  4. See error  -->  1.Enter some number  2.Click `Select All` on the flyout that appears after right clicking in the result area or Press `Ctlr + A` (after focusing in the result area)  3.Press backspace key or click backspace button on keyboard.    **Expected behavior**  <!-- A clear and concise description of what you expected to happen. -->  Should clear the whole content.    **Device and Application Information**   - OS Build: 10.0.19041   - Architecture: x64   - Application Version:    - Region: en-IN   - Dev Version Installed: True    <!--  Run the following commands in Powershell and copy/paste the output.  " - OS Build: $([Environment]::OSVersion.Version)"  " - Architecture: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Architecture)"  " - Application Version: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Version)"  " - Region: $((Get-Culture).Name)"  " - Dev Version Installed: $($null -ne (Get-AppxPackage -Name Microsoft.WindowsCalculator.Dev))"  -->    **Additional context**  <!-- Add any other context about the problem here. -->  Similar to "CE" behavior.    **Requested Assignment**  <!--  Some people just want to report a bug and let someone else fix it.  Other people want to not only submit the bug report, but fix it as well.  Both scenarios are completely ok. We just want to know which one it is.  Please indicate which bucket you fall into by keeping one and removing the other.  -->  If possible and if applicable, I would like to fix this.  	achmurali	null	null	null	null	null	null	
2021-04-28 20:36:49.0	2021-05-26 08:29:29.0	2021-06-25 12:00:10.0	closed	[Bug, Area: User Experience, not repro, Pri: 2]	4	1535	Constant functions Cannot Be Graphed	https://api.github.com/repos/microsoft/calculator/issues/1535	https://github.com/microsoft/calculator/issues/1535	<!--  Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.  -->    **Describe the bug**  Constant expressions without an x result in an error. So we cannot graph y=4    **Steps To Reproduce**  1. Graphing mode  1. Enter y=4 as the function to graph.  1. Look at graph     **Expected behavior**  Horizontal line at 4 is drawn    **Actual behavior**  No horizontal line. Error triangle next to function.    **Workaround**  1. Enter y=4+x-x  1. Look at graph - see horizontal line drawn at 4    **Screenshots**  ![image](https://user-images.githubusercontent.com/6773183/116468449-dd597c00-a83e-11eb-96f5-570f4231d387.png)    **Device and Application Information**   - OS Build: 10.0.19043.0   - Architecture: X64   - Application Version: 10.2103.8.0   - Region: en-US   - Dev Version Installed: False    **Additional context**  Constant functions of the form "x=2" DO work and give the expected vertical line.  Just "4" as the function (implicit y=) also fails.   We must be scanning for the presence of an x as part of function validation.    **Requested Assignment**  I'm just reporting this problem.  I don't want to fix it.  	stephenegriffin	null	null	null	null	null	null	
2021-05-01 07:31:49.0	2021-05-02 04:03:38.0	2021-05-02 04:03:44.0	closed	[invalid]	0	1536	C1	https://api.github.com/repos/microsoft/calculator/issues/1536	https://github.com/microsoft/calculator/pull/1536	## Fixes #.      ### Description of the changes:  -  -  -    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  -  -  -    	songdabin	null	null	null	null	null	null	
2021-05-03 21:20:02.0	null	2021-05-26 10:09:02.0	open	[Bug, Pri: 3, Area: User Experience, investigate]	2	1537	VK_NUMPADx keys are not accepted if Numlock is off	https://api.github.com/repos/microsoft/calculator/issues/1537	https://github.com/microsoft/calculator/issues/1537	<!--  Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.  -->    **Describe the bug**  I maintain a [driver](https://github.com/Rojetto/ReNeo/issues/32) for the [Neo ergonomic keyboard layout](https://neo-layout.org/) (documentation is unfortunately all in German). Due to the complex layering system we need to remap all keys (including the Numpad) using a low level keyboard hook. Because the Windows keyboard stack sends weird fake Shift key events when Numlock is enabled, we automatically disable it, as we have our own mechanism for switching between numbers and navigation keys anyway. With Numlock disabled however, the calculator app doesn't react to `VK_NUMPADx` key events anymore. Almost any other application doesn't have a problem with that and just inputs the number as usual.  <!-- A clear and concise description of what the bug is. -->    **Steps To Reproduce**  Disable Numlock and somehow send a `VK_NUMPADx` key event. No number is entered in the calculator window.    **Expected behavior**  The sent number appears.      **Device and Application Information**   - OS Build: 10.0.19042.0   - Architecture: X64   - Application Version: 10.2103.8.0   - Region: de-DE   - Dev Version Installed: False    <!--  Run the following commands in Powershell and copy/paste the output.  " - OS Build: $([Environment]::OSVersion.Version)"  " - Architecture: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Architecture)"  " - Application Version: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Version)"  " - Region: $((Get-Culture).Name)"  " - Dev Version Installed: $($null -ne (Get-AppxPackage -Name Microsoft.WindowsCalculator.Dev))"  -->    **Requested Assignment**  I'm just reporting this problem.  I don't want to fix it.  	Rojetto	null	null	null	null	null	null	
2021-05-05 06:05:13.0	2021-05-05 06:05:52.0	2021-05-05 06:05:52.0	closed	[documentation]	0	1538	Updating roadmap for 2021	https://api.github.com/repos/microsoft/calculator/issues/1538	https://github.com/microsoft/calculator/pull/1538	Updating roadmap for 2021	grochocki	null	null	null	null	null	null	
2021-05-05 16:51:14.0	2021-05-10 17:14:47.0	2021-05-10 17:14:48.0	closed	[]	0	1539	Update localized strings 2021-05-05	https://api.github.com/repos/microsoft/calculator/issues/1539	https://github.com/microsoft/calculator/pull/1539	Update strings from our internal localization system.	mcooley	null	null	null	null	null	null	
2021-05-06 22:11:18.0	2021-07-13 06:00:54.0	2021-08-12 12:00:47.0	closed	[duplicate, Enhancement, Pri: 2]	3	1540	Rounded corners for buttons	https://api.github.com/repos/microsoft/calculator/issues/1540	https://github.com/microsoft/calculator/issues/1540	<!--  See https://github.com/Microsoft/calculator/blob/master/docs/NewFeatureProcess.md for suggestions on how to write a good feature pitch. Just want to submit an idea quickly? Try Feedback Hub instead: https://insider.windows.com/en-us/fb/?contextid=130  -->    **Problem Statement**  <!--  What problem are we trying to solve? Who’s the target audience? Is there a customer need or pain point we need to remedy? Is there a business goal or metric we are trying to improve? Do we have a hypothesis we want to prove or disprove?  -->  Windows UI design is moving in the direction of utilizing rounded corners. This can be seen especially in the latest preview versions of WinUI, and Calculator's use of sharp corners looks out of place alongside apps with the newer styles.     **Evidence or User Insights**  <!--  Why should we do this? Potential sources of data: Feedback Hub, other GitHub issues, other anecdotes from listening to customers in person or online, request from another team, telemetry data, user research, market or competitive research  -->  [Evidence of rounded corners utilized in WinUI](https://github.com/microsoft/microsoft-ui-xaml/blob/867b250d714d08fd8f1f133b67a70c3c9934f805/dev/CommonStyles/CornerRadius_themeresources.xaml#L8)    **Proposal**  <!--  How will the solution/feature help us solve the problem? How will it meet the target audience’s needs? If there are business goals or metrics, how does this improve them?  -->  Changing the button corner radius to 4px will help Calculator's design line up with modern Windows design.    **Goals**  <!--  What you want to accomplish with this feature. Typical examples include  "User Can *perform some task*"  -->  The primary goal of this is to change button corner radius to 4 pixels. The border brushes may also have to be adjusted since they don't look very good with rounded corners (I think at least), and possibly other changes as well.     **Non-Goals**  <!--  Things we are explicitly not doing or supporting or that are out of scope, including reasons why.  -->  Everything that isn't changing the corner radius to 4px (and fixing any issues that may be caused by that).     **Low-Fidelity Concept**  <!--  Show as much of the experience as needed to explain the idea. This can be as simple as a napkin drawing but can also be a code prototype, or a design comp. Keep it simple at this stage, as it can be refined later during the pre-production stage.  -->    Please ignore the slightly messed up acrylic.     ![image](https://user-images.githubusercontent.com/59544401/117369446-c7207100-ae79-11eb-97c6-360d66380be6.png)    [Code is here](https://github.com/winston-de/calculator). Note, my fork also has winui 2.6 styles, which is unrelated to this issue.    **Requested Assignment**  <!--  Some people just want to suggest a feature and let someone else implement it.  Other people want to not only suggest a feature, but implement it as well.  Both scenarios are completely ok. We just want to know which one it is.  We are likely to prioritize the review of feature requests if they already have someone who can implement them.  Please indicate which bucket you fall into by keeping one and removing the other.  -->  If possible, I would be willing to implement this.  	winston-de	null	null	null	null	null	null	
2021-05-12 11:45:08.0	null	2021-08-23 09:02:52.0	open	[help wanted, Bug, triage approved, Area: User Experience, Pri: 2]	5	1541	Typing the most negative number by numpad not possible	https://api.github.com/repos/microsoft/calculator/issues/1541	https://github.com/microsoft/calculator/issues/1541	Hello, steps to reproduce:  - Switch to programmers mode (Alt+3)  - Switch number size to BYTE  - Now it is not possible to just simply enter a value -128 by numeric keyboard.    I am programmer and I found out reasons why it is not possible. You binded a minus input with an operation minus and then expecting a positive value which +128 is not valid. But your focus should be to user experience and I as a user started typing negative value -128. And it really should be possible to just enter a simple number like -128 which is in hexa 0x80 fully valid number.  	kezyr	null	null	null	null	null	null	
2021-05-14 19:01:39.0	2021-07-01 04:56:21.0	2021-07-01 04:56:22.0	closed	[]	3	1542	Context Flyout fix for Calculation results	https://api.github.com/repos/microsoft/calculator/issues/1542	https://github.com/microsoft/calculator/pull/1542	## Fixes #1534.      ### Description of the changes:  - Removed to right click flyout for the internal `TextBlock` as the default behavior of the `Copy` in rest of the `CalculationResult` right click flyout is the same.   - The other reason to remove the `TextBlock`'s right-click flyout was the style was inconsistent with the rest of the app.    ### The style of the right-click flyout for the internal `TextBlock`.  ![image](https://user-images.githubusercontent.com/22786016/118315876-b627cd80-b513-11eb-91fe-5290571e0bcd.png)    ### The style for rest of the flyouts in the app.  ![image](https://user-images.githubusercontent.com/22786016/118316068-fc7d2c80-b513-11eb-947a-ebb64caa5d34.png)      ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Manually Tested.    This solution tackles the issue by removing the `Select All` flyout functionality.  	achmurali	null	null	null	null	null	null	
2021-05-14 23:10:04.0	2021-05-26 08:18:51.0	2021-06-25 12:00:09.0	closed	[Enhancement]	4	1543	Need support Float number calcucate.	https://api.github.com/repos/microsoft/calculator/issues/1543	https://github.com/microsoft/calculator/issues/1543	As for now ,we can not input very long float number    ```   0.2782277975428343243423424234   *   1.993433233823432882341243124823413418347  ```    we need very precise float number output. thanks 	cnmade	null	null	null	null	null	null	
2021-05-24 07:16:59.0	2021-05-25 09:17:26.0	2021-05-25 09:17:26.0	closed	[]	1	1544	Hello C# - Going to an official feature branch	https://api.github.com/repos/microsoft/calculator/issues/1544	https://github.com/microsoft/calculator/pull/1544	# Hello C#    ### Description of the changes:  - Migrating the View layer from C++/CX to C#  - Changed CalcViewModel into a Windows Runtime Component library    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Build Passed  - Unit Tests and UI tests are passed locally  - CI and Release pipeline haven't got fixed yet. Not applicable so far.    	tian-lt	null	null	null	null	null	null	
2021-05-25 09:44:41.0	null	2021-10-19 05:03:06.0	open	[Enhancement, Pri: 1]	1	1545	CalcManager Packaging 	https://api.github.com/repos/microsoft/calculator/issues/1545	https://github.com/microsoft/calculator/issues/1545	<!--  See https://github.com/Microsoft/calculator/blob/master/docs/NewFeatureProcess.md for suggestions on how to write a good feature pitch. Just want to submit an idea quickly? Try Feedback Hub instead: https://insider.windows.com/en-us/fb/?contextid=130  -->  # CalcManager Packaging       ## Problem Statement  <!--  What problem are we trying to solve? Who’s the target audience? Is there a customer need or pain point we need to remedy? Is there a business goal or metric we are trying to improve? Do we have a hypothesis we want to prove or disprove?  -->  Currently, CalcManager/CalcEngine is implemented in C++ as part of Calculator. Some teams may want to reuse it as an independent library package. Besides, if we want to convert Calculator App to C#, we need to wrap the CalcEngine in C#.    ## Evidence or User Insights  <!--  Why should we do this? Potential sources of data: Feedback Hub, other GitHub issues, other anecdotes from listening to customers in person or online, request from another team, telemetry data, user research, market or competitive research  -->  ### Potential Consumers   - PowerToys (currently use https://github.com/FlorianRappl/Mages , and they want to switch off it)    ## Proposal  <!--  How will the solution/feature help us solve the problem? How will it meet the target audience’s needs? If there are business goals or metrics, how does this improve them?  -->    ### Concepts    | Package Name | Description                                                  |  | ------------ | ------------------------------------------------------------ |  | Ratpack      | Rational Package - to do arbitrary-precision rational math calculation |  | CalcEngine   | Abstraction of the calculation and commands used in Calculator |  | CalcManager  | Integration of different CalcEngine modes (Standard, Scientific, ...) |      ### Functional Requirements    - Calculator Engine     (accept operator/operand commands and calculate the result to display)  - Arbitrary-precision rational calculation  - Expression parsing *    - Localization support *    - Customizable aliasing (e.g. `arcsin` v.s. `inverse sin` v.s. `sin^-1`) *  - Expression evaluation *    The requirements with star (*) are not implemented yet, but will be published eventually.    ### Usage Requirements    CalcEngine will be consumed by ourselves and 1P teams thru NuGet package.    For us, we need a C# wrapper for CalcEngine, because we will do C# conversion for Calculator App.    In sum, we have the following usage requirements:    - Independent NuGet package  - C# wrapper    ### Portability Requirements    #### OS    - Windows    - x86    - x64    - ARM32    - ARM64    #### Languages    - C/C++  - C#    - .NET Core 3    - .NET 5    ### Implementation Requirements    Ratpak and CalcEngine are implemented in C++, which won't be changed.    - Maintain Ratpack and CalcEngine in C++  - CalcEngine should remain in the Calculator repo    ## Design Proposal    ### Choice of Packaging Techniques    To enable interop between C++ and C#, we have 3 choices:    1. Expose C API from C++     consumed by C# thru P-Invoke  2. Expose COM components from C++      consumed by C# thru COM  3. Expose WinRT components from C++ thru C++/WinRT      consumed by C# thru C#/WinRT    ### Comparison    |                        | C API                                      | COM                                     | WinRT                                                        |  | ---------------------- | ------------------------------------------ | --------------------------------------- | ------------------------------------------------------------ |  | Supported Platforms    | All                                        | Windows Only                            | Windows Only                                                 |  | Supported Languages    | All thru FFI                               | All with great efforts                  | C/C++/C#/Rust/Python with WinRT library<br />All with great efforts |  | Programming Paradigm   | Procedure-oriented                         | OOP                                     | OOP                                                          |  | Development Experience | Easy😊                                      | Painful😱                                | Medium😐                                                      |  | Community Engagement   | Widely used                                | 😒                                       | Not popular yet                                              |  | Error Handling         | Catch all explicitly and return error code | Catch all explicitly and return HRESULT | Catch all implicitly by C++/WinRT library and return HRESULT |      	tian-lt	null	null	null	null	null	null	
2021-05-26 06:11:11.0	2021-05-26 06:38:45.0	2021-05-26 06:38:45.0	closed	[]	1	1546	Bypass secret scanning for WindowsDev_TemporaryKey.pfx	https://api.github.com/repos/microsoft/calculator/issues/1546	https://github.com/microsoft/calculator/pull/1546	## Bypass secret scanning for WindowsDev_TemporaryKey.pfx  WindowsDev_TemporaryKey.pfx is a temporary certificate for packing usage.    ### Description of the changes:  - This is an empty commit    	tian-lt	null	null	null	null	null	null	
2021-05-26 07:54:52.0	2021-05-26 08:31:44.0	2021-05-26 08:31:44.0	closed	[Bug, Pri: 2]	1	1547	Fixes a bug about the UI of expression tokens	https://api.github.com/repos/microsoft/calculator/issues/1547	https://github.com/microsoft/calculator/pull/1547	## Fixes a bug about the UI of expression tokens      ### Description of the changes:  - XAML Behavior is changed after migrating to C#.  - Cherry-Picked from https://github.com/tian-lt/calculator/pull/36      ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Manually verified.    	tian-lt	null	null	null	null	null	null	
2021-05-26 19:20:17.0	null	2021-07-22 12:05:40.0	open	[Bug, Area: User Experience, investigate, Pri: 2]	1	1548	Reseting after some time minimized	https://api.github.com/repos/microsoft/calculator/issues/1548	https://github.com/microsoft/calculator/issues/1548	**Describe the bug**  Reseting after some time minimized and show no history    **Steps To Reproduce**  Steps to reproduce the behavior:  1. Go to Calculator  2. Click on '500-1000,80='. The program will show -500,80.  3. Minimize the program and wait 15 minutes.  4. Clique on calculator icon    **Expected behavior**  After some time minimized, the calc seens to be reset. It will show 0 and no history.     **Screenshots**  ![image](https://user-images.githubusercontent.com/3117983/119718594-21d83780-be3e-11eb-9f10-59f194c2d570.png)    **Device and Application Information**   - OS Build: 10.0.19043.0   - Architecture: X64   - Application Version: 10.2103.8.0   - Region: pt-BR   - Dev Version Installed: False    **Requested Assignment**  I'm just reporting this problem.   	gelado	null	null	null	null	null	null	
2021-05-27 07:47:10.0	2021-05-27 07:47:19.0	2021-05-28 08:44:19.0	closed	[]	0	1549	[Experimental] Fixes up CI for x86/ARM/ARM64	https://api.github.com/repos/microsoft/calculator/issues/1549	https://github.com/microsoft/calculator/pull/1549	## Fixes #.      ### Description of the changes:  -  -  -    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  -  -  -    	tian-lt	null	null	null	null	null	null	
2021-05-27 08:45:51.0	2021-05-28 02:31:55.0	2021-05-28 08:44:19.0	closed	[]	1	1550	[FeatureBranch] Fixes x86/ARM/ARM64 builds for the CI-Pipeline	https://api.github.com/repos/microsoft/calculator/issues/1550	https://github.com/microsoft/calculator/pull/1550	## Fixes x86/ARM/ARM64 builds for the CI-Pipeline      ### Description of the changes:  - Specifies AppBunldPlatforms for different platform settings.    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Local tests passed  - CI-Pipeline passed    	tian-lt	null	null	null	null	null	null	
2021-05-28 08:49:54.0	2021-05-28 09:14:38.0	2021-05-28 09:14:38.0	closed	[]	0	1551	Cherry-Pick: Add headers missing for compilation with GCC (#1468)	https://api.github.com/repos/microsoft/calculator/issues/1551	https://github.com/microsoft/calculator/pull/1551	## Cherry-Pick: Add headers missing for compilation with GCC (#1468)    >Things that required such update included:  >* `wstringstream`  >* `setprecision`  >* `SCODE_CODE`, `E_BOUNDS`  >* Various SAL macros  	tian-lt	null	null	null	null	null	null	
2021-05-28 09:20:11.0	2021-05-28 11:45:16.0	2021-05-28 11:45:20.0	closed	[]	1	1552	Cherry-Pick: Update nuget.config file (#1486)	https://api.github.com/repos/microsoft/calculator/issues/1552	https://github.com/microsoft/calculator/pull/1552	## Cherry-Pick: Update nuget.config file (#1486)  > Update the nuget.config file to add a <clear /> directive to unblock some internal build pipelines work.	tian-lt	null	null	null	null	null	null	
2021-05-28 19:19:20.0	2021-06-01 14:58:26.0	2021-06-01 14:58:26.0	closed	[]	0	1553	Add internal CI pipeline	https://api.github.com/repos/microsoft/calculator/issues/1553	https://github.com/microsoft/calculator/pull/1553	Add a build which can be used to verify features like graphing calculator without signing and releasing the build.	mcooley	null	null	null	null	null	null	
2021-05-31 16:04:29.0	null	2021-07-22 12:05:42.0	open	[Bug, Area: User Experience, investigate, Pri: 2]	1	1554	[UI] Programmer mode: BIN number may be displayed incorrectly	https://api.github.com/repos/microsoft/calculator/issues/1554	https://github.com/microsoft/calculator/issues/1554	[UI] Programmer mode: BIN number may be displayed incorrectly (colored in red):  ![image](https://user-images.githubusercontent.com/46918093/120218845-fd67cb00-c242-11eb-9831-25fd71edbd24.png)  	annazolkieve	null	null	null	null	null	null	
2021-06-01 07:22:10.0	null	2021-10-19 05:03:08.0	open	[Enhancement, Pri: 2, needs pitch review]	2	1555	Programmer mode feature request	https://api.github.com/repos/microsoft/calculator/issues/1555	https://github.com/microsoft/calculator/issues/1555	Switching between hex, bin, decimal in programmer mode with CTR+H, CTRL+B, CTRL+D, etc. like on some Linux distros would be nice.	deivse	null	null	null	null	null	null	
2021-06-02 09:51:28.0	2021-06-03 10:04:41.0	2021-06-03 10:04:46.0	closed	[]	1	1556	Fixes up some simple miscellaneous TODO items	https://api.github.com/repos/microsoft/calculator/issues/1556	https://github.com/microsoft/calculator/pull/1556	## Fixes up some simple miscellaneous TODO items      ### Description of the changes:  - #DEBUG is a known C# preprocessor directive  - .Net runtime has a better async programming support  - Some other trivial-like TODO items    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Manually Tested  - Let CI-Pipeline to check UT and UI Tests.  	tian-lt	null	null	null	null	null	null	
2021-06-02 17:09:49.0	2021-06-03 10:23:46.0	2021-07-03 12:00:40.0	closed	[Bug, Area: Accessibility, triage approved, Pri: 2]	1	1557	User is not able to adjust slider properly via keyboard	https://api.github.com/repos/microsoft/calculator/issues/1557	https://github.com/microsoft/calculator/issues/1557	**Repro Steps**  1. Launch 'Calculator'.  2. Home screen will be displayed.​  3. Navigate through Menu using keyboard and select 'Graphing'. 'Graphing' Calculator opens.​  4. Navigate to slider and adjust slider.  5. Observe the issue.     **Actual Result**  User is not able to adjust slider properly via keyboard.    **Expected Result**  User should able to adjust slider properly via keyboard.	MicrosoftIssueBot	null	null	null	null	null	null	
2021-06-02 17:20:39.0	2021-06-02 17:20:48.0	2021-06-02 17:25:43.0	closed	[]	0	1558	Improving keyboard support in VariableValueSlider	https://api.github.com/repos/microsoft/calculator/issues/1558	https://github.com/microsoft/calculator/pull/1558	## Fixes #1557    ### Description of the changes:  - In the Slider control, StepFrequency is used by mouse and SmallChange is used by keyboard arrow keys. This change updates SmallChange to match StepFrequency to align mouse and keyboard behavior.    ### How changes were validated:  - Tested manually    	grochocki	null	null	null	null	null	null	
2021-06-02 17:26:59.0	2021-06-03 10:23:46.0	2021-09-18 06:25:14.0	closed	[fixing approved issue]	0	1559	Improving keyboard support in VariableValueSlider	https://api.github.com/repos/microsoft/calculator/issues/1559	https://github.com/microsoft/calculator/pull/1559	## Fixes #1557    ### Description of the changes:  - In the Slider control, StepFrequency is used by mouse and SmallChange is used by keyboard arrow keys. This change updates SmallChange to match StepFrequency to align mouse and keyboard behavior.    ### How changes were validated:  - Tested manually	grochocki	null	null	null	null	null	null	
2021-06-03 10:09:00.0	null	2021-10-19 05:03:11.0	open	[Pri: 3, tooling]	1	1560	Add native GitHub security and versioning dependency alerts	https://api.github.com/repos/microsoft/calculator/issues/1560	https://github.com/microsoft/calculator/issues/1560	- [Dependabot](https://dependabot.com/) alerts on updates for the project's dated and vulnerable dependencies and automatically creates PRs to easily update them    Pipeline Foundation is **a non-profit initiative** with the sole purpose of giving back to the IT community by assisting OSS projects with DevOps implementations and best practices.    Built with ❤ by [Pipeline Foundation](https://pipeline.foundation).	aleks-ivanov	null	null	null	null	null	null	
2021-06-03 10:09:42.0	2021-06-07 04:44:07.0	2021-06-07 04:44:08.0	closed	[]	1	1561	Resolves: Add native GitHub security and versioning dependency alerts	https://api.github.com/repos/microsoft/calculator/issues/1561	https://github.com/microsoft/calculator/pull/1561	- add `dependabot.yml` which automatically enables Dependabot's dependency versioning scanner and dependency update PRs bot by declaring dependency ecosystems and sources in the project. For dependency security vulnerabilities scanner and vulnerable dependency update PRs bot, [enable "Dependabot alerts" and "Dependabot security updates"](https://docs.github.com/en/github/managing-security-vulnerabilities/configuring-dependabot-security-updates)    - use the `target-branch` attribute, if you would like to run Dependabot's scan against a branch other than your default branch (for example if you have a separate development branch)    - should you decide that certain people on your team should take care of the PRs that Dependabot creates, use the two attributes `assignees` and `reviewers` to automatically set personnel respectively.    Resolves #1560 	aleks-ivanov	null	null	null	null	null	null	
2021-06-03 11:07:06.0	null	2021-10-19 05:03:13.0	open	[Pri: 3, tooling]	1	1562	Add native GitHub continuous code security and quality analysis	https://api.github.com/repos/microsoft/calculator/issues/1562	https://github.com/microsoft/calculator/issues/1562	- [CodeQL](https://github.com/github/codeql) is an open source code scanning tool for discovering vulnerabilities across a codebase    Pipeline Foundation is **a non-profit initiative** with the sole purpose of giving back to the IT community by assisting OSS projects with DevOps implementations and best practices.    Built with ❤ by [Pipeline Foundation](https://pipeline.foundation).	aleks-ivanov	null	null	null	null	null	null	
2021-06-03 11:07:28.0	2021-06-07 04:44:02.0	2021-06-07 04:44:03.0	closed	[]	1	1563	Resolves: Add native GitHub continuous code security and quality analysis	https://api.github.com/repos/microsoft/calculator/issues/1563	https://github.com/microsoft/calculator/pull/1563	- add `codeql-analysis.yml` which automatically enables CodeQL code security and quality scanner. It executes on every push commit, PR, manually and every day at 8:00AM UTC. A scan check can be viewed on commits and PRs. All alerts and fix suggestion can be viewed at **Security** tab -> **Code scanning alerts** -> **CodeQL**    Resolves #1562 	aleks-ivanov	null	null	null	null	null	null	
2021-06-03 16:36:22.0	2021-06-04 14:22:46.0	2021-06-04 14:25:10.0	closed	[]	1	1564	Resolve some warnings	https://api.github.com/repos/microsoft/calculator/issues/1564	https://github.com/microsoft/calculator/pull/1564	## Resolve some warnings      ### Description of the changes:  - Resolve most of the warnings for the C# Calculator    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Tested Manually      	tian-lt	null	null	null	null	null	null	
2021-06-04 14:56:27.0	2021-06-05 14:34:10.0	2021-06-05 14:34:13.0	closed	[]	1	1565	[Cherry-Pick] Add internal CI pipeline (#1553)	https://api.github.com/repos/microsoft/calculator/issues/1565	https://github.com/microsoft/calculator/pull/1565	## [Cherry-Pick] Add internal CI pipeline (#1553)  > Add a build which can be used to verify features like graphing calculator without signing and releasing the build.  	tian-lt	null	null	null	null	null	null	
2021-06-05 17:36:14.0	2021-06-07 01:52:46.0	2021-06-07 01:52:52.0	closed	[]	1	1566	[Cherry-Pick] Temporarily disable PGO NuGet package (#1510)	https://api.github.com/repos/microsoft/calculator/issues/1566	https://github.com/microsoft/calculator/pull/1566	## [Cherry-Pick] Temporarily disable PGO NuGet package (#1510)  > Temporarily disable the build configuration which pulls down a NuGet package containing .pgd files. This enables the project to use a single upstream feed for NuGet.    > Fixing PGO settings longer-term is tracked by #1435.    Cherry-picking this PR can unblock the internal ci pipeline fails for branch *feature/UICSharpCalculator*	tian-lt	null	null	null	null	null	null	
2021-06-06 04:44:56.0	2021-06-07 04:44:35.0	2021-06-07 04:44:38.0	closed	[]	6	1567	[C# Calc]Removes WinMeta.cs	https://api.github.com/repos/microsoft/calculator/issues/1567	https://github.com/microsoft/calculator/pull/1567	## Removes WinMeta.cs      ### Description of the changes:  - Removes WinMeta.cs  - Add a method into Utilities to provide a constant defined in native codebase    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Manually Tested.	tian-lt	null	null	null	null	null	null	
2021-06-06 10:12:00.0	null	2021-10-19 05:03:16.0	open	[Enhancement, Pri: 2, needs pitch review]	7	1568	Rounding the very basic function of calculators.	https://api.github.com/repos/microsoft/calculator/issues/1568	https://github.com/microsoft/calculator/issues/1568	Hi,    I use Windows Calculator 2103 very often.    I am unable to see my divisions rounded up to few decimals like 0.12 or 0.1234.    They are always like 0.1231464164644441964645.    Could you please help me how I can use rounding function for every calculation.    Thank you.    https://www.youtube.com/watch?v=O4xH6zpVrXw	skiygin	null	null	null	null	null	null	
2021-06-06 17:28:01.0	null	2021-08-13 14:16:36.0	open	[Bug, triage approved, Area: User Experience, Pri: 2]	3	1569	CurrencyMode doesn't work while VPN is turned on	https://api.github.com/repos/microsoft/calculator/issues/1569	https://github.com/microsoft/calculator/issues/1569	<!--  Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.  -->    **Describe the bug**  <!-- A clear and concise description of what the bug is. -->  CurrencyMode doesn't work while a full-tunnel VPN is turned on    **Steps To Reproduce**  <!--  Steps to reproduce the behavior:    2. Click on '....'  3. Scroll down to '....'  4. See error  -->  1. Clear the cached data if you have opened Calculator App before.      1. Press 'Start' key on the keyboard.      1. Type 'Calculator' to search for the app.      1. Right click on the search result - Calculator.      1. Choose ***App Settings*** from the popup menu.      1. Go to the *Reset* section and then click on the button ***Reset***.  1. Launch the Calculator App.  1. Navigate to ***Currency*** mode.  1. Bingo - the issue should be reproduced if you see a big blank area and no currency choices.      **Expected behavior**  <!-- A clear and concise description of what you expected to happen. -->  Currency mode should work well.    **Screenshots**  <!-- If applicable, add screenshots to help explain your problem. -->  ![bug-calc-currency](https://user-images.githubusercontent.com/60599517/120934035-47631c00-c72f-11eb-98ca-000ddc81d9de.gif)    **Device and Application Information**   - OS Build:   - Architecture:   - Application Version:   - Region:   - Dev Version Installed:    <!--  Run the following commands in Powershell and copy/paste the output.  " - OS Build: $([Environment]::OSVersion.Version)"  " - Architecture: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Architecture)"  " - Application Version: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Version)"  " - Region: $((Get-Culture).Name)"  " - Dev Version Installed: $($null -ne (Get-AppxPackage -Name Microsoft.WindowsCalculator.Dev))"  -->  OS Build: 10.0.19043.0  Architecture: X64  Application Version: 10.2103.15.0  Region: en-US  Dev Version Installed: False    **Additional context**  *No*    **Requested Assignment**  <!--  Some people just want to report a bug and let someone else fix it.  Other people want to not only submit the bug report, but fix it as well.  Both scenarios are completely ok. We just want to know which one it is.  Please indicate which bucket you fall into by keeping one and removing the other.  -->  I'm just reporting this problem.  I don't want to fix it.  	tian-lt	null	null	null	null	null	null	
2021-06-08 04:33:49.0	2021-06-08 05:13:07.0	2021-06-08 05:13:13.0	closed	[]	0	1570	[C# Calc]Reverts some changes for Currency constants	https://api.github.com/repos/microsoft/calculator/issues/1570	https://github.com/microsoft/calculator/pull/1570	## Reverts some changes for Currency constants    ### Description of the changes:  - Put some constants of DataLoader back to their original namespace    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Tested manually    	tian-lt	null	null	null	null	null	null	
2021-06-08 04:53:39.0	2021-06-08 06:25:23.0	2021-06-08 06:25:25.0	closed	[]	0	1571	[C# Calc] Adjusts Calculator.csproj	https://api.github.com/repos/microsoft/calculator/issues/1571	https://github.com/microsoft/calculator/pull/1571	## Adjusts Calculator.csproj      ### Description of the changes:  - Adds some conditional compiling flags  - Imports internal icons  - Removes a redundant config     ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Tested manually    	tian-lt	null	null	null	null	null	null	
2021-06-08 05:36:27.0	2021-06-08 06:25:03.0	2021-06-08 06:25:07.0	closed	[]	0	1572	[C# Calc] Update2108release - experimental	https://api.github.com/repos/microsoft/calculator/issues/1572	https://github.com/microsoft/calculator/pull/1572	Update release builds to 2108 for C# Calculator	tian-lt	null	null	null	null	null	null	
2021-06-09 09:31:07.0	2021-06-10 01:52:33.0	2021-06-10 01:52:36.0	closed	[]	1	1573	[C# Calc] Fixes BinSkim problems	https://api.github.com/repos/microsoft/calculator/issues/1573	https://github.com/microsoft/calculator/pull/1573	## Fixes BinSkim problems      ### Description of the changes:  - Skip scanning clrcompression.dll  - Add control flow guards for CalcViewModel.dll/GraphControl.dll/TraceLogging.dll      ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Tested locally  - Verified by the internal-ci pipeline    	tian-lt	null	null	null	null	null	null	
2021-06-09 18:55:01.0	2021-06-10 03:16:00.0	2021-06-10 03:16:00.0	closed	[]	0	1574	[Internal build] Remove PackageES LateTasks task	https://api.github.com/repos/microsoft/calculator/issues/1574	https://github.com/microsoft/calculator/pull/1574	Remove the PkgESLateTasks task, which is no longer needed.	mcooley	null	null	null	null	null	null	
2021-06-10 03:23:04.0	2021-06-10 05:29:15.0	2021-06-10 05:29:16.0	closed	[]	1	1575	Fixes an issue around line style	https://api.github.com/repos/microsoft/calculator/issues/1575	https://github.com/microsoft/calculator/pull/1575	## Fixes an issue around line style (Graphing Mode)  Problem: Line Style doesn't show up in the combo box    ### Description of the changes:  - Addes built-in line styles.  - Changes `DoubleCollection.Append()` into `DoubleCollection.Add()`    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Tested manually    	tian-lt	null	null	null	null	null	null	
2021-06-10 05:44:00.0	2021-06-10 06:10:54.0	2021-06-10 06:10:58.0	closed	[]	1	1576	Fixes the missed NULLs	https://api.github.com/repos/microsoft/calculator/issues/1576	https://github.com/microsoft/calculator/pull/1576	## Fixes the missed NULLs in UnitTests  Missing `CommandNULL` is causing violation of access, which will fail the tests randomly.    ### Description of the changes:  - Adds the missed `CommandNULL`    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Tested manually.    	tian-lt	null	null	null	null	null	null	
2021-06-10 06:06:18.0	null	2021-10-19 05:03:18.0	open	[Pri: 1, codebase quality]	1	1577	[UT Enhancement] Replaces NULL-terminated array with a better container to avoid access violation	https://api.github.com/repos/microsoft/calculator/issues/1577	https://github.com/microsoft/calculator/issues/1577	<!--  See https://github.com/Microsoft/calculator/blob/master/docs/NewFeatureProcess.md for suggestions on how to write a good feature pitch. Just want to submit an idea quickly? Try Feedback Hub instead: https://insider.windows.com/en-us/fb/?contextid=130  -->    **Problem Statement**  <!--  What problem are we trying to solve? Who’s the target audience? Is there a customer need or pain point we need to remedy? Is there a business goal or metric we are trying to improve? Do we have a hypothesis we want to prove or disprove?  -->    There are many occurrences in unit test sources that are using NULL-terminated array to store commands.  This is not a good practice because it's very easy to cause access violation problems if someone forgot to put `null` at the end.  Especially, when the array is allocated on the *stack*, it might seems ok to run the test without crashes. However, it's very likely to have some tests failures without proper hints in future.     **Evidence or User Insights**  <!--  Why should we do this? Potential sources of data: Feedback Hub, other GitHub issues, other anecdotes from listening to customers in person or online, request from another team, telemetry data, user research, market or competitive research  -->  PR #1576 fixes an bug caused by access violation.    **Proposal**  <!--  How will the solution/feature help us solve the problem? How will it meet the target audience’s needs? If there are business goals or metrics, how does this improve them?  -->  `std::vector` seems to be a good container in this case.    **Goals**  <!--  What you want to accomplish with this feature. Typical examples include  "User Can *perform some task*"  -->  Improves the quality of both product and test suites.    **Non-Goals**  <!--  Things we are explicitly not doing or supporting or that are out of scope, including reasons why.  -->    **Low-Fidelity Concept**  <!--  Show as much of the experience as needed to explain the idea. This can be as simple as a napkin drawing but can also be a code prototype, or a design comp. Keep it simple at this stage, as it can be refined later during the pre-production stage.  -->    **Requested Assignment**  <!--  Some people just want to suggest a feature and let someone else implement it.  Other people want to not only suggest a feature, but implement it as well.  Both scenarios are completely ok. We just want to know which one it is.  We are likely to prioritize the review of feature requests if they already have someone who can implement them.  Please indicate which bucket you fall into by keeping one and removing the other.  -->  If possible, I would like to implement this.  I'm just suggesting this idea.  I don't want to implement it.  	tian-lt	null	null	null	null	null	null	
2021-06-10 06:17:37.0	2021-06-10 07:57:47.0	2021-06-10 07:57:52.0	closed	[]	0	1578	[Cherry-pick] Fixes the missed NULLs (#1576)	https://api.github.com/repos/microsoft/calculator/issues/1578	https://github.com/microsoft/calculator/pull/1578	## [Cherry-pick] Fixes the missed NULLs (#1576)    >## Fixes the missed NULLs in UnitTests  >Missing CommandNULL is causing violation of access, which will fail the tests randomly.    >## Description of the changes:  > - Adds the missed CommandNULL  > - How changes were validated:  > - Tested manually.  	tian-lt	null	null	null	null	null	null	
2021-06-11 03:47:32.0	2021-06-11 04:45:25.0	2021-06-11 04:45:30.0	closed	[]	0	1579	Fix the Missing Part in Unit Converter Constructor	https://api.github.com/repos/microsoft/calculator/issues/1579	https://github.com/microsoft/calculator/pull/1579	Problem:   - The OfflineBlock doesn't show up while network offline.   - ESC doesn't clear the input as a keyboard shortcut.  - Issue with copy/paste menu.    ### Description of the changes:  - Added the code which were missed during migration into UnitConverter constructor.    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Tested manually.	hanzhang54	null	null	null	null	null	null	
2021-06-11 09:06:15.0	2021-06-11 11:34:59.0	2021-06-11 11:35:02.0	closed	[]	0	1580	Fixes: calculator doesn't remember its previous mode	https://api.github.com/repos/microsoft/calculator/issues/1580	https://github.com/microsoft/calculator/pull/1580	## Fixes: calculator doesn't remember its previous mode  NavigationEventArgs.Parameter is not null but empty string in C# runtime.    ### Description of the changes:  - Check if NavigationEventArgs.Parameter is null or empty string    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Tested manually    	tian-lt	null	null	null	null	null	null	
2021-06-11 13:58:16.0	null	2021-10-19 05:03:20.0	open	[Enhancement, Pri: 2, needs pitch review]	2	1581	Programmer Calculator - Please add a feature to convert 8 bit words to their respective ASCII characters	https://api.github.com/repos/microsoft/calculator/issues/1581	https://github.com/microsoft/calculator/issues/1581	<!--  See https://github.com/Microsoft/calculator/blob/master/docs/NewFeatureProcess.md for suggestions on how to write a good feature pitch. Just want to submit an idea quickly? Try Feedback Hub instead: https://insider.windows.com/en-us/fb/?contextid=130  -->    **Problem Statement**  <!--  I am currently debugging UART communication with an oscilloscope and as of now I have to read the binary bits, convert to hex with the calculator, then look in a table for ASCII characters.   -->  I am currently debugging UART communication with an oscilloscope and as of now I have to read the binary bits, convert to hex with the calculator, then look in a table for ASCII characters.   **Evidence or User Insights**  <!--  As of now the calculator only deals with raw numbers and data formulations. Adding this feature would connect the calculator more to the real world applications. I am an Electrical Engineer.  -->  As of now the calculator only deals with raw numbers and data formulations. Adding this feature would connect the calculator more to the real world applications. I am an Electrical Engineer.    **Proposal**  <!--  This makes the calculator more functional and reduces the need for a table of ascii characters.  -->  This makes the calculator more functional and reduces the need for a table of ascii characters.    **Goals**  <!--  It would be nice if there was a keyboard that included the entire table, and you could type in ascii and see the binary, hex, etc.  -->  It would be nice if there was a keyboard that included the entire table, and you could type in ascii and see the binary, hex, etc.    **Non-Goals**  <!--  Performing math with ascii characters would be nice, but not necessary.  -->  Performing math with ascii characters would be nice, but not necessary.    **Low-Fidelity Concept**  <!--  Have a condensed ascii character keyboard that contains only letters and numbers, with an option to expand it to the full table. If this is too much room, then simply have an option to type the character or pull one from an expandable list that is in a separate window. It wouldn't make sense to include by default the ascii character option in along with binary, decimal, hex, and octal, because ascii characters are not a number base. Perhaps add a checkbox to enable or disable this format (show or not show it along with all the other number types)  -->  Have a condensed ascii character keyboard that contains only letters and numbers, with an option to expand it to the full table. If this is too much room, then simply have an option to type the character or pull one from an expandable list that is in a separate window. It wouldn't make sense to include by default the ascii character option in along with binary, decimal, hex, and octal, because ascii characters are not a number base. Perhaps add a checkbox to enable or disable this format (show or not show it along with all the other number types)    **Requested Assignment**  <!--    -->    I'm just suggesting this idea.  I don't want to implement it.  	natewg60101	null	null	null	null	null	null	
2021-06-11 18:58:00.0	2021-06-11 21:44:03.0	2021-06-11 21:44:03.0	closed	[codebase quality]	0	1582	Update service connection	https://api.github.com/repos/microsoft/calculator/issues/1582	https://github.com/microsoft/calculator/pull/1582	Updates the StoreBroker service connection to a Calculator specific one    	joseartrivera	null	null	null	null	null	null	
2021-06-12 14:36:23.0	null	2021-07-22 07:59:35.0	open	[Bug, triage approved, Area: User Experience, Pri: 1]	2	1583	Division bug in Programmer Calculator DEC mode	https://api.github.com/repos/microsoft/calculator/issues/1583	https://github.com/microsoft/calculator/issues/1583	**Describe the bug**  There's weird bug when you divide 4294967296 (0x100000000) by 255 (0xFF) in DEC mode. The output is 0  Also happens with:  4294967297 (0x100000001)  4294967298 (0x100000002)  4294967299 (0x100000003)  4294967300 (0x100000004)  4294967301 (0x100000005)  4294967302 (0x100000006)  4294967303 (0x100000007)    **Steps To Reproduce**  DEC way  1. Go to Programmer Calculator  2. Click on `DEC`  3. Enter `4294967296`  4. Press `/` (Divide)  5. Enter `255`  6. Press `=` (Result)  7. See error    HEX way  1. Go to Programmer Calculator  2. Click on `HEX`  3. Enter `100000000`  4. Press `/` (Divide)  5. Enter `FF`  6. Click on `DEC`  7. Press `=` (Result)  8. See error    **Expected behavior**  Result should be 16843009 (0x1010101)    **Screenshots**  Screenshots may be not enough so I had recorded video  https://www.youtube.com/watch?v=J4If2A0BnQo    **Device and Application Information**   - OS Build: 10.0.19043.0   - Architecture: x64   - Application Version: 10.2103.8.0   - Region: ru-RU   - Dev Version Installed: False    **Requested Assignment**  I'm just reporting this problem.  I don't want to fix it.  	korenkonder	null	null	null	null	null	null	
2021-06-13 11:05:46.0	null	2021-07-22 15:19:12.0	open	[Bug, Area: User Experience, investigate, Pri: 2]	2	1584	Mach calculator correction / Speed Conversions	https://api.github.com/repos/microsoft/calculator/issues/1584	https://github.com/microsoft/calculator/issues/1584	Hi,    Please correct the mach calculator.  Mach number is not constant.  It varies with local outside temperature.  The correct formala is below.    ![resim](https://user-images.githubusercontent.com/85436360/121804590-ca183980-cc4f-11eb-8669-5c65174a5923.png)    M: Mach Number  TAS : True Air Speed in knots.  C: Local temperature in celcius    Thanks.	skiygin	null	null	null	null	null	null	
2021-06-15 02:51:39.0	2021-06-15 06:11:15.0	2021-06-15 06:11:20.0	closed	[]	0	1585	Fixes: GraphingNumber doesn't work correctly	https://api.github.com/repos/microsoft/calculator/issues/1585	https://github.com/microsoft/calculator/pull/1585	## Fixes: GraphingNumber doesn't work correctly  Problem: The expressions input from number pad doesn't work.    ### Description of the changes:  - Checks out on null or empty for the retval of GetMathTextProperty()    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Tested manually    	tian-lt	null	null	null	null	null	null	
2021-06-15 05:22:20.0	2021-06-15 06:11:47.0	2021-06-15 06:11:51.0	closed	[]	0	1586	Fixes XAML binding for HistoryList	https://api.github.com/repos/microsoft/calculator/issues/1586	https://github.com/microsoft/calculator/pull/1586	## Fixes XAML binding for HistoryList      ### Description of the changes:  - Fixes the binding of RowHeight    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Tested manually  	tian-lt	null	null	null	null	null	null	
2021-06-18 15:17:17.0	2021-06-28 06:50:39.0	2021-07-28 12:00:47.0	closed	[Bug, not repro]	10	1587	Calculator doesn't adhere to Bodmas or Pemdas rules	https://api.github.com/repos/microsoft/calculator/issues/1587	https://github.com/microsoft/calculator/issues/1587	Scientific Mode    Unless I am doing something wrong, if we look at the following math equation    8/2(2+2) = ?    If we follow the principle of BODMAS and PEMDAS, this should equate to    8/2x4    This then equates to    8/8    which equals 1    So why does the calculator not follow these BODMAS and PEMDAS rules, when giving an answer? As far back as I have been using Windows, the calculator has never followed these rules.      When entering this into the Calculator one has to enter it    8 / 2 x ( 2 + 2 )    and it still gives the answer as 16, and not the correct answer 1,     And it will not work with    8/2(2+2)      	cyberangel67	null	null	null	null	null	null	
2021-06-22 11:24:52.0	2021-06-28 06:27:18.0	2021-07-28 12:00:46.0	closed	[Bug, external]	3	1588	Switching from compact overlay to full screen doesn't change the layout	https://api.github.com/repos/microsoft/calculator/issues/1588	https://github.com/microsoft/calculator/issues/1588	<!--  Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.  -->    **Describe the bug**  Windows provides a universal shortcut for full screen in all CoreWindow based apps: Windows+Shift+Enter. I've noticed that in Calculator when you invoke that hotkey while being in compact overlay, the layout doesn't get changed to the normal layout.    **Steps To Reproduce**  <!--  Steps to reproduce the behavior:  1. Open Calculator  2. Enter compact overlay mode  3. Windows+Shift+Enter  4. See the issue  -->    **Expected behavior**  When you full screen it from compact overlay, it should go back to the normal layout.    **Capture**  Here's a recording showcasing the issue.  ![2021-06-22-164924_Trim](https://user-images.githubusercontent.com/45227503/122916585-adc87b00-d37a-11eb-99da-a00e1cc29ebb.gif)      **Device and Application Information**   - OS Build: 10.0.21390.0   - Architecture: x64   - Application Version: 10.2103.8.0   - Region: en-US   - Dev Version Installed: False  <!--  Run the following commands in Powershell and copy/paste the output.  " - OS Build: $([Environment]::OSVersion.Version)"  " - Architecture: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Architecture)"  " - Application Version: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Version)"  " - Region: $((Get-Culture).Name)"  " - Dev Version Installed: $($null -ne (Get-AppxPackage -Name Microsoft.WindowsCalculator.Dev))"  -->    **Requested Assignment**  <!--  Some people just want to report a bug and let someone else fix it.  Other people want to not only submit the bug report, but fix it as well.  Both scenarios are completely ok. We just want to know which one it is.  Please indicate which bucket you fall into by keeping one and removing the other.  -->  If possible, I would like to fix this.	Jaiganeshkumaran	null	null	null	null	null	null	
2021-06-23 14:36:55.0	2021-06-24 03:17:55.0	2021-06-24 03:22:13.0	closed	[]	1	1589	[C# Calc] Resolve some TODO items for C# conversion	https://api.github.com/repos/microsoft/calculator/issues/1589	https://github.com/microsoft/calculator/pull/1589	## [C# Calc] Resolve some TODO items for C# conversion      ### Description of the changes:  - renames: `LocalizationSettings::InitializeLocalizationSettings()` ➡️  `LocalizationSettings::Initialize`  - exports `TraceLogger::LogPlatformException` as `TraceLogger::LogPlatformExceptionInfo` since `Platform::Exception` doesn't cross ABI boundary.  - exports `TraceLogger::LogInputPasted`  - leaves some comments for `ViewModel::Common::Utilities`  - fixes an `if` condition in *GraphingSettings.xaml.cs*    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Tested manually    	tian-lt	null	null	null	null	null	null	
2021-06-24 06:47:40.0	2021-08-09 03:24:45.0	2021-09-08 06:00:44.0	closed	[Bug, Pri: 3, triage approved, Area: User Experience]	2	1590	Ctrl+E shortcuts still work in AoT mode	https://api.github.com/repos/microsoft/calculator/issues/1590	https://github.com/microsoft/calculator/issues/1590	**Describe the bug**  Ctrl+E shortcuts still work in AoT mode, allowing users to switch to Date Calculation mode while in AoT.    **Steps To Reproduce**  Toggle AoT  Press Ctrl+E	guominrui	null	null	null	null	null	null	
2021-06-26 14:51:14.0	2021-06-28 14:58:01.0	2021-06-28 14:58:02.0	closed	[]	0	1591	Spelling fix in azure-pipelines.ci.yaml	https://api.github.com/repos/microsoft/calculator/issues/1591	https://github.com/microsoft/calculator/pull/1591	architecutres -> architectures, as @jogo- [noticed](https://github.com/microsoft/calculator/commit/49f288316bd1fcfc5a6c2779b132c3ad99476dcb#r52689998).	mcooley	null	null	null	null	null	null	
2021-06-27 22:39:05.0	2021-08-09 07:59:22.0	2021-09-08 12:00:45.0	closed	[Bug, Area: Reliability, investigate, Pri: 2]	5	1592	Calculator on Graphing mode crashes when I click on either "share" button  or "switch to equation mode" button.  	https://api.github.com/repos/microsoft/calculator/issues/1592	https://github.com/microsoft/calculator/issues/1592	it crashed on "void GraphingCalculator::OnDataRequested(DataTransferManager ^ sender, DataRequestedEventArgs ^ args)" line 373  auto bitmapStream = GraphingControl->GetGraphBitmapStream();    It throws Unhandled Exception:  "Unhandled exception at 0x00007FFA83091208 (ucrtbase.dll) in Calculator.exe: An invalid parameter was passed to a function that considers invalid parameters fatal."	pualo2014	null	null	null	null	null	null	
2021-06-27 22:43:10.0	2021-06-28 06:21:35.0	2021-07-28 12:00:45.0	closed	[Bug, won't fix]	2	1593	Currency is a solar system currency than earth curreny.	https://api.github.com/repos/microsoft/calculator/issues/1593	https://github.com/microsoft/calculator/issues/1593	Would be possible to fix  <!--  Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.  -->    **Describe the bug**  <!-- A clear and concise description of what the bug is. -->    **Steps To Reproduce**  <!--  Steps to reproduce the behavior:  1. Go to '...'  2. Click on '....'  3. Scroll down to '....'  4. See error  -->    **Expected behavior**  <!-- A clear and concise description of what you expected to happen. -->    **Screenshots**  <!-- If applicable, add screenshots to help explain your problem. -->    **Device and Application Information**   - OS Build:   - Architecture:   - Application Version:   - Region:   - Dev Version Installed:    <!--  Run the following commands in Powershell and copy/paste the output.  " - OS Build: $([Environment]::OSVersion.Version)"  " - Architecture: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Architecture)"  " - Application Version: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Version)"  " - Region: $((Get-Culture).Name)"  " - Dev Version Installed: $($null -ne (Get-AppxPackage -Name Microsoft.WindowsCalculator.Dev))"  -->    **Additional context**  <!-- Add any other context about the problem here. -->    **Requested Assignment**  <!--  Some people just want to report a bug and let someone else fix it.  Other people want to not only submit the bug report, but fix it as well.  Both scenarios are completely ok. We just want to know which one it is.  Please indicate which bucket you fall into by keeping one and removing the other.  -->  If possible, I would like to fix this.  I'm just reporting this problem.  I don't want to fix it.  	pualo2014	null	null	null	null	null	null	
2021-06-27 22:45:37.0	2021-06-28 06:19:58.0	2021-07-28 12:00:44.0	closed	[Bug, won't fix]	2	1594	How to disable or Gray out the "Graphing" mode as it crashes.	https://api.github.com/repos/microsoft/calculator/issues/1594	https://github.com/microsoft/calculator/issues/1594	Would you please provide a way gray out or disable the "graphing" button. I am a developer. I am trying to grayout the graphing in the main menu so we don't click on it ... till it is fixed.    <!--  See https://github.com/Microsoft/calculator/blob/master/docs/NewFeatureProcess.md for suggestions on how to write a good feature pitch. Just want to submit an idea quickly? Try Feedback Hub instead: https://insider.windows.com/en-us/fb/?contextid=130  -->    **Problem Statement**  <!--  What problem are we trying to solve? Who’s the target audience? Is there a customer need or pain point we need to remedy? Is there a business goal or metric we are trying to improve? Do we have a hypothesis we want to prove or disprove?  -->    **Evidence or User Insights**  <!--  Why should we do this? Potential sources of data: Feedback Hub, other GitHub issues, other anecdotes from listening to customers in person or online, request from another team, telemetry data, user research, market or competitive research  -->    **Proposal**  <!--  How will the solution/feature help us solve the problem? How will it meet the target audience’s needs? If there are business goals or metrics, how does this improve them?  -->    **Goals**  <!--  What you want to accomplish with this feature. Typical examples include  "User Can *perform some task*"  -->    **Non-Goals**  <!--  Things we are explicitly not doing or supporting or that are out of scope, including reasons why.  -->    **Low-Fidelity Concept**  <!--  Show as much of the experience as needed to explain the idea. This can be as simple as a napkin drawing but can also be a code prototype, or a design comp. Keep it simple at this stage, as it can be refined later during the pre-production stage.  -->    **Requested Assignment**  <!--  Some people just want to suggest a feature and let someone else implement it.  Other people want to not only suggest a feature, but implement it as well.  Both scenarios are completely ok. We just want to know which one it is.  We are likely to prioritize the review of feature requests if they already have someone who can implement them.  Please indicate which bucket you fall into by keeping one and removing the other.  -->  If possible, I would like to implement this.  I'm just suggesting this idea.  I don't want to implement it.  	pualo2014	null	null	null	null	null	null	
2021-06-28 06:01:46.0	2021-06-28 09:27:29.0	2021-06-28 09:37:20.0	closed	[]	1	1595	[C# Calc][Cherry-Pick] Improving keyboard support in VariableValueSlider (#1559)	https://api.github.com/repos/microsoft/calculator/issues/1595	https://github.com/microsoft/calculator/pull/1595	## Cherry-Pick: Improving keyboard support in VariableValueSlider (#1559)      ### Description of the changes:  > ## Fixes #1557  > ### Description of the changes:  > - In the Slider control, StepFrequency is used by mouse and SmallChange is used by keyboard arrow keys. This change updates > SmallChange to match StepFrequency to align mouse and keyboard behavior.  > ### How changes were validated:  > - Tested manually        	tian-lt	null	null	null	null	null	null	
2021-06-29 03:38:46.0	2021-06-30 06:07:30.0	2021-06-30 06:07:35.0	closed	[]	1	1596	[C# Calc] Fixes: Keep the value away from getting rounded in Graphing Mode	https://api.github.com/repos/microsoft/calculator/issues/1596	https://github.com/microsoft/calculator/pull/1596	## Fixes: Keep the value away from getting rounded in Graphing Mode      ### Description of the changes:  - Uses "G" instead of "0" as the format-specifier, which works equivalently to `std::noshowpoint`.      ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Tested manually  	tian-lt	null	null	null	null	null	null	
2021-06-29 05:45:26.0	2021-07-01 00:54:38.0	2021-07-01 00:54:43.0	closed	[]	1	1597	Fixes up the button-light-up time	https://api.github.com/repos/microsoft/calculator/issues/1597	https://github.com/microsoft/calculator/pull/1597	## Fixes up the button-light-up time      ### Description of the changes:  - Changing 500ms to 50ms regarding its original impl in C++/CX codebase (5e5 100ns = 50ms)    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Tested manually    	tian-lt	null	null	null	null	null	null	
2021-07-01 07:04:51.0	2021-07-15 09:12:38.0	2021-07-15 09:12:42.0	closed	[Enhancement]	3	1598	Hello C# - Migrating the codebase from C++/CX to C# (Phase 1)	https://api.github.com/repos/microsoft/calculator/issues/1598	https://github.com/microsoft/calculator/pull/1598	## Hello C# - Migrating the codebase from C++/CX to C# (Phase 1)  This PR is Related to issue #893    ### Description of the changes:  - Migrates the View layer from C++/CX to C#  - Changes CalcViewModel into a Windows Runtime Component library  - Adjusts pipelines and project configuration for the C# codebase    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  #### Manual Tests Results for Branch [feature/UICSharpCalculator](https://github.com/microsoft/calculator/tree/feature/UICSharpCalculator)  - **Test State**: Completed  - **Test Health**: Green  - **Platforms(s)**: Desktop VM & Desktop & Surface Pro 7+ & HP laptop   - **OS Build(s)**: RS4 (17134.1.180410-1804), RS5 (17763.1.180914-1434), 21H1(19043.1052), VB (19041.1.191206-1406), Co (22000.1)  - **App Build**: Calculator -Release 0.2106.1402.0  	tian-lt	null	null	null	null	null	null	
2021-07-05 09:49:01.0	2021-07-06 14:39:35.0	2021-07-06 14:39:38.0	closed	[]	1	1599	[C# Calc] Cleanup TODOs: If device's display size (diagonal length) is less than 7 inches then keep the calc always in Portrait mode only	https://api.github.com/repos/microsoft/calculator/issues/1599	https://github.com/microsoft/calculator/pull/1599	## [C# Calc] Cleanup TODOs: If device's display size (diagonal length) is less than 7 inches then keep the calc always in Portrait mode only      ### Description of the changes:  - Export GetIntegratedDisplaySize() from CalcViewModel since no substitution can be found in C#.      ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Tested Manually  	tian-lt	null	null	null	null	null	null	
2021-07-06 09:55:58.0	2021-07-22 07:54:24.0	2021-08-21 12:00:43.0	closed	[Bug, won't fix]	2	1600	Gamma Function being used for Factorial Values	https://api.github.com/repos/microsoft/calculator/issues/1600	https://github.com/microsoft/calculator/issues/1600	**Describe the bug**  Factorial Function gives values for Floating Decimal Numbers (being approximated with Gamma Function) while mathematically Factorial is only defined for Non-Negative Integers.    **Steps To Reproduce**  1. Open the Calculator App  2. Select the Scientific Version  3. Enter any floating number  4. Press the ! (Factorial ) Button  5. Voila ! It gives the value of Gamma Function of Value given in Step number 4    **Expected behavior**  Throw Error     **Screenshots**  <!-- If applicable, add screenshots to help explain your problem. -->    **Device and Application Information**   - OS Build: 10.0.18363.0   - Architecture: X64   - Application Version: 10.2103.8.0   - Region: en-US   - Dev Version Installed: False  	ankurtri	null	null	null	null	null	null	
2021-07-09 07:29:44.0	null	2021-10-19 05:03:23.0	open	[Enhancement, Pri: 2, needs pitch review]	2	1601	Add "Copy All" menu in programmers mode.	https://api.github.com/repos/microsoft/calculator/issues/1601	https://github.com/microsoft/calculator/issues/1601	<!--  See https://github.com/Microsoft/calculator/blob/master/docs/NewFeatureProcess.md for suggestions on how to write a good feature pitch. Just want to submit an idea quickly? Try Feedback Hub instead: https://insider.windows.com/en-us/fb/?contextid=130  -->    **Problem Statement**  <!--  What problem are we trying to solve? Who’s the target audience? Is there a customer need or pain point we need to remedy? Is there a business goal or metric we are trying to improve? Do we have a hypothesis we want to prove or disprove?  -->    We need few times select copy if we want copy some values in programmers mode.    **Evidence or User Insights**  <!--  Why should we do this? Potential sources of data: Feedback Hub, other GitHub issues, other anecdotes from listening to customers in person or online, request from another team, telemetry data, user research, market or competitive research  -->    It's hard to copy to clipboard many times when we want copy some values.    **Proposal**  <!--  How will the solution/feature help us solve the problem? How will it meet the target audience’s needs? If there are business goals or metrics, how does this improve them?  -->    Add "Copy All" menu that copy all value(hex, dec, oct, bin) to clipboard.    **Goals**  <!--  What you want to accomplish with this feature. Typical examples include  "User Can *perform some task*"  -->  Copy all values to clipboard in order as follow:    1. hex  2. dec  3. oct  4. bin    **Low-Fidelity Concept**  <!--  Show as much of the experience as needed to explain the idea. This can be as simple as a napkin drawing but can also be a code prototype, or a design comp. Keep it simple at this stage, as it can be refined later during the pre-production stage.  -->      ![anim](https://user-images.githubusercontent.com/424371/125040257-63f9c780-e0d2-11eb-963f-c8a8edd0ef11.gif)      **Requested Assignment**  <!--  Some people just want to suggest a feature and let someone else implement it.  Other people want to not only suggest a feature, but implement it as well.  Both scenarios are completely ok. We just want to know which one it is.  We are likely to prioritize the review of feature requests if they already have someone who can implement them.  Please indicate which bucket you fall into by keeping one and removing the other.  -->  If possible, I would like to implement this.  	SaitoYutaka	null	null	null	null	null	null	
2021-07-09 18:12:24.0	2021-07-15 17:04:39.0	2021-07-15 17:04:39.0	closed	[]	1	1602	Fix compiler warnings	https://api.github.com/repos/microsoft/calculator/issues/1602	https://github.com/microsoft/calculator/pull/1602		AtariDreams	null	null	null	null	null	null	
2021-07-12 13:54:34.0	null	2021-10-19 05:03:25.0	open	[Enhancement, Pri: 2, needs pitch review]	2	1603	Plotting Modular Equations/Functions	https://api.github.com/repos/microsoft/calculator/issues/1603	https://github.com/microsoft/calculator/issues/1603	This is just a suggestion, it would be great if we are able to plot modular equations too.    e.g.: `𝑦^2 = (𝑥^3 + ax + b) mod 50` OR `𝑦^2 = (𝑥^3 + ax + b) % 50` OR `𝑦^2 = mod(𝑥^3 + ax + b, 50)`	kanhavishva	null	null	null	null	null	null	
2021-07-12 14:13:13.0	null	2021-10-19 05:03:28.0	open	[Enhancement, Pri: 2, needs pitch review]	2	1604	Log scale in graphing mode	https://api.github.com/repos/microsoft/calculator/issues/1604	https://github.com/microsoft/calculator/issues/1604	<!--  See https://github.com/Microsoft/calculator/blob/master/docs/NewFeatureProcess.md for suggestions on how to write a good feature pitch. Just want to submit an idea quickly? Try Feedback Hub instead: https://insider.windows.com/en-us/fb/?contextid=130  -->    **Problem Statement**  <!--  What problem are we trying to solve? Who’s the target audience? Is there a customer need or pain point we need to remedy? Is there a business goal or metric we are trying to improve? Do we have a hypothesis we want to prove or disprove?  -->  Many plots are better viewed in log domain. Especially in science these occur more frequently. It would be great if there would be an option to toggle log domain for the x and y axes separately.	n-gao	null	null	null	null	null	null	
2021-07-13 03:15:36.0	null	2021-07-30 09:05:38.0	open	[fixing approved issue]	1	1605	Fix Focus bug by proactively moving focus before the ListView is updated	https://api.github.com/repos/microsoft/calculator/issues/1605	https://github.com/microsoft/calculator/pull/1605	## Fixes #.  #312     ### Description of the changes:  The reason why focus never went to a sensible place after removing an item from the memory list is because focus was on the flyout menu when the item got removed. Focus was then re-evaluated when the flyout menu went away. The XAML Focus Manager in this scenario will try to move focus back to what had it before the flyout menu was invoked, but we removed that item.    The fix implemented in this change proactively moves focus to the correct element right before mutating the memory item list. This is accomplished in 2 steps. First, we hide the Flyout menu so that the XAML Focus Manager moves focus back into the ListView. Second, we move Focus Up or Down depending on which is more reasonable (Up if the last element is being removed otherwise Down).    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Manually went through the repro steps and removed an item in the middle of the memory list (with a list size > 3). Saw that focus was on the expected memory item after the remove.  - Manually went through the repro steps and removed the last memory item (with a list size > 3). Saw that focus moved to the new last item after the removal.  - Manually went through the repro steps and removed the first memory item when the list size is of size 1. Saw that focus moved to the XAML element above where the empty list is (The XAML element that contains the Header and Memory buttons)    	zherman	null	null	null	null	null	null	
2021-07-13 05:54:41.0	2021-07-27 19:20:11.0	2021-08-27 00:00:41.0	closed	[Enhancement, Pri: 1]	3	1606	Update to WinUI 2.6	https://api.github.com/repos/microsoft/calculator/issues/1606	https://github.com/microsoft/calculator/issues/1606	Update to WinUI 2.6 styles and controls.	grochocki	null	null	null	null	null	null	
2021-07-14 13:57:21.0	null	2021-10-19 05:03:31.0	open	[Enhancement, Pri: 2, needs pitch review]	2	1607	Steps Check and Replacer	https://api.github.com/repos/microsoft/calculator/issues/1607	https://github.com/microsoft/calculator/issues/1607	**Problem**  Some users enter long equations and when they mistype an equation they only realize it after using a mathematical operator. As a result, the users are forced to enter their equation again.     **Feature Explanation**  I think a new feature that would be reasonable to add would be a steps checker. This feature will be a button when clicked, which will show the equation the user typed. After the implementation of this feature, it would be a good idea to be able to replace a number in the equation, in case there is a typo. If implemented, this feature will be handy to many users of the MS Calculator. In addition, many handheld calculators have this feature and it would be more realistic to use it in a digital calculator as well.     **Result**  After users realize they made a mistake, they can use the steps checker and go back to their input and they can replace their desired number. If they notice they mistyped a number, they can use the number replacer to replace the number in the equation.       **Feature Being Added**  - [x] Ability to review the steps of an equation  - [x] Ability to replace numbers and have the equation updated    **Example**  A user (Bob) enters the equation 3 + 2 and gets the sum 5.  With the steps checker, the user should be able to see what he entered. When he presses the button, he should see 3, once pressed again he should see the operator, the third time after pressing the button he should get 2 and eventually 5. Bob realizes he has typed in the wrong number. The number two should be three. He uses the steps checker to cycle through and gets to the number 2. Then he presses the replace button and replaces 2 to 3. After that, the equation auto-updates itself and it displays 3 + 3 = 6.    **Final**  For now, I want someone else to implement the idea. Later on, if possible, I might create a PR and I will link it to this issue. 	X-Developer-Studios	null	null	null	null	null	null	
2021-07-14 14:18:10.0	2021-07-14 14:25:46.0	2021-07-14 14:25:46.0	closed	[]	0	1608	Update .clang-format	https://api.github.com/repos/microsoft/calculator/issues/1608	https://github.com/microsoft/calculator/pull/1608	## Fixes  Changed cpp11 to cpp17.   Upgraded to the latest version to enhance performance. 	X-Developer-Studios	null	null	null	null	null	null	
2021-07-15 15:02:39.0	null	2021-08-25 03:12:55.0	open	[Bug, Area: User Experience, investigate, Pri: 2]	3	1609	When the window is big enough, the sidebar should be pinned open	https://api.github.com/repos/microsoft/calculator/issues/1609	https://github.com/microsoft/calculator/issues/1609	It's annoying to have to repeatedly open the sidebar each time I want to change modes. Save me a click and take advantage of the extra screen estate when maximized!	fitojb	null	null	null	null	null	null	
2021-07-15 17:05:06.0	2021-09-02 19:11:43.0	2021-09-02 19:11:43.0	closed	[]	0	1610	Fix compiler warnings	https://api.github.com/repos/microsoft/calculator/issues/1610	https://github.com/microsoft/calculator/pull/1610	### Description of the changes:  - Changed C casts to appropriate C++ casts  - Fixed a potential nullptr   - Rewrote some loops to be cleaner    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - All tests passed  - Manual testing  	AtariDreams	null	null	null	null	null	null	
2021-07-16 04:17:07.0	2021-07-22 07:29:57.0	2021-08-21 12:00:42.0	closed	[duplicate, Enhancement, Pri: 2]	3	1611	Add Mica Material	https://api.github.com/repos/microsoft/calculator/issues/1611	https://github.com/microsoft/calculator/issues/1611	<!--  See https://github.com/Microsoft/calculator/blob/master/docs/NewFeatureProcess.md for suggestions on how to write a good feature pitch. Just want to submit an idea quickly? Try Feedback Hub instead: https://insider.windows.com/en-us/fb/?contextid=130  -->    **Problem Statement**  <!--  What problem are we trying to solve? Who’s the target audience? Is there a customer need or pain point we need to remedy? Is there a business goal or metric we are trying to improve? Do we have a hypothesis we want to prove or disprove?  -->  Mica would look nicer in the app than acrylic  **Evidence or User Insights**  <!--  Why should we do this? Potential sources of data: Feedback Hub, other GitHub issues, other anecdotes from listening to customers in person or online, request from another team, telemetry data, user research, market or competitive research  -->  Microsoft is adding Mica to apps instead of Acrylic like File Explorer and Settings in Windows 11  **Proposal**  <!--  How will the solution/feature help us solve the problem? How will it meet the target audience’s needs? If there are business goals or metrics, how does this improve them?  -->  Mica Material    **Goals**  <!--  What you want to accomplish with this feature. Typical examples include  "User Can *perform some task*"  -->  Better performance compared to Acrylic.    **Non-Goals**  <!--  Things we are explicitly not doing or supporting or that are out of scope, including reasons why.  -->    **Low-Fidelity Concept**  <!--  Show as much of the experience as needed to explain the idea. This can be as simple as a napkin drawing but can also be a code prototype, or a design comp. Keep it simple at this stage, as it can be refined later during the pre-production stage.  -->    **Requested Assignment**  <!--  Some people just want to suggest a feature and let someone else implement it.  Other people want to not only suggest a feature, but implement it as well.  Both scenarios are completely ok. We just want to know which one it is.  We are likely to prioritize the review of feature requests if they already have someone who can implement them.  Please indicate which bucket you fall into by keeping one and removing the other.  -->  If possible, I would like to implement this.	sumeshir26	null	null	null	null	null	null	
2021-07-18 17:47:13.0	null	2021-10-19 05:03:33.0	open	[Enhancement, Pri: 2, needs pitch review]	2	1612	Factorial in graphical mode	https://api.github.com/repos/microsoft/calculator/issues/1612	https://github.com/microsoft/calculator/issues/1612	**Problem Statement**  There is currently no way (or at least I don't think so) to add the factorial sign using the graphical mode whereas you can use it in the scientific mode.    **Evidence or User Insights**  Using x! or fact(x) sends an error or ask the user to inset a value for f, a, c and t in the second case.    **Proposal**  Add the factorial sign for concistency	Aarrn33	null	null	null	null	null	null	
2021-07-20 18:56:20.0	2021-07-21 01:04:34.0	2021-07-23 10:52:23.0	closed	[]	1	1613	fixed titlebar	https://api.github.com/repos/microsoft/calculator/issues/1613	https://github.com/microsoft/calculator/pull/1613	What?  When active, Calc title bar is impossible to read in Night Sky theme    Updated:  - Cal title bar is visible in Night Sky theme  - Remove the foreground and clean up the code      	huytheduong	null	null	null	null	null	null	
2021-07-21 09:58:00.0	2021-07-22 07:27:22.0	2021-08-21 12:00:41.0	closed	[Bug, duplicate]	3	1614	calculator doesn't understand multiplication sign	https://api.github.com/repos/microsoft/calculator/issues/1614	https://github.com/microsoft/calculator/issues/1614	**Describe the bug**  Calculator understand "asterisk" (U+002A) as multiplication, but it doesn't understand "multiplication" (U+00D7). Similarly, it understand "solidus" (U+002F) as a division, but doesn't understand "division" (U+00F7) nor "division slash" (U+2215). Also it doesn't understand U+2044, "fraction slash".    **Steps To Reproduce**  Open calculator, and try to enter e.g. "2×2"    **Screenshots**    **Device and Application Information**   - OS Build: 10.0.19043.1083   - Architecture: x86, 64 bit   - Application Version: 10.2103.8.0   - Region:   - Dev Version Installed:    <!--  Run the following commands in Powershell and copy/paste the output.  " - OS Build: $([Environment]::OSVersion.Version)"  " - Architecture: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Architecture)"  " - Application Version: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Version)"  " - Region: $((Get-Culture).Name)"  " - Dev Version Installed: $($null -ne (Get-AppxPackage -Name Microsoft.WindowsCalculator.Dev))"  -->    **Additional context**  <!-- Add any other context about the problem here. -->    **Requested Assignment**   I can make PR for this, but I have no time to dig in code to find where is keyboard handled. If anyone give me hint (name of source file), I would create PR with appropriate changes.    <!--  Some people just want to report a bug and let someone else fix it.  Other people want to not only submit the bug report, but fix it as well.  Both scenarios are completely ok. We just want to know which one it is.  Please indicate which bucket you fall into by keeping one and removing the other.  -->  	pkar70	null	null	null	null	null	null	
2021-07-22 05:25:32.0	2021-07-22 07:13:13.0	2021-07-22 07:13:17.0	closed	[]	0	1615	Fixed the display issue in AOT mode	https://api.github.com/repos/microsoft/calculator/issues/1615	https://github.com/microsoft/calculator/pull/1615	### Description of the issue:  After Calculator enters AOT mode, it looks good to change the window size with the UI controls’ size changed coordinately when the window size is large. However, if we keep decreasing the window size, we will see the UI control’s height is always automatically adapted to the window size while the width stops adapting to smaller size at a certain point.     ### Description of the changes:  This issue is caused by the WinUI 2.6 NavigationView. A workaround is to set the OpenPaneLength to be smaller than the minimum window width in AOT mode.    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  Passed the build and manually tested different window size in AOT mode.    	hanzhang54	null	null	null	null	null	null	
2021-07-22 05:34:11.0	2021-07-22 08:19:34.0	2021-07-27 06:19:19.0	closed	[]	0	1616	Fix CalendarView style in DateCalculation of dark mode	https://api.github.com/repos/microsoft/calculator/issues/1616	https://github.com/microsoft/calculator/pull/1616	### Description of the changes:  - Fix the CalendarView style in DateCalculation page of dark mode  - Fix the CalendarPanel border style  - Clean up some unused code    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  Passed the build, UI/UT test and manually tested the date calculation in light/dark mode.    	guominrui	null	null	null	null	null	null	
2021-07-25 12:30:03.0	2021-08-02 21:00:02.0	2021-09-02 00:00:42.0	closed	[by design, Bug]	7	1617	Standard mode does math wrong.	https://api.github.com/repos/microsoft/calculator/issues/1617	https://github.com/microsoft/calculator/issues/1617	<!--  Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.  -->    **Describe the bug**  <!-- A clear and concise description of what the bug is. -->  If the calculator is set to Standard mode and 2+2*4 is typed on the keyboard the result will be 16 (because the calculator does 2+2 = 4 and than * 4 = 16) This is just wrong math     The same issues does not happen in the Scientific mode    **Steps To Reproduce**  <!--  Steps to reproduce the behavior:  1. Go to '...'  2. Click on '....'  3. Scroll down to '....'  4. See error  -->  1. open the calculator  2. set it to standard mode  3. on your keyboard type 2 + 2 * 4  4. result will be 16 which is wrong    do the same but with scientific mode and you will get he correct result of 10    **Expected behavior**  <!-- A clear and concise description of what you expected to happen. -->  I expect a calculator to do math properly  but in the standard mode it does 2 + 2 and then works with the result    **Screenshots**  <!-- If applicable, add screenshots to help explain your problem. -->  stardard mode:    ![ApplicationFrameHost_nTmsZqyEy0](https://user-images.githubusercontent.com/22729896/126898840-d5816049-596f-4448-b2c9-518db289fc41.png)    scientific mode:    ![ApplicationFrameHost_NgqzJgCXxg](https://user-images.githubusercontent.com/22729896/126898843-19f3dcdc-9c57-4ada-9822-4602649389f6.png)      **Device and Application Information**   - OS Build: 10.0.19043.0   - Architecture: X64   - Application Version: 10.2103.8.0   - Region: cs-CZ   - Dev Version Installed: False    <!--  Run the following commands in Powershell and copy/paste the output.  " - OS Build: $([Environment]::OSVersion.Version)"  " - Architecture: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Architecture)"  " - Application Version: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Version)"  " - Region: $((Get-Culture).Name)"  " - Dev Version Installed: $($null -ne (Get-AppxPackage -Name Microsoft.WindowsCalculator.Dev))"  -->    **Additional context**  <!-- Add any other context about the problem here. -->    **Requested Assignment**  <!--  Some people just want to report a bug and let someone else fix it.  Other people want to not only submit the bug report, but fix it as well.  Both scenarios are completely ok. We just want to know which one it is.  Please indicate which bucket you fall into by keeping one and removing the other.  -->  I'm just reporting this problem.  I don't want to be the one fix it. (but it should be fixed)  	KoleckOLP	null	null	null	null	null	null	
2021-07-26 15:15:48.0	2021-07-27 09:35:17.0	2021-07-27 09:35:28.0	closed	[]	1	1618	Update to WinUI 2.6	https://api.github.com/repos/microsoft/calculator/issues/1618	https://github.com/microsoft/calculator/pull/1618	### Description of the changes:  - Update to WinUI 2.6 styles and controls #1606.  - Add Mica Material #1611.  - Add Settings page #596.  - Fix Ctrl+E shortcuts in AoT mode #1590.    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  Passed build, UT/UI test and manually tested.    	hanzhang54	null	null	null	null	null	null	
2021-07-27 03:00:28.0	2021-07-27 03:06:46.0	2021-07-27 06:20:09.0	closed	[]	0	1619	Disable Mica before close the window to resolve a crash	https://api.github.com/repos/microsoft/calculator/issues/1619	https://github.com/microsoft/calculator/pull/1619	### Description of the changes:  Disable Mica before closing window to resolve the crash in multi-view case.    ### How changes were validated:  Manually tested.    	guominrui	null	null	null	null	null	null	
2021-07-27 03:51:14.0	2021-07-27 04:47:11.0	2021-07-27 07:37:33.0	closed	[]	0	1620	Bump internal package version	https://api.github.com/repos/microsoft/calculator/issues/1620	https://github.com/microsoft/calculator/pull/1620	### Description of the changes:  Bump MinVersion of appx manifest in release pipeline.    ### How changes were validated:  Manually tested.    	guominrui	null	null	null	null	null	null	
2021-07-27 06:10:15.0	2021-07-27 08:43:54.0	2021-07-27 08:44:00.0	closed	[]	0	1621	Bump internal package build number	https://api.github.com/repos/microsoft/calculator/issues/1621	https://github.com/microsoft/calculator/pull/1621	### Description of the changes:  Bump internal package build number.    ### How changes were validated:  Manually tested, and passed the automated tests.    	guominrui	null	null	null	null	null	null	
2021-07-28 11:27:09.0	2021-07-29 09:42:11.0	2021-08-06 06:06:13.0	closed	[]	0	1622	Update focus style	https://api.github.com/repos/microsoft/calculator/issues/1622	https://github.com/microsoft/calculator/pull/1622	### Description of the changes:  Add conditional styles to set corner radius so that the focus visual will be displayed in round corner.    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  Passed build and manually tested.    	hanzhang54	null	null	null	null	null	null	
2021-07-29 08:57:55.0	2021-07-30 08:30:56.0	2021-07-30 08:30:59.0	closed	[]	0	1623	Improve narrator messages of Settings page and fix some styles	https://api.github.com/repos/microsoft/calculator/issues/1623	https://github.com/microsoft/calculator/pull/1623	### Description of the changes:  - Improve narrator messages of Settings page  - Fix hyperlink styles in Settings page  - Fix navigation button hover backgrounds of CalendarView in dark mode.    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  Passed automation tests and manual test.    	guominrui	null	null	null	null	null	null	
2021-07-29 22:29:11.0	2021-08-02 20:56:31.0	2021-09-02 00:00:41.0	closed	[Bug, Area: World-Readiness]	2	1625	[Localization] [Spanish] "Add" also means "sumar", not just "agregar"	https://api.github.com/repos/microsoft/calculator/issues/1625	https://github.com/microsoft/calculator/issues/1625	**Describe the bug**  One of the two date calculation modes is "Add or subtract days", which has been rendered "Agregar o restar días" in Spanish. This sounds wrong, but I got the intended meaning because I'm bilingual - this was a literal translation of "add".    **Steps To Reproduce**  1. Open Calculator in Spanish  2. Press Ctrl+E to go to the date calculator  3. Click the first drop-down you see    **Expected behavior**  The second option in the drop-down should be called "**Sumar** o restar días", not "**Agregar** o restar días". Similarly, the radio button below that is currently labeled "Agregar" should say "Sumar" instead.    **Screenshots**  ![image](https://user-images.githubusercontent.com/554953/127573428-bb4ea7e2-e3b0-4ea6-a8d8-38794b8a9f5e.png)    **Device and Application Information**   - OS Build: 10.0.22000.0   - Architecture: X64   - Application Version: 10.2103.8.0   - Region: es-MX   - Dev Version Installed: False    **Additional context**  The verb "to add" can both mean "agregar/añadir" or "sumar", depending on the context. Obviously (since this is a calculator), the latter translation is the adequate one.	fitojb	null	null	null	null	null	null	
2021-07-30 02:31:08.0	2021-07-30 07:49:23.0	2021-07-30 07:49:27.0	closed	[]	0	1626	Add accelerator for back button in titlebar	https://api.github.com/repos/microsoft/calculator/issues/1626	https://github.com/microsoft/calculator/pull/1626	### Description of the changes:  - Listen to the system back request to back to main page.    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  Passed automation tests and manual tests.    	guominrui	null	null	null	null	null	null	
2021-07-30 06:37:18.0	null	2021-10-19 05:03:36.0	open	[Enhancement, Pri: 2, needs pitch review]	3	1627	Keep equations in Graphing mode	https://api.github.com/repos/microsoft/calculator/issues/1627	https://github.com/microsoft/calculator/issues/1627	<!--  See https://github.com/Microsoft/calculator/blob/master/docs/NewFeatureProcess.md for suggestions on how to write a good feature pitch. Just want to submit an idea quickly? Try Feedback Hub instead: https://insider.windows.com/en-us/fb/?contextid=130  -->    **Problem Statement**  At the moment, when the calculator is closed all set equations in the graphing mode are lost.    **Evidence or User Insights**  <!--  Why should we do this? Potential sources of data: Feedback Hub, other GitHub issues, other anecdotes from listening to customers in person or online, request from another team, telemetry data, user research, market or competitive research  -->  This would have multiple implications, e.g.:  * Accidentally closing the calculator wouldn't lose all equations  * One can set up a range of equations to compare against without fearing to lose them    **Proposal**   It would be a great addition if these equations could stay there after reopening the calculator.  <!--  How will the solution/feature help us solve the problem? How will it meet the target audience’s needs? If there are business goals or metrics, how does this improve them?  -->  	n-gao	null	null	null	null	null	null	
2021-07-30 09:17:12.0	2021-08-03 04:29:35.0	2021-08-03 04:30:32.0	closed	[]	1	1628	add automation name for history and memory list item	https://api.github.com/repos/microsoft/calculator/issues/1628	https://github.com/microsoft/calculator/pull/1628	  ### Description of the changes:  - Add automation name for history and memory list item  - Set inner TextBlocks' AccessibilityView to Raw to avoid duplicate announcement when in scan mode    ### How changes were validated:  Passed build and manually tested.    	oneonezhang	null	null	null	null	null	null	
2021-07-31 10:29:24.0	null	2021-10-19 05:03:38.0	open	[Enhancement, Pri: 2, needs pitch review]	2	1629	Please make the programmer calculator scientific for hex root calculations and support decimals.	https://api.github.com/repos/microsoft/calculator/issues/1629	https://github.com/microsoft/calculator/issues/1629	**Problem Statement**  This is for gamedevelopers, mathemeticans and Microsoft developers who want to calculate hexadecimal and want to use root calculations and use floating point integers.    **Evidence or User Insights**  Memory management and physics engines may require this, since these calculations are uncommon on the internet.    **Proposal**  It will be the first wide-known calculator to support this, making it the first place to go to for this audience.    **Goals**  You can now do root calculations in hexadecimal and everyone can learn about hexadecimal devision.    **Non-Goals**  A non-goal is programmer DEG switch support, since the decimal switch is in the way, not all the features should be immediately supported.    **Low-Fidelity Concept**  It's just making the programmer calculator more complex and feature rich, the decimals are also a break trough.    **Requested Assignment**  I'm just suggesting this idea.  I don't want to implement it.  	kevincrans	null	null	null	null	null	null	
2021-07-31 10:38:21.0	2021-08-02 20:52:41.0	2021-09-02 00:00:40.0	closed	[duplicate, Enhancement, Pri: 2]	3	1630	Calculator Windows 11 rounded button support	https://api.github.com/repos/microsoft/calculator/issues/1630	https://github.com/microsoft/calculator/issues/1630	**Problem Statement**  This is part of the Windows 11 user experience for everybody who uses calculator.    **Evidence or User Insights**  It's easy to implement and overhauls the design.    **Proposal**  It will immediately be recognized by every media demonstrating it and every time calculator is opened.    **Goals**  It's extends the design and compliments Windows 11.    **Non-Goals**  You don't want the calculator to be considered old.    **Low-Fidelity Concept**  It's still transparent, but with rounded corners making it Windows biggest eye candy.    **Requested Assignment**  I'm just suggesting this idea.  I don't want to implement it.  	kevincrans	null	null	null	null	null	null	
2021-08-03 08:01:54.0	2021-08-03 11:30:28.0	2021-08-04 01:48:25.0	closed	[]	0	1631	Fix a UI test	https://api.github.com/repos/microsoft/calculator/issues/1631	https://github.com/microsoft/calculator/pull/1631	### Description of the changes:  - Fixed a failed UI test    ### How changes were validated:  local test passed    	oneonezhang	null	null	null	null	null	null	
2021-08-03 19:00:25.0	2021-08-04 04:21:10.0	2021-08-04 04:21:10.0	closed	[]	0	1632	Update clang-format-all.sh	https://api.github.com/repos/microsoft/calculator/issues/1632	https://github.com/microsoft/calculator/pull/1632	# Calculator  <br>    ### Update  <br>    [clang-format-all.sh](https://github.com/microsoft/calculator/blob/master/Tools/Scripts/clang-format/clang-format-all.sh)  <br>	mrprogrammer2938	null	null	null	null	null	null	
2021-08-04 03:07:54.0	2021-08-04 05:09:02.0	2021-08-04 05:14:45.0	closed	[]	0	1633	Fix the inconsistent behavior between narrator and keyboard focus	https://api.github.com/repos/microsoft/calculator/issues/1633	https://github.com/microsoft/calculator/pull/1633	### Description of the changes:  In the function analysis of graphing mode, some controls use system focus visuals for keyboard focus while the UIA is not set up. In this case, the narrator will focus on the last UIA control when the keyboard focus on a control with UIA not available.    Update the keyboard focus and UIA on the ListView to align their behavior.    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  Passed the unit test as well as UI test, and manually tested.  	hanzhang54	null	null	null	null	null	null	
2021-08-05 21:15:59.0	2021-08-07 05:21:13.0	2021-09-08 00:00:46.0	closed	[Bug, won't fix]	2	1634	Standard Form (Scientific Notation) uses lower case 'e' instead of upper case 'E'	https://api.github.com/repos/microsoft/calculator/issues/1634	https://github.com/microsoft/calculator/issues/1634	"Most calculators and many computer programs present very large and very small results in scientific notation, typically invoked by a key labelled EXP (for exponent), EEX (for enter exponent), EE, EX, E, or ×10x depending on vendor and model. Because superscripted exponents like 107 cannot always be conveniently displayed, the letter E (or e) is often used to represent "times ten raised to the power of" (which would be written as "× 10n") and is followed by the value of the exponent; in other words, for any two real numbers m and n, the usage of "mEn" would indicate a value of m × 10n. In this usage the character e is not related to the mathematical constant e or the exponential function ex **(a confusion that is unlikely if scientific notation is represented by a capital E)**. Although the E stands for exponent, the notation is usually referred to as (scientific) E notation rather than (scientific) exponential notation. The use of E notation facilitates data entry and readability in textual communication since it minimizes keystrokes, avoids reduced font sizes and provides a simpler and more concise display, but it is not encouraged in some publications."  ![image](https://user-images.githubusercontent.com/23488379/128422049-7617903b-1ec6-4705-809e-e28fc37cd22a.png)	yahmezs	null	null	null	null	null	null	
2021-08-06 06:12:35.0	2021-08-09 05:21:05.0	2021-08-09 05:21:09.0	closed	[]	0	1635	Fix title bar string trimming issue and right-to-left display issue	https://api.github.com/repos/microsoft/calculator/issues/1635	https://github.com/microsoft/calculator/pull/1635	Issue 1: Title bar string is not trimmed properly in small window size.  Issue 2: Title bar is overlapped by system caption buttons in right-to-left language.    ### Description of the changes:  - To fix issue 1, remove the redundant column in title bar and correct the column width of AppName to be "*" instead of "Auto".  - To fix issue 2, correct the leftAddition to rightAddition in right-to-left flow direction.    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  Passed build and manually tested.  	hanzhang54	null	null	null	null	null	null	
2021-08-07 11:53:38.0	null	2021-10-19 05:03:41.0	open	[Enhancement, Pri: 2, needs pitch review]	2	1636	Could I use 0x string for Programmer mode calculator?	https://api.github.com/repos/microsoft/calculator/issues/1636	https://github.com/microsoft/calculator/issues/1636	Hi, I'm many time Programming in Linux system.  But, Windows calculator is uncomfortable for Linux. Because Linux is almost hexadecimal express with 0x.  So, Could I use 0x string for Programmer mode calculator?  And Could I remove space, if clipboard copy from result?  Actually, I tried analyze Microsoft calculator from this github  But, I can't understand .NET code.  Please, Tell me where code change possible hexadecimal express with 0x string and remove space string too    ![df19bb6c-7cf1-41eb-a182-94ee2fe7aecf](https://user-images.githubusercontent.com/88582491/128599258-6ec1ea20-18ad-45be-932b-e5052bc4ff02.png)  	LeeGoodThing	null	null	null	null	null	null	
2021-08-08 09:46:31.0	null	2021-08-17 13:05:25.0	open	[Bug, Area: User Experience, investigate, Pri: 2]	4	1637	Calculator will crash, when analyze function 𝑦=|sin(𝑥)|+|cos(𝑥)|	https://api.github.com/repos/microsoft/calculator/issues/1637	https://github.com/microsoft/calculator/issues/1637	**Describe the bug**  当在函数中分析𝑦=|sin(𝑥)|+|cos(𝑥)|时，计算器崩溃（闪退）。  Calculator will crash, when analyze function 𝑦=|sin(𝑥)|+|cos(𝑥)| .    **Steps To Reproduce**  1.打开计算器，进入侧边栏，点击函数  Open Calculator, go to Graphing mode.  2.输入函数 y=abs(sin(x))+abs(cos(x))  Input function y=abs(sin(x))+abs(cos(x))  3.点击分析函数  Click "Analyze function" button.    **Screenshots**  ![image](https://user-images.githubusercontent.com/74353173/128627773-17b1f89d-b178-43a1-b0a0-f86dc0767fa0.png)      **Device and Application Information**   - OS Build: 10.0.22000.0   - Architecture: X64   - Application Version: 10.2103.8.0   - Region: zh-CN   - Dev Version Installed: False      **Requested Assignment**  I'm just reporting this problem.  I don't want to fix it.  	xvzhenduo	null	null	null	null	null	null	
2021-08-09 06:09:55.0	2021-08-10 02:13:26.0	2021-08-10 02:57:24.0	closed	[]	0	1638	Fixes up some names of dependency property	https://api.github.com/repos/microsoft/calculator/issues/1638	https://github.com/microsoft/calculator/pull/1638	## Fixes up some names of dependency property      ### Description of the changes:  - Fixes some wrong names of dependency property while registering them.    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Tested manually    	tian-lt	null	null	null	null	null	null	
2021-08-09 09:06:05.0	2021-08-12 03:02:06.0	2021-09-11 06:00:46.0	closed	[triage needed]	4	1639	About Always On Top implementation	https://api.github.com/repos/microsoft/calculator/issues/1639	https://github.com/microsoft/calculator/issues/1639	Dear Authors,  Currently, I want to write a little tool to display some information when I use another app in full-screen mode. I use C# to implement my program, and I have tried this.topMost and SetWindowPos, but they still are covered by the app. Then, I discover that windows calculator's AlwaysOnTop can't be coverd by the app. I download the code here and read it, but still not understand how you implement this function. Can you give me some hints, please? Thank you very much.	GaryXXD	null	null	null	null	null	null	
2021-08-10 01:42:29.0	2021-08-31 06:56:03.0	2021-09-30 12:00:42.0	closed	[Bug, Area: User Experience, investigate, Pri: 2]	4	1640	Left menu overlap bug.	https://api.github.com/repos/microsoft/calculator/issues/1640	https://github.com/microsoft/calculator/issues/1640	I didn't anything. I did just build for calculator and run.  ![제목 없음](https://user-images.githubusercontent.com/88582491/128795665-44da3a17-956f-40b1-b29d-2e1a71e44a4e.png)    	LeeGoodThing	null	null	null	null	null	null	
2021-08-10 02:30:44.0	2021-08-10 02:57:08.0	2021-08-10 02:57:12.0	closed	[]	0	1641	Reverts back the content that was wrongly deleted in PR #1223.	https://api.github.com/repos/microsoft/calculator/issues/1641	https://github.com/microsoft/calculator/pull/1641	## Fixes: Reverts back the content that was wrongly deleted in PR #1223      ### Description of the changes:  - Adds [Shift + I] hotkey for the scientific mode.    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Tested manually  	tian-lt	null	null	null	null	null	null	
2021-08-10 21:48:58.0	2021-08-18 03:13:50.0	2021-08-18 03:13:50.0	closed	[]	2	1642	Fix mistakes	https://api.github.com/repos/microsoft/calculator/issues/1642	https://github.com/microsoft/calculator/pull/1642	I just fixed a few linguistic mistakes.	ivan-pan	null	null	null	null	null	null	
2021-08-10 22:23:35.0	2021-08-27 06:45:47.0	2021-08-27 06:45:47.0	closed	[]	1	1643	Fix mistakes	https://api.github.com/repos/microsoft/calculator/issues/1643	https://github.com/microsoft/calculator/pull/1643	I just fixed a few linguistic mistakes.	ivan-pan	null	null	null	null	null	null	
2021-08-13 02:59:02.0	null	2021-10-29 10:02:21.0	open	[Enhancement, Pri: 2]	2	1644	add time calculation (days:hours:minutes)	https://api.github.com/repos/microsoft/calculator/issues/1644	https://github.com/microsoft/calculator/issues/1644	do time calculation with powertoys run or calculator,so i can easily plan how much time i have to spend per day  form be like (1:00*3+55:38+49:42+1:01:26)/30=  ![image](https://user-images.githubusercontent.com/61088063/129298441-cbfd56cf-d828-4f6f-9796-638d05f85062.png)  feature list:  - calculate time with the form of xx:xx:xx+xx:xx:xx-xx:xx:xx  - plus,minus and multiplication for calculate the amount of time, and division for result the average time per day  - show multiple form of result(nice to have)	JolyonJostar	null	null	null	null	null	null	
2021-08-13 12:45:47.0	null	2021-10-19 05:03:47.0	open	[Enhancement, Pri: 2]	11	1645	Adapt dark mode for Graphing（MICA）	https://api.github.com/repos/microsoft/calculator/issues/1645	https://github.com/microsoft/calculator/issues/1645	The function image is an important means of expressing the function relationship. Now, it has a white background, which is out of place in the dark mode.    ![image](https://user-images.githubusercontent.com/6630660/129357427-4b47646c-affb-4605-8165-26202f2980a2.png)    The drawing mode should be adapted to the dark mode, giving it a dark background, like this    ![未标题-133333](https://user-images.githubusercontent.com/6630660/129429577-965ffcf3-6f33-4a26-9c7a-13d0faa5429d.png)      Furthermore, I think that the background of the drawing mode can be completely made of MICA, and it only needs to be slightly distinguished in terms of brightness or saturation.	Shomnipotence	null	null	null	null	null	null	
2021-08-13 20:43:47.0	2021-08-18 04:59:55.0	2021-09-17 06:00:42.0	closed	[triage needed]	2	1646	App icon appears to be disproportionately small.	https://api.github.com/repos/microsoft/calculator/issues/1646	https://github.com/microsoft/calculator/issues/1646	<!--  Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.  -->    **Describe the bug**  Compared to other implimentations of app icons on UWP and the WinUI design toolkit, Calculator's app icon appears to be too small.    **Steps To Reproduce**  1. Open calculator on Windows 11 22000.132 (or build calculator from `main`).  2. See error    **Expected behavior**  The app icon should use consistent sizing with other UWP applications (16x16).    **Screenshots**  ![image](https://user-images.githubusercontent.com/42101043/129416178-610f32c4-91fa-4ff5-b1c2-0100945f7c85.png)  ![image](https://user-images.githubusercontent.com/42101043/129416224-a326af17-bce4-4a64-8381-8b4025cb419e.png)    **Device and Application Information**   - OS Build: 22000.132   - Architecture: X64   - Application Version: 10.2109.7.0   - Region: en-US   - Dev Version Installed: No.    <!--  Run the following commands in Powershell and copy/paste the output.  " - OS Build: $([Environment]::OSVersion.Version)"  " - Architecture: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Architecture)"  " - Application Version: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Version)"  " - Region: $((Get-Culture).Name)"  " - Dev Version Installed: $($null -ne (Get-AppxPackage -Name Microsoft.WindowsCalculator.Dev))"  -->    **Additional context**  None    **Requested Assignment**  <!--  Some people just want to report a bug and let someone else fix it.  Other people want to not only submit the bug report, but fix it as well.  Both scenarios are completely ok. We just want to know which one it is.  Please indicate which bucket you fall into by keeping one and removing the other.  -->  I'm just reporting this problem.  I don't want to fix it.  	Tropix126	null	null	null	null	null	null	
2021-08-13 20:51:07.0	2021-08-13 20:53:48.0	2021-09-13 00:00:42.0	closed	[]	2	1647	README is wrong?	https://api.github.com/repos/microsoft/calculator/issues/1647	https://github.com/microsoft/calculator/issues/1647	Looking at the main branch README.MD, it says:    "The Windows Calculator app is a modern Windows app written in C++ that ships pre-installed with Windows. "    Isn't the version currently in master based on C# now? Does that readme need an update?	laduran	null	null	null	null	null	null	
2021-08-14 04:34:45.0	2021-08-24 06:29:32.0	2021-09-23 12:00:49.0	closed	[Bug, duplicate, triage needed]	3	1648	The graph looks flipped in RTL interfaces	https://api.github.com/repos/microsoft/calculator/issues/1648	https://github.com/microsoft/calculator/issues/1648	**Describe the bug**    يظهر المنحنى المبياني مقلوبا (بأرقامه وكل ما فيه) حول المحور الأفقي في واجهة اللغات المكتوبة من اليمين إلى اليسار، لا يجب أن يكون كذلك، جذير بالذكر أن المنحنى يتحرك بشكل معكوس بالنسبة لحركة مؤشر الفأرة  The graph looks flipped vertically (numbers and everything else) in RTL interfaces, it shouldn't be like this, it's worth mentioning that the graph moves paradoxically to the movements of the mouse's cursor    **Steps To Reproduce**    1-عيِّن أي لغة تُكتب من اليمين إلى اليسار لغة لواجهة النظام (عربية، عبرية، ...)  Set the computer's UI language to any RTL language (Arabic, Hebrew, ...)  2-إفتح الحاسبة، وإذهب إلى وضع تخطيط المنحنى البياني  Open the calculator, and go to the graphing mode    **Screenshots**  ![image](https://user-images.githubusercontent.com/68980484/129433912-d3631c59-21c5-4d5e-8b15-a68a18f705a5.png)    **Device and Application Information**    - OS Build: 22000.132  - Architecture: X64  - Application Version: 10.2109.7.0  - Region: ar-MA i guess  - Dev Version Installed: True    **Requested Assignment**  I'm just reporting this problem. I don't want to fix it.	bottomtextboy	null	null	null	null	null	null	
2021-08-14 14:44:47.0	null	2021-09-30 09:07:53.0	open	[Bug, Area: Reliability, investigate, Pri: 2, needs more info]	2	1649	Calculator Suspending	https://api.github.com/repos/microsoft/calculator/issues/1649	https://github.com/microsoft/calculator/issues/1649	I compiled the calculator, but when I open it it's about 3 seconds in the task manager and then closes alone, what is this?    I'm using Windows 10.0.19042.546 (x64)	NightRaidGamer	null	null	null	null	null	null	
2021-08-14 17:29:50.0	null	2021-08-27 22:31:31.0	open	[Bug, Pri: 3, Area: User Experience, investigate]	3	1650	Lack of animation in selection of horizontal buttons	https://api.github.com/repos/microsoft/calculator/issues/1650	https://github.com/microsoft/calculator/issues/1650	The button change has no animation (blue line), this can be verified in XAML control gallery app.    ![botones](https://user-images.githubusercontent.com/87845044/129455533-0e00b708-d48f-49d7-8420-2f187f72a8dd.gif)    thanks.  	hyperactiverobot	null	null	null	null	null	null	
2021-08-15 06:55:07.0	2021-08-24 06:34:59.0	2021-09-23 12:00:48.0	closed	[Bug, external]	3	1651	win32calc.exe cannot switch to programmer  (alt+3) 10.0.17763.1 and crach permanently 	https://api.github.com/repos/microsoft/calculator/issues/1651	https://github.com/microsoft/calculator/issues/1651	<!--  Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.  -->  I have search the internet and github, there is no such issues before.    **Describe the bug**  <!-- A clear and concise description of what the bug is. -->  In Win10 x32 LTSC IoT version, the 10.0.17763.1 win32calc.exe crashed and cannot open again permanently when switch to programmer mode(alt+3).  I know this may not be right place to submit the program, but this may related and have a fix.  In Win10 x32 LTSC IoT there is no store, and we use it in industrial facilities, it runs 7x24 and may use programmer mode.    **Steps To Reproduce**  <!--  Steps to reproduce the behavior:  1. Go to '...'  2. Click on '....'  3. Scroll down to '....'  4. See error  -->  In 10.0.17763.1 win32calc.exe, hit alt+4.    **Expected behavior**  <!-- A clear and concise description of what you expected to happen. -->  No more crash.    **Screenshots**  <!-- If applicable, add screenshots to help explain your problem. -->    **Device and Application Information**   - OS Build: Win10 LTSC iot x32 17763.2114   - Architecture: x32   - Application Version: 10.0.17763.1    - Region: Germany - Region: de-DE   - Dev Version Installed:    <!--  Run the following commands in Powershell and copy/paste the output.  " - OS Build: $([Environment]::OSVersion.Version)"  " - Architecture: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Architecture)"  " - Application Version: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Version)"  " - Region: $((Get-Culture).Name)"  " - Dev Version Installed: $($null -ne (Get-AppxPackage -Name Microsoft.WindowsCalculator.Dev))"  -->    **Additional context**  <!-- Add any other context about the problem here. -->  I know this may not be right place to submit the program, but this may related and have a fix.  Or any other information is appreciated!      **Requested Assignment**  <!--  Some people just want to report a bug and let someone else fix it.  Other people want to not only submit the bug report, but fix it as well.  Both scenarios are completely ok. We just want to know which one it is.  Please indicate which bucket you fall into by keeping one and removing the other.  -->    I'm just reporting this problem.  I don't want to fix it. (Sorry I cannot do that)    Sorry for disturbing this repo.  	Dunkelicht	null	null	null	null	null	null	
2021-08-15 22:36:33.0	2021-08-24 06:25:08.0	2021-09-23 12:00:47.0	closed	[Bug, Area: World-Readiness, external]	6	1652	[Localization]【Ja-JP】Improve Japanese translation	https://api.github.com/repos/microsoft/calculator/issues/1652	https://github.com/microsoft/calculator/issues/1652	# Where localization needs improvement    ## ➀ Settings Pane for windows 11    <details><summary>Setting pane [DONE]</summary >    **Screenshots**  ![image](https://user-images.githubusercontent.com/62196528/129494675-451dc111-caf3-436e-9885-8149e74d5e0b.png)    **Localization resource**  Index | English | Japanese  ---|---|---  1 | Settings | 設定  2 | Appearance | 外観  3 | App theme | アプリのテーマ  4 | Select which app theme to display | アプリのテーマを選択する  5.1 | Light | ライト  5.2 | Dark | ダーク  5.3 | Use system setting | システム設定を使用する  6 | About | このアプリについて  [7](https://github.com/microsoft/calculator/blob/master/src/Calculator/Resources/ja-JP/Resources.resw#L2305) | Microsoft Software License Terms | Microsoft ソフトウェアライセンス条項  [8](https://github.com/microsoft/calculator/blob/master/src/Calculator/Resources/ja-JP/Resources.resw#L2321) | To learn how you can contribute to Windows Calculator, check out the project on GitHub. | Windows 電卓に貢献する方法については、GitHub のプロジェクトをご覧ください。    ↑ Link of resources (ja-JP/Resource.resx) that already exist    </details>    ## ② Incorrect translation at currency pane  Index | English | Incorrect Japanese | Correct Japanese  ---|---|---|---  [1](https://github.com/microsoft/calculator/blob/master/src/Calculator/Resources/ja-JP/Resources.resw#L2667) | Updated %1 %2 | %1 %2 が更新されました | %1 %2 に更新されました    ## ➂ Incomprehensible Japanese at temperature pane  Index | English | Hmmm… | Nice!  ---|---|---|---  [1](https://github.com/microsoft/calculator/blob/master/src/Calculator/Resources/ja-JP/Resources.resw#L1697) | Celsius | 摂氏 | 摂氏 (C°)  [2](https://github.com/microsoft/calculator/blob/master/src/Calculator/Resources/ja-JP/Resources.resw#L1701) | Fahrenheit | 華氏 | 華氏 (F°)    We don't use the Japanese words "摂氏" and "華氏" very often. And I think this translation need description (C°) and (F°).  Also, other units may need description.    **Device and Application Information**   - OS Build: Windows 11 (WinBuild:10.0.22000.132)   - Architecture: X64   - Application Version: 10.2109.7.0   - Region: ja-JP   - Dev Version Installed: False	onein528	null	null	null	null	null	null	
2021-08-16 21:00:43.0	2021-08-16 22:12:44.0	2021-08-16 22:12:44.0	closed	[]	0	1653	Update PkgESVpack@10 task to set provData to true	https://api.github.com/repos/microsoft/calculator/issues/1653	https://github.com/microsoft/calculator/pull/1653	Update the PkgESVpack@10 task to set provData to true	sanderl	null	null	null	null	null	null	
2021-08-18 08:53:00.0	2021-08-19 07:44:48.0	2021-08-19 07:44:52.0	closed	[]	2	1654	Fix the result in wrong number base while leaving and switching back …	https://api.github.com/repos/microsoft/calculator/issues/1654	https://github.com/microsoft/calculator/pull/1654	…to Programmer    Issue: When switching from programmer to graphing/date/converters and switching back,   1) the hex buttons are disabled even HEX in selection;  2) the number base selection is the same as when leaving but the result value is always in DEC;  3) the memory values are always displayed in DEC even the number base is not DEC when leaving programmer.    ### Description of the changes:  Rename ResetDisplay() to ResetRadixAndUpdateMemory(). Reset radix to DEC for standard and scientific modes, and only update memory for programmer mode.    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  Passed the unit tests and manually tested.    	hanzhang54	null	null	null	null	null	null	
2021-08-19 19:35:03.0	2021-08-20 22:12:07.0	2021-08-20 22:12:07.0	closed	[needs author feedback]	1	1655	Test/pipeline changes	https://api.github.com/repos/microsoft/calculator/issues/1655	https://github.com/microsoft/calculator/pull/1655	## Fixes #.      ### Description of the changes:  -  -  -    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  -Yeah  -  -    	JuanVanTromp	null	null	null	null	null	null	
2021-08-19 19:42:59.0	2021-08-23 05:16:11.0	2021-08-23 05:57:28.0	closed	[]	2	1656	Update Winui to 2.6.2	https://api.github.com/repos/microsoft/calculator/issues/1656	https://github.com/microsoft/calculator/pull/1656	## Fixes #.      ### Description of the changes:  -This is my first change    -  -    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  -  -  -    	Mike7013	null	null	null	null	null	null	
2021-08-20 07:29:17.0	2021-08-20 07:53:20.0	2021-08-24 06:21:04.0	closed	[]	4	1657	Update localized strings 2021-08-20	https://api.github.com/repos/microsoft/calculator/issues/1657	https://github.com/microsoft/calculator/pull/1657	### Description of the changes:  Update strings from our internal localization system.    	hanzhang54	null	null	null	null	null	null	
2021-08-20 15:59:58.0	2021-08-24 06:22:04.0	2021-09-23 12:00:46.0	closed	[Bug, duplicate]	3	1658	Graph feature canvas aspect ratio	https://api.github.com/repos/microsoft/calculator/issues/1658	https://github.com/microsoft/calculator/issues/1658	When resizing the window of the calculator app the graph stretches, and that's not how it should be working. The canvas aspect ratio should be always constant. As the app is right now, it can't be that helpful for students.    Feedback hub link:     https://aka.ms/AAdjqm5    ![1629474928197](https://user-images.githubusercontent.com/89266178/130261032-90cd8852-ff67-4596-a2b1-bc481e592862.jpg)  	Theleonano	null	null	null	null	null	null	
2021-08-20 22:18:00.0	2021-08-26 15:47:11.0	2021-08-26 15:47:24.0	closed	[]	1	1659	Restructure pipeline to move release steps out of Package ES	https://api.github.com/repos/microsoft/calculator/issues/1659	https://github.com/microsoft/calculator/pull/1659	## Fixes #35053833.      ### Description of the changes:  Restructuring Pipeline release steps    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  Queued Release build through ADO.   Note: Aero step is currently failing, potentially because of an issue on the Package ES side. This is expected behavior at this point and we'll address when we remove that step from the build.    	quentin987	null	null	null	null	null	null	
2021-08-23 05:19:46.0	2021-08-23 05:57:22.0	2021-08-23 05:57:28.0	closed	[]	0	1660	Update WinUI to build 2.6.2	https://api.github.com/repos/microsoft/calculator/issues/1660	https://github.com/microsoft/calculator/pull/1660	### Description of the changes:  - Update WinUI to build 2.6.2.  - Remove the workaround about Mica    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Passed UI, Unit and manual tests    	guominrui	null	null	null	null	null	null	
2021-08-24 05:16:05.0	2021-08-26 02:58:36.0	2021-08-26 02:58:39.0	closed	[]	1	1661	Simple fix for the omitted multiplication sign before a left parenthesis	https://api.github.com/repos/microsoft/calculator/issues/1661	https://github.com/microsoft/calculator/pull/1661	## Simple fix for the omitted multiplication sign before a left parenthesis  Attempts to fix the problem reported in issue #1498 which minimum changes.    ### Description of the changes:  - Checks if there's an omitted multiplication sign while a left parenthesis command is being processed.  - Corrects the correlated unit-test cases.    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Tested manually.  - UT passed locally  - Example: after typing characters **_2 ( 1 + 1 ) =_**, the result will be 4 while it would be 2 before.  	tian-lt	null	null	null	null	null	null	
2021-08-27 04:33:51.0	2021-08-27 06:35:44.0	2021-08-27 06:35:44.0	closed	[]	1	1662	A11Y: [Screen Reader - Currency Converter] : Incorrect role as 'link' is defined for 'Update rates' button.	https://api.github.com/repos/microsoft/calculator/issues/1662	https://github.com/microsoft/calculator/pull/1662	## Fixes Bug 35566197: [Screen Reader - Currency Converter] : Incorrect role as 'link' is defined for 'Update rates' button.      ### Description of the changes:  - Adds `AutomationProperties.LocalizedControlType` for x:Uid(RefreshButtonText)    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Tested manually.  	tian-lt	null	null	null	null	null	null	
2021-08-27 05:02:46.0	2021-08-30 02:30:11.0	2021-08-30 02:30:24.0	closed	[]	0	1663	Label 'Line Thickness' is not associated with it's edit combo box.	https://api.github.com/repos/microsoft/calculator/issues/1663	https://github.com/microsoft/calculator/pull/1663	## Fixes #1672    ### Description of the changes:  - Associate the combo-box with its label - 'Line thickness'    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Tested manually    	tian-lt	null	null	null	null	null	null	
2021-08-27 06:45:59.0	null	2021-09-20 21:04:05.0	open	[Bug, Area: Accessibility, triage approved, Pri: 2]	1	1664	Narrator is reading value twice while navigating in scan mode in history list items.	https://api.github.com/repos/microsoft/calculator/issues/1664	https://github.com/microsoft/calculator/issues/1664	Repro Steps:   Launch Calculator app.  Turn on the narrator.  Navigate Open navigation button and activate it.  Navigate to 'Standard' list item and activate it.  Turn On the scan mode and navigate to the value present under "History" tab using up/down arrow key.  Observe the issue.    Actual Result:  Narrator is reading value twice while navigating in scan mode in history list items.    Ex: Narrator read it as "53 times 17 equals to, 53 times 17 equals to ".    Expected Result:  Narrator should  read value once while navigating in scan mode in history list items.    Ex: Narrator read it as "53 times 17 equals to ".  	MicrosoftIssueBot	null	null	null	null	null	null	
2021-08-27 06:46:01.0	null	2021-11-10 02:31:37.0	open	[Bug, Area: User Experience, investigate, Pri: 2, needs more info]	2	1665	Sometimes clicking the "%" icon or using the [Shift]+[5] hot key will clear the content in the input box in standard mode.	https://api.github.com/repos/microsoft/calculator/issues/1665	https://github.com/microsoft/calculator/issues/1665	A team member will update this issue with more details soon.	MicrosoftIssueBot	null	null	null	null	null	null	
2021-08-27 06:46:04.0	2021-09-03 08:10:17.0	2021-10-03 12:00:47.0	closed	[Bug, Area: Accessibility, triage approved, Pri: 2]	1	1666	Back button is not accessible via keyboard when navigating to the about page.	https://api.github.com/repos/microsoft/calculator/issues/1666	https://github.com/microsoft/calculator/issues/1666	A team member will update this issue with more details soon.	MicrosoftIssueBot	null	null	null	null	null	null	
2021-08-27 06:46:06.0	null	2021-09-20 21:04:43.0	open	[Bug, Area: Accessibility, triage approved, Pri: 2]	1	1667	Multiple irrelevant heading level 1 is defined on the Standard page.	https://api.github.com/repos/microsoft/calculator/issues/1667	https://github.com/microsoft/calculator/issues/1667	Repro steps:  Open the Application Calculator  Navigate to ‘Scientific’ button and activate it.  Open Narrator and enable scan mode.  Now navigate to the headings using h key.  Observe the issue.    Actual Result:  Multiple irrelevant heading level 1 is defined on the Standard page.    Expected Result:  Multiple irrelevant heading should not be defined on the Standard page. There should not be multiple H1 heading defined on the page.	MicrosoftIssueBot	null	null	null	null	null	null	
2021-08-27 06:46:08.0	null	2021-09-20 21:04:45.0	open	[Bug, Area: Accessibility, triage approved, Pri: 2]	1	1668	An element's IsOffScreen property must be true when its clickable point is on screen. 	https://api.github.com/repos/microsoft/calculator/issues/1668	https://github.com/microsoft/calculator/issues/1668	Repro steps:  Open the Application Calculator  Navigate to ‘Standard’ button and activate it.  Now run Accessibility Insight for Window application  Observe the issue.    Actual Result:  An element's IsOffScreen property is false when its clickable point is on screen.    Expected Result:  An element's IsOffScreen property must be true when its clickable point is on screen.	MicrosoftIssueBot	null	null	null	null	null	null	
2021-08-27 06:46:12.0	null	2021-09-20 21:04:47.0	open	[Bug, Area: Accessibility, triage approved, Pri: 2]	1	1669	Screen reader announces two role as 'tab' and 'list' item for History/Memory tab item.	https://api.github.com/repos/microsoft/calculator/issues/1669	https://github.com/microsoft/calculator/issues/1669	Repro steps:  Open the Application Calculator  Navigate to ‘Standard’ button and activate it.  Navigate to the ‘History/Memory’ tab present at the left of the page.  Observe the issue.    Actual Result:  Screen reader announce two role tab/list item for History/Memory tab item.    Expected Result:  Screen reader shouldn't announce two role tab/list item for History/Memory tab item. Only one role as tab item should be defined for ‘History/Memory’ controls and Focus should move separately to 'History' and 'Memory' tab item for announcing correct role for both tab items.	MicrosoftIssueBot	null	null	null	null	null	null	
2021-08-27 06:46:15.0	null	2021-09-28 09:01:44.0	open	[Bug, Area: Accessibility, triage approved, Pri: 2]	2	1670	An element's IsOffScreen property must be true when its clickable point is on screen. 	https://api.github.com/repos/microsoft/calculator/issues/1670	https://github.com/microsoft/calculator/issues/1670	Repro steps:  Open the Application Calculator  Navigate to ‘Graphing’ button and activate it.  Now navigate to the Equation and press 'Shift+F10'.  Navigate to the 'Analyses equation'.  Now run Accessibility Insight for Window application  Observe the issue.    Actual Result:  An element's IsOffScreen property is false when its clickable point is on screen.    Expected Result:  An element's IsOffScreen property must be true when its clickable point is on screen.    User Experience:  User who rely on screen reader will be affected if An element's IsOffScreen property must be true when its clickable point is off screen.  	MicrosoftIssueBot	null	null	null	null	null	null	
2021-08-27 06:46:17.0	null	2021-10-24 23:02:24.0	open	[Bug, Area: Accessibility, triage approved, Pri: 2]	4	1671	The Name property of a focusable element must not be a null.	https://api.github.com/repos/microsoft/calculator/issues/1671	https://github.com/microsoft/calculator/issues/1671	Repro steps:  Open the Application Calculator  Navigate to ‘Graphing’ button and activate it.  Now navigate to the Equation and press 'Shift+F10'.  Navigate to the 'Analyses equation'.  Now run Accessibility Insight for Window application  Observe the issue.    Actual Result:  The name property of a focusable element is empty.    Expected Result:  The name property of a focusable element must not be empty.	MicrosoftIssueBot	null	null	null	null	null	null	
2021-08-27 06:46:20.0	2021-08-30 02:30:11.0	2021-09-29 06:00:44.0	closed	[Bug, Area: Accessibility, triage approved, Pri: 2]	1	1672	Label 'Line Thickness' is not associated with it's edit combo box.	https://api.github.com/repos/microsoft/calculator/issues/1672	https://github.com/microsoft/calculator/issues/1672	Repro steps:  Open the Application Calculator  Navigate to ‘Graphing’ button and activate it.  Now navigate to the 'Share' button and and activate it.  Observe the issue.    Actual Result:  Label 'Line Thickness' is not associated with it's combo box. Screen reader announce "Extra line width combo-box collapsed".    Expected Result:  Label 'Line Thickness' should be associated with it's combo box. Screen reader should announce "Line Thickness Extra line width selected combo-box collapsed".  	MicrosoftIssueBot	null	null	null	null	null	null	
2021-08-27 06:46:23.0	null	2021-09-20 21:04:54.0	open	[Bug, Area: Accessibility, triage approved, Pri: 2]	1	1673	In scan mode, Narrator focus is going multiple times on 'Equation'  while navigating using up/down arrow key.	https://api.github.com/repos/microsoft/calculator/issues/1673	https://github.com/microsoft/calculator/issues/1673	Repro steps:  Open the Application Calculator  Navigate to ‘Graphing’ button and activate it.  Now navigate to the 'Equation' button using up/down arrow key.  Observe the issue.    Actual Result:  In scan mode, Narrator focus is going multiple times on 'Equation'  while navigating using up/down arrow key.    Expected Result:  In scan mode, Narrator focus should go once on 'Equation'  while navigating using up/down arrow key and Screen reader should provide all information.	MicrosoftIssueBot	null	null	null	null	null	null	
2021-08-27 06:46:25.0	null	2021-09-20 21:04:56.0	open	[Bug, Area: Accessibility, triage approved, Pri: 2]	1	1674	Name is not defined for "Change Equation Style" pop-up when activating it.	https://api.github.com/repos/microsoft/calculator/issues/1674	https://github.com/microsoft/calculator/issues/1674	Repro steps:  Open the Application Calculator  Navigate to ‘Graphing’ button and activate it.  Now navigate to the any Equation and press "Shift+F10" key   Now navigate to the 'Change Equation Style' and activate it.  Observe the issue.    Actual Result:  Name is not defined for "Change Equation Style" pop-up when activating it. Screen reader announce "Window pop-up"    Expected Result:  Name should be defined for "Change Equation Style" pop-up when activating it. Screen reader should announce "Change Equation Style pop-up".  	MicrosoftIssueBot	null	null	null	null	null	null	
2021-08-27 06:46:28.0	null	2021-09-20 21:04:58.0	open	[Bug, Area: Accessibility, triage approved, Pri: 2]	1	1675	The name must not include the same text as the localizedcontrol type.	https://api.github.com/repos/microsoft/calculator/issues/1675	https://github.com/microsoft/calculator/issues/1675	Repro steps:  Open the Application Calculator  Navigate to ‘Graphing’ button and activate it.  Now add some equation and Run accessibility Insight for Windows.   Observe the issue.    Actual Result:  The name of equations include the same text as the localizedcontrol type.    Expected Result:  The name of the equations must not include the same text as the localizedcontrol type.	MicrosoftIssueBot	null	null	null	null	null	null	
2021-08-27 06:46:31.0	null	2021-09-20 21:05:01.0	open	[Bug, Area: Accessibility, triage approved, Pri: 2]	1	1676	The Name property of 'Function input' list must not include the element's control type.	https://api.github.com/repos/microsoft/calculator/issues/1676	https://github.com/microsoft/calculator/issues/1676	Repro steps:  Open the Application Calculator  Navigate to ‘Graphing’ button and activate it.  Now add some equation and Run accessibility Insight for Windows.   Observe the issue.    Actual Result:  The Name property of the equation include the element's control type. Name is defined as 'Function input list'.    Expected Result:  The Name property of the equation must not include the element's control type. Name should be defined correctly as 'Function input' and should not include role 'list' in the name.	MicrosoftIssueBot	null	null	null	null	null	null	
2021-08-30 06:00:03.0	2021-08-31 04:13:00.0	2021-08-31 04:13:22.0	closed	[]	2	1677	Update placeholder foreground in graphing equation	https://api.github.com/repos/microsoft/calculator/issues/1677	https://github.com/microsoft/calculator/pull/1677	### Description of the issues:  Luminosity ratio of "Enter an Expression" placeholder is 2.9:1 which should be greater or equal to 4.5:1.    ### Description of the changes:  Update placeholder foreground to align with the settings in WinUI 2.6 TextBox foreground.    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  Passed build and manually tested.    	hanzhang54	null	null	null	null	null	null	
2021-08-30 16:24:33.0	null	2021-09-22 09:02:11.0	open	[Bug, triage approved, Area: User Experience, Pri: 2]	3	1678	Additional parameters should not visually be inserted on behalf of user	https://api.github.com/repos/microsoft/calculator/issues/1678	https://github.com/microsoft/calculator/issues/1678	**Describe the bug**  Additional parameters should not visually be inserted on behalf of user    **Steps To Reproduce**  1) Input <kbd>4</kbd> <kbd>8</kbd> <kbd>÷</kbd> <kbd>2</kbd> <kbd>(</kbd> <kbd>9</kbd> <kbd>+</kbd> <kbd>3</kbd> <kbd>)</kbd> <kbd>=</kbd>  2) Notice expression shows up with an unexpected "x"  ![image](https://user-images.githubusercontent.com/1414423/131371756-2454b044-d0b5-40c6-9533-2e5fc7f54ad1.png)    **Expected behavior**  Display is accurate to input, when input is a valid math expression.    In this case, the expected display value should be "48÷2(9+3)="    **Screenshots**  ![image](https://user-images.githubusercontent.com/1414423/131371675-c5d81931-8f7c-4ec9-9d09-2c1ef1e511a3.png)      **Additional context**  Possibly regressed due to #1498.    **Requested Assignment**  I'm just reporting this problem.  I don't want to fix it.  	grochocki	null	null	null	null	null	null	
2021-08-31 10:35:40.0	2021-09-03 08:10:17.0	2021-09-08 04:56:27.0	closed	[]	3	1679	Fix for #1666- Back button is not accessible via keyboard when navigating to the about page.	https://api.github.com/repos/microsoft/calculator/issues/1679	https://github.com/microsoft/calculator/pull/1679	## Fixes #1666  Back button is not accessible via keyboard when navigating to the about page.    ### Description of the changes:  - Moves the `BackButton` from titlebar to Settings page.  - Changes correlated code-behind    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Build passed and tested manually    ### Remarks:  The static UI won't have any difference, but there is a little difference with the animation of BackButton.  Before the fix:   ![before](https://user-images.githubusercontent.com/60599517/131500231-36ad064a-4f62-481e-8faa-c050189e303c.gif)    After the fix:  ![after](https://user-images.githubusercontent.com/60599517/131500321-06ffae75-0b94-405c-acbc-8f44f0e0cc5b.gif)  	tian-lt	null	null	null	null	null	null	
2021-08-31 16:18:55.0	null	2021-10-11 04:00:45.0	open	[needs author feedback, no recent activity]	4	1680	Specify which class's function to call during constructor	https://api.github.com/repos/microsoft/calculator/issues/1680	https://github.com/microsoft/calculator/pull/1680	Especially since the two functions in question are virtual    ### Description of the changes:  - Specify to call the superclass's version of the functions during construction, since it is not defined in the subclasses    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Manual testing  - Passed all tests    	AtariDreams	null	null	null	null	null	null	
2021-09-01 13:35:19.0	null	2021-10-19 05:03:50.0	open	[Enhancement, Pri: 2]	1	1681	Windows calculator support for new floating-point formats: cfloats, areals, unums, posits, valids, etc.	https://api.github.com/repos/microsoft/calculator/issues/1681	https://github.com/microsoft/calculator/issues/1681	<!--  See https://github.com/Microsoft/calculator/blob/master/docs/NewFeatureProcess.md for suggestions on how to write a good feature pitch. Just want to submit an idea quickly? Try Feedback Hub instead: https://insider.windows.com/en-us/fb/?contextid=130  -->    **Problem Statement**  <!--  What problem are we trying to solve? Who’s the target audience? Is there a customer need or pain point we need to remedy? Is there a business goal or metric we are trying to improve? Do we have a hypothesis we want to prove or disprove?  -->  Both AI/HPC and numerical analysis communities are experimenting with new number systems, such as bfloat16, tensorfloat, fp9, fp24, etc., as well as tapered number systems such as posits and valids. When starting to use a new number system, the first step is to see how a value gets sampled by the number system. This is one feature that the Windows Calculator already has for hex/dec/bin encodings of the integers. This request is to enhance that feature for floating-point number systems. The UI/UX design would be most important as there is currently a rapid proliferation of different number systems and thus the UI would need to be able to organize that productively.    **Evidence or User Insights**  <!--  Why should we do this? Potential sources of data: Feedback Hub, other GitHub issues, other anecdotes from listening to customers in person or online, request from another team, telemetry data, user research, market or competitive research  -->  In number system design, we constantly juxtapose the value and the encoding. This is well supported for hex/dec/bin, but not for floating-point encodings. So, we have been building separate UIs to help us. But to have this feature consolidated in a standard utility on the Windows platform would be a huge enabler for a large swath of developers that are working on numerical software, as well as an educational tool for students that are just learning about computer arithmetic.    **Proposal**  <!--  How will the solution/feature help us solve the problem? How will it meet the target audience’s needs? If there are business goals or metrics, how does this improve them?  -->  The Universal library (https://github.com/stillwater-sc/universal) is a C++ template library that contains tens of thousands of number systems that can be used as plug-and-play replacements of native types. By integrating this engine into the Windows calculator will we enable the entire Windows community with a resource to interact with these new number systems that are making a difference in AI right now. Any student of computer science will get a resource that will enable them to learn, test, and comprehend the behavior of these new number systems. As programmer, the programmer view of Windows calculator already provides visualization of bit encodings for integers. By expanding this view with floating-point types, we stay consistent with the Windows Calculator UX but expand its use case to numerics.    **Goals**  <!--  What you want to accomplish with this feature. Typical examples include  "User Can *perform some task*"  -->  User can present a floating-point value, and see how it gets sampled by a Number System Under Test. For example, how does the value 0.0625 get sampled by a quarter-precision floating-point number system like fp<8,2> (8 bits total, 2 exponent bits)?    If we support interval and Oracle number systems, we can also offer error values of such samplings.    If we support error propagation, using techniques like Shaman (https://github.com/nestordemeure/shaman), we can show accumulated error during a computational sequence.    **Non-Goals**  <!--  Things we are explicitly not doing or supporting or that are out of scope, including reasons why.  -->  No graphing calculations.    **Low-Fidelity Concept**  <!--  Show as much of the experience as needed to explain the idea. This can be as simple as a napkin drawing but can also be a code prototype, or a design comp. Keep it simple at this stage, as it can be refined later during the pre-production stage.  -->  The UX is going to be key.  One design would have IEEE-754 formats as standard, with a dialog that enables the user to select one or more custom number systems to contrast with. This would be presented in a new view, much like the current Programmer View, but say a "Numerical View". Any values and computational results will then be presented in encoded and value form, possibly with an error value.     This design would be analogous to the current Programmer View, but extended for Numerical use cases.     **Requested Assignment**  <!--  Some people just want to suggest a feature and let someone else implement it.  Other people want to not only suggest a feature, but implement it as well.  Both scenarios are completely ok. We just want to know which one it is.  We are likely to prioritize the review of feature requests if they already have someone who can implement them.  Please indicate which bucket you fall into by keeping one and removing the other.  -->  I am the principal for the Universal library, so we already have all the number system machinery available. Encodings, conversions, arithmetic, math libraries are already production-worthy and integrated into many R&D CAE and computational science software packages. I am looking to collaborate with a UI/UX person to add this new 'Numerical View' to the Windows Calculator and get this in the hands of the larger Windows community.  	Ravenwater	null	null	null	null	null	null	
2021-09-07 19:22:32.0	2021-09-08 15:40:05.0	2021-09-08 15:40:05.0	closed	[]	0	1682	Add release appxmanifest	https://api.github.com/repos/microsoft/calculator/issues/1682	https://github.com/microsoft/calculator/pull/1682	Currently, the copy of Package.appxmanifest in this repo is overwritten with a copy from an internal repo during release builds. This change adds the release version of Package.appxmanifest to this repo, to make it easier to maintain and keep it in sync with the copy used during development.	mcooley	null	null	null	null	null	null	
2021-09-07 21:19:33.0	2021-09-08 15:40:59.0	2021-09-08 15:40:59.0	closed	[]	1	1683	Make Calculator the default startup project	https://api.github.com/repos/microsoft/calculator/issues/1683	https://github.com/microsoft/calculator/pull/1683	Fix two issues with the solution file:  - List the "Calculator" project first, which causes Visual Studio to choose it as the startup project when the repo is first checked out. This makes it easier for people to get started coding in this repo.  - Don't nest the "CalcManager" project under the "Solution Items" folder.	mcooley	null	null	null	null	null	null	
2021-09-08 03:29:02.0	2021-09-08 04:44:56.0	2021-09-08 04:45:00.0	closed	[]	0	1684	Cherry-pick the fix for #1666	https://api.github.com/repos/microsoft/calculator/issues/1684	https://github.com/microsoft/calculator/pull/1684	# What?  Cherry-pick the fix for #1666 (Back button is not accessible via keyboard when navigating to the about page)    # Why?  Cherry-picked the fix for this issue into the release/2109 branch for Calculator before the October 2021 GA release with enough time to allow for validation testing.     Original PR: #1679	tian-lt	null	null	null	null	null	null	
2021-09-08 12:21:59.0	2021-09-20 21:09:52.0	2021-11-03 06:01:02.0	closed	[Enhancement, Pri: 2]	2	1685	Timezone conversions 	https://api.github.com/repos/microsoft/calculator/issues/1685	https://github.com/microsoft/calculator/issues/1685	**Problem Statement**  Convert time from different timezones      **Evidence or User Insights**  Have to make use of 3rd party software to do time conversions between time zones     **Proposal**  Add a feature to convert time based on location or timezone  	mwolfaardt	null	null	null	null	null	null	
2021-09-08 22:30:03.0	2021-09-16 22:10:58.0	2021-09-16 22:10:58.0	closed	[]	0	1686	UI tests should use CI runsettings in internal CI builds	https://api.github.com/repos/microsoft/calculator/issues/1686	https://github.com/microsoft/calculator/pull/1686	After the change in #1682, the internal CI build uses the .Dev app identity. Use the runsettings for UI tests that has the .Dev app identity.	mcooley	null	null	null	null	null	null	
2021-09-10 04:42:03.0	2021-09-10 07:31:20.0	2021-09-10 07:31:24.0	closed	[]	0	1687	Update resource value from title casing to sentence casing	https://api.github.com/repos/microsoft/calculator/issues/1687	https://github.com/microsoft/calculator/pull/1687	### Description of the changes:  To align with the Windows app content style, update resource string from title casing to sentence casing.    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  Manually tested.  	hanzhang54	null	null	null	null	null	null	
2021-09-11 20:56:12.0	2021-10-19 15:32:18.0	2021-10-19 15:32:18.0	closed	[Enhancement, Pri: 2]	3	1688	Improve startup performance by optimizing .NET Native configuration	https://api.github.com/repos/microsoft/calculator/issues/1688	https://github.com/microsoft/calculator/issues/1688	<!--  See https://github.com/Microsoft/calculator/blob/master/docs/NewFeatureProcess.md for suggestions on how to write a good feature pitch. Just want to submit an idea quickly? Try Feedback Hub instead: https://insider.windows.com/en-us/fb/?contextid=130  -->    **Problem Statement**  With the port to C#, startup performance is somewhat negatively impacted. The good news is that .NET Native (which Calculator already uses today) is very good at providing fast startup experience, and even better if given a little guidance. The problem is that the default configuration file that .NET Native uses generates a lot of unnecessary metadata for reflection, which negatively impacts startup speed. Further good news is that by simply deleting a single line of configuration, you can shave off a fair amount of slowness at startup with barely any effort.    **Evidence or User Insights**  I have heard others in Windows chat rooms also notice Calculator’s subtly slower startup speed post-C# port.    **Proposal**  <!--  How will the solution/feature help us solve the problem? How will it meet the target audience’s needs? If there are business goals or metrics, how does this improve them?  -->  Calculator should start fast. Users should be able to click the Calculator icon and see a calculator, right away. By implementing this proposal, Calculator will open faster, _especially_ on low-end machines.    **Goals**  <!--  What you want to accomplish with this feature. Typical examples include  "User Can *perform some task*"  -->  Startup performance should be faster.    **Non-Goals**  <!--  Things we are explicitly not doing or supporting or that are out of scope, including reasons why.  -->  If it turns out that some reflection is needed, it still is not necessary to generate metadata for the whole application. It can still be optimized more than it is today.    **Low-Fidelity Concept**  <!--  Show as much of the experience as needed to explain the idea. This can be as simple as a napkin drawing but can also be a code prototype, or a design comp. Keep it simple at this stage, as it can be refined later during the pre-production stage.  -->  ![Default.rd.xml with the *Application* assembly removed](https://user-images.githubusercontent.com/18747724/132961275-7d5dd772-7bfc-46c8-9650-3d7944e1eba4.png)  All that needs to be done is to remove `<Assembly Name="*Application*" Dynamic="Required All" />` from [Default.rd.xml](https://github.com/microsoft/calculator/blob/fdae1000fcc1ef56c6acb9ee2ebdc0ab9062b5f2/src/Calculator/Properties/Default.rd.xml). I don’t think this file is set up the way it is today for any reason. It looks like it’s just the default template, which was designed for compatibility, not performance.    **Requested Assignment**  <!--  Some people just want to suggest a feature and let someone else implement it.  Other people want to not only suggest a feature, but implement it as well.  Both scenarios are completely ok. We just want to know which one it is.  We are likely to prioritize the review of feature requests if they already have someone who can implement them.  Please indicate which bucket you fall into by keeping one and removing the other.  -->  I have already tried compiling without the runtime directive. Performance is faster on my machine, and I see no problems, though further testing should be done. In terms of code, it is simply one line to remove.    See docs on [.NET Native](https://docs.microsoft.com/en-us/windows/uwp/dotnet-native/) and [Runtime Directives](https://docs.microsoft.com/en-us/windows/uwp/dotnet-native/runtime-directives-rd-xml-configuration-file-reference).    In my own UWP app, I have done this and seen significant improvements. It means you almost never see the splash screen because it is so fast.	BreeceW	null	null	null	null	null	null	
2021-09-16 02:32:50.0	2021-09-16 22:11:17.0	2021-09-16 22:11:17.0	closed	[]	0	1689	modi	https://api.github.com/repos/microsoft/calculator/issues/1689	https://github.com/microsoft/calculator/pull/1689	## Fixes #.      ### Description of the changes:  -  -  -    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  -  -  -    	josepradaimasc	null	null	null	null	null	null	
2021-09-16 04:33:32.0	2021-09-20 20:55:17.0	2021-11-03 06:01:00.0	closed	[Bug, duplicate]	3	1690	Graph is rendered backwards when FlowDirection is RightToLeft	https://api.github.com/repos/microsoft/calculator/issues/1690	https://github.com/microsoft/calculator/issues/1690	<!--  Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.  -->    **Describe the bug**  <!-- A clear and concise description of what the bug is. -->    When the FlowDirection of the app is RightToLeft, the graph renders all context backwards.    **Steps To Reproduce**  <!--  Steps to reproduce the behavior:  1. Go to '...'  2. Click on '....'  3. Scroll down to '....'  4. See error  -->    1. Launch app in RightToLeft FlowDirection  2. Go to Graph  3. Observe    **Expected behavior**  <!-- A clear and concise description of what you expected to happen. -->    The graph should display the same as in any other language.    **Screenshots**  <!-- If applicable, add screenshots to help explain your problem. -->    ![image](https://user-images.githubusercontent.com/9384045/133549685-f1e74f8e-0ef1-4c9b-a399-27c29bebd411.png)    **Device and Application Information**   - OS Build: 10 - 19041   - Architecture: x64   - Application Version: 10.2103.8   - Region: en-US (but Hebrew is the language)   - Dev Version Installed: True    <!--  Run the following commands in Powershell and copy/paste the output.  " - OS Build: $([Environment]::OSVersion.Version)"  " - Architecture: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Architecture)"  " - Application Version: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Version)"  " - Region: $((Get-Culture).Name)"  " - Dev Version Installed: $($null -ne (Get-AppxPackage -Name Microsoft.WindowsCalculator.Dev))"  -->    **Additional context**  <!-- Add any other context about the problem here. -->    **Requested Assignment**  <!--  Some people just want to report a bug and let someone else fix it.  Other people want to not only submit the bug report, but fix it as well.  Both scenarios are completely ok. We just want to know which one it is.  Please indicate which bucket you fall into by keeping one and removing the other.  -->  If possible, I would like to fix this.  I'm just reporting this problem.  I don't want to fix it.  	Avid29	null	null	null	null	null	null	
2021-09-16 10:36:09.0	2021-09-20 03:53:36.0	2021-11-03 06:00:58.0	closed	[Area: World-Readiness, triage needed]	2	1691	Typographical Error in `Area: User Experience` Label	https://api.github.com/repos/microsoft/calculator/issues/1691	https://github.com/microsoft/calculator/issues/1691	<!--  PLEASE NOTE:   We cannot _merge_ any suggested localization changes to our localized resources files. These files are automatically generated from an internal localization process.  Any suggestion submitted this way will be duplicated into our internal localization system, and then closed here.    Alternatively, you can launch feedback-hub://, click on the "Language Community" tab on the left-side of the app, and follow the steps to submit a localization suggestion that way.  (The "Language Community" tab currently will only be visible if your system is running a non-English language).    Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.  -->    **Describe the bug**  <!-- A clear and concise description of what the bug is. -->  Notices that there is a typo in the description of `Area: User Experience` Label, which is  > Issue primarily affects end user _**expereince**_ and are not covered by other areas    Which should be:  > Issue primarily affects end user **_experience_** and are not covered by other areas    **Steps To Reproduce**  1. Go to [microsoft/calculator/labels](https://github.com/microsoft/calculator/labels)  2. See the `Area: User Experience` Label  3. See typo    **Screenshots**  ![Typo in Area: User Experience Label](https://user-images.githubusercontent.com/69080584/133597283-dd70a18e-4068-4217-86f9-33a0f9f472e9.png)	stanleyowen	null	null	null	null	null	null	
2021-09-16 23:39:18.0	2021-09-18 01:41:51.0	2021-09-18 01:41:51.0	closed	[]	0	1692	Update Build Pipelines to Remove use of Package ES and Use new Aero Upload endpoint	https://api.github.com/repos/microsoft/calculator/issues/1692	https://github.com/microsoft/calculator/pull/1692	## Fixes #.      ### Description of the changes:  Using new Upload Aero Task for Aero Publishing step, no longer dependent on Package ES.    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  By running an internal build    	quentin987	null	null	null	null	null	null	
2021-09-19 11:28:02.0	2021-09-19 21:47:16.0	2021-11-03 06:00:57.0	closed	[Enhancement, Pri: 2]	1	1693	"Characters"	https://api.github.com/repos/microsoft/calculator/issues/1693	https://github.com/microsoft/calculator/issues/1693	Uhhh wrong thing.. 	ghost	null	null	null	null	null	null	
2021-09-19 11:33:04.0	2021-09-20 21:08:16.0	2021-11-03 06:00:56.0	closed	[Bug, won't fix]	1	1694	Implement "maximum characters"	https://api.github.com/repos/microsoft/calculator/issues/1694	https://github.com/microsoft/calculator/issues/1694	If possible, I would like to implement "maximum characters" so basically what I mean by maximum characters is if someone - is doing for example 9999999999999999999999999999+99999999999999999999999999 there can be a character limit to only about maybe 14 characters or maybe less or more i dont know if this is implement already if not maybe you can add it because people can be quite silly with the calculator. I'm just suggesting this idea. I don't want to implement it but if its good enough, implement it. Thank you, please read and check over this, bye.	ghost	null	null	null	null	null	null	
2021-09-20 10:28:11.0	2021-09-20 20:50:45.0	2021-11-03 06:00:55.0	closed	[by design, Bug]	3	1695	Hitting ENTER after seeing history opens up history	https://api.github.com/repos/microsoft/calculator/issues/1695	https://github.com/microsoft/calculator/issues/1695	After opening history (and closing it) doing calculations and hitting ENTER opens up history.    I think the default behaviour always should be set to press EQUALS button.     Only in case someone hits TAB to jump through buttons ENTER should change it's behaviour.	Prophet1111	null	null	null	null	null	null	
2021-09-20 10:29:44.0	2021-09-20 20:49:32.0	2021-11-03 06:00:54.0	closed	[triage needed]	2	1696	History saved between sessions	https://api.github.com/repos/microsoft/calculator/issues/1696	https://github.com/microsoft/calculator/issues/1696	I would really love to see history being saved between sessions (reopening the app after closing it).	Prophet1111	null	null	null	null	null	null	
2021-09-22 15:29:22.0	null	2021-11-12 18:16:36.0	open	[Enhancement, Pri: 2]	2	1697	Make appearance (dark and light mode) A drop down box like Windows 11 settings.	https://api.github.com/repos/microsoft/calculator/issues/1697	https://github.com/microsoft/calculator/issues/1697	**Evidence or User Insights**  Windows app have the trend of keeping the radio button while other use the dropdown box. The drop down box makes more sense in my option as it's consistent with Windows 11 and quicker to access/see what selected.    **Proposal**  Make it a drop down box following Windows 11 "chose your mode" style    **Low-Fidelity Concept**  ![image](https://user-images.githubusercontent.com/26977075/134373679-7d07d555-57cb-4efe-957c-300e7c8bc70c.png)    **Requested Assignment**  I'm just suggesting this idea.  I don't want to implement it.  	josh-65	null	null	null	null	null	null	
2021-09-24 07:01:02.0	2021-09-26 05:02:43.0	2021-09-26 05:02:46.0	closed	[]	1	1698	Bumps the major version to 11	https://api.github.com/repos/microsoft/calculator/issues/1698	https://github.com/microsoft/calculator/pull/1698	## Bumps the major version to 11  Major version number of Calculator should be bumped to 11    	tian-lt	null	null	null	null	null	null	
2021-09-25 18:26:51.0	2021-09-25 23:42:58.0	2021-09-25 23:42:58.0	closed	[]	0	1699	Akshat added a message	https://api.github.com/repos/microsoft/calculator/issues/1699	https://github.com/microsoft/calculator/pull/1699	## Fixes #.      ### Description of the changes:  -  -  -    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  -  -  -    	thisisakshatsri	null	null	null	null	null	null	
2021-09-26 05:11:23.0	2021-09-26 08:53:43.0	2021-09-26 08:53:46.0	closed	[]	0	1700	Cherry-pick: Bumps the major version to 11 #1698	https://api.github.com/repos/microsoft/calculator/issues/1700	https://github.com/microsoft/calculator/pull/1700	## Cherry-pick: Bumps the major version to 11 #1698  > Major version number of Calculator should be bumped to 11    	tian-lt	null	null	null	null	null	null	
2021-09-26 08:50:18.0	2021-09-28 01:24:49.0	2021-09-28 01:24:54.0	closed	[]	1	1701	Fixes a regression: use the correct manifest to update version	https://api.github.com/repos/microsoft/calculator/issues/1701	https://github.com/microsoft/calculator/pull/1701	## Fixes a regression: use the correct manifest to update version  Calculator's version is being frozen at 10.1604.27012.0. This is a regression related to PR #1682.    ### Description of the changes:  - Add a variable in pipeline config to help decide which manifest should be used to update version.    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Tested with below pipeline runs:    1. Release run [11.2109.2.0](https://dev.azure.com/microsoft/Apps/_build/results?buildId=39507387&view=results)    1. Internal CI run [0.2109.2601.0](https://dev.azure.com/microsoft/Apps/_build/results?buildId=39508163&view=results)    1. PR/CI run [0.2109.2603.0](https://dev.azure.com/ms/calculator/_build/results?buildId=225410&view=results)    	tian-lt	null	null	null	null	null	null	
2021-09-26 09:05:35.0	2021-09-27 02:14:21.0	2021-09-27 02:14:24.0	closed	[]	0	1702	Fixes a UI test case: AoT_ButtonOnlyInStandard	https://api.github.com/repos/microsoft/calculator/issues/1702	https://github.com/microsoft/calculator/pull/1702	## Fixes a UI test case: AoT_ButtonOnlyInStandard  The test case failed with error: `Assert.AreEqual failed. Expected:<Date Calculation>. Actual:<Date calculation>.`  This is related to the changes in PR #1687.  ![image](https://user-images.githubusercontent.com/60599517/134833343-aaee0363-d2d7-4877-8343-868f1a840eda.png)    ### Description of the changes:  - Adjusts the out-of-date string in the test case.    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - Manually tested.    	tian-lt	null	null	null	null	null	null	
2021-09-27 17:13:38.0	2021-09-28 06:22:54.0	2021-09-28 06:22:54.0	closed	[documentation]	2	1703	Mention C# in the README	https://api.github.com/repos/microsoft/calculator/issues/1703	https://github.com/microsoft/calculator/pull/1703	null	AtariDreams	null	null	null	null	null	null	
2021-09-28 01:23:24.0	2021-09-28 07:27:33.0	2021-09-28 07:27:36.0	closed	[]	0	1704	Cherry-pick: Bumps the major version to 11 (#1698) for release/2109-1	https://api.github.com/repos/microsoft/calculator/issues/1704	https://github.com/microsoft/calculator/pull/1704	## Cherry-pick: Bumps the major version to 11 (#1698) for release/2109-1    > Major version number of Calculator should be bumped to 11  	tian-lt	null	null	null	null	null	null	
2021-09-28 01:30:13.0	2021-09-28 09:52:06.0	2021-09-28 09:57:17.0	closed	[]	0	1705	Cherry-pick: Use the correct manifest to update version (#1701) for release/2109-1	https://api.github.com/repos/microsoft/calculator/issues/1705	https://github.com/microsoft/calculator/pull/1705	## Cherry-pick: Use the correct manifest to update version (#1701) for release/2109-1    > ## Fixes a regression: use the correct manifest to update version  > Calculator's version is being frozen at 10.1604.27012.0. This is a regression related to PR #1682.  > ### Description of the changes:  > Add a variable in pipeline config to help decide which manifest should be used to update version.	tian-lt	null	null	null	null	null	null	
2021-09-28 20:22:35.0	2021-09-28 20:55:20.0	2021-09-28 20:55:20.0	closed	[]	0	1706	Update bundle version to 2021	https://api.github.com/repos/microsoft/calculator/issues/1706	https://github.com/microsoft/calculator/pull/1706	In #1698, the app major version was bumped from 10->11.    We also need to update the _bundle_ major version when we update the app major version, so that 10.* bundles do not have the same bundle version numbers as 11.* bundles.	mcooley	null	null	null	null	null	null	
2021-09-28 21:17:07.0	2021-09-28 21:45:01.0	2021-09-28 21:45:01.0	closed	[]	0	1707	Cherry-pick to release/2109: Update bundle version to 2021 (#1706)	https://api.github.com/repos/microsoft/calculator/issues/1707	https://github.com/microsoft/calculator/pull/1707	Cherry-pick #1706 to the release/2109 branch.	mcooley	null	null	null	null	null	null	
2021-09-28 21:18:45.0	2021-09-29 02:01:32.0	2021-09-29 02:01:32.0	closed	[]	2	1708	Cherry-pick to release/2109-1: Update bundle version to 2021 (#1706)	https://api.github.com/repos/microsoft/calculator/issues/1708	https://github.com/microsoft/calculator/pull/1708	Cherry-pick #1706 to the release/2109-1 branch.	mcooley	null	null	null	null	null	null	
2021-09-29 05:16:20.0	2021-09-29 08:41:51.0	2021-09-29 08:41:51.0	closed	[]	0	1709	Fix dropDown to dropdown	https://api.github.com/repos/microsoft/calculator/issues/1709	https://github.com/microsoft/calculator/pull/1709	Fixed the typo dropDown to dropdown.  	hanzhang54	null	null	null	null	null	null	
2021-09-29 09:11:48.0	2021-10-08 10:01:50.0	2021-10-08 10:01:50.0	closed	[needs author feedback, no recent activity]	1	1710	Update resource value from title casing to sentence casing (#1687)	https://api.github.com/repos/microsoft/calculator/issues/1710	https://github.com/microsoft/calculator/pull/1710	Cherry-pick https://github.com/microsoft/calculator/pull/1687 and https://github.com/microsoft/calculator/pull/1709 to release/2109 branch.    	hanzhang54	null	null	null	null	null	null	
2021-09-29 09:18:21.0	2021-10-08 10:02:26.0	2021-10-08 10:02:26.0	closed	[]	0	1711	Fix dropDown to dropdown	https://api.github.com/repos/microsoft/calculator/issues/1711	https://github.com/microsoft/calculator/pull/1711	Cherry-pick https://github.com/microsoft/calculator/pull/1709 to release/2109-1 branch.	hanzhang54	null	null	null	null	null	null	
2021-10-06 07:24:26.0	2021-10-06 21:52:46.0	2021-11-06 00:00:47.0	closed	[triage needed]	1	1712	W11 reject various online games connection (all versions)	https://api.github.com/repos/microsoft/calculator/issues/1712	https://github.com/microsoft/calculator/issues/1712	**_Fixed_**  	GithOmar	null	null	null	null	null	null	
2021-10-06 19:31:13.0	null	2021-10-28 00:39:16.0	open	[triage needed]	5	1713	Calculator buttons are blurry	https://api.github.com/repos/microsoft/calculator/issues/1713	https://github.com/microsoft/calculator/issues/1713	You can see that the buttons in the flyout have sharp borders, while the other ones are blurry. This also happened in the past, when the buttons used reveal highlight.  ![image](https://user-images.githubusercontent.com/84711285/136270241-716f766a-160e-45e9-bdc7-b89bebd04494.png)    ```   - OS Build: 10.0.22000.0   - Architecture: X64   - Application Version: 11.2109.8.0   - Region: en-US   - Dev Version Installed: False  ```	ghost	null	null	null	null	null	null	
2021-10-08 12:29:01.0	2021-10-09 01:22:38.0	2021-11-08 06:00:48.0	closed	[duplicate, triage needed]	2	1714	The grid on Graphing is not automatically x:y=1:1	https://api.github.com/repos/microsoft/calculator/issues/1714	https://github.com/microsoft/calculator/issues/1714	Calculator 11.2109.8.0 on Windows 11    The grid on Graphing is not x:y=1:1, which causes perpendicular lines look like unperpendicular, etc.    ![图片](https://user-images.githubusercontent.com/65082432/136558370-56fc8e5e-800e-4e61-bbc4-e2ebdda4a58d.png)  	Firestar-Reimu	null	null	null	null	null	null	
2021-10-09 17:38:11.0	2021-10-19 03:14:04.0	2021-10-22 20:38:54.0	closed	[]	0	1715	Ensure element presence is checked prior to its use	https://api.github.com/repos/microsoft/calculator/issues/1715	https://github.com/microsoft/calculator/pull/1715	### Description of the changes:  Reorders the checks such that field is only accessed after its parent has been verified to be present    ### How changes were validated:  Only by looking at the code	janisozaur	null	null	null	null	null	null	
2021-10-10 04:15:32.0	null	2021-11-12 18:16:37.0	open	[Enhancement, Pri: 2]	1	1716	Add unit description	https://api.github.com/repos/microsoft/calculator/issues/1716	https://github.com/microsoft/calculator/issues/1716	<!--  See https://github.com/Microsoft/calculator/blob/master/docs/NewFeatureProcess.md for suggestions on how to write a good feature pitch. Just want to submit an idea quickly? Try Feedback Hub instead: https://insider.windows.com/en-us/fb/?contextid=130  -->    **Problem Statement**  <!--  What problem are we trying to solve? Who’s the target audience? Is there a customer need or pain point we need to remedy? Is there a business goal or metric we are trying to improve? Do we have a hypothesis we want to prove or disprove?  -->    Adding a unit description is gaining a lot of experience.    **Evidence or User Insights**  <!--  Why should we do this? Potential sources of data: Feedback Hub, other GitHub issues, other anecdotes from listening to customers in person or online, request from another team, telemetry data, user research, market or competitive research  -->    **Proposal**  <!--  How will the solution/feature help us solve the problem? How will it meet the target audience’s needs? If there are business goals or metrics, how does this improve them?  -->    **Goals**  <!--  What you want to accomplish with this feature. Typical examples include  "User Can *perform some task*"  -->  For example    `Fahrenheit (F°)`    **Non-Goals**  <!--  Things we are explicitly not doing or supporting or that are out of scope, including reasons why.  -->    **Low-Fidelity Concept**  <!--  Show as much of the experience as needed to explain the idea. This can be as simple as a napkin drawing but can also be a code prototype, or a design comp. Keep it simple at this stage, as it can be refined later during the pre-production stage.  -->    **Requested Assignment**  <!--  Some people just want to suggest a feature and let someone else implement it.  Other people want to not only suggest a feature, but implement it as well.  Both scenarios are completely ok. We just want to know which one it is.  We are likely to prioritize the review of feature requests if they already have someone who can implement them.  Please indicate which bucket you fall into by keeping one and removing the other.  -->  If possible, I would like to implement this.  I'm just suggesting this idea.  I don't want to implement it.  	onein528	null	null	null	null	null	null	
2021-10-10 07:20:06.0	2021-10-11 05:12:15.0	2021-10-11 05:12:15.0	closed	[]	0	1717	Update README.md	https://api.github.com/repos/microsoft/calculator/issues/1717	https://github.com/microsoft/calculator/pull/1717	you can change it and it will look and sound better    ## Fixes #.      ### Description of the changes:  -  -  -    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  -  -  -    	som22	null	null	null	null	null	null	
2021-10-12 04:29:26.0	2021-10-13 03:38:20.0	2021-10-13 03:38:24.0	closed	[]	0	1718	Updates the minor version to 2110	https://api.github.com/repos/microsoft/calculator/issues/1718	https://github.com/microsoft/calculator/pull/1718	## Updates the minor version to 2110      ### Description of the changes:  - Bumps the minor version for the release pipeline configuration      	tian-lt	null	null	null	null	null	null	
2021-10-13 10:16:38.0	null	2021-11-12 18:32:30.0	open	[Bug, triage approved, Area: World-Readiness, Pri: 2]	4	1719	[Localization] Both milliseconds and microseconds are shown as milliseconds on ko-KR localization	https://api.github.com/repos/microsoft/calculator/issues/1719	https://github.com/microsoft/calculator/issues/1719	Both `milliseconds(밀리초)` and `microseconds(마이크로초)` are shown as `milliseconds(밀리초)` on ko-KR localization.  It is fairly misleading, I hope it gets fixed soon.    ![image](https://user-images.githubusercontent.com/34793045/137114257-4a3ac008-6507-4995-90de-fef4185473ae.png)  	copyrat90	null	null	null	null	null	null	
2021-10-14 02:46:54.0	2021-10-14 02:50:00.0	2021-10-14 02:50:00.0	closed	[]	0	1720	[Localization] Fix invalid "microseconds" on ko-KR localization	https://api.github.com/repos/microsoft/calculator/issues/1720	https://github.com/microsoft/calculator/pull/1720	**I know this repository doesn't accept the localization PR, but I created this PR to show that it still exists on the master branch on the discussion in #1719  .**    ## Fixes #1719 .    ### Description of the changes:  - Fix both "Milliseconds(밀리초)" and "Microseconds(마이크로초)" are    translated to "Milliseconds("밀리초") on ko-KR localization	copyrat90	null	null	null	null	null	null	
2021-10-14 05:27:04.0	2021-10-14 06:25:58.0	2021-10-14 06:26:01.0	closed	[]	0	1721	Update localized strings 2021-10-14	https://api.github.com/repos/microsoft/calculator/issues/1721	https://github.com/microsoft/calculator/pull/1721	Update strings from our internal localization system.  	hanzhang54	null	null	null	null	null	null	
2021-10-15 09:28:12.0	2021-10-15 09:56:15.0	2021-10-15 09:56:15.0	closed	[]	0	1722	Modify package identity on CI pipelines for easier testing	https://api.github.com/repos/microsoft/calculator/issues/1722	https://github.com/microsoft/calculator/pull/1722	## Fixes #.  Modify package identity on CI pipelines for easier testing.    ### Description of the changes:  - Add a script to modify the package identity  - Add a stage for CI builds to call the script    ### How changes were validated:  - Validated with internal ADO pipelines	mingxwa	null	null	null	null	null	null	
2021-10-15 11:22:34.0	null	2021-11-12 18:16:41.0	open	[Enhancement, Pri: 2]	1	1723	[Feature request] Add gcd & lcm operations	https://api.github.com/repos/microsoft/calculator/issues/1723	https://github.com/microsoft/calculator/issues/1723	<!--  See https://github.com/Microsoft/calculator/blob/master/docs/NewFeatureProcess.md for suggestions on how to write a good feature pitch. Just want to submit an idea quickly? Try Feedback Hub instead: https://insider.windows.com/en-us/fb/?contextid=130  -->    **Problem Statement**  <!--  What problem are we trying to solve? Who’s the target audience? Is there a customer need or pain point we need to remedy? Is there a business goal or metric we are trying to improve? Do we have a hypothesis we want to prove or disprove?  -->  It would be handy if you can calculate gcd(greatest common divisor) and lcm(least common multiple) on the calculator.    **Evidence or User Insights**  <!--  Why should we do this? Potential sources of data: Feedback Hub, other GitHub issues, other anecdotes from listening to customers in person or online, request from another team, telemetry data, user research, market or competitive research  -->  There's even an app on the Microsoft Store which only calculates gcd and lcm. (which is not free)  Thinking that it's a simple binary operation to add, it's nice to be added on the calculator.    **Proposal**  <!--  How will the solution/feature help us solve the problem? How will it meet the target audience’s needs? If there are business goals or metrics, how does this improve them?  -->  You don't have to search for the seperate gcd & lcm calculator.    **Goals**  <!--  What you want to accomplish with this feature. Typical examples include  "User Can *perform some task*"  -->  User can perform gcd & lcm as binary operations (probably on the scientific calculator).    **Non-Goals**  <!--  Things we are explicitly not doing or supporting or that are out of scope, including reasons why.  -->  It won't be an common factoring calculator, as it would be too slow to calculate them.    **Low-Fidelity Concept**  <!--  Show as much of the experience as needed to explain the idea. This can be as simple as a napkin drawing but can also be a code prototype, or a design comp. Keep it simple at this stage, as it can be refined later during the pre-production stage.  -->  <img width="485" alt="suggestion" src="https://user-images.githubusercontent.com/34793045/137478755-ef3ba8f7-6abd-4e86-bee1-eab1f5eb6fec.png">    **Requested Assignment**  <!--  Some people just want to suggest a feature and let someone else implement it.  Other people want to not only suggest a feature, but implement it as well.  Both scenarios are completely ok. We just want to know which one it is.  We are likely to prioritize the review of feature requests if they already have someone who can implement them.  Please indicate which bucket you fall into by keeping one and removing the other.  -->  If possible, I would like to implement this.  	copyrat90	null	null	null	null	null	null	
2021-10-16 06:11:00.0	2021-10-19 07:27:25.0	2021-10-19 07:27:26.0	closed	[triage needed]	3	1724	Add Bitcoin to calculator	https://api.github.com/repos/microsoft/calculator/issues/1724	https://github.com/microsoft/calculator/issues/1724	Add Bitcoin to calculator	apicharttre	null	null	null	null	null	null	
2021-10-18 00:10:12.0	null	2021-10-28 00:39:24.0	open	[Area: World-Readiness, triage needed]	2	1725	[Localization] Missing/wrong localizations at the unit byte on data	https://api.github.com/repos/microsoft/calculator/issues/1725	https://github.com/microsoft/calculator/issues/1725	<!--  PLEASE NOTE:   We cannot _merge_ any suggested localization changes to our localized resources files. These files are automatically generated from an internal localization process.  Any suggestion submitted this way will be duplicated into our internal localization system, and then closed here.    Alternatively, you can launch feedback-hub://, click on the "Language Community" tab on the left-side of the app, and follow the steps to submit a localization suggestion that way.  (The "Language Community" tab currently will only be visible if your system is running a non-English language).    Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.  -->    **Describe the bug**  <!-- A clear and concise description of what the bug is. -->  In my version as below, the text for 'Gigabyte' is showing `GB` in Korean. But it is still in english word.  (look at the attached screenshots)      **Steps To Reproduce**  <!--  Steps to reproduce the behavior:  1. Go to '...'  2. Click on '....'  3. Scroll down to '....'  4. See error  -->  - (in Windows 10, if system language is not korean)  - 1. Select Start > Settings > Time & language > Language & region  - 2. Choose language 'Korean' or add  1. Go to 'Converter > Data'  2. Click on the unit to show options  3. See translations    **Expected behavior**  <!-- A clear and concise description of what you expected to happen. -->  Contextually I think, the word for it is `기가바이트`. Also, many items have same problem:    | English | Korean (current) | Suggestion | description |  | - | - | - | - |  | Bits | 비트 | 비트 | |  | **Bytes** | **바이트 수** | **바이트** | `수` is useless (it means unit/number in korean) |  | **Kilobits** | **Kbps** | **킬로비트** | wrong translation, `Kbps` means bitrate for 'Kilobits Per Second' |  | Kibibits | 키비비트 | 키비비트 | |  | Kilobytes | 킬로바이트 | 킬로바이트 | |  | Kibibytes | 키비바이트 | 키비바이트 | |  | Megabits | 메가비트 | 메가비트 | |  | Mebibits | 메비바이트 | 메비비트 | wrong translation, it's '비트' for bits, not '바이트' |  | Megabytes | 메가바이트 | 메가바이트 | |  | Mebibytes | 메비바이트 | 메비바이트 | |  | Gigabits | 기가비트 | 기가비트 | |  | **Gibibits** | **기비비트(비트)** | **기비비트** | `(비트)` is useless |  | **Gigabytes** | **GB** | **기가바이트** | missing translation |  | Gibibytes | 기비바이트 | 기비바이트 | |  | Terabits | 테라비트 | 테라비트 | |  | Tebibits | 테비비트 | 테비비트 | |  | Terabytes | 테라바이트 | 테라바이트 | |  | Tebibytes | 테비바이트 | 테비바이트 | |  | Petabits | 페타비트 | 페타비트 | |  | Pebibits | 페비비트 | 페비비트 | |  | Petabytes | 페타바이트 | 페타바이트 | |  | Pebibytes | 페비바이트 | 페비바이트 | |  | Exabits | 엑사비트 | 엑사비트 | |  | **Exbibits** | **엑시비비트** | **엑스비비트** | typo |  | Exabytes | 엑사바이트 | 엑사바이트 | |  | Exbibytes | 엑스비바이트 | 엑스비바이트 | |  | Zetabits | 제타비트 | 제타비트 | |  | Zebibits | 제비비트 | 제비비트 | |  | Zetabytes | 제타바이트 | 제타바이트 | |  | Zebibytes | 제비바이트 | 제비바이트 | |  | Yottabit | 요타비트 | 요타비트 | |  | Yobibits | 요비비트 | 요비비트 | |  | Yottabyte | 요타바이트 | 요타바이트 | |  | Yobibytes | 요비바이트 | 요비바이트 | |      **Furthermore**    In my opinion, the Korean texts look very similar to each others, for example '기가바이트' and '기비바이트'  it makes hard to read. thus, I think that list down with unit symbol for short is better to read as like `기가바이트(GB)`    **Screenshots**  <!-- If applicable, add screenshots to help explain your problem. -->  In korean,  ![image](https://user-images.githubusercontent.com/9527681/137649927-92bcac40-13a5-4ee8-846c-8cd2bbd2d607.png)    In English,  ![image](https://user-images.githubusercontent.com/9527681/137593577-f5a30c32-923a-4112-af9f-e9cbabc9abdc.png)      **Device and Application Information**  - OS Build: 10.0.19043.0  - Architecture: X64  - Application Version: 10.2103.8.0  - Region: ko-KR  - Dev Version Installed: False  <!--  Run the following commands in Powershell and copy/paste the output.  " - OS Build: $([Environment]::OSVersion.Version)"  " - Architecture: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Architecture)"  " - Application Version: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Version)"  " - Region: $((Get-Culture).Name)"  " - Dev Version Installed: $($null -ne (Get-AppxPackage -Name Microsoft.WindowsCalculator.Dev))"  -->  	joonas-yoon	null	null	null	null	null	null	
2021-10-18 00:19:50.0	null	2021-10-28 00:39:21.0	open	[Area: World-Readiness, triage needed]	5	1726	[Localization] wrong word for 'Degrees' on Angle	https://api.github.com/repos/microsoft/calculator/issues/1726	https://github.com/microsoft/calculator/issues/1726	<!--  PLEASE NOTE:   We cannot _merge_ any suggested localization changes to our localized resources files. These files are automatically generated from an internal localization process.  Any suggestion submitted this way will be duplicated into our internal localization system, and then closed here.    Alternatively, you can launch feedback-hub://, click on the "Language Community" tab on the left-side of the app, and follow the steps to submit a localization suggestion that way.  (The "Language Community" tab currently will only be visible if your system is running a non-English language).    Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.  -->    **Describe the bug**  <!-- A clear and concise description of what the bug is. -->  Having wrong translation on Angle    **Expected behavior**  <!-- A clear and concise description of what you expected to happen. -->  | English | Korean (current) | Fix to |  | - | - | - |  | Degrees | 온도 | 도 |    Also, `grad` at bottom for displaying "About equal to ~" translated wrong.  `0 grad` is not `0 대학원생`  in korean, "대학원생" means graduate student. 🤣   `0 도` is right.    **Screenshots**  <!-- If applicable, add screenshots to help explain your problem. -->  ![image](https://user-images.githubusercontent.com/9527681/137650246-41b8f7a1-bbfa-4892-8176-a9726e78d60a.png)      **Device and Application Information**   - OS Build: 10.0.19043.0   - Architecture: X64   - Application Version: 10.2103.8.0   - Region: en-US   - Dev Version Installed: False     <!--  Run the following commands in Powershell and copy/paste the output.  " - OS Build: $([Environment]::OSVersion.Version)"  " - Architecture: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Architecture)"  " - Application Version: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Version)"  " - Region: $((Get-Culture).Name)"  " - Dev Version Installed: $($null -ne (Get-AppxPackage -Name Microsoft.WindowsCalculator.Dev))"  -->  	joonas-yoon	null	null	null	null	null	null	
2021-10-18 23:19:11.0	2021-10-19 15:32:18.0	2021-10-19 15:32:25.0	closed	[]	0	1727	Remove unnecessary metadata to reduce binary size	https://api.github.com/repos/microsoft/calculator/issues/1727	https://github.com/microsoft/calculator/pull/1727	Fixes #1688    As described in the issue above, the rd.xml in this project comes from the default Visual Studio project template which is optimized for compatibility. Removing `*Application*` avoids adding reflection data into the binary for things which the app doesn't actually need.    This PR also applies two other size optimizations:  `/disableStackTraceMetadata`: The compiler generates data structures that help generating stack traces (for things like Exception.ToString() on thrown exceptions). Our debugging tools (e.g. crash dumps with postmortem debugging) don't rely on this, so we don't need to include this data in the binary.  `/disableExceptionMessages`: This option disables generation of exception messages for framework-thrown exceptions (so instead of e.g. the "Object reference not set to an instance of an object." message, we'll get "Arg_NullReferenceException" in the exception's Message field).    The net effect of these optimizations is a substantial size decrease in CalculatorApp.dll. On x64, before: 8.79MB after: 7.25 MB	mcooley	null	null	null	null	null	null	
2021-10-19 13:40:56.0	null	2021-10-20 01:51:38.0	open	[]	1	1728	Fix localizations on data byte units (#1725)	https://api.github.com/repos/microsoft/calculator/issues/1728	https://github.com/microsoft/calculator/pull/1728	## Fixes #1725    ### Description of the changes:      | English | Korean (before) | Fixed | description |  | - | - | - | - |  | Bytes | 바이트 수 | 바이트 | `수` is useless (it means unit/number in korean) |  | Kilobits | Kbps | 킬로비트 | wrong translation, `Kbps` means bitrate for 'Kilobits Per Second' |  | Mebibits | 메비바이트 | 메비비트 | wrong translation, it's '비트' for bits, not '바이트' |  | Gibibits | 기비비트(비트) | 기비비트 | `(비트)` is useless |  | Gigabytes | GB | 기가바이트 | missing translation |  | Exbibits | 엑시비비트 | 엑스비비트 | typo |      ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  - forked it and fixed localizations  - then, build an application to test as shown as following screenshot:    ![image](https://user-images.githubusercontent.com/9527681/137921552-ad2608a1-1aa2-4975-b6c6-cebc90cddd92.png)    	joonas-yoon	null	null	null	null	null	null	
2021-10-19 21:54:12.0	null	2021-10-19 21:54:36.0	open	[]	0	1729	Drop non-negative tests on unsigned values	https://api.github.com/repos/microsoft/calculator/issues/1729	https://github.com/microsoft/calculator/pull/1729	As some of the variables are of unsigned types, it makes no sense to  test them for non-negativeness, as this is enforced by type already.	janisozaur	null	null	null	null	null	null	
2021-10-22 20:39:34.0	null	2021-11-12 18:16:42.0	open	[Enhancement, Pri: 2]	2	1730	App execution alias	https://api.github.com/repos/microsoft/calculator/issues/1730	https://github.com/microsoft/calculator/issues/1730	![image](https://user-images.githubusercontent.com/23485114/138519982-39a3d33b-76b5-42f9-ae5c-6d4b57907ffb.png)  I need an app execution alias for the Calculator app: calc.exe (like Paint or Notepad)	xmha97	null	null	null	null	null	null	
2021-10-26 15:02:06.0	null	2021-11-01 19:46:30.0	open	[triage needed]	2	1731	Typography is defect	https://api.github.com/repos/microsoft/calculator/issues/1731	https://github.com/microsoft/calculator/issues/1731	<!--  Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.  -->    **Describe the bug**  <!-- A clear and concise description of what the bug is. -->  The calculator has big issues with displaying small typo, it becomes very blurry.  This becomes apparent with the `+` (plus) and `÷` (division) signs.  I have a normal, non-retina screen with the default screen scale (= being set to 100%). ClearType is activated and has been finetuned (with the integrated wizard).  I fail consistenly to differ between both sign, leading to much confusion.      **Steps To Reproduce**  <!--  Steps to reproduce the behavior:  1. Go to '...'  2. Click on '....'  3. Scroll down to '....'  4. See error  -->  N/A    **Expected behavior**  <!-- A clear and concise description of what you expected to happen. -->  The typo of `+` and `÷` should be better distinguishable.    **Screenshots**  <!-- If applicable, add screenshots to help explain your problem. -->      ![Screenshot 2021-10-22 115821](https://user-images.githubusercontent.com/2277182/138906065-71a0c975-5196-4997-9a6b-55af9ec44489.png)    ![Screenshot 2021-10-22 115805](https://user-images.githubusercontent.com/2277182/138906073-da91f7fa-5aa5-4d75-bb7c-dca585986d85.png)       - OS Build: 10.0.19042.0   - Architecture: X64   - Application Version: 10.2103.8.0   - Region: de-DE   - Dev Version Installed: False    **Additional context**  <!-- Add any other context about the problem here. -->    **Requested Assignment**  <!--  Some people just want to report a bug and let someone else fix it.  Other people want to not only submit the bug report, but fix it as well.  Both scenarios are completely ok. We just want to know which one it is.  Please indicate which bucket you fall into by keeping one and removing the other.  -->  I'm just reporting this problem.  I don't want to fix it.  	runxel	null	null	null	null	null	null	
2021-10-27 21:30:50.0	2021-11-11 14:37:15.0	2021-11-11 14:37:15.0	closed	[triage needed]	2	1732	Ambiguity while Inputting Negative Numbers	https://api.github.com/repos/microsoft/calculator/issues/1732	https://github.com/microsoft/calculator/issues/1732	  A usual universal and standard way of typing negative numbers using the keyboard is by inputting the symbol (-) and then the number afterward. But this is not the case over here when the negative number is the first variable in the statement which increases the chance of careless sign errors while typing numbers fast. Hope this is a valid issue and can be raised.    	rameeznaufal	null	null	null	null	null	null	
2021-10-29 17:28:20.0	2021-10-31 15:40:37.0	2021-10-31 15:40:42.0	closed	[]	0	1733	update the minor version to 2111	https://api.github.com/repos/microsoft/calculator/issues/1733	https://github.com/microsoft/calculator/pull/1733	update the minor version to 2111.  	tian-lt	null	null	null	null	null	null	
2021-11-01 02:20:39.0	null	2021-11-11 06:02:10.0	open	[Enhancement, Pri: 2]	1	1734	Duration Arithmetic (add durations together)	https://api.github.com/repos/microsoft/calculator/issues/1734	https://github.com/microsoft/calculator/issues/1734	Use case:      Calculate multiple durations together in hours:minutes[:seconds] format and get a result in hours:minutes:seconds  using standard math functions - mainly addition / subtraction / divide / multiply.      I went looking for this function in calculator, and given it's breadth of functionality and how common having to add durations together is, I was surprised this was missing.      If this is kept to hours, minutes, seconds, then this should be as simple as implementing sexagesimal math.    Obviously if days and milliseconds etc are included then it's more complicated than that.       	jmorgannz	null	null	null	null	null	null	
2021-11-01 14:37:31.0	null	2021-11-11 06:02:12.0	open	[Enhancement, Pri: 2]	1	1735	[Feature request] Add parentheses/parentheses support to the standard calculator.	https://api.github.com/repos/microsoft/calculator/issues/1735	https://github.com/microsoft/calculator/issues/1735	<!--  See https://github.com/Microsoft/calculator/blob/master/docs/NewFeatureProcess.md for suggestions on how to write a good feature pitch. Just want to submit an idea quickly? Try Feedback Hub instead: https://insider.windows.com/en-us/fb/?contextid=130  -->    **Problem Statement**  <!--  What problem are we trying to solve? Who’s the target audience? Is there a customer need or pain point we need to remedy? Is there a business goal or metric we are trying to improve? Do we have a hypothesis we want to prove or disprove?  -->  Parentheses are common parts of simple calculations. Oddly enough, the standard calculator has exponents and a couple of other advanced tools but doesn't have parentheses or support for them being added by typing. Almost every time I go to do simple calculations, I find the need to calculate something additionally in the middle of the calculation by use of parentheses. On mobile platforms, it's simple enough because their calculator applications have parentheses in them. On Windows, I have to switch over to Scientific mode which makes me lose the current calculation that I'm working on, or I have to remember to start in Scientific, which is a slightly bloated environment for simple calculations in a small window.    **Evidence or User Insights**  <!--  Why should we do this? Potential sources of data: Feedback Hub, other GitHub issues, other anecdotes from listening to customers in person or online, request from another team, telemetry data, user research, market or competitive research  -->    **Proposal**  <!--  How will the solution/feature help us solve the problem? How will it meet the target audience’s needs? If there are business goals or metrics, how does this improve them?  -->    **Goals**  <!--  What you want to accomplish with this feature. Typical examples include  "User Can *perform some task*"  -->    **Non-Goals**  <!--  Things we are explicitly not doing or supporting or that are out of scope, including reasons why.  -->    **Low-Fidelity Concept**  <!--  Show as much of the experience as needed to explain the idea. This can be as simple as a napkin drawing but can also be a code prototype, or a design comp. Keep it simple at this stage, as it can be refined later during the pre-production stage.  -->    **Requested Assignment**  <!--  Some people just want to suggest a feature and let someone else implement it.  Other people want to not only suggest a feature, but implement it as well.  Both scenarios are completely ok. We just want to know which one it is.  We are likely to prioritize the review of feature requests if they already have someone who can implement them.  Please indicate which bucket you fall into by keeping one and removing the other.  -->  I'm just suggesting this idea.  I don't want to implement it.  	JacksonCampbell99	null	null	null	null	null	null	
2021-11-01 15:05:01.0	null	2021-11-11 06:02:14.0	open	[Enhancement, Pri: 2]	1	1736	Compute result after user input instead computing result while typing	https://api.github.com/repos/microsoft/calculator/issues/1736	https://github.com/microsoft/calculator/issues/1736	<!--  See https://github.com/Microsoft/calculator/blob/master/docs/NewFeatureProcess.md for suggestions on how to write a good feature pitch. Just want to submit an idea quickly? Try Feedback Hub instead: https://insider.windows.com/en-us/fb/?contextid=130  -->    **Problem Statement**  When I use my physical calculator I can type `0,9` `*` `log` `(` `0.8` `)`  And it displays  0.9 * log(0.8)  so I can fix any typo and run `=` for get results    But, doing so it runs `log` at the time you type it so it ruins your formula understanding and you must rethinking its typing hierarchy     i.e running this example ->  `0,9` `*` `log` `(` `0.8` `)` `=`  Expected behaviour about:     ![image](https://user-images.githubusercontent.com/4382333/139692348-f582ed05-26ca-4458-a0b2-7dd70875b67c.png)    Actual behabiour:    [![Image from Gyazo](https://i.gyazo.com/ecdd75f5b3ae2d743d0960667f350d87.gif)](https://gyazo.com/ecdd75f5b3ae2d743d0960667f350d87)      **Proposal**    As you can se If you want the expected behabiour you must compute `log(0,8)` while typing as:  `0.9` `*` `(` `0.8` `log` `)`   so, this changes the way formula is represented and its behaviour is so counter intuitive it turns out to be unusable.    In my honest opinion you could disable this behaviour or enable "after type" computation so it lets you write a formula and compute result only when you hit `=`    If possible, I would like to implement this.  I'm just suggesting this idea.  I don't want to implement it.  	moracabanas	null	null	null	null	null	null	
2021-11-02 12:05:40.0	2021-11-02 12:05:56.0	2021-11-02 12:06:00.0	closed	[]	1	1737	dsd	https://api.github.com/repos/microsoft/calculator/issues/1737	https://github.com/microsoft/calculator/pull/1737	## Fixes #.      ### Description of the changes:  -  -  -    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  -  -  -    	Candreas	null	null	null	null	null	null	
2021-11-02 14:52:42.0	2021-11-02 14:54:19.0	2021-11-02 14:54:57.0	closed	[]	1	1738	Oooo	https://api.github.com/repos/microsoft/calculator/issues/1738	https://github.com/microsoft/calculator/pull/1738	## Fixes #.      ### Description of the changes:  -  -  -    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  -  -  -    	Candreas	null	null	null	null	null	null	
2021-11-03 09:56:28.0	null	2021-11-03 12:02:50.0	open	[triage needed]	1	1739	In programmer mode, when transfer binary representation to hex representation and  which is not in friendly way.	https://api.github.com/repos/microsoft/calculator/issues/1739	https://github.com/microsoft/calculator/issues/1739	<!--  Before filing a bug  - Ensure the bug reproduces on the latest version of the app.  - Search existing issues and make sure this issue is not already filed.  -->    **Describe the bug**  <!-- A clear and concise description of what the bug is. -->  I have typed hex-style number `40 73 02 b3` and expected output `0100 0000 0111 0011 0000 0010 1011 0011` in bin-style.  But it gave me `100 0000 0111 0011 0000 0010 1011 0011`, so I have thought that there may be some more user-friendly output.    Result like this:   ![image](https://user-images.githubusercontent.com/61347887/140040077-987568c4-a9d4-471a-8c85-b1def4f5becf.png)    **Steps To Reproduce**  <!--  Steps to reproduce the behavior:  1. Go to '...'  2. Click on '....'  3. Scroll down to '....'  4. See error  -->    **Expected behavior**  <!-- A clear and concise description of what you expected to happen. -->    **Screenshots**  <!-- If applicable, add screenshots to help explain your problem. -->    **Device and Application Information**   - OS Build:   - Architecture:   - Application Version:   - Region:   - Dev Version Installed:    <!--  Run the following commands in Powershell and copy/paste the output.  " - OS Build: $([Environment]::OSVersion.Version)"  " - Architecture: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Architecture)"  " - Application Version: $((Get-AppxPackage -Name Microsoft.WindowsCalculator).Version)"  " - Region: $((Get-Culture).Name)"  " - Dev Version Installed: $($null -ne (Get-AppxPackage -Name Microsoft.WindowsCalculator.Dev))"  -->    **Additional context**  <!-- Add any other context about the problem here. -->    **Requested Assignment**  <!--  Some people just want to report a bug and let someone else fix it.  Other people want to not only submit the bug report, but fix it as well.  Both scenarios are completely ok. We just want to know which one it is.  Please indicate which bucket you fall into by keeping one and removing the other.  -->  If possible, I would like to fix this.  I'm just reporting this problem.  I don't want to fix it.  	hewei-nju	null	null	null	null	null	null	
2021-11-03 15:25:39.0	2021-11-07 09:55:56.0	2021-11-07 09:55:57.0	closed	[triage needed]	3	1740	Calculation error in simple operation with parenteshis	https://api.github.com/repos/microsoft/calculator/issues/1740	https://github.com/microsoft/calculator/issues/1740	**Describe the bug**  Some simple operations with parenthesis are wrong. For example: 100 * (100 -20) = 8000 but Windows calculator returns 80.    **Steps To Reproduce**  Open the calculator, I tried in scientific mode. Test the above equation from the keyboard, keys: 1, 0, 0, *, (, 1, 0, 0, -, 2, 0, ), *intro*    **Expected behavior**  The result should be 8000, not 80    **Screenshots**  ![image](https://user-images.githubusercontent.com/14878189/140089491-8729f0f0-504d-4b27-9524-e7db963202e4.png)    **Device and Application Information**   - OS Build: 10.0.19042.0   - Architecture: X64   - Application Version: 10.2103.8.0   - Region: es-ES   - Dev Version Installed: False     **Additional context**  <!-- Add any other context about the problem here. -->    **Requested Assignment**  I'm just reporting this problem.  I don't want to fix it.  	tairosonloa	null	null	null	null	null	null	
2021-11-06 07:54:15.0	null	2021-11-06 07:54:29.0	open	[]	1	1741	Added description when mouseover on ce and c.	https://api.github.com/repos/microsoft/calculator/issues/1741	https://github.com/microsoft/calculator/pull/1741	## Fixes #.      ### Description of the changes:  -  -  -    ### How changes were validated:  <!--Review https://github.com/Microsoft/calculator/blob/master/CONTRIBUTING.md and ensure all contributing requirements are met.    Specify how you tested your changes (i.e. manual/ad-hoc testing, automated testing, new automated tests added)-->  -  -  -    	Flre-fly	null	null	null	null	null	null	
